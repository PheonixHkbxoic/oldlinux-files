<html><head><title>OSRC: Protected Mode </title></head>

<body BGCOLOR=#FFFFFF TEXT=#000000 LINK=#0000FF VLINK=#0000FF ALINK=#107010>
<center><font face=Verdana size=7><b>Protected Mode</b></font></center><blockquote>VCPI, DPMI, GEMMIS, VDS, VOODOO, etc..</blockquote><table width="100%" cellpadding=0 cellspacing=0 border=0>
  <tr><td width="33%" align=left></td>
<td width='33%' align=center></td>
<td width='33%' align=right><font size=2>[<a href="...htm" tppabs="http://www.nondot.org/~sabre/os/articles/ProtectedMode/..">Up</a>]</font></td></tr>
</table><hr><p><ul><DL>
<DT><font size=+1>Protected Mode Basics:</font><br>
<ul><DL>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMTUT.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMTUT.txt">Protected Mode Tutorial</a></font> - by Till Gerken<br>
<DD>"This text contains a short and simple step-by-step tutorial for Protected Mode beginners. It shows you everything you need to program your own PM environment and is intended for those who don't have any experiences with it yet." The source file package is <a href="../../../../sabre/os/files/ProtectedMode/PMTUT02.zip" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMTUT02.zip">available here</a>.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMODECrashCourse.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMODECrashCourse.txt">Protected Mode Crash Course</a></font> - by Adam Seychell<br>
<DD>"After my release of DOS32 V1.2 a lot of people were asking for basic help in protected mode programming. If you already know what a selector is then there is probably no need for you to read this file. " This file came with the DOS32 distribution, which is <a href="../../../../sabre/os/files/ProtectedMode/DOS32V3B.ZIP" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/DOS32V3B.ZIP">available here</a>.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMODEDetailedApproach.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMODEDetailedApproach.txt">Protected Mode - A Detailed Approach</a></font> - by Yann Stephen<br>
<DD>This file also came with the DOS32 distribution and details the GDTR, IDTR, and LDTR.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/segments.html" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/segments.html">Segment Registers: Real mode vs. Protected mode</a></font> - by <a href='mailto:johnfine@erols.com'>John Fine</a><br>
<DD>This article discusses the technical details behind the HOW and WHY of segment selectors.  This can be very handy for those "gotcha" type moments...<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMODE.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMODE.txt">Real and Protected Modes</a></font> - by Jerzy Tarasiuk<br>
<DD>"Beginning with the 80286, Intel CPUs have ability to work in Protected Mode.  This article presents the main differences between Real Mode and Protected modes for Intel CPUs (as well as Virtual 8086 Mode)"<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMODE-OS.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMODE-OS.txt">Protected Mode Programming and OS Development</a></font> - by <a href='mailto:jwthomp@cu-online.com'>Mythrandir</a><br>
<DD>"The big focus of this article will be getting a system up and running in protected mode with a very minimal kernel.  "<p>
</DL></ul>
<DT><font size=+1>Specific Protected Mode Flavors:</font><br>
<ul><DL>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/386INTEL.zip" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/386INTEL.zip">386 Programmers Guide</a></font><br>
<DD>This is the official documentation on the 386 processor... in plaintext format.  The individual documents are available here: <a href="../../../../sabre/os/files/ProtectedMode/3_PART1.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/3_PART1.txt">Part #1 - Applications Programming</a>, <a href="../../../../sabre/os/files/ProtectedMode/3_PART2.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/3_PART2.txt">Part #2 - Systems Programming</a>, <a href="../../../../sabre/os/files/ProtectedMode/3_PART3.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/3_PART3.txt">Part #3 - Compatibility</a>, & <a href="../../../../sabre/os/files/ProtectedMode/3_OPCODES.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/3_OPCODES.txt">Instruction Opcodes</a><p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/VCPI.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/VCPI.txt">VCPI Reference</a></font><br>
<DD>This is the authoritative reference on VCPI (Virtual Control Program Interface).  It is a common way to can protected mode powers when operating under a memory manager.<p>
<DT><font size=+1>Dos Protected Mode Interface (DPMI)</font><br>
<ul><DL>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/DPMI09.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/DPMI09.txt">DPMI 0.9 Specification</a></font><br>
<DD>"The DOS Protected Mode Interface (DPMI) was defined to allow DOS programs to access the extended memory of PC architecture computers while maintaining system protection." - DPMI is the interface you have to use if running under windows.  It's the interface you should provide if writing a protected mode OS...<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/dpmispec1.0.pdf" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/dpmispec1.0.pdf">DPMI 1.0 Specification</a></font><br>
<DD>This is the official reference for DPMI v1.0.  Very complete cross referenced document that defines the new 1.0 interfaces as well as providing information about the 0.9 interfaces... good stuff.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/DPMI1.0Spec" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/DPMI1.0Spec">DPMI 1.0 Specification (html)</a></font><br>
<DD>Cross referenced HTML version of the 1.0 spec.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/DPMI1.0.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/DPMI1.0.txt">DPMI 1.0 Interrupt Reference</a></font><br>
<DD>This is a reference on the DPMI functions exposed as interrupts.  If anyone has an electronic copy of the real DPMI 1.0 specs, please send them to me, I only have the dead tree edition...<p>
</DL></ul>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/Unreal.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/Unreal.txt">Unreal Mode</a></font><br>
<DD>"Unreal Mode" (aka VOODOO Mode) is a way of setting up protected mode segments so the segment limits are greater than 64k.  When switching back to real mode, these segments are left as they were, and large segments may accessed.  This article gives one implementation of the technique.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/voodoo.asm" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/voodoo.asm">VOODOO Mode</a></font><br>
<DD>Another implementation of "Voodoo" or "Unreal" mode.  Note that this mode was used in Origin's widely popular Ultima 7.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/FLAT.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/FLAT.txt">FLAT Mode</a></font> - by <a href='mailto:csg669@wing.rug.nl'>Herman Dullink</a><br>
<DD>Yet another implementation of "Unreal" mode.  This text file came in the <a href="../../../../sabre/os/files/ProtectedMode/FLAT.ZIP" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/FLAT.ZIP">FLAT Distribution</a> which is a working implementation of this stuff...<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/realmem.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/realmem.txt">RealMem Memory Mode</a></font> - by <a href='mailto:pcgpe@geocities.com'>Mark Feldman</a><br>
<DD>This is another implementation of the Unreal mode... with a C++ class that implements it, as well as an example of usage...<p>
</DL></ul>
<DT><font size=+1>Tricks and Techniques:</font><br>
<ul><DL>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/LOADALL.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/LOADALL.txt">The LOADALL Instruction</a></font> - by Tasmaniac<br>
<DD>This little doc describes how the undocumented loadall instruction can be used to switch between real and protected mode quite fast... and interesting trick to gain a smidge of performance...<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/GEMMIS.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/GEMMIS.txt">How to Kick out a Memory Manager</a></font> - by Michel Lespinasse<br>
<DD>Describes the "Windows Global EMM Import Specification" aka GEMMIS.  This file shows how to kick out the memory managers that likes to disable  the use of the flat real mode,  or more generally to disable the acces to code privilege ring #0 (CPL0).  This is how Microsoft Windows operates in the presence of a memory manager such as EMM386 or QEMM.  An interrupt reference for this is  <a href="../../../../sabre/os/files/ProtectedMode/GEM_SPEC.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/GEM_SPEC.txt">also available</a>.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/VDMA_API.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/VDMA_API.txt">Virtual DMA Services</a></font><br>
<DD>To achieve DMA transfers to a hardware device (for example a sound card), one must determine the physical address of a piece of memory that has been allocated.  In some situations, such as when running under a memory manager, this is not possible. The Virtual DMA Services (VDS) has been formalized to work around this limitiation...<p>
</DL></ul>
<DT><font size=+1>Implementations:</font><br>
<ul><DL>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/SIMPL_PM.asm" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/SIMPL_PM.asm">Switching to PM and Back</a></font> - by Jerzy Tarasiuk<br>
<DD>Very simple example code to switch from real mode to protected mode... to read and write high memory.  Seems a little bit of overkill, but a good example.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMODES.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMODES.txt">PMODE 9-94</a></font> - by Tran aka Thomas Pytel<br>
<DD>"This bunch of files comprises two versions of my protected mode DOS extender PMODE." PMODE is Tran's very excellent DOS extender.  It has been widely used and is well tested by many applications.  <a href="../../../../sabre/os/files/ProtectedMode/PM-9-94.ZIP" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PM-9-94.ZIP">Full source code included.</a><p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/PMODEW.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMODEW.txt">PMODE/W v1.21 - DOS Extender for Watcom C++</a></font> - by Charles Scheffold and Tran<br>
<DD>"This file will give you all the information you will need to plug PMODE/W right into your Watcom C/C++ protected mode programs. All of the other things you need to be aware of about using PMODE/W commercially and non-commercially are also in this section. Specific information on INT 31h and INT 21h DOS extended services supported by PMODE/W is in the following sections. Please note that we have only tested this extender with Watcom C/C++ versions 9.5 and 10.0." Source and examples <a href="../../../../sabre/os/files/ProtectedMode/PMW121.ZIP" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/PMW121.ZIP">available here</a>.<p>
<DT><font size=+1><a href="../../../../sabre/os/files/ProtectedMode/386P_200.txt" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/386P_200.txt">386 Power v2.00</a></font> - by Lorenzo Micheletto<br>
<DD>"I wanted to build a GAME ENGINE capable to run under 32bit protected mode. A game engine is the game equivalent of a data base engine, a set of software modules you can use as a base to build lots of different games with the same underlying "animation and sound model".  "It is based on the PMODE dos-extender by Tran"... good stuff...  Available here are <a href="../../../../sabre/os/files/ProtectedMode/386P_200.ZIP" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/386P_200.ZIP">v2.00</a> (306k .zip) and <a href="../../../../sabre/os/files/ProtectedMode/386P_101.ZIP" tppabs="http://www.nondot.org/sabre/os/files/ProtectedMode/386P_101.ZIP">v1.01</a> (115k .zip)...<p>
</DL></ul>
</DL></ul>
<hr>
<TABLE ALIGN=RIGHT BORDER=0><TR><TD><center>
Copyright &copy; 1995-2002 <i><a href='mailto:sabre@nondot.org'>Chris Lattner</a></i><br>
This page last modified:11/04/03<br><a href="...htm" tppabs="http://www.nondot.org/~sabre/os/articles/ProtectedMode/..">Go up a level</a><br>
</center></TD></TR></TABLE>

<font size=-1>
  [about] [faq]
  [<a href="../../Updates/index.htm" tppabs="http://www.nondot.org/~sabre/os/Updates/">updates</a>] 
  [<a href="../../Stats/index.htm" tppabs="http://www.nondot.org/~sabre/os/Stats/">stats</a>]
  [<a href="../../AuthorRecognition.html" tppabs="http://www.nondot.org/~sabre/os/AuthorRecognition.html">author recognition</a>] 
  [<a href="../../submit/index.htm" tppabs="http://www.nondot.org/~sabre/os/submit/">contributing</a>] 
  [<a href="../PendingQueue/index.htm" tppabs="http://www.nondot.org/~sabre/os/articles/PendingQueue/">pending submissions</a>]
  [feedback]
  [<a href='mailto:sabre@nondot.org'>email</a>]
  [<a href="../index.htm" tppabs="http://www.nondot.org/~sabre/os/articles/">up</a>]
</font><p>
<font size=-1>
<font color=#FF0000>(new!)</font> sections have been updated in the last week...
<font color=#808000>(recent)</font> sections have been updated in the last two weeks...<br>
</font>