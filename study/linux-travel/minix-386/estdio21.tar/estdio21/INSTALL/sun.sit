*** stdio.g	Fri Jul 27 08:15:17 1990
--- stdio.h	Tue Nov  6 15:59:00 1990
***************
*** 21,36 ****
   */
  
  /* Site specific definitions */
! /*+*/
! /*efine	_STDIO_P_(x)*/
! /*efine	_STDIO_VA_*/
! /*efine	_STDIO_UCHAR_*/
! /*efine	_STDIO_VA_LIST_*/
! /*efine	_STDIO_SIZE_T_*/
! /*efine _STDIO_USIZE_T_*/
! /*efine _STDIO_NULL*/
! /*efine NULL*/
! /*-*/
  
  /* Definitions based on ANSI compiler */
  #ifdef		__STDC__
--- 21,35 ----
   */
  
  /* Site specific definitions */
! /*@*/
! #ifndef NULL
! # define NULL	((void *)0) 
! #endif
! #define _STDIO_UCHAR_		0
! #define _STDIO_VA_LIST_		char *
! #define _STDIO_SIZE_T_		int
! #define _STDIO_USIZE_T_		unsigned int
! /*=*/
  
  /* Definitions based on ANSI compiler */
  #ifdef		__STDC__
*** site.h	Tue Nov  6 16:03:54 EST 1990
--- site.h	Tue Nov  6 16:03:54 EST 1990
***************
*** 0 ****
--- 1,41 ----
+ /*efine NDEBUG*/
+ /*efine HIDDEN*/
+ /*efine NOFLOAT*/
+ /*efine ERRLIST*/
+ #define STDARG
+ #define LIMITS
+ #define FLOAT
+ /*efine DBL_DIG*/
+ #define LDBL_DIG 15
+ /*efine DBL_MAX_10_EXP*/
+ #define LDBL_MAX_10_EXP 308
+ #define LDBL_MAX 1.79769313486232e+308
+ /*efine DBL_MAX*/
+ /*efine FLT_RADIX*/
+ #define HUGE_VAL HUGE
+ #define UNSIGNEDCHAR
+ #include <memory.h>
+ #define MEMORY
+ /*efine MYMEMCPY*/
+ /*efine MYMEMCHR*/
+ /*efine MYMEMSET*/
+ #define STRING
+ #define TOLOWER(c) (isupper((c))?tolower((c)):(c))
+ #define OPEN3
+ #define RENAME
+ /*efine UNISTD*/
+ #define STDIN_FILENO 0
+ #define STDOUT_FILENO 1
+ #define STDERR_FILENO 2
+ /*efine MODE_T mode_t*/
+ /*efine UID_T uid_t*/
+ /*efine VOIDSIGNAL*/
+ #define SYSTYPES
+ typedef int pid_t;			/* best guess */
+ typedef int uid_t;			/* best guess */
+ typedef int mode_t;		/* best guess */
+ #define _SIZE_T
+ #define DENORMAL
+ #define TRUNCATE
+ #define LMR
+ #define POWERS
*** Makefile	Tue Nov  6 16:03:56 EST 1990
--- Makefile	Tue Nov  6 16:03:56 EST 1990
***************
*** 0 ****
--- 1,322 ----
+ #nix _UNIX
+ CPP	=/postg/cechew/gcc/sol/usr/lib/gcc-cpp -P -D_SUN -D_POSIX_SOURCE -D_BSD -DMAXFLOAT=99.e999
+ FPCC	=gcc -ansi -pedantic -Wall -c 
+ CC	=gcc -ansi -pedantic -Wall -c 
+ FPLD	=gcc -ansi -pedantic -Wall -o 
+ LD	=gcc -ansi -pedantic -Wall -o 
+ RANLIB	=ranlib
+ LORDER	=echo
+ TSORT	=cat
+ 
+ 
+ 
+ 
+ Installdir	=INSTALL/
+ Testdir		=TEST/
+ Fptestdir	=FPTEST/
+ Define		=-D_SUN -D_POSIX_SOURCE -D_BSD -DMAXFLOAT=99.e999
+ Include		=-I.
+ Libraries	=stdio.a
+ MathLibraries	=-lm
+ FPLib		=stdiofp.a
+ StdioLib	=stdio.a
+ 
+ All		=README *.x *.c *.g *.h \
+ 		 makefile.cpp makefile.nix makefile.min \
+ 		 $(Testdir)*.c $(Testdir)*.sh \
+ 		 $(Fptestdir)*.c \
+ 		 $(Installdir)*.c $(Installdir)*.sh \
+ 		 $(Installdir)*.txt $(Installdir)*.sit \
+ 		 $(Installdir)*.ans
+ 
+ Everyone	=nix min dos
+ 
+ CFLAGS= $(Define) $(Include)
+ 
+ FPOBJ= \
+ _f_cvt.o	    _f_fprintf.o	_f_fscanf.o \
+ _f_guard.o	    _f_pow10.o		_f_printf.o \
+ _f_scanf.o	    _f_sprintf.o	_f_sscanf.o \
+ _f_tvc.o	    _f_vfprintf.o	_f_vprintf.o \
+ _f_vsprintf.o
+ 
+ LIBOBJ= \
+ _allocbuf.o	    _bfs.o		_bread.o \
+ _bwrite.o	    _err.o		_errlist.o \
+ _fgetlx.o	    _file.o		_fopen.o \
+ _freebuf.o	    _in.o		_ioread.o \
+ _iowrite.o	    _ipow10.o		_open3.o \
+ _os.o		    _out.o		_rename.o \
+ _rlbf.o		    _stdio.o		_update.o \
+ _utoa.o		    _vfprintf.o		_vfscanf.o \
+ _vscanf.o	    _vsscanf.o		_xassert.o \
+ _z_cvt.o	    _z_tvc.o		_zatexit.o \
+ _zerr.o		    _zout.o		_zrlbf.o \
+ _zwrapup.o	    atexit.o		clearerr.o \
+ ctermid.o	    cuserid.o		exit.o \
+ fclose.o	    fdopen.o		feof.o \
+ ferror.o	    fflush.o		fgetc.o \
+ fgetpos.o	    fgets.o		fileno.o \
+ fopen.o		    fprintf.o		fputc.o \
+ fputs.o		    fread.o		freopen.o \
+ fscanf.o	    fseek.o		fsetpos.o \
+ ftell.o		    fwrite.o		getc.o \
+ getchar.o	    gets.o		getw.o \
+ perror.o	    printf.o		putc.o \
+ putchar.o	    puts.o		putw.o \
+ remove.o	    rewind.o		scanf.o \
+ setbuf.o	    setvbuf.o		sprintf.o \
+ sscanf.o	    tmpfile.o		tmpnam.o \
+ ungetc.o	    vfprintf.o		vprintf.o \
+ vsprintf.o
+ 
+ .SUFFIXES:	.o .c
+ .c.o:
+ 	$(CC) $(CFLAGS) $<
+ 
+ test:
+ 	-cd $(Testdir) ; \
+ 	for f in *.c ; do \
+ 	  n=`basename $$f .c` ; \
+ 	  $(CC) $(CFLAGS) -I.. $$n.c ; \
+ 	  $(LD) $$n $$n.o ../stdio.a ; \
+ 	done
+ 
+ fptest:
+ 	-cd $(Fptestdir) ; \
+ 	for f in *.c ; do \
+ 	  n=`basename $$f .c` ; \
+ 	  $(FPCC) $(CFLAGS) -I.. $$n.c ; \
+ 	  $(FPLD) $$n $$n.o ../stdiofp.a ../stdio.a $(MathLibraries) ; \
+ 	done
+ 
+ update:
+ 	-if test -z "$(LIBC)" ; then \
+ 	  echo Usage: make update LIBC=library ; \
+ 	else \
+ 	  ar t $(LIBC) | sed -e 's/ //g' | sort > libc.files ; \
+ 	  ar rv $(LIBC) `ls *.o | comm -12 - libc.files` ; \
+ 	  rm -f libc.files ; \
+ 	  $(RANLIB) $(LIBC); \
+ 	fi
+ 
+ # Library dependencies
+ 
+ $(FPOBJ) $(LIBOBJ):	stdiolib.h stdio.h
+ 
+ Hide:	site.h
+ 	rm -f Hidden
+ 	-if grep -s "define HIDDEN" site.h ; then \
+ 	$(CPP) stub.x >Hidden ; \
+ 	for f in `grep '^.define [a-z]' hidden.h | \
+ 		  sed 's/^.define \([a-z]*\).*/\1/'` ; do \
+ 	echo $${f} ; \
+ 	sed -e "s/XYZ/$${f}/g" < Hidden > _u_$${f}.s ; \
+ 	as -o _u_$${f}.o _u_$${f}.s ; \
+ 	done ; \
+ 	fi
+ 	echo -n >Hide
+ 
+ # Put together a library
+ 
+ FPobjects:	$(FPOBJ)
+ 
+ FPorder:	$(FPOBJ) Hide
+ 	echo -n >FPorder
+ 	-if test -f Hidden ; then \
+ 	ls _u_*print*.o _u_*scan*.o >> FPorder ; \
+ 	fi
+ 	ls $(FPOBJ) > FPorder.tmp
+ 	$(LORDER) `cat FPorder.tmp` | $(TSORT) >> FPorder; \
+ 	rm -f FPorder.tmp FPsort.tmp
+ 
+ FParchive:	FPorder
+ 	rm -f $(FPLib)
+ 	ar cr $(FPLib) `cat FPorder`
+ 	$(RANLIB) stdiofp.a
+ 
+ Liborder:	$(LIBOBJ) Hide
+ 	echo -n >Liborder
+ 	-if test -f Hidden ; then \
+ 	ls _u_*.o >> Liborder ; \
+ 	fi
+ 	ls $(LIBOBJ) > Liborder.tmp
+ 	$(LORDER) `cat Liborder.tmp` | $(TSORT) >> Liborder; \
+ 	rm -f Liborder.tmp
+ 
+ stdio $(StdioLib):	Liborder
+ 	rm -f $(StdioLib)
+ 	ar cr $(StdioLib) `cat Liborder`
+ 	$(RANLIB) stdio.a
+ 
+ stdiofp $(FPLib):
+ 	$(MAKE) FPobjects "CC=$(FPCC)" "LD=$(FPLD)"
+ 	$(MAKE) FParchive
+ 
+ # Pretty list of objects
+ 
+ fpfiles:
+ 	ls _f_*.c | sed -e 's/\.c/.O/g' | \
+ 	pr -3 -l1 -t -w60 > FPfiles
+ 	sed -e 's/O *$$/O \\/' -e '$$s/ \\$$//' < FPfiles > FPfiles.new
+ 	mv FPfiles.new FPfiles
+ 
+ libfiles:
+ 	ls [_a-wz]*.c | sed -e '/^_f_/d' -e 's/\.c/.O/g' | \
+  	pr -3 -l1 -t -w60 > Libfiles
+ 	sed -e 's/O *$$/O \\/' -e '$$s/ \\$$//' < Libfiles > Libfiles.new
+ 	mv Libfiles.new Libfiles
+ 
+ # Clean
+ 
+ clean:
+ 	rm -f $(LIBOBJ)
+ 	rm -f $(FPOBJ)
+ 	rm -f _u_*
+ 	rm -f $(StdioLib) $(FPLib)
+ 	rm -f $(Testdir)*.o $(Fptestdir)*.o $(Installdir)*.o
+ 	for d in $(Testdir) $(Fptestdir) $(Installdir) ; do \
+ 	  cd $$d ; \
+ 	  rm -f core *.out ; \
+ 	  for f in *.c ; do \
+ 	    e=`basename $$f .c` ; \
+ 	    rm -f $$e ; \
+ 	  done ; \
+ 	  cd .. ; \
+ 	done
+ 	rm -f *~ core *.out *order Hid* test.dat
+ 	rm -f *files *.tmp
+ 	rm -f estdio.u* estdio.[01]?
+ 
+ # Site
+ 
+ site:
+ 	-diff -c stdio.g stdio.h > $(Installdir)sun.sit
+ 	-if test ! -f site.h ; then \
+ 	  echo site.h not installed ; \
+ 	else \
+ 	  LINES=`wc -l < site.h | sed 's/ //g'` ; \
+ 	  DATE=`date` ; \
+ 	  echo "*** site.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "--- site.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "***************" >> $(Installdir)sun.sit ; \
+ 	  echo "*** 0 ****" >> $(Installdir)sun.sit ; \
+ 	  echo "--- 1,$${LINES} ----" >> $(Installdir)sun.sit ; \
+ 	  sed -e 's/^/+ /' < site.h >> $(Installdir)sun.sit ; \
+ 	fi
+ 	-if test ! -f Makefile ; then \
+ 	  echo Makefile not installed ; \
+ 	else \
+ 	  LINES=`wc -l < Makefile | sed 's/ //g'` ; \
+ 	  DATE=`date` ; \
+ 	  echo "*** Makefile	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "--- Makefile	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "***************" >> $(Installdir)sun.sit ; \
+ 	  echo "*** 0 ****" >> $(Installdir)sun.sit ; \
+ 	  echo "--- 1,$${LINES} ----" >> $(Installdir)sun.sit ; \
+ 	  sed -e 's/^/+ /' < Makefile >> $(Installdir)sun.sit ; \
+ 	fi
+ 	-if test -s errlist.h ; then \
+ 	  LINES=`wc -l < errlist.h | sed 's/ //g'` ; \
+ 	  DATE=`date` ; \
+ 	  echo "*** errlist.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "--- errlist.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "***************" >> $(Installdir)sun.sit ; \
+ 	  echo "*** 0 ****" >> $(Installdir)sun.sit ; \
+ 	  echo "--- 1,$${LINES} ----" >> $(Installdir)sun.sit ; \
+ 	  sed -e 's/^/+ /' < errlist.h >> $(Installdir)sun.sit ; \
+ 	fi
+ 	-if test -s powers.h ; then \
+ 	  LINES=`wc -l < powers.h | sed 's/ //g'` ; \
+ 	  DATE=`date` ; \
+ 	  echo "*** powers.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "--- powers.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "***************" >> $(Installdir)sun.sit ; \
+ 	  echo "*** 0 ****" >> $(Installdir)sun.sit ; \
+ 	  echo "--- 1,$${LINES} ----" >> $(Installdir)sun.sit ; \
+ 	  sed -e 's/^/+ /' < powers.h >> $(Installdir)sun.sit ; \
+ 	fi
+ 	-if test -s lmr.h ; then \
+ 	  LINES=`wc -l < lmr.h | sed 's/ //g'` ; \
+ 	  DATE=`date` ; \
+ 	  echo "*** lmr.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "--- lmr.h	$${DATE}" >> $(Installdir)sun.sit ; \
+ 	  echo "***************" >> $(Installdir)sun.sit ; \
+ 	  echo "*** 0 ****" >> $(Installdir)sun.sit ; \
+ 	  echo "--- 1,$${LINES} ----" >> $(Installdir)sun.sit ; \
+ 	  sed -e 's/^/+ /' < lmr.h >> $(Installdir)sun.sit ; \
+ 	fi
+ 
+ # Distribution
+ 
+ distribution:
+ 	ls $(All) | \
+ 	sed -e '/^stdio\.h/d' \
+ 	    -e '/^site\.h/d' \
+ 	    -e '/^errlist\.h/d' \
+ 	    -e '/^powers\.h/d' \
+ 	    -e '/^lmr\.h/d' \
+ 	    -e '/^_u_/d' > files
+ 
+ # Arc
+ 
+ arc:	distribution
+ 	rm -f estdio.arc
+ 	arc a estdio.arc @files
+ 
+ # Tar
+ 
+ tar estdio.taz:	distribution
+ 	rm -f estdio.taz
+ 	tar cvf - `cat files` | compress -b13 > estdio.taz
+ 
+ # Distribution by tar parts
+ 
+ uu:	distribution
+ 	rm -f estdio.u*
+ 	tar cvf - `cat files` | \
+ 	compress -b13         | \
+ 	uuencode estdio.taz     | \
+ 	split -300 - estdio.u
+ 	for f in estdio.u* ; do \
+ 	  echo '------ Cut Here ------' > uu.tmp ; \
+ 	  cat $$f >> uu.tmp ; \
+ 	  echo '------ Cut Here ------' >> uu.tmp ; \
+ 	  mv uu.tmp $$f ; \
+ 	done
+ 
+ # Shell archive
+ 
+ shar:	distribution
+ 	rm -f estdio.[0-9][0-9]*
+ 	sed -e '/^site\.h/d' \
+ 	    -e '/^stdio\.h/d' \
+ 	    -e 's%.*\.x%&	Assembler stub%' \
+ 	    -e 's%^TEST/.*%&	Exercise file%' \
+ 	    -e 's%^FPTEST/.*%&	Exercise file%' \
+ 	    -e 's%^INSTALL/.*\.c%&	Installation file%' \
+ 	    -e 's%^INSTALL/.*\.sh%&	Installation script%' \
+ 	    -e 's%^INSTALL/.*\.txt%&	Documentation%' \
+ 	    -e 's%^INSTALL/.*\.sit%&	Differences for preconfigured sites%' \
+ 	    -e 's%^INSTALL/.*\.ans%&	Answer file for generating sites%' \
+ 	    -e 's%^makefile.cpp$$%&	Cppmake file%' \
+ 	    -e 's%^makefile.[a-z]*$$%&	Makefile%' \
+ 	    -e 's%^[0-9a-z_]*\.g$$%&	Header file source%' \
+ 	    -e 's%^[0-9a-z_]*\.h$$%&	Header file%' \
+ 	    -e 's%^_z.*\.c$$%&	Stdio fake source code%' \
+ 	    -e 's%^[0-9a-z_]*\.c$$%&	Stdio source code%' < files > MANIFEST
+ 	shar -a -n estdio -C -b13 -c -o estdio -l 40 MANIFEST `cat files`
+ 
+ # Dust and dirt
+ 
+ lint:
+ 	lint -n $(Include) $(Define) `echo $(LIBOBJ) | sed 's/\.o/.c/g'`
+ 
+ # Makefiles
+ 
+ makefiles:
+ 	-for w in $(Everyone) ; do \
+ 	n=`grep "^.$$w " <makefile.cpp | sed 's/^.[^ ]* //'` ; \
+ 	echo $$n ; \
+ 	cppmake -D$$n -o makefile.$$w ; \
+ 	done
*** powers.h	Tue Nov  6 16:03:59 EST 1990
--- powers.h	Tue Nov  6 16:03:59 EST 1990
***************
*** 0 ****
--- 1,154 ----
+ #define NEGEXPONENT	-79
+ #define POSEXPONENT	0
+ #ifdef SMALL
+ #undef SMALL
+ /* 53 bit table generated by ypow10 */
+ 
+    1020396463,-1744830464,  993762648, 1449953230, /* 1e-15 */
+ /* 0x3cd203af, 0x98000000, 0x3b3b9d58, 0x566c87ce, */
+    1023837339,-2147483648,  996836526, 1812441538, /* 1e-14 */
+ /* 0x3d06849b, 0x80000000, 0x3b6a84ae, 0x6c07a9c2, */
+    1027352002, 1744830464,  995253664, 1889092397, /* 1e-13 */
+ /* 0x3d3c25c2, 0x68000000, 0x3b525da0, 0x7099432d, */
+    1030854553,-2147483648, 1001578145,  295170687, /* 1e-12 */
+ /* 0x3d719799, 0x80000000, 0x3bb2dea1, 0x1197f27f, */
+    1034288511, -536870912, 1005033033, 1442705183, /* 1e-11 */
+ /* 0x3da5fd7f, 0xe0000000, 0x3be79649, 0x55fdef1f, */
+    1037794527, -671088640, 1008565211,-1417843993, /* 1e-10 */
+ /* 0x3ddb7cdf, 0xd8000000, 0x3c1d7bdb, 0xab7d6ae7, */
+    1041313291, -402653184, 1008954186, 1500714625, /* 1e-09 */
+ /* 0x3e112e0b, 0xe8000000, 0x3c236b4a, 0x59731681, */
+    1044740494, -536870912, 1016169569, -822280766, /* 1e-08 */
+ /* 0x3e45798e, 0xe0000000, 0x3c918461, 0xcefcfdc2, */
+    1048238066,-1744830464, 1019602298, 1119632691, /* 1e-07 */
+ /* 0x3e7ad7f2, 0x98000000, 0x3cc5e57a, 0x42bc3d33, */
+    1051772663,-1610612736, 1021754801,-1495885570, /* 1e-06 */
+ /* 0x3eb0c6f7, 0xa0000000, 0x3ce6bdb1, 0xa6d698fe, */
+    1055193269,-2013265920, 1025273118,  277626686, /* 1e-05 */
+ /* 0x3ee4f8b5, 0x88000000, 0x3d1c6d1e, 0x108c3f3e, */
+    1058682594, -402653184, 1030283801, 1697371075, /* 1e-04 */
+ /* 0x3f1a36e2, 0xe8000000, 0x3d68e219, 0x652bd3c3, */
+    1062232653, -805306368, 1034390863, -549755814, /* 1e-03 */
+ /* 0x3f50624d, 0xd0000000, 0x3da78d4f, 0xdf3b645a, */
+    1065646817, 1073741824, 1039054929, -343597384, /* 1e-02 */
+ /* 0x3f847ae1, 0x40000000, 0x3deeb851, 0xeb851eb8, */
+    1069128089,-1744830464, 1039767961,-1717986918, /* 1e-01 */
+ /* 0x3fb99999, 0x98000000, 0x3df99999, 0x9999999a, */
+ /* 53 bit table generated by ypow10 */
+ 
+    1072693248,          0, /* 1e000 */
+ /* 0x3ff00000, 0x       0, */
+    1076101120,          0, /* 1e001 */
+ /* 0x40240000, 0x       0, */
+    1079574528,          0, /* 1e002 */
+ /* 0x40590000, 0x       0, */
+    1083129856,          0, /* 1e003 */
+ /* 0x408f4000, 0x       0, */
+    1086556160,          0, /* 1e004 */
+ /* 0x40c38800, 0x       0, */
+    1090021888,          0, /* 1e005 */
+ /* 0x40f86a00, 0x       0, */
+    1093567616,          0, /* 1e006 */
+ /* 0x412e8480, 0x       0, */
+    1097011920,          0, /* 1e007 */
+ /* 0x416312d0, 0x       0, */
+    1100470148,          0, /* 1e008 */
+ /* 0x4197d784, 0x       0, */
+    1104006501,          0, /* 1e009 */
+ /* 0x41cdcd65, 0x       0, */
+    1107468383,  536870912, /* 1e010 */
+ /* 0x4202a05f, 0x20000000, */
+    1110919286, -402653184, /* 1e011 */
+ /* 0x42374876, 0xe8000000, */
+    1114446484,-1577058304, /* 1e012 */
+ /* 0x426d1a94, 0xa2000000, */
+    1117925532, -448790528, /* 1e013 */
+ /* 0x42a2309c, 0xe5400000, */
+    1121369284,  512753664, /* 1e014 */
+ /* 0x42d6bcc4, 0x1e900000, */
+    1124887541,  640942080, /* 1e015 */
+ /* 0x430c6bf5, 0x26340000, */
+ #endif
+ #ifdef LARGE
+ #undef LARGE
+ /* 53 bit table generated by ypow10 */
+ 
+      96570939,-1744830464,   68794891, 1227202545, /* 1e-304 */
+ /* 0x 5c18e3b, 0x98000000, 0x 419ba0b, 0x49259ff1, */
+     152272281, -939524096,  124862901, 1656465266, /* 1e-288 */
+ /* 0x 9137d99, 0xc8000000, 0x 77141b5, 0x62bba772, */
+     207987601, -805306368,  180727666,  498298137, /* 1e-272 */
+ /* 0x c65a391, 0xd0000000, 0x ac5af72, 0x1db36d19, */
+     263718440, 1610612736,  236106173,  211615049, /* 1e-256 */
+ /* 0x fb80628, 0x60000000, 0x e12b1bd, 0x c9cfd49, */
+     319466507, -134217728,  290168421,-1012009411, /* 1e-240 */
+ /* 0x130aac0b, 0xf8000000, 0x114b9e65, 0xc3adf63d, */
+     375233703,-1744830464,  347481368,-1486957956, /* 1e-224 */
+ /* 0x165d9ca7, 0x98000000, 0x14b62518, 0xa75ed27c, */
+     430993435, -805306368,  404004562, 1580212516, /* 1e-208 */
+ /* 0x19b0701b, 0xd0000000, 0x18149ed2, 0x5e302124, */
+     486686704, 1744830464,  460040721, -435995214, /* 1e-192 */
+ /* 0x1d023ff0, 0x68000000, 0x1b6baa11, 0xe6033db2, */
+     542393060, -134217728,  514537675,    3127470, /* 1e-176 */
+ /* 0x205442e4, 0xf8000000, 0x1eab38cb, 0x  2fb8ae, */
+     598113948,  268435456,  569629555,-1600955923, /* 1e-160 */
+ /* 0x23a67e9c, 0x10000000, 0x21f3db73, 0xa09359ed, */
+     653850967, 1207959552,  626474537,-1050378446, /* 1e-144 */
+ /* 0x26f8f957, 0x48000000, 0x25573e29, 0xc1647f32, */
+     709605896, -939524096,  682504798, 1917867582, /* 1e-128 */
+ /* 0x2a4bba08, 0xc8000000, 0x28ae325e, 0x7250563e, */
+     765380710,-1342177280,  738097202, -373381469, /* 1e-112 */
+ /* 0x2d9ec866, 0xb0000000, 0x2bfe7832, 0xe9bea6a3, */
+     821106304, 1476395008,  794558138,-1446147858, /* 1e-96 */
+ /* 0x30f11680, 0x58000000, 0x2f5bfeba, 0xa9cd88ee, */
+     876804268,  268435456,  850212228,-1932333465, /* 1e-80 */
+ /* 0x3442f8ac, 0x10000000, 0x32ad3584, 0x8cd2ee67, */
+     932515837, 1073741824,  905171612, -187523182, /* 1e-64 */
+ /* 0x37950ffd, 0x40000000, 0x35f3d29c, 0xf4d29f92, */
+     988242511,-2013265920,  959689086,-1051110047, /* 1e-48 */
+ /* 0x3ae7624f, 0x88000000, 0x3933b17e, 0xc1595561, */
+    1043985955, -805306368, 1016504988, -899861521, /* 1e-32 */
+ /* 0x3e39f623, 0xd0000000, 0x3c96a29c, 0xca5d33ef, */
+    1099748018,-1879048192, 1072652838, -257055209, /* 1e-16 */
+ /* 0x418cd2b2, 0x90000000, 0x3fef6226, 0xf0ada617, */
+ /* 53 bit table generated by ypow10 */
+ 
+    1128383353,  805306368, 1102021120,          0, /* 1e016 */
+ /* 0x4341c379, 0x30000000, 0x41af8200, 0x       0, */
+    1184086197,-1342177280, 1156847032, 1523513360, /* 1e032 */
+ /* 0x4693b8b5, 0xb0000000, 0x44f415b8, 0x5acef810, */
+    1239803185,-1610612736, 1209284878, 1465539011, /* 1e048 */
+ /* 0x49e5e531, 0xa0000000, 0x4814390e, 0x575a59c3, */
+    1295535875, -402653184, 1265893279, 1303017855, /* 1e064 */
+ /* 0x4d384f03, 0xe8000000, 0x4b73ff9f, 0x4daa797f, */
+    1351285999, 1342177280, 1322192821, -268978073, /* 1e080 */
+ /* 0x508afcef, 0x50000000, 0x4ecf0fb5, 0xeff7b867, */
+    1407055477, 1610612736, 1378272667,  346211792, /* 1e096 */
+ /* 0x53ddf675, 0x60000000, 0x5226c59b, 0x14a2c5d0, */
+    1462804981,-1207959552, 1429415014, 1405123674, /* 1e112 */
+ /* 0x5730a1f5, 0xb8000000, 0x55332466, 0x53c07c5a, */
+    1518499656, -134217728, 1489174995,  431983838, /* 1e128 */
+ /* 0x5a827748, 0xf8000000, 0x58c301d3, 0x19bf8cde, */
+    1574207575,  939524096, 1543938894,-1684177831, /* 1e144 */
+ /* 0x5dd48057, 0x38000000, 0x5c06a34e, 0x9b9d7c59, */
+    1629930196,  536870912, 1602600947,  198519742, /* 1e160 */
+ /* 0x6126c2d4, 0x20000000, 0x5f85bff3, 0x bd52bbe, */
+    1685669140, 1342177280, 1656849819,-1080853124, /* 1e176 */
+ /* 0x64794514, 0x50000000, 0x62c1859b, 0xbf937d7c, */
+    1741426206, -268435456, 1711960654,-1428878472, /* 1e192 */
+ /* 0x67cc0e1e, 0xf0000000, 0x660a724e, 0xaad50b78, */
+    1797203393,-2147483648, 1769642945,  815977400, /* 1e208 */
+ /* 0x6b1f25c1, 0x80000000, 0x697a9bc1, 0x30a2d3b8, */
+    1852918354, -671088640, 1826615710, 1687667039, /* 1e224 */
+ /* 0x6e714a52, 0xd8000000, 0x6cdff19e, 0x6497c15f, */
+    1908617780, -671088640, 1881795423,-1951213979, /* 1e240 */
+ /* 0x71c33234, 0xd8000000, 0x7029eb5f, 0x8bb2d665, */
+    1964330973, 2013265920, 1937624828, -280564002, /* 1e256 */
+ /* 0x75154fdd, 0x78000000, 0x737dcefc, 0xef46eede, */
+    2020059450,  671088640, 1990545211, 2030343771, /* 1e272 */
+ /* 0x7867a93a, 0x28000000, 0x76a54f3b, 0x7904965b, */
+    2075804895,-2147483648, 2047433834,  797733763, /* 1e288 */
+ /* 0x7bba44df, 0x80000000, 0x7a095c6a, 0x2f8c7383, */
+    2131569179, -536870912, 2103448126, 1107207139, /* 1e304 */
+ /* 0x7f0d2a1b, 0xe0000000, 0x7d60123e, 0x41fea3e3, */
+ #endif
*** lmr.h	Tue Nov  6 16:04:01 EST 1990
--- lmr.h	Tue Nov  6 16:04:01 EST 1990
***************
*** 0 ****
--- 1,4 ----
+ /* 53 figit table generated by ylmr */
+ 
+    2145386495,         -1,
+ /* 0x7fdfffff, 0xffffffff,  LDBL_MAX / FLT_RADIX */
