#ifndef _MINIX_ERRNO_H
#define _MINIX_ERRNO_H		/* it is not included; note that fact */

#define OK		0

extern int errno;		/* place where the error numbers go */

/* Here are the numerical values of the error numbers. */
#define ERROR		(-99)	/* generic error */
#define EPERM		(- 1)	/* operation not permitted */
#define ENOENT		(- 2)	/* no such file or directory */
#define ESRCH		(- 3)	/* no such process */
#define EINTR		(- 4)	/* interrupted function call */
#define EIO		(- 5)	/* input/output error */
#define ENXIO		(- 6)	/* no such device or address */
#define E2BIG		(- 7)	/* arg list too long */
#define ENOEXEC		(- 8)	/* exec format error */
#define EBADF		(- 9)	/* bad file descriptor */
#define ECHILD		(-10)	/* no child process */
#define EAGAIN		(-11)	/* resource temporarily unavailable */
#define ENOMEM		(-12)	/* not enough space */
#define EACCES		(-13)	/* permission denied */
#define EFAULT		(-14)	/* bad address */
#define ENOTBLK		(-15)	/* Extension: not a block special file */
#define EBUSY		(-16)	/* resource busy */
#define EEXIST		(-17)	/* file exists */
#define EXDEV		(-18)	/* improper link */
#define ENODEV		(-19)	/* no such device */
#define ENOTDIR		(-20)	/* not a directory */
#define EISDIR		(-21)	/* is a directory */
#define EINVAL		(-22)	/* invalid argument */
#define ENFILE		(-23)	/* too many open files in system */
#define EMFILE		(-24)	/* too many open files */
#define ENOTTY		(-25)	/* inappropriate I/O control operation */
#define ETXTBSY		(-26)	/* no longer used */
#define EFBIG		(-27)	/* file too large */
#define ENOSPC		(-28)	/* no space left on device */
#define ESPIPE		(-29)	/* invalid seek */
#define EROFS		(-30)	/* read-only file system */
#define EMLINK		(-31)	/* too many links */
#define EPIPE		(-32)	/* broken pipe */
#define EDOM		(-33)	/* domain error		(from ANSI C std) */
#define ERANGE		(-34)	/* result too large	(from ANSI C std) */
#define EDEADLK		(-35)	/* resource deadlock avoided */
#define ENAMETOOLONG	(-36)	/* file name too long */
#define ENOLCK		(-37)	/* no locks available */
#define ENOSYS		(-38)	/* function not implemented */
#define ENOTEMPTY	(-39)	/* directory not empty */

/* The following are not POSIX errors, but they can still happen. */
#define ELOCKED		(-101)	/* can't send message */
#define EBADCALL	(-102)	/* error on send/receive */
#define ELONGSTRING	(-103)	/* string too long */

/* The following error codes are generated by the kernel itself. */
#define E_BAD_DEST	-1	/* destination address illegal */
#define E_BAD_SRC	-2	/* source address illegal */
#define E_TRY_AGAIN	-3	/* can't send-- tables full */
#define E_OVERRUN	-4	/* interrupt for task that is not waiting */
#define E_BAD_BUF	-5	/* message buf outside caller's addr space */
#define E_TASK		-6	/* can't send to task */
#define E_NO_MESSAGE	-7	/* RECEIVE failed: no message present */
#define E_NO_PERM	-8	/* ordinary users can't send to tasks */
#define E_BAD_FCN	-9	/* only valid fcns are SEND, RECEIVE, BOTH */
#define E_BAD_ADDR	-10	/* bad address given to utility routine */
#define E_BAD_PROC	-11	/* bad proc number given to utility */

#endif /* _MINIX_ERRNO_H */
