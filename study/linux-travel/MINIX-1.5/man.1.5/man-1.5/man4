# MAN4
	MAN4 (4)

Section 4 of the Manual describes file formats.

The sections of the manual are:
	
     Section 1: User commands
     Section 2: System calls
     Section 3: C library
  -->Section 4: File formats
     Section 5: Miscellaneous
     Section 6: Games
     Section 7: Special files (devices)
     Section 8: Maintenance procedures

# man_template
	man_template (4)

This is a template for writing man page entries. 

	The first line of a Minix 1.5 man page entry should start with
a pound sign (#) followed by the names by which the entry should be
listed in the index.  The Minix 1.5 man command will use this line to
construct the index.  This line is not displayed; all lines up to but
not including the next line beginning with "#" will be displayed.

[# name1 name2 ... ]

	The rest of this template is based on the design of Kernighan and 
Pike, pp. 308++.  This is the format used by Unix System V Release 4, 
but it is not the same format as used in the Minix Users Guide or the 
Minix 1.5 Reference Manual.

	Entries written according to this template should be processed
by nroff -man and added to the proper file, man1, man2, etc., in the
directory /usr/man.  A new entry may be appended to the appropriate
file, but if the entry is meant to replace an existing entry note that
only the first occurence of a keyword will be found when the index is
built.  Thus a replacement entry ought to be added to the beginning of
the file, or the file ought to be edited to remove the old entry.

.TH COMMAND section number
.SH NAME
command \- brief description of function
.SH SYNOPSIS
.B command
options
.SH DESCRIPTION
Detailed description of programs and options.
Paragraphs are begun by .PP at the left margin.
.PP
This is a new paragraph.
.SH FILES
Files used by the command, e.g., passwd(1) uses /etc/passwd.
.SH "SEE ALSO"
References to related documents, including other man pages.
.SH DIAGNOSTICS
Description of any unusual output (e.g., see cmp(1))
.SH BUGS
Surprising features (not always bugs).

# crontab
	crontab (4)

NAME:
	/usr/lib/crontab

DESCRIPTION:

	This is the file used by cron for scheduling jobs.  The entries
of /usr/lib/crontab contain 6 elements each.  Some examples follow:

Min   Hr   Dat Mo   Day  Command
 *    *    *    *    *   /bin/atrun       	  # execute atrun every minute
 *    *    *    *    *   /usr/bin/date >/dev/tty0 # date every minute
 0    *    *    *    *   /usr/bin/date >/dev/tty0 # date every hour
30    4    *    *   1-5  /bin/backup /dev/fd1  	  # backup Monday to Friday
						    at 0430
30   19    *    *  1,3,5 /bin/backup              # MWF at 1930 
0     9   25   12    *   /usr/bin/sing >/dev/tty0 # only Xmas morning at 0900

SEE ALSO:
	cron (1)
	Minix 1.5 Reference Manual 129

# at
	at (4)

NAME:
	/usr/spool/at

DESCRIPTION:
	This is the directory used by at, read by atrun to see if there is
work to be done when atrun is executed.
	The files created by at have names like /usr/spool/at/AA.DDD.HHMM.UU
(in which AA DDD HH and MM specify the date and time and UU is a unique number.

	Note that when a program executes it cannot use stdin or stdout
if it isn't specifically redirected.

	For atrun to function the directroy /usr/spool/at/past must exist. 
The files which have already been executed are placed here.

SEE ALSO:
	at (1), atrun (1)
	Minix 1.5 Reference Manual 120

# ttys
	/etc/ttys (4)

The ttys file is read by init to determine which terminals need a login
process. 

The ttys file consists of three-field lines as follows:
	abc
where
	a = 0 (line disabled = no shell) 
	    1 (enabled = shell started)
	    2 (enabled through a GETTY)
	b = a-r defines UART parameters (baud, bits, parity) 
	    0 for console
	c = line number or line name

The letters a-r correspond to the 18 entries of the uart table below.
For example, 'a' is 110 baud, 8 bits, no parity; 'b' is 300 baud, 8
bits, no parity; 'j' is 2400 baud, 7 bits, even parity; etc.  If the
third field is a digit, then the terminal device will be /dev/tty{c},
otherwise it will be /dev/{c}.  Note that since login cheats in
determining the slot number, entries in /etc/ttys must always be in
minor device number order - the first line should be for tty0, the
second for tty1, and so on.

Example /etc/tty file (the text following # should not be in /etc/ttys)
	1c0	# /dev/tty0 is enabled as 1200 baud, no parity
	2c1	# /dev/tty1 is enabled using /etc/getty for speed detection
	0c2	# /dev/tty2 is disabled
	
If any of the /etc/tty entries start with a 2, the file /etc/getty must
be present and executable.

'a':  110 baud, 8 bits, no parity */
'b':  300 baud, 8 bits, no parity */
'c': 1200 baud, 8 bits, no parity */
'd': 2400 baud, 8 bits, no parity */
'e': 4800 baud, 8 bits, no parity */
'f': 9600 baud, 8 bits, no parity */
'g':  110 baud, 7 bits, even parity */
'h':  300 baud, 7 bits, even parity */
'i': 1200 baud, 7 bits, even parity */
'j': 2400 baud, 7 bits, even parity */
'k': 4800 baud, 7 bits, even parity */
'l': 9600 baud, 7 bits, even parity */
'm':  110 baud, 7 bits, odd parity */
'n':  300 baud, 7 bits, odd parity */
'o': 1200 baud, 7 bits, odd parity */
'p': 2400 baud, 7 bits, odd parity */
'q': 4800 baud, 7 bits, odd parity */
'r': 9600 baud, 7 bits, odd parity */

reference: /usr/src/mxboot/init.c

# passwd
	/etc/passwd (4)

	This is the user data base. There are seven fields separated
by colons:

	login name
	password (encrypted)
	uid
	gid
	name
	home directory
	shell

An entry for user fozzie might look like this:

	fozzie::15:1:Fozzie the Bear:/usr/fozzie:/bin/sh

Each user must have a unique uid.  The password must be intially left
blank when an entry is created; an encrypted password is created when
the user or the superuser use passwd(1) to change the original null
password. If * is placed in the password field no login will be
possible. Typically this is done for fields for "users" such as bin or
uucp.

# rc
	/etc/rc (4)

	The etc/rc file is executed when the system is first booted.
It is used to mount standard file systems, perform various
initializations, and start daemons such as update and network software.

# startup
	/usr/tnet/startup (4)

	This is the startup file for Tnet. It is usually called by  /etc/rc,
but can be invoked manually if it isn't desired to start the net software
automatically at boot time.


# profile
	/etc/profile (4)

	/etc/profile executes each time any user logs in. It sets prompts,
paths, etc. An individual user can have a <home>/.profile file which will
execute after /etc/profile and allows for individualized initialization.

See also: .profile

# .profile
	<home>/.profile (4)

	The .profile in the home directory is optional. It allows an
individual user to override the initialization done by all users by
/etc/profile.

See also: profile

# psdatabase
	/etc/psdatabase (4)

	/etc/psdatabase contains information about the structure of the
kernel, and is used by ps(1).  It must be rebuilt by ps -U whenever a
new kernel is compiled.  If the kernel recompilation is radical (for
instance, adding or removing a driver) ps probably needs to be
recompiled also.

# .kermrc
	<home>/.kermrc (4)

	This is the initialization file for kermit. Each user has an
individual copy in the home directory. See the kermit documentation for
more information.

# .ellepro.e ellepro.b1
	<home>/.ellepro.* (4)

	This is the configuration file for the elle editor. .ellepro.e is
the source file; it is compiled by ellec to .ellepro.b1, which is readable
only by elle.

# gettydefs
	/etc/gettydefs

	/etc/gettydefs tells getty what to do. The file has the format:

label#initial flags#final flags#login prompt#next label

	When getty is started it searches for a line with a label that
matches the speed parameter; it uses the first line if there is no
match.  The initial flags are used until login is executed, when the
final flags are set.

These are the flags recognized:

	Speeds: B300, B1200, B2400, B4800, B9600. B19200, B38400, and
B115200 are compile-time options.

	Other flags: 

	TABS, -TABS
	NONE, ODD, -ODD, EVEN, -EVEN
	RAW, -RAW
	CBREAK, -CBREAK
	ECHO, -ECHO
	DCD, -DCD
	NL, -NL
	BITS5, BITS6, BITS7, BITS8, 
	SANE, DEFAULT

EXAMPLE

	9600# B9600 # B9600 SANE TABS #login: #4800
	4800# B4800 # B4800 SANE TABS #login: #2400
	2400# B2400 # B2400 SANE TABS #login: #1200
	1200# B1200 # B1200 SANE TABS #login: #300
	300# B300 # B300 SANE TABS #login: #9600

FILES
	/etc/issue contains the name of the system to be shown at login
time.

(asw 950226)
