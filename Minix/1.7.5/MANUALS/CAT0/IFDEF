




Command:   ifdef - remove #ifdefs from a file
Syntax:    ifdef [-t] [-dsymbol] [-Dsymbol] [-Usymbol] [-Isymbol] [file]
Flags:     -D  Define symbol permanently
           -I  Ignore symbol
           -U  Undefine symbol permanently
           -d  Define symbol. It may be #undef'ed later
           -t  Produce a table of the symbols on stdout
Examples:  ifdef -DUNIX file.c >newfile.c # Define UNIX
           ifdef -D_MINIX -UDOS <x.c >y.c # Define

     Ifdef  allows  conditional  code  [  #ifdef  ...  #endif  ]  to  be
selectively removed from C files, but at the same time leaving all other
C preprocessor commands intact such as #define, #include etc.  Input  to
ifdef is either the file named as the last argument, or stdin if no file
is named.  Output goes to stdout.

     Symbols may be defined with the -d  or  -D  flags  just  like  cpp,
except  that  the  latter  option ignores subsequent #undefs.  It is not
permitted to give values to symbols.  Similarly, -U undefines  a  symbol
and  ignores subsequent #definess.  Symbols defined with -I are ignored;
any #ifdef using an ignored symbol will be left intact.





































                                                                        

