     This directory contains a program that simulates an IBM PC. The simulator
has been tested on a SPARC, but since it is written 100% in C (no assembly code
at all), it should port to other architectures fairly easily.  The full
source code is available in this directory for FTP.

     In addition to interpreting the 8088 instruction set, the program also
simulates enough of the I/O devices and other features of the IBM PC to
allow MINIX 1.1 to run on it.    However, the simulator does not contain
any BIOS code (because BIOS code is copyright).  Later versions of MINIX
make a small number of BIOS calls during initialization, so this will have
to be patched up to run more recent versions of MINIX.  To run MS-DOS on
the simulator will require the acquisition of a BIOS.  Simulation of more
I/O devices may also be necessary.

     The simulator, manual and all other files in this directory are copyright:

Copyright Prentice-Hall, Inc. 1991

However, permission is hereby granted for individuals and organizations to
use and duplicate it for educational and research purposes.  For commercial
use, permission is required from Prentice-Hall in writing.

     The following files are present in this directory:

88.Z		- Executable binary of the simulator
Manual.Z	- Simulator manual (troff -ms)
READ_ME		- This file
disk.0.Z	- /usr diskette
image.Z		- Boot diskette
rootfs.Z	- Root file system diskette
run.Z		- Shell script to run simulator
sources.shar.Z	- Complete simulator sources in C (shell archive)

All the .Z files are compressed.

     If you cannot bear waiting until you have read the manual in full
before trying MINIX, copy all the files, uncompress them and just type 'run'.  
That shell script will start the simulator and execute the file 'image', which
contains a MINIX 1.1 executable.  It will start up by loading the RAM disk
from rootfs, and will do some printing.  Eventually it will ask you to
insert the /usr diskette and hit ENTER.  The /usr diskette should be present
on the file disk.0, so just hit <return>.  When it asks for the date, just
enter it and hit <return>.  When the login prompt occurs, login as ast or
root.

     The simulator is not blindingly fast.  If you want to improve its
performance, consider editing 88.s by hand to improve the main decode loop.
Also look at condition code handling.  Furthermore, the simulator cannot
run the current version of MINIX.  I haven't looked at this, but my guess
is that either (1) the current version uses some I/O device such as the hard
disk that is not currently simulated, and/or (2) the current version makes a
couple of BIOS calls in the beginning that the simulator cannot handle.

     If you are interested in finding out more about MINIX in general, look
in the file ../demo/announcement.

     My thanks to David Barto who ported the simulator to the SPARC,
improved the disk I/O, made the keyboard and screen behave much better,
and installed various other valuable changes.

Andy Tanenbaum (ast@cs.vu.nl)


