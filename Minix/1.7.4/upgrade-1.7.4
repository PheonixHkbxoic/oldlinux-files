How to upgrade from 1.7.2 to 1.7.4.

First, the 'setup' script that used used for a normal installation now
notices that a Minix system is already present and will offer to "upgrade"
it.  This means that is will save the contents of /usr/ in /usr/.old/ and
then install normally.  So the root file system is replaced, /usr is filled
with new stuff, and you can rescue some old files from /usr/.old/.
If you'd rather replace the source and recompile like real programmers do,
then here is the list of steps to take:

Note: Things you have to do as root are marked with a # sign.  The ! sign
marks the actions of bin.

# Replace the sources, that's /usr/include, /usr/man, and /usr/src, with
  the 1.7.4 sources by extracting the SYS.nn images in the normal way.
  (Don't forget to move or remove the 1.7.2 stuff.)

! All 1.7.4 commands can run under 1.7.2, and all 1.7.2 commands can run
  under 1.7.4 if BINCOMPAT and SRCCOMPAT are set to 1 in <minix/config.h>.
  Nothing really interesting changed in this upgrade to make things difficult.

! Move to /usr/src/lib and type 'make install'.  You need new libraries
  for the new kernel.

! Customize /usr/include/minix/config.h to add or remove drivers.  In
  /usr/src/tools type 'make hdboot'.  The /minix file should automatically
  be transformed into a directory containing both the old 1.7.2 and the
  new 1.7.4 kernel.  The newest of these two is chosen on boot.  Try it.
  If it doesn't work then 'image=minix/old-image' is the way to recover if
  it fails.

! If it works then halt the system again to return to the boot monitor
  prompt.  Now set 'rootdev' to the same value as 'ramimagedev'.  If your
  system is a 286 then set the RAM disk size with 'ramsize' to as much as
  you can spare up to 512 Mb for the so-called "second level cache".
  (Minix-386 should have been configured with a large primary block cache.)
  Type 'save' to record the changes.  Boot the system.

! Your system should now be running 1.7.4.  Install the commands from CMD.nn
  and use 'make install' in /usr/src to recompile the rest of the system.

# Run 'checkhier' to check your top level directory tree.  It suggest
  commands to execute to fix descrepancies in the top level directory
  tree.

# Compare all files in /usr/src/etc with those in /etc.  Some may have
  changed and should be replaced.  Be careful not to lose changes you
  have made to files in /etc.
