# This file was generated automatically by configure.  Do not edit.
VPATH = .
links = 
host_alias = i386-linux
host_cpu = i386
host_vendor = unknown
host_os = linux
target_alias = i386-linux
target_cpu = i386
target_vendor = unknown
target_os = linux
host_makefile_frag = ../../config/linux.mh
ALL=all.internal

srcdir = .

prefix = /usr

exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib

datadir = $(prefix)/lib
mandir = $(prefix)/man
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = $(prefix)/info
includedir = $(prefix)/include
docdir = $(datadir)/doc

SHELL = /bin/sh

INSTALL = install -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)

AR = `if [ -f ../../../binutils/ar ] ; \
	then echo ../../../binutils/ar ; \
	else echo ar ; fi`

AR_FLAGS = qc
RANLIB = `if [ -f ../../../binutils/ranlib ] ; \
	then echo ../../../binutils/ranlib ; \
	else echo ranlib ; fi`

MAKEINFO = `if [ -f ../../../texinfo/C/makeinfo ] ; \
	then echo ../../../texinfo/C/makeinfo ; \
	else echo makeinfo ; fi`

STDIO_CFILES = clearerr.C emulate.C fclose.C fdopen.C feof.C ferror.C  \
	fflush.C fgetc.C fgetpos.C fgets.C fileno.C fopen.C  \
	fprintf.C fputc.C fputs.C fread.C freopen.C fscanf.C  \
	fseek.C fsetpos.C ftell.C fwrite.C gets.C getw.C macros.C  \
	perror.c popen.C printf.C puts.C putw.C remove.c rewind.C  \
	scanf.C setbuf.C setbuffer.C setlinebuf.C setvbuf.C \
	sprintf.C sscanf.C stdio.C sysd-stdio.c tempnam.c \
	tmpfile.c tmpnam.c ungetc.C vfprintf.C vfscanf.C \
	vprintf.C vscanf.C vsprintf.C vsscanf.C setfileno.C

STDIO_FILES = $(STDIO_CFILES) stdio.h Makefile

STDIO_OBJECTS = clearerr.o emulate.o fclose.o fdopen.o feof.o ferror.o \
	fflush.o fgetc.o fgetpos.o fgets.o fileno.o fopen.o \
	fprintf.o fputc.o fputs.o fread.o freopen.o fscanf.o \
	fseek.o fsetpos.o ftell.o fwrite.o gets.o getw.o \
	macros.o perror.o popen.o printf.o puts.o putw.o \
	remove.o rewind.o scanf.o setbuf.o setbuffer.o \
	setlinebuf.o setvbuf.o sprintf.o sscanf.o stdio.o \
	sysd-stdio.o tempnam.o tmpfile.o tmpnam.o ungetc.o \
	vfprintf.o vfscanf.o vprintf.o vscanf.o vsprintf.o \
	vsscanf.o setfileno.o


DEPEND_SOURCES = $(srcdir)/*.C

TARGETLIB = libstdio++.a
TARGETLIB=../../libc.a

# IO_DIR is used in 'depend' rules generated by ../../utils/gendepend.
IO_DIR = iostream

CC = `if [ -f ../../../gcc/gcc ] ; \
	then echo ../../../gcc/gcc -B../../../gcc/ ; \
	else echo gcc ; fi`

CFLAGS = -g
XTRAFLAGS = `if [ -f ../../../gcc/gcc ] ; \
	then echo -I../../../gcc/include ; \
	else echo ; fi`

WRAP_C_INCLUDES = -I$(srcdir)/../../g++-include

#### Host and target-dependent makefile fragments come in here.
# Needs some work.

INSTALL = cp
INSTALLDATA = cp
NOSTDINC = -nostdinc++
# Linux puts iostream in libc.a.
STREAM_OBJS =
HAVE_CPLUS_EXTERN = 1
WRAP_C_INCLUDES =
REGEX_OBJ=
# IO_DIR=no-stream might be the right thing for Linux, but you need
# to re-run gendepend in libg++/utils first.  There is also the problem
# that -nostdinc++ won't pick up the iostream include files ...
# IO_DIR=no-stream
G_CONFIG_ARGS = CONFIG_NM="nm -d"
# Don't include iostream files in libg++.a.
IO_OBJECTS_TO_GET = 
##

.SUFFIXES: .o .C .c .i

.C.o:
	$(CC) $(CFLAGS) $(NOSTDINC) -I../.. -I$(srcdir) -I$(srcdir)/.. $(WRAP_C_INCLUDES) -c $(XTRAFLAGS) $<
	$(LD) $(LDFLAGS) $*.o
	$(MV) a.out $*.o

.c.o:
	$(CC) $(CFLAGS) -c $<
	$(LD) $(LDFLAGS) $*.o
	$(MV) a.out $*.o

.C.i :
	$(CC) $(CFLAGS) $(NOSTDINC) -I../.. -I$(srcdir) -I$(srcdir)/.. $(WRAP_C_INCLUDES) -E $(XTRAFLAGS) $< -o $*.i

.c.i :
	$(CC) $(CFLAGS) -E $< -o $*.i

.PHONY: all
all: library
.PHONY: info
info:
.PHONY: clean-info
clean-info:
.PHONY: install-info
install-info:

.PHONY: boltcc
boltcc:
	$(MAKE) "CC=$(CC)" "XTRAFLAGS=$(XTRAFLAGS)" \
		"AR=$(AR)" "RANLIB=$(RANLIB)" $(TARGETLIB)

.PHONY: check
check:

library: $(STDIO_OBJECTS)
	$(AR) $(AR_FLAGS) $(TARGETLIB) $(STDIO_OBJECTS)
	$(RANLIB) $(TARGETLIB)	

.PHONY: install
install:
	-rm -f $(libdir)/$(TARGETLIB)
	$(INSTALL_DATA) $(TARGETLIB) $(libdir)/$(TARGETLIB)
	$(RANLIB) $(libdir)/$(TARGETLIB)

.PHONY: mostlyclean clean distclean realclean
mostlyclean:
	rm -f *.o \#* core
clean: mostlyclean
	rm -f *.a
distclean: clean
	rm -f *~ config.status Makefile
realclean: distclean
	rm -f depend

force:

# with the gnu make, this is done automatically.

Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

.NOEXPORT:


# DO NOT DELETE THIS LINE -- g++dep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.

clearerr.o : clearerr.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
emulate.o : emulate.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fclose.o : fclose.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fdopen.o : fdopen.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
feof.o : feof.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
ferror.o : ferror.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fflush.o : fflush.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fgetc.o : fgetc.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fgets.o : fgets.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fileno.o : fileno.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fopen.o : fopen.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fprintf.o : fprintf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h
fputc.o : fputc.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fputs.o : fputs.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fread.o : fread.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
freopen.o : freopen.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fscanf.o : fscanf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fseek.o : fseek.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
ftell.o : ftell.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
fwrite.o : fwrite.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
popen.o : popen.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h \
  $(srcdir)/../../$(IO_DIR)/procbuf.h
printf.o : printf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
rewind.o : rewind.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
scanf.o : scanf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h
setbuf.o : setbuf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
setbuffer.o : setbuffer.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
setlinebuf.o : setlinebuf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
setvbuf.o : setvbuf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
sprintf.o : sprintf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h
sscanf.o : sscanf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h \
  $(srcdir)/../../$(IO_DIR)/strstream.h \
  $(srcdir)/../../$(IO_DIR)/iostream.h
stdio.o : stdio.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
ungetc.o : ungetc.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
vfprintf.o : vfprintf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
vfscanf.o : vfscanf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
vprintf.o : vprintf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h
vscanf.o : vscanf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h 
vsprintf.o : vsprintf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h \
  $(srcdir)/../../$(IO_DIR)/strstream.h \
  $(srcdir)/../../$(IO_DIR)/iostream.h
vsscanf.o : vsscanf.C \
  stdioprivate.h \
  stdio.h \
  $(srcdir)/../../$(IO_DIR)/ioprivate.h \
  $(srcdir)/../../$(IO_DIR)/streambuf.h \
  $(srcdir)/../../$(IO_DIR)/strstream.h \
  $(srcdir)/../../$(IO_DIR)/iostream.h

# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
