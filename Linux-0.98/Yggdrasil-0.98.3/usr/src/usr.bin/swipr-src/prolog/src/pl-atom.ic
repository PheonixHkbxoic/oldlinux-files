{ (Atom)NULL, ATOM_TYPE, "$abort" },
{ (Atom)NULL, ATOM_TYPE, "$apply" },
{ (Atom)NULL, ATOM_TYPE, "atoms" },
{ (Atom)NULL, ATOM_TYPE, "|" },
{ (Atom)NULL, ATOM_TYPE, "$break" },
{ (Atom)NULL, ATOM_TYPE, "call" },
{ (Atom)NULL, ATOM_TYPE, "," },
{ (Atom)NULL, ATOM_TYPE, "cputime" },
{ (Atom)NULL, ATOM_TYPE, "{}" },
{ (Atom)NULL, ATOM_TYPE, "!" },
{ (Atom)NULL, ATOM_TYPE, "defined" },
{ (Atom)NULL, ATOM_TYPE, "/" },
{ (Atom)NULL, ATOM_TYPE, "." },
{ (Atom)NULL, ATOM_TYPE, "dynamic" },
{ (Atom)NULL, ATOM_TYPE, "end_of_file" },
{ (Atom)NULL, ATOM_TYPE, "=" },
{ (Atom)NULL, ATOM_TYPE, "fail" },
{ (Atom)NULL, ATOM_TYPE, "foreign" },
{ (Atom)NULL, ATOM_TYPE, "functors" },
{ (Atom)NULL, ATOM_TYPE, "fx" },
{ (Atom)NULL, ATOM_TYPE, "fy" },
{ (Atom)NULL, ATOM_TYPE, "global" },
{ (Atom)NULL, ATOM_TYPE, "globalused" },
{ (Atom)NULL, ATOM_TYPE, "goal" },
{ (Atom)NULL, ATOM_TYPE, "heapused" },
{ (Atom)NULL, ATOM_TYPE, "hide_childs" },
{ (Atom)NULL, ATOM_TYPE, "inferences" },
{ (Atom)NULL, ATOM_TYPE, "init_file" },
{ (Atom)NULL, ATOM_TYPE, "listing" },
{ (Atom)NULL, ATOM_TYPE, "local" },
{ (Atom)NULL, ATOM_TYPE, "localused" },
{ (Atom)NULL, ATOM_TYPE, "-" },
{ (Atom)NULL, ATOM_TYPE, "multifile" },
{ (Atom)NULL, ATOM_TYPE, "[]" },
{ (Atom)NULL, ATOM_TYPE, "off" },
{ (Atom)NULL, ATOM_TYPE, "on" },
{ (Atom)NULL, ATOM_TYPE, "+" },
{ (Atom)NULL, ATOM_TYPE, "$portray" },
{ (Atom)NULL, ATOM_TYPE, "predicates" },
{ (Atom)NULL, ATOM_TYPE, "print" },
{ (Atom)NULL, ATOM_TYPE, "procedure" },
{ (Atom)NULL, ATOM_TYPE, "|:" },
{ (Atom)NULL, ATOM_TYPE, ":-" },
{ (Atom)NULL, ATOM_TYPE, "spy" },
{ (Atom)NULL, ATOM_TYPE, "stderr" },
{ (Atom)NULL, ATOM_TYPE, "system" },
{ (Atom)NULL, ATOM_TYPE, "top_level" },
{ (Atom)NULL, ATOM_TYPE, "trace" },
{ (Atom)NULL, ATOM_TYPE, "trail" },
{ (Atom)NULL, ATOM_TYPE, "trailused" },
{ (Atom)NULL, ATOM_TYPE, "true" },
{ (Atom)NULL, ATOM_TYPE, "user" },
{ (Atom)NULL, ATOM_TYPE, "$VAR$" },
{ (Atom)NULL, ATOM_TYPE, "xf" },
{ (Atom)NULL, ATOM_TYPE, "xfx" },
{ (Atom)NULL, ATOM_TYPE, "xfy" },
{ (Atom)NULL, ATOM_TYPE, "yf" },
{ (Atom)NULL, ATOM_TYPE, "yfx" },
{ (Atom)NULL, ATOM_TYPE, "yfy" },
{ (Atom)NULL, ATOM_TYPE, "string" },
{ (Atom)NULL, ATOM_TYPE, "level" },
{ (Atom)NULL, ATOM_TYPE, "parent" },
{ (Atom)NULL, ATOM_TYPE, "alternative" },
{ (Atom)NULL, ATOM_TYPE, "cut" },
{ (Atom)NULL, ATOM_TYPE, "top" },
{ (Atom)NULL, ATOM_TYPE, "redo" },
{ (Atom)NULL, ATOM_TYPE, "exit" },
{ (Atom)NULL, ATOM_TYPE, "unify" },
{ (Atom)NULL, ATOM_TYPE, "$prolog_trace_interception" },
{ (Atom)NULL, ATOM_TYPE, "very_deep" },
{ (Atom)NULL, ATOM_TYPE, "has_alternatives" },
{ (Atom)NULL, ATOM_TYPE, "?" },
{ (Atom)NULL, ATOM_TYPE, "$undefined_procedure" },
{ (Atom)NULL, ATOM_TYPE, ":" },
{ (Atom)NULL, ATOM_TYPE, "transparent" },
{ (Atom)NULL, ATOM_TYPE, "imported" },
{ (Atom)NULL, ATOM_TYPE, "exported" },
{ (Atom)NULL, ATOM_TYPE, "cut_parent" },
{ (Atom)NULL, ATOM_TYPE, "prolog" },
{ (Atom)NULL, ATOM_TYPE, "message" },
{ (Atom)NULL, ATOM_TYPE, "indexed" },
{ (Atom)NULL, ATOM_TYPE, "context_module" },
{ (Atom)NULL, ATOM_TYPE, "discontiguous" },
{ (Atom)NULL, ATOM_TYPE, "pipe" },
{ (Atom)NULL, ATOM_TYPE, "receiver" },
{ (Atom)NULL, ATOM_TYPE, "$time" },
{ (Atom)NULL, ATOM_TYPE, "toplevel" },
{ (Atom)NULL, ATOM_TYPE, "argument" },
{ (Atom)NULL, ATOM_TYPE, "^" },
{ (Atom)NULL, ATOM_TYPE, "*" },
{ (Atom)NULL, ATOM_TYPE, "-->" },
{ (Atom)NULL, ATOM_TYPE, "->" },
{ (Atom)NULL, ATOM_TYPE, "//" },
{ (Atom)NULL, ATOM_TYPE, "/\\" },
{ (Atom)NULL, ATOM_TYPE, ";" },
{ (Atom)NULL, ATOM_TYPE, "<" },
{ (Atom)NULL, ATOM_TYPE, "<<" },
{ (Atom)NULL, ATOM_TYPE, "=.." },
{ (Atom)NULL, ATOM_TYPE, "=:=" },
{ (Atom)NULL, ATOM_TYPE, "=<" },
{ (Atom)NULL, ATOM_TYPE, ">=" },
{ (Atom)NULL, ATOM_TYPE, "==" },
{ (Atom)NULL, ATOM_TYPE, "=\\=" },
{ (Atom)NULL, ATOM_TYPE, ">" },
{ (Atom)NULL, ATOM_TYPE, ">>" },
{ (Atom)NULL, ATOM_TYPE, "?-" },
{ (Atom)NULL, ATOM_TYPE, "@<" },
{ (Atom)NULL, ATOM_TYPE, "@=<" },
{ (Atom)NULL, ATOM_TYPE, "@>" },
{ (Atom)NULL, ATOM_TYPE, "@>=" },
{ (Atom)NULL, ATOM_TYPE, "\\" },
{ (Atom)NULL, ATOM_TYPE, "\\+" },
{ (Atom)NULL, ATOM_TYPE, "\\/" },
{ (Atom)NULL, ATOM_TYPE, "\\=" },
{ (Atom)NULL, ATOM_TYPE, "\\==" },
{ (Atom)NULL, ATOM_TYPE, "=@=" },
{ (Atom)NULL, ATOM_TYPE, "\\=@=" },
{ (Atom)NULL, ATOM_TYPE, "not" },
{ (Atom)NULL, ATOM_TYPE, "xor" },
{ (Atom)NULL, ATOM_TYPE, "~" },
{ (Atom)NULL, ATOM_TYPE, "mod" },
{ (Atom)NULL, ATOM_TYPE, "module_transparent" },
{ (Atom)NULL, ATOM_TYPE, "is" },
{ (Atom)NULL, ATOM_TYPE, "abs" },
{ (Atom)NULL, ATOM_TYPE, "random" },
{ (Atom)NULL, ATOM_TYPE, "integer" },
{ (Atom)NULL, ATOM_TYPE, "floor" },
{ (Atom)NULL, ATOM_TYPE, "sqrt" },
{ (Atom)NULL, ATOM_TYPE, "sin" },
{ (Atom)NULL, ATOM_TYPE, "cos" },
{ (Atom)NULL, ATOM_TYPE, "tan" },
{ (Atom)NULL, ATOM_TYPE, "log" },
{ (Atom)NULL, ATOM_TYPE, "exp" },
{ (Atom)NULL, ATOM_TYPE, "log10" },
{ (Atom)NULL, ATOM_TYPE, "pi" },
{ (Atom)NULL, ATOM_TYPE, "e" },
{ (Atom)NULL, ATOM_TYPE, "mark" },
{ (Atom)NULL, ATOM_TYPE, "optimise" },
{ (Atom)NULL, ATOM_TYPE, "$alt" },
{ (Atom)NULL, ATOM_TYPE, "suffix" },
{ (Atom)NULL, ATOM_TYPE, "history_depth" },
{ (Atom)NULL, ATOM_TYPE, "tty" },
{ (Atom)NULL, ATOM_TYPE, "codes" },
{ (Atom)NULL, ATOM_TYPE, "externals" },
{ (Atom)NULL, ATOM_TYPE, "modules" },
{ (Atom)NULL, ATOM_TYPE, "max" },
{ (Atom)NULL, ATOM_TYPE, "min" },
{ (Atom)NULL, ATOM_TYPE, "ceil" },
{ (Atom)NULL, ATOM_TYPE, "core_left" },
{ (Atom)NULL, ATOM_TYPE, "locallimit" },
{ (Atom)NULL, ATOM_TYPE, "globallimit" },
{ (Atom)NULL, ATOM_TYPE, "traillimit" },
{ (Atom)NULL, ATOM_TYPE, "unlimited" },
{ (Atom)NULL, ATOM_TYPE, "equal" },
{ (Atom)NULL, ATOM_TYPE, "mismatched_char" },
{ (Atom)NULL, ATOM_TYPE, "transposed_char" },
{ (Atom)NULL, ATOM_TYPE, "inserted_char" },
{ (Atom)NULL, ATOM_TYPE, "separated" },
{ (Atom)NULL, ATOM_TYPE, "transposed_word" },
{ (Atom)NULL, ATOM_TYPE, "gctime" },
{ (Atom)NULL, ATOM_TYPE, "collections" },
{ (Atom)NULL, ATOM_TYPE, "collected" },
{ (Atom)NULL, ATOM_TYPE, "garbage_collect" },
{ (Atom)NULL, ATOM_TYPE, "user_input" },
{ (Atom)NULL, ATOM_TYPE, "user_output" },
{ (Atom)NULL, ATOM_TYPE, "user_error" },
{ (Atom)NULL, ATOM_TYPE, "/dev/null" },
{ (Atom)NULL, ATOM_TYPE, "$stream_position" },
{ (Atom)NULL, ATOM_TYPE, "read" },
{ (Atom)NULL, ATOM_TYPE, "write" },
{ (Atom)NULL, ATOM_TYPE, "append" },
{ (Atom)NULL, ATOM_TYPE, "bool" },
{ (Atom)NULL, ATOM_TYPE, "number" },
{ (Atom)NULL, ATOM_TYPE, "default" },
{ (Atom)NULL, ATOM_TYPE, "cm" },
{ (Atom)NULL, ATOM_TYPE, "asin" },
{ (Atom)NULL, ATOM_TYPE, "acos" },
{ (Atom)NULL, ATOM_TYPE, "atan" },
{ (Atom)NULL, ATOM_TYPE, "execute" },
