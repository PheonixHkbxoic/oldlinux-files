# Definition table of atoms functors used somewhere in the C-code.
# format:
#
#	A <name> <string>:	--> #define ATOM_<name> into <string>
#	F <name> <arity>	--> #define FUNCTOR_<name><arity>
#				(A name should exist as well)
#
# This file is processed using the Unix awk program defineatoms to produce
# pl-atom.ic, pl-atom.ih, pl-funct.ic and pl-funct.ih.  If you do not have
# awk you can propagate the changes by hand, but be be careful!

A abort			"$abort"
A apply			"$apply"
A atoms			"atoms"
A bar			"|"
A break			"$break"
A call			"call"
A comma			","
A cputime		"cputime"
A curl			"{}"
A cut			"!"
A defined		"defined"
A divide		"/"
A dot			"."
A dynamic		"dynamic"
A end_of_file		"end_of_file"
A equals		"="
A fail			"fail"
A foreign		"foreign"
A functors		"functors"
A fx			"fx"
A fy			"fy"
A global		"global"
A globalused		"globalused"
A goal			"goal"
A heapused		"heapused"
A hide_childs		"hide_childs"
A inferences		"inferences"
A init_file    		"init_file"
A listing		"listing"
A local			"local"
A localused		"localused"
A minus			"-"
A multifile		"multifile"
A nil			"[]"
A off     		"off"
A on			"on"
A plus			"+"
A portray		"$portray"
A predicates		"predicates"
A print			"print"
A procedure		"procedure"
A prompt		"|:"
A prove			":-"
A spy			"spy"
A stderr		"stderr"
A system		"system"
A top_level    		"top_level"
A trace			"trace"
A trail			"trail"
A trailused		"trailused"
A true			"true"
A user			"user"
A var			"$VAR$"
A xf			"xf"
A xfx			"xfx"
A xfy			"xfy"
A yf			"yf"
A yfx			"yfx"
A yfy			"yfy"
A string		"string"
A level			"level"
A parent		"parent"
A alternative		"alternative"
A cutted		"cut"
A top			"top"
A redo			"redo"
A exit			"exit"
A unify			"unify"
A traceinterc		"$prolog_trace_interception"
A very_deep		"very_deep"
A has_alternatives	"has_alternatives"
A obtain		"?"
A undefinterc		"$undefined_procedure"
A module		":"
A transparent		"transparent"
A imported		"imported"
A exported		"exported"
A cut_parent		"cut_parent"
A prolog		"prolog"
A message		"message"
A indexed		"indexed"
A context_module	"context_module"
A discontiguous		"discontiguous"
A pipe			"pipe"
A receiver		"receiver"
A time			"$time"
A toplevel		"toplevel"
A argument		"argument"
A hat			"^"
A star			"*"
A grammar		"-->"
A ifthen		"->"
A div			"//"
A and			"/\\"
A semicolon		";"
A smaller		"<"
A lshift		"<<"
A univ			"=.."
A ar_equals		"=:="
A smaller_equal		"=<"
A larger_equal		">="
A strick_equal		"=="
A ar_not_equal		"=\\="
A larger		">"
A rshift		">>"
A query			"?-"
A at_smaller		"@<"
A at_smaller_eq		"@=<"
A at_larger		"@>"
A at_larger_eq		"@>="
A backslash		"\\"
A not_provable		"\\+"
A or			"\\/"
A not_equals		"\\="
A not_strickt_equals	"\\=="
A at_equals		"=@="
A at_not_equals		"\\=@="
A not			"not"
A xor			"xor"
A tilde			"~"
A mod			"mod"
A module_transparent	"module_transparent"
A is			"is"
A abs			"abs"
A random		"random"
A integer		"integer"
A floor			"floor"
A sqrt			"sqrt"
A sin			"sin"
A cos			"cos"
A tan			"tan"
A log			"log"
A exp			"exp"
A log10			"log10"
A pi			"pi"
A e			"e"
A mark			"mark"
A optimise		"optimise"
A alt			"$alt"
A suffix		"suffix"
A history_depth		"history_depth"
A tty			"tty"
A codes			"codes"
A externals		"externals"
A modules		"modules"
A max			"max"
A min			"min"
A ceil			"ceil"
A core_left		"core_left"
A locallimit		"locallimit"
A globallimit		"globallimit"
A traillimit		"traillimit"
A unlimited		"unlimited"
A equal			"equal"
A mismatched_char	"mismatched_char"
A transposed_char	"transposed_char"
A inserted_char		"inserted_char"
A separated		"separated"
A transposed_word	"transposed_word"
A gctime		"gctime"
A collections		"collections"
A collected		"collected"
A garbage_collect	"garbage_collect"
A user_input		"user_input"
A user_output		"user_output"
A user_error		"user_error"
A devnull		"/dev/null"
A stream_position	"$stream_position"
A read			"read"
A write			"write"
A append		"append"
A bool			"bool"
A number		"number"
A default		"default"
A cm			"cm"
A asin			"asin"
A acos			"acos"
A atan			"atan"
A execute		"execute"

F apply			2
F call			1
F comma			2
F divide		2
F dot			2
F equals		2
F listing		1
F portray		1
F print			1
F procedure		2
F prove			1
F prove			2
F var			1
F traceinterc		2
F curl			1
F obtain		2
F undefinterc		3
F module		2
F pipe			1
F time			2
F hat			2
F plus			2
F minus			2
F star			2
F minus			1
F abs			1
F and			2
F or			2
F rshift		2
F lshift		2
F xor			2
F backslash		1
F random		1
F integer		1
F floor			1
F sqrt			1
F sin			1
F cos			1
F tan			1
F log			1
F exp			1
F log10			1
F pi			0
F e			0
F cputime		0
F mod			2
F div			2
F ar_equals		2
F ar_not_equal		2
F smaller		2
F larger		2
F smaller_equal		2
F larger_equal		2
F is			2
F alt			1
F semicolon		2
F ifthen		2
F bar			2
F not_provable		1
F max			2
F min			2
F ceil			1
F garbage_collect 	0
F stream_position	3
F asin			1
F acos			1
F atan			1
F atan			2
