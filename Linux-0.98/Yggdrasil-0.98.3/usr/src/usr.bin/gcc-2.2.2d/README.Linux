To build gcc 2.2.2d for Linux under Linux (aka, gcc 2.2.2 from the
FSF), please do

	configure i386-linux

And proceed as usual to make it.

To cross-compile for Linux, please do

Step 1: If your host machine is not Linux, build and install gcc 2.2.2d
	for your host machine. Otherwise, install gcc 2.2.2d for Linux.

Step 2: If your host machine is not Linux, determine a directory for
	your cross compiler. Say you put it under /foo.
	/usr).

Step 3: If your host machine is not Linux, prepare the destination
	directory

        'cd /foo'
        'mkdir i386-linux'
        'mkdir i386-linux/bin'
        'mkdir lib'
        'mkdir lib/gcc-lib/'
        'mkdir lib/gcc-lib/i386-linux'
        'mkdir lib/gcc-lib/i386-linux/2.2.2d'

	put all the files in

		/usr/lib/gcc-lib/i386-linux/2.2.2d

	from 2.2.2dmisc.tar.Z there.

	cd /foo/lib/gcc-lib/i386-linux/2.2.2d
	(cd /usr/lib/gcc-lib/i386-linux/2.2.2d; tar cf - *) | tar xof -

        'mkdir lib/gcc-lib/i386-linux/2.2.2d/sys-include'

	put all the files in

		/usr/include

	from 2.2.2dmisc.tar.Z and xxxinc.tar.Z, where xxx is the
	version of the kernel you are using in

		/foo/lib/gcc-lib/i386-linux/2.2.2d/sys-include

Step 2: If your host machine is not Linux, build and install gas
        gas is pretty easy.  Get the source to gas-1.38.1 and copy
	a.out.h for o.95a or above to a.out.gnu.h. then compile with the
	command 'make CC=gcc a386'. if you want, you can edit Makefile
	to suit your environment and taste. Install the assembler

        'mv a386 /foo/lib/gcc-lib/i386-linux/2.2.2d/as'

Step 3: If your host machine is not Linux, build ld. Depends on your
	machine, you have to do one of the followings.

     a: If your host machine is little endian, you can use GNU binutils
	1.9. again copy a.out.h from 0.95a or above to a.out.gnu.h. You 
	may have to add a prefix/suffix to those binary names.
	Otherwise, the host binary programs may choke on them. You have
	to take care of malloc (0) and calloc () by using

		malloc ((n) ? (n) : 1);

	after build all the binaries, install ld

	'mv yournewld /foo/lib/gcc-lib/i386-linux/2.2.2d/ld'

	the rest of stuffs can be put any where. rename them to their
	real names.

	You have to make sure the name of ld is not "ld", otherwise
	compiler may be confused.
     b: if you use a big endian machine as your host, you have to use
	binutils-beta-1.94 and apply the patches from Keith White
	(kwhite@csi.UOttawa.CA) and Bob Kukara (rk@theep.boston.ma.us).
	Configure it as i386-bsd.

	install ld

	'mv ld.new /foo/lib/gcc-lib/i386-linux/2.2.2d/ld'

	The rest of binutils is optional. You have to use those from
	1.94. Note 1.94 are HUGE, compared with 1.9.
        
	Note: You can try binutils-1.97.tar.Z from alpha.gnu.ai.mit.edu
	to see if it supports 386bsd or linux.

Note:	To build GNU binutils for cross-compiling, you have to modify
	the code a little bit. Make sure malloc and calloc are taken
	care of.

Step 4: Configure, build and install gcc. Configure gcc as a cross
	compiler with

        'configure --host=xxxxx --target=i386-linux'

	If your host machine is not Linux, edit Makefile such that

	prefix=/foo

	Then make with

        'make CC="gcc -v 2.2.2d"  CFLAGS=-O3  LANGUAGES="c c++"

	or

        'make CC="gcc -v 2.2.2d"  CFLAGS=-O3  LANGUAGES="c c++"

        This assumes you already have gcc 2.2.2d installed on your host
	machine (step 1).

	NOTE: you do not want to make stage1 and recompile the compiler
        with itself if your host machine is not Linux.

        If your host machine is not Linux, "make" will choke when it
	tries to link enquire. Don't worry. Since enquire is used to
	create float.h for target machine, so there's no way you can
	run it on your host machine.
	
	Float.h should be in

	/foo/lib/gcc-lib/i386-linux/2.2.2d/include

	or

	/usr/lib/gcc-lib/i386-linux/2.2.2d/include

	if you have followed the instructions.

	For installation, if your host machine is not Linux, do

	'mv cc1 cc1plus cpp /foo/lib/gcc-lib/i386-linux/2.2.2d/'

	You can specify the target machine and verion by using

	gcc -v xxxxx -b target

	Otherwise, follow the normal instructions for installing gcc.

Step 5: If you want, you can get libc-2.2.2d.tar.Z and compile
	the libraries yourself.

Note:	For further info about cross-compiling from big-endian machine,
	please contact "kankkune@cs.Helsinki.FI", who has done that.
