    Backflops is the name of a suite of 4 utilities, all operating
as links to one executable, for backing up and restoring data
on Linux machines to floppy disks.

    The utilities are:

writemulti
	This takes a data stream on stdin and copies it to an output device,
    typically a floppy disk, pausing as each disk is filled and
    prompting the user to insert a new disk.

readmulti
	The inverse of writemulti: it reads split archives from a
    set of floppies and sends the result in one continuous stream
    to stdout.

backflops
	A convenience utility: it runs tar with reasonable flags
    and pipes the output to writemulti. To back up your entire
    system in a reasonable way, it should be sufficient to
    type "backflops /".

restflops
	The inverse of backflops: it restores a specified set of files
    (all by default) by running readmulti and piping the result to
    tar.
    
    It uses hardwired knowledge of major/minor values of
the device it's writing to/reading from to infer the amount of data it
can hold. As initially configured it's only set up for use of floppies
under Linux, but simple modifications to the getminor() function
and floppy_kb table should suffice for any other peripheral (e.g. tape)
for which there exists a driver. It should work under any *ix system
with suitable modifications to floppy_kb. There is also a flag (-c)
to override these calculations.

    Minor caveats:

1. As written, backflops depends on the ability to malloc an area
equal to the capacity of the data medium. Thus if you're
backing up to 1.44MB floppies, you've got to be able to malloc
1.44MB. Real or virtual memory, it doesn't matter.
    It could be modified to fall back to smaller chunks or
file I/O, but I suspect most people will be able to malloc
the size of their floppy drives. If you do modify it, send
the cdiffs to dsb@world.std.com.
    This also makes for some pretty granular "buffering".
I'm not expert enough in this area to know what kind of buffering
is most efficient; it's possible that there's a benefit to
smaller buffers.

2. Backflops places a special record at the beginning of each
floppy. When reading back, it reads this and then throws the
remainder of the data at tar or whatever. What this means is that
if you lost backflops itself, it would be a little complicated
restoring your backups. Of course, this is a problem with any backup
program (who polices the police? who backs up backup?),
but to be real careful you might want to dedicate one floppy to
containing the backflops program (or whatever backup tool you use)
alone (e.g. tar cvf /dev/PS0 /usr/local/bin/backflops).
    In fact, the first word on each disk is the size of the header,
so even in the worst case it would be easy to write a little program
to get at the tar data. Simply read 4 bytes, treat it as an int,
subtract 4 and read that many more bytes. What's left is
your data; throw it at tar.

Send bugs, fixes, improvements, comments to
dsb@world.std.com
