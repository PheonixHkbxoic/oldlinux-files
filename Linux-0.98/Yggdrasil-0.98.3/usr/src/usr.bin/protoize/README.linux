PROTOIZE
--------

DESCRIPTION:
Protoize will take K&R C program(s) as input and produce fully prototyped 
ANSI C code as ouput. That is, function prototypes are created, and explict 
function declarations are added to enable ANSI C's stronger type-checking.
The companion program, unprotoize, does the reverse operation as its name 
suggests.

Protoize is pretty smart, and I have yet to see it introduce a bug into the 
converted source, but anything's possible. From my experience, the ANSI source
results in object code 100% identical to that produce from the K&R source. 



INSTALLATION:
After uncompressing/untarring, just type 'make install.' 
This will do the following:
	1. Copy the protoize binary to /usr/bin.
	2. Create a hard link with unprotoize in /usr/bin.
	3. Copy system library description file to /usr/local/lib.
		Note: This path may be changed at runtime using the
			-B command line option (see the man pages).
	4. Install the man pages in /usr/man/man1.



DISTRIBUTION:
This tar file contains the binary protoize, built using gcc-2.2.2 and 
shared libs under kernel 0.96c. Older versions of gcc will *NOT* work!

The source code included here came straight from the GCC 2.2.2 distri-
bution. To rebuild this program, just type 'make'.



CHANGES:
Only one line was changed due to wrong signals returned by the 
Linux access() system call: 

From protoize.c,  line 2121:
        if (errno == EACCES && retries == 0)  /* was errno == ENOENT */



LEGAL-STUFF:
Protoize is part of the GNU GCC distribution, and as such is protected
by the GNU CopyLeft. 



July 18, 1992 		R. Michael McMahon	chad@src.umd.edu	
