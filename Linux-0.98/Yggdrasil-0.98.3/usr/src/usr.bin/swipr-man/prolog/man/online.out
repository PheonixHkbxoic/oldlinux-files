This is Common TeX, Version 2.9 (preloaded format=lplain 90.2.15)
(./online.tex
LaTeX Version 2.09 <25 Jan 1988>
(/usr/local/lib/tex/macros/report.sty
Document Style `report' <5 Feb 88>.
(/usr/local/lib/tex/macros/rep11.sty)
(/usr/local/lib/tex/macros/titlepage.sty))
(/staff/jan/tex/macros/code.sty) (/staff/jan/tex/macros/jan.sty)
(/staff/jan/tex/macros/psfig.sty) (/staff/jan/tex/macros/logo.sty)
(./tty.sty) (./online.aux (./intro.aux) (./builtin.aux) (./module.aux)
(./foreign.aux) (./hack.aux) (./summary.aux))
psfig: searching /u4/staff/jan/tex/macros/uva.ps for bounding box
psfig: including /u4/staff/jan/tex/macros/uva.ps 
psfig: searching /u4/staff/jan/tex/macros/swi.ps for bounding box
psfig: including /u4/staff/jan/tex/macros/swi.ps 
[0] (./intro.tex
Chapter 1.
[1] [2] [3] [4] [5] [6] [7]
Chapter 2.
[8] [9] [10] [11] [12]
Underfull \hbox (badness 10000) in paragraph at lines 361--363
[]\elvtt give help on named predicate with any arity

Underfull \hbox (badness 10000) in paragraph at lines 363--367
[]\elvtt display specified section. section numbers

Underfull \hbox (badness 10000) in paragraph at lines 363--367
\elvtt are dash-separated numbers: [] refers to

Underfull \hbox (badness 10000) in paragraph at lines 363--367
\elvtt section 2.3 of the manual. Section numbers

Overfull \hbox (12.30258pt too wide) in paragraph at lines 370--374
 [] 
[13]
Underfull \hbox (badness 10000) in paragraph at lines 380--383
[]\elvtt Display predicates, functions and sections

Underfull \hbox (badness 10000) in paragraph at lines 380--383
\elvtt that have `file' (or `File', etc.) in their
[14]
Overfull \hbox (8.74055pt too wide) in paragraph at lines 470--470
 []\elvtt L = [72, 101, 108, 108, 111, 32, 85, 110, 105, 118, 101, 114, 
115, 101][] 
[15] [16]
Underfull \hbox (badness 10000) in paragraph at lines 560--561
[]\elvtt Set a spy point (see spy/1) on the

Underfull \hbox (badness 10000) in paragraph at lines 562--563
[]\elvtt Remove the spy point (see nospy/1) from

Underfull \hbox (badness 10000) in paragraph at lines 568--569
[]\elvtt Toggle `Show Context'. If on the

Underfull \hbox (badness 10000) in paragraph at lines 568--569
\elvtt context module of the goal is displayed

Underfull \hbox (badness 10000) in paragraph at lines 568--569
\elvtt between square brackets (see section 4[]).

Underfull \hbox (badness 10000) in paragraph at lines 570--571
[]\elvtt List the current predicate with

Underfull \hbox (badness 10000) in paragraph at lines 574--575
[]\elvtt Enter a Prolog break environment (see

Underfull \hbox (badness 10000) in paragraph at lines 576--577
[]\elvtt Continue execution, stop at next port.

Underfull \hbox (badness 10000) in paragraph at lines 578--579
[]\elvtt Write goals using the Prolog predicate

Underfull \hbox (badness 10000) in paragraph at lines 585--586
[]\elvtt Show the list of parent goals (the

Underfull \hbox (badness 10000) in paragraph at lines 585--586
\elvtt execution stack). Note that due to tail

Underfull \hbox (badness 10000) in paragraph at lines 585--586
\elvtt recursion optimization a number of

Underfull \hbox (badness 10000) in paragraph at lines 589--590
[]\elvtt Ignore the current goal, pretending it

Underfull \hbox (badness 10000) in paragraph at lines 591--592
[]\elvtt Continue execution, stop at next spy

Underfull \hbox (badness 10000) in paragraph at lines 595--596
[]\elvtt Write goals using the Prolog predicate

Underfull \hbox (badness 10000) in paragraph at lines 598--599
[]\elvtt Undo all actions (except for database

Underfull \hbox (badness 10000) in paragraph at lines 598--599
\elvtt and i/o actions) back to the call port

Underfull \hbox (badness 10000) in paragraph at lines 598--599
\elvtt of the current goal and resume execution

Underfull \hbox (badness 10000) in paragraph at lines 601--602
[]\elvtt Continue execution, stop at the next

Underfull \hbox (badness 10000) in paragraph at lines 601--602
\elvtt port of this goal (thus skipping all

Underfull \hbox (badness 10000) in paragraph at lines 605--606
[]\elvtt Continue execution, stop at the next

Underfull \hbox (badness 10000) in paragraph at lines 605--606
\elvtt port of the parent goal (thus skipping

Underfull \hbox (badness 10000) in paragraph at lines 605--606
\elvtt this goal and all calls to children of

Underfull \hbox (badness 10000) in paragraph at lines 605--606
\elvtt this goal). This option is useful to

Underfull \hbox (badness 10000) in paragraph at lines 607--608
[]\elvtt Write goals using the Prolog predicate

Overfull \hbox (70.28198pt too wide) in paragraph at lines 555--610
 [] 
[17] [18] [19] [20] [21]
Overfull \hbox (16.9529pt too wide) in paragraph at lines 790--790
 []\elvtt Saving to my_program; text: 204800 ... data: 357000 ... symbol
s ... done.[] 
[22] [23] [24] [25] [26] [27] [28]
Underfull \hbox (badness 10000) in paragraph at lines 969--977
[]\elvtt The local stack is used to store the

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt execution environments of procedure

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt invocations. The space for an

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt environment is reclaimed when it

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt fails, exits without leaving choice

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt points, the alternatives are cut of

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt with the [] predicate or no choice

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt points have been created since the

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt invocation and the last subclause is

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt started (tail recursion

Underfull \hbox (badness 10000) in paragraph at lines 977--983
[]\elvtt The global stack is used to store

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt terms created during Prolog's

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt execution. Terms on this stack will

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt be reclaimed by backtracking to a

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt point before the term was created or

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt by garbage collection (provided the

Underfull \hbox (badness 10000) in paragraph at lines 983--988
[]\elvtt The trail stack is used to store

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt assignments during execution.

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt Entries on this stack remain alive

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt until backtracking before the point

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt of creation or the garbage collector

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt determines they are nor needed any

Underfull \hbox (badness 10000) in paragraph at lines 988--995
[]\elvtt The argument stack is used to store

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt one of the intermediate code

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt interpreter's registers. The amount

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt of space needed on this stack is

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt determined entirely by the depth in

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt which terms are nested in the clauses

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt that constitute the program.

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt Overflow is most likely when using

Overfull \hbox (44.33083pt too wide) in paragraph at lines 962--997
[][] 
[29] [30]) [31] (./builtin.tex
Chapter 3.
[32] [33] [34] [35] [36] [37] [38] [39] [40] [41] [42] [43] [44]
[45] [46] [47] [48] [49] [50] [51] [52] [53] [54] [55] [56] [57]
[58] [59] [60] [61] [62] [63]
Underfull \hbox (badness 10000) detected at line 224
 []
[64]
Underfull \hbox (badness 10000) detected at line 227
 []
[65]
Underfull \hbox (badness 10000) detected at line 229
 []
[66]
Underfull \hbox (badness 10000) detected at line 231
 []
[67]
Underfull \hbox (badness 10000) detected at line 233
 []
[68]
Underfull \hbox (badness 10000) detected at line 249
 []
[69]
Underfull \hbox (badness 10000) detected at line 251
 []
[70]
Underfull \hbox (badness 10000) detected at line 253
 []
[71]
Underfull \hbox (badness 10000) detected at line 256
 []
[72]
Underfull \hbox (badness 10000) detected at line 258
 []
[73] [74] [75] [76] [77] [78] [79] [80]
Underfull \hbox (badness 10000) detected at line 321
 []
[81]
Underfull \hbox (badness 10000) detected at line 324
 []
[82]
Underfull \hbox (badness 10000) detected at line 331
 []
[83] [84] [85] [86] [87] [88] [89] [90] [91] [92] [93] [94] [95]
[96] [97] [98] [99] [100] [101] [102] [103] [104] [105] [106] [107]
[108] [109] [110] [111] [112] [113] [114] [115] [116] [117] [118]
[119] [120] [121] [122] [123]
Underfull \hbox (badness 10000) in paragraph at lines 663--664
[]\elvtt This reserved name refers to the
[124] [125] [126] [127] [128] [129] [130] [131] [132]
Overfull \hbox (35.2946pt too wide) in paragraph at lines 750--753
 [] 
[133] [134] [135] [136] [137] [138] [139] [140] [141] [142] [143]
[144] [145] [146] [147] [148] [149] [150] [151] [152] [153] [154]
[155] [156] [157] [158] [159] [160] [161] [162] [163] [164] [165]
[166] [167] [168] [169] [170] [171] [172] [173] [174] [175] [176]
[177] [178] [179] [180] [181] [182] [183] [184] [185] [186] [187]
[188] [189] [190] [191] [192] [193] [194] [195] [196] [197] [198]
[199] [200] [201] [202] [203] [204] [205] [206] [207]
Underfull \hbox (badness 10000) in paragraph at lines 1179--1181
[][]\elvtt , [],

Underfull \hbox (badness 10000) in paragraph at lines 1186--1189
[][]\elvtt , [], [], =@=, [], [], [], =\=, >,
[208] [209] [210] [211] [212] [213]
Underfull \hbox (badness 10000) detected at line 1239
 []
[214]
Underfull \hbox (badness 10000) detected at line 1241
 []
[215]
Underfull \hbox (badness 10000) detected at line 1243
 []
[216]
Underfull \hbox (badness 10000) detected at line 1246
 []
[217]
Underfull \hbox (badness 10000) detected at line 1249
 []
[218]
Underfull \hbox (badness 10000) detected at line 1252
 []
[219] [220]
Underfull \hbox (badness 10000) in paragraph at lines 1273--1275
[]\elvtt Arbitrary expression, returning either a floating

Underfull \hbox (badness 10000) in paragraph at lines 1275--1277
[]\elvtt Arbitrary expression that should evaluate into an
[221]
Underfull \hbox (badness 10000) detected at line 1288
 []
[222]
Underfull \hbox (badness 10000) detected at line 1290
 []
[223]
Underfull \hbox (badness 10000) detected at line 1292
 []
[224]
Underfull \hbox (badness 10000) detected at line 1294
 []
[225]
Underfull \hbox (badness 10000) detected at line 1296
 []
[226] [227]
Underfull \hbox (badness 10000) detected at line 1300
 []
[228] [229] [230] [231] [232] [233] [234]
Underfull \hbox (badness 10000) detected at line 1323
 []
[235]
Underfull \hbox (badness 10000) detected at line 1326
 []
[236]
Underfull \hbox (badness 10000) detected at line 1328
 []
[237]
Underfull \hbox (badness 10000) detected at line 1330
 []
[238] [239]
Underfull \hbox (badness 10000) detected at line 1334
 []
[240] [241] [242] [243] [244] [245] [246] [247] [248] [249] [250]
Underfull \hbox (badness 10000) detected at line 1356
 []
[251] [252] [253] [254] [255] [256] [257] [258] [259] [260] [261]
[262] [263] [264] [265] [266] [267] [268] [269] [270] [271] [272]
[273] [274] [275] [276] [277] [278] [279] [280] [281] [282] [283]
[284] [285] [286] [287] [288] [289] [290] [291] [292] [293] [294]
[295] [296]
Underfull \hbox (badness 10000) in paragraph at lines 1610--1613
[]\elvtt where [] is an integer (1-3 digits) the

Underfull \hbox (badness 10000) in paragraph at lines 1610--1613
\elvtt character with ASCII code [] is output (NB

Underfull \hbox (badness 10000) in paragraph at lines 1629--1631
[]\elvtt put the next item as a character (i.e. it

Underfull \hbox (badness 10000) in paragraph at lines 1631--1633
[]\elvtt write the next item N times where N is the

Underfull \hbox (badness 10000) in paragraph at lines 1633--1635
[]\elvtt write the next item as a String (so it must

Underfull \hbox (badness 10000) in paragraph at lines 1637--1638
[]\elvtt write the next item Left justified in N

Underfull \hbox (badness 10000) in paragraph at lines 1638--1641
[]\elvtt write the next item Right justified in N

Underfull \hbox (badness 10000) in paragraph at lines 1638--1641
\elvtt columns. N is a decimal number with at

Underfull \hbox (badness 10000) in paragraph at lines 1638--1641
\elvtt least one digit. The item must be an atom,
[297] [298] [299] [300] [301] [302] [303] [304] [305] [306] [307]
[308] [309] [310] [311] [312] [313] [314] [315] [316] [317] [318]
[319] [320] [321] [322] [323] [324] [325] [326] [327] [328] [329]
[330] [331] [332] [333] [334] [335] [336] [337] [338] [339] [340]
[341] [342] [343] [344] [345] [346] [347] [348] [349] [350] [351]
[352] [353] [354]
Underfull \hbox (badness 10000) in paragraph at lines 2034--2037
[]\elvtt read_clause/1 (used by consult/1) warns on

Underfull \hbox (badness 10000) in paragraph at lines 2034--2037
\elvtt variables only appearing once in a term

Underfull \hbox (badness 10000) in paragraph at lines 2034--2037
\elvtt (clause) which have a name not starting with

Underfull \hbox (badness 10000) in paragraph at lines 2037--2040
[]\elvtt read/1 and derivates will produce an error

Underfull \hbox (badness 10000) in paragraph at lines 2037--2040
\elvtt message on quoted atoms or strings longer

Underfull \hbox (badness 10000) in paragraph at lines 2040--2043
[]\elvtt Accept dollar as a lower case character,

Underfull \hbox (badness 10000) in paragraph at lines 2040--2043
\elvtt thus avoiding the need for quoting atoms

Underfull \hbox (badness 10000) in paragraph at lines 2040--2043
\elvtt with dollar signs. system maintenance use

Underfull \hbox (badness 10000) in paragraph at lines 2043--2045
[]\elvtt Warn if the clauses for a predicate are not

Underfull \hbox (badness 10000) in paragraph at lines 2045--2048
[]\elvtt Read and derivates transform "..." into a

Underfull \hbox (badness 10000) in paragraph at lines 2045--2048
\elvtt prolog string instead of a list of ascii

Overfull \hbox (34.20264pt too wide) in paragraph at lines 2030--2050
 [] 
[355] [356]
Underfull \hbox (badness 10000) in paragraph at lines 2065--2066
[]\elvtt (User) cpu time since Prolog was started in

Underfull \hbox (badness 10000) in paragraph at lines 2066--2068
[]\elvtt Total number of passes via the call and redo ports

Underfull \hbox (badness 10000) in paragraph at lines 2079--2081
[]\elvtt Total number of external references in all
[357] [358] [359] [360] [361] [362] [363] [364] [365] [366] [367]
[368] [369] [370] [371] [372]
Overfull \hbox (150.26836pt too wide) in paragraph at lines 2216--2223
 [] 
[373] [374]) [375] (./module.tex
Chapter 4.
[376] [377] [378] [379] [380] [381] [382] [383] [384] [385]) [386]
(./foreign.tex
Chapter 5.
[387] [388] [389] [390] [391] [392] [393] [394] [395] [396] [397]
[398] [399] [400] [401] [402] [403] [404]
Underfull \hbox (badness 10000) in paragraph at lines 307--309
[]\elvtt An unbound variable. The value of term as

Underfull \hbox (badness 10000) in paragraph at lines 307--309
\elvtt such is a unique identifier for the

Underfull \hbox (badness 10000) in paragraph at lines 313--315
[]\elvtt A compound term. Note that a list is a

Overfull \hbox (23.79996pt too wide) in paragraph at lines 305--316
 [] 
[405] [406] [407] [408] [409] [410] [411]
Overfull \hbox (31.7353pt too wide) in paragraph at lines 361--362
[][]  
[412] [413] [414] [415] [416] [417] [418] [419] [420] [421] [422]
[423] [424] [425] [426] [427] [428] [429] [430] [431] [432] [433]
[434] [435] [436] [437] [438] [439] [440] [441] [442] [443]
Underfull \hbox (badness 10000) in paragraph at lines 622--626
[]\elvtt Halt Prolog execution. This action should

Underfull \hbox (badness 10000) in paragraph at lines 622--626
\elvtt be called rather than Unix exit() to give

Underfull \hbox (badness 10000) in paragraph at lines 622--626
\elvtt Prolog the opportunity to clean up. This

Underfull \hbox (badness 10000) in paragraph at lines 626--628
[]\elvtt Generate a Prolog abort. This call does not

Underfull \hbox (badness 10000) in paragraph at lines 628--630
[]\elvtt Create a standard Prolog break environment.

Underfull \hbox (badness 10000) in paragraph at lines 630--635
[]\elvtt The argument (a char *) is considered to be

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt hold the symbolfile for further incremental

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt loading. Should be called by user

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt applications that perform incremental

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt loading as well and want to inform Prolog of

Underfull \hbox (badness 10000) in paragraph at lines 617--636
[] []

Overfull \hbox (44.60495pt too wide) in paragraph at lines 617--636
[] 
[444] [445]
Underfull \hbox (badness 10000) in paragraph at lines 654--656
[]\elvtt Return an integer holding the number of

Underfull \hbox (badness 10000) in paragraph at lines 656--658
[]\elvtt Return a char ** holding the argument vector

Underfull \hbox (badness 10000) in paragraph at lines 658--660
[]\elvtt Return a char * holding the current symbol

Underfull \hbox (badness 10000) in paragraph at lines 660--665
[]\elvtt Return the initial symbol file (before

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt loading) of Prolog. By setting the symbol

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt file to this value no name clashes can occur

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt with previously loaded foreign files (but no

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt symbols can be shared with earlier loaded

Underfull \hbox (badness 10000) in paragraph at lines 652--666
[] []

Overfull \hbox (44.60495pt too wide) in paragraph at lines 652--666
[] 
[446] [447]
Underfull \hbox (badness 10000) in paragraph at lines 685--686
[]\elvtt Predicate cannot be seen in the

Underfull \hbox (badness 10000) in paragraph at lines 687--690
[]\elvtt Predicate is non-deterministic. This

Underfull \hbox (badness 10000) in paragraph at lines 687--690
\elvtt attribute is currently ignored, but

Underfull \hbox (badness 10000) in paragraph at lines 687--690
\elvtt will probably be used in future

Overfull \hbox (35.84502pt too wide) in paragraph at lines 683--692
[]  
[448] [449] [450] [451] [452] [453] [454] [455] [456]) [457] (./hack.tex
Chapter 6.
[458] [459] [460]
Underfull \hbox (badness 10000) in paragraph at lines 31--35
[]\elvtt Value is unified with an integer reference

Underfull \hbox (badness 10000) in paragraph at lines 31--35
\elvtt to the local stack frame in which execution

Underfull \hbox (badness 10000) in paragraph at lines 31--35
\elvtt is resumed if the goal associated with Frame

Underfull \hbox (badness 10000) in paragraph at lines 31--35
\elvtt fails. Fails if the frame has no

Underfull \hbox (badness 10000) in paragraph at lines 35--37
[]\elvtt Value is unified with `1' if Frame still is

Underfull \hbox (badness 10000) in paragraph at lines 35--37
\elvtt a candidate for backtracking. `0'

Underfull \hbox (badness 10000) in paragraph at lines 37--42
[]\elvtt Value is unified with the goal associated

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt with Frame. If the definition module of the

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt active predicate is not user the goal is

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt represented as module:goal. Do not

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt instantiate variables in this goal unless

Underfull \hbox (badness 10000) in paragraph at lines 42--44
[]\elvtt Value is unified with the recursion level of

Underfull \hbox (badness 10000) in paragraph at lines 44--47
[]\elvtt Value is unified with an integer reference

Underfull \hbox (badness 10000) in paragraph at lines 44--47
\elvtt to the parent local stack frame of Frame.

Underfull \hbox (badness 10000) in paragraph at lines 47--49
[]\elvtt Value is unified with the context module of

Underfull \hbox (badness 10000) in paragraph at lines 49--52
[]\elvtt Value is unified with `1' if Frame is the

Underfull \hbox (badness 10000) in paragraph at lines 49--52
\elvtt top Prolog goal from a recursive call back
[461] [462] [463] [464] [465]) [466] (./summary.tex
Chapter 7.
) [467] (./online.aux (./intro.aux) (./builtin.aux) (./module.aux)
(./foreign.aux) (./hack.aux) (./summary.aux))
LaTeX Warning: Label(s) may have changed. Rerun to get cross-references 
right.
(see the transcript file for additional information)
Output written on online.dvi (468 pages, 255856 bytes).
Transcript written on online.log.
This is Common TeX, Version 2.9 (preloaded format=lplain 90.2.15)
(./online.tex
LaTeX Version 2.09 <25 Jan 1988>
(/usr/local/lib/tex/macros/report.sty
Document Style `report' <5 Feb 88>.
(/usr/local/lib/tex/macros/rep11.sty)
(/usr/local/lib/tex/macros/titlepage.sty))
(/staff/jan/tex/macros/code.sty) (/staff/jan/tex/macros/jan.sty)
(/staff/jan/tex/macros/psfig.sty) (/staff/jan/tex/macros/logo.sty)
(./tty.sty) (./online.aux (./intro.aux) (./builtin.aux) (./module.aux)
(./foreign.aux) (./hack.aux) (./summary.aux))
psfig: searching /u4/staff/jan/tex/macros/uva.ps for bounding box
psfig: including /u4/staff/jan/tex/macros/uva.ps 
psfig: searching /u4/staff/jan/tex/macros/swi.ps for bounding box
psfig: including /u4/staff/jan/tex/macros/swi.ps 
[0] (./intro.tex
Chapter 1.
[1] [2] [3] [4] [5] [6] [7]
Chapter 2.
[8] [9] [10] [11] [12]
Underfull \hbox (badness 10000) in paragraph at lines 361--363
[]\elvtt give help on named predicate with any arity

Underfull \hbox (badness 10000) in paragraph at lines 363--367
[]\elvtt display specified section. section numbers

Underfull \hbox (badness 10000) in paragraph at lines 363--367
\elvtt are dash-separated numbers: [] refers to

Underfull \hbox (badness 10000) in paragraph at lines 363--367
\elvtt section 2.3 of the manual. Section numbers

Overfull \hbox (12.30258pt too wide) in paragraph at lines 370--374
 [] 
[13]
Underfull \hbox (badness 10000) in paragraph at lines 380--383
[]\elvtt Display predicates, functions and sections

Underfull \hbox (badness 10000) in paragraph at lines 380--383
\elvtt that have `file' (or `File', etc.) in their
[14]
Overfull \hbox (8.74055pt too wide) in paragraph at lines 470--470
 []\elvtt L = [72, 101, 108, 108, 111, 32, 85, 110, 105, 118, 101, 114, 
115, 101][] 
[15] [16]
Underfull \hbox (badness 10000) in paragraph at lines 560--561
[]\elvtt Set a spy point (see spy/1) on the

Underfull \hbox (badness 10000) in paragraph at lines 562--563
[]\elvtt Remove the spy point (see nospy/1) from

Underfull \hbox (badness 10000) in paragraph at lines 568--569
[]\elvtt Toggle `Show Context'. If on the

Underfull \hbox (badness 10000) in paragraph at lines 568--569
\elvtt context module of the goal is displayed

Underfull \hbox (badness 10000) in paragraph at lines 568--569
\elvtt between square brackets (see section 4[]).

Underfull \hbox (badness 10000) in paragraph at lines 570--571
[]\elvtt List the current predicate with

Underfull \hbox (badness 10000) in paragraph at lines 574--575
[]\elvtt Enter a Prolog break environment (see

Underfull \hbox (badness 10000) in paragraph at lines 576--577
[]\elvtt Continue execution, stop at next port.

Underfull \hbox (badness 10000) in paragraph at lines 578--579
[]\elvtt Write goals using the Prolog predicate

Underfull \hbox (badness 10000) in paragraph at lines 585--586
[]\elvtt Show the list of parent goals (the

Underfull \hbox (badness 10000) in paragraph at lines 585--586
\elvtt execution stack). Note that due to tail

Underfull \hbox (badness 10000) in paragraph at lines 585--586
\elvtt recursion optimization a number of

Underfull \hbox (badness 10000) in paragraph at lines 589--590
[]\elvtt Ignore the current goal, pretending it

Underfull \hbox (badness 10000) in paragraph at lines 591--592
[]\elvtt Continue execution, stop at next spy

Underfull \hbox (badness 10000) in paragraph at lines 595--596
[]\elvtt Write goals using the Prolog predicate

Underfull \hbox (badness 10000) in paragraph at lines 598--599
[]\elvtt Undo all actions (except for database

Underfull \hbox (badness 10000) in paragraph at lines 598--599
\elvtt and i/o actions) back to the call port

Underfull \hbox (badness 10000) in paragraph at lines 598--599
\elvtt of the current goal and resume execution

Underfull \hbox (badness 10000) in paragraph at lines 601--602
[]\elvtt Continue execution, stop at the next

Underfull \hbox (badness 10000) in paragraph at lines 601--602
\elvtt port of this goal (thus skipping all

Underfull \hbox (badness 10000) in paragraph at lines 605--606
[]\elvtt Continue execution, stop at the next

Underfull \hbox (badness 10000) in paragraph at lines 605--606
\elvtt port of the parent goal (thus skipping

Underfull \hbox (badness 10000) in paragraph at lines 605--606
\elvtt this goal and all calls to children of

Underfull \hbox (badness 10000) in paragraph at lines 605--606
\elvtt this goal). This option is useful to

Underfull \hbox (badness 10000) in paragraph at lines 607--608
[]\elvtt Write goals using the Prolog predicate

Overfull \hbox (70.28198pt too wide) in paragraph at lines 555--610
 [] 
[17] [18] [19] [20] [21]
Overfull \hbox (16.9529pt too wide) in paragraph at lines 790--790
 []\elvtt Saving to my_program; text: 204800 ... data: 357000 ... symbol
s ... done.[] 
[22] [23] [24] [25] [26] [27] [28]
Underfull \hbox (badness 10000) in paragraph at lines 969--977
[]\elvtt The local stack is used to store the

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt execution environments of procedure

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt invocations. The space for an

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt environment is reclaimed when it

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt fails, exits without leaving choice

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt points, the alternatives are cut of

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt with the [] predicate or no choice

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt points have been created since the

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt invocation and the last subclause is

Underfull \hbox (badness 10000) in paragraph at lines 969--977
\elvtt started (tail recursion

Underfull \hbox (badness 10000) in paragraph at lines 977--983
[]\elvtt The global stack is used to store

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt terms created during Prolog's

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt execution. Terms on this stack will

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt be reclaimed by backtracking to a

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt point before the term was created or

Underfull \hbox (badness 10000) in paragraph at lines 977--983
\elvtt by garbage collection (provided the

Underfull \hbox (badness 10000) in paragraph at lines 983--988
[]\elvtt The trail stack is used to store

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt assignments during execution.

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt Entries on this stack remain alive

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt until backtracking before the point

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt of creation or the garbage collector

Underfull \hbox (badness 10000) in paragraph at lines 983--988
\elvtt determines they are nor needed any

Underfull \hbox (badness 10000) in paragraph at lines 988--995
[]\elvtt The argument stack is used to store

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt one of the intermediate code

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt interpreter's registers. The amount

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt of space needed on this stack is

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt determined entirely by the depth in

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt which terms are nested in the clauses

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt that constitute the program.

Underfull \hbox (badness 10000) in paragraph at lines 988--995
\elvtt Overflow is most likely when using

Overfull \hbox (44.33083pt too wide) in paragraph at lines 962--997
[][] 
[29] [30]) [31] (./builtin.tex
Chapter 3.
[32] [33] [34] [35] [36] [37] [38] [39] [40] [41] [42] [43] [44]
[45] [46] [47] [48] [49] [50] [51] [52] [53] [54] [55] [56] [57]
[58] [59] [60] [61] [62] [63]
Underfull \hbox (badness 10000) detected at line 224
 []
[64]
Underfull \hbox (badness 10000) detected at line 227
 []
[65]
Underfull \hbox (badness 10000) detected at line 229
 []
[66]
Underfull \hbox (badness 10000) detected at line 231
 []
[67]
Underfull \hbox (badness 10000) detected at line 233
 []
[68]
Underfull \hbox (badness 10000) detected at line 249
 []
[69]
Underfull \hbox (badness 10000) detected at line 251
 []
[70]
Underfull \hbox (badness 10000) detected at line 253
 []
[71]
Underfull \hbox (badness 10000) detected at line 256
 []
[72]
Underfull \hbox (badness 10000) detected at line 258
 []
[73] [74] [75] [76] [77] [78] [79] [80]
Underfull \hbox (badness 10000) detected at line 321
 []
[81]
Underfull \hbox (badness 10000) detected at line 324
 []
[82]
Underfull \hbox (badness 10000) detected at line 331
 []
[83] [84] [85] [86] [87] [88] [89] [90] [91] [92] [93] [94] [95]
[96] [97] [98] [99] [100] [101] [102] [103] [104] [105] [106] [107]
[108] [109] [110] [111] [112] [113] [114] [115] [116] [117] [118]
[119] [120] [121] [122] [123]
Underfull \hbox (badness 10000) in paragraph at lines 663--664
[]\elvtt This reserved name refers to the
[124] [125] [126] [127] [128] [129] [130] [131] [132]
Overfull \hbox (35.2946pt too wide) in paragraph at lines 750--753
 [] 
[133] [134] [135] [136] [137] [138] [139] [140] [141] [142] [143]
[144] [145] [146] [147] [148] [149] [150] [151] [152] [153] [154]
[155] [156] [157] [158] [159] [160] [161] [162] [163] [164] [165]
[166] [167] [168] [169] [170] [171] [172] [173] [174] [175] [176]
[177] [178] [179] [180] [181] [182] [183] [184] [185] [186] [187]
[188] [189] [190] [191] [192] [193] [194] [195] [196] [197] [198]
[199] [200] [201] [202] [203] [204] [205] [206] [207]
Underfull \hbox (badness 10000) in paragraph at lines 1179--1181
[][]\elvtt , [],

Underfull \hbox (badness 10000) in paragraph at lines 1186--1189
[][]\elvtt , [], [], =@=, [], [], [], =\=, >,
[208] [209] [210] [211] [212] [213]
Underfull \hbox (badness 10000) detected at line 1239
 []
[214]
Underfull \hbox (badness 10000) detected at line 1241
 []
[215]
Underfull \hbox (badness 10000) detected at line 1243
 []
[216]
Underfull \hbox (badness 10000) detected at line 1246
 []
[217]
Underfull \hbox (badness 10000) detected at line 1249
 []
[218]
Underfull \hbox (badness 10000) detected at line 1252
 []
[219] [220]
Underfull \hbox (badness 10000) in paragraph at lines 1273--1275
[]\elvtt Arbitrary expression, returning either a floating

Underfull \hbox (badness 10000) in paragraph at lines 1275--1277
[]\elvtt Arbitrary expression that should evaluate into an
[221]
Underfull \hbox (badness 10000) detected at line 1288
 []
[222]
Underfull \hbox (badness 10000) detected at line 1290
 []
[223]
Underfull \hbox (badness 10000) detected at line 1292
 []
[224]
Underfull \hbox (badness 10000) detected at line 1294
 []
[225]
Underfull \hbox (badness 10000) detected at line 1296
 []
[226] [227]
Underfull \hbox (badness 10000) detected at line 1300
 []
[228] [229] [230] [231] [232] [233] [234]
Underfull \hbox (badness 10000) detected at line 1323
 []
[235]
Underfull \hbox (badness 10000) detected at line 1326
 []
[236]
Underfull \hbox (badness 10000) detected at line 1328
 []
[237]
Underfull \hbox (badness 10000) detected at line 1330
 []
[238] [239]
Underfull \hbox (badness 10000) detected at line 1334
 []
[240] [241] [242] [243] [244] [245] [246] [247] [248] [249] [250]
Underfull \hbox (badness 10000) detected at line 1356
 []
[251] [252] [253] [254] [255] [256] [257] [258] [259] [260] [261]
[262] [263] [264] [265] [266] [267] [268] [269] [270] [271] [272]
[273] [274] [275] [276] [277] [278] [279] [280] [281] [282] [283]
[284] [285] [286] [287] [288] [289] [290] [291] [292] [293] [294]
[295] [296]
Underfull \hbox (badness 10000) in paragraph at lines 1610--1613
[]\elvtt where [] is an integer (1-3 digits) the

Underfull \hbox (badness 10000) in paragraph at lines 1610--1613
\elvtt character with ASCII code [] is output (NB

Underfull \hbox (badness 10000) in paragraph at lines 1629--1631
[]\elvtt put the next item as a character (i.e. it

Underfull \hbox (badness 10000) in paragraph at lines 1631--1633
[]\elvtt write the next item N times where N is the

Underfull \hbox (badness 10000) in paragraph at lines 1633--1635
[]\elvtt write the next item as a String (so it must

Underfull \hbox (badness 10000) in paragraph at lines 1637--1638
[]\elvtt write the next item Left justified in N

Underfull \hbox (badness 10000) in paragraph at lines 1638--1641
[]\elvtt write the next item Right justified in N

Underfull \hbox (badness 10000) in paragraph at lines 1638--1641
\elvtt columns. N is a decimal number with at

Underfull \hbox (badness 10000) in paragraph at lines 1638--1641
\elvtt least one digit. The item must be an atom,
[297] [298] [299] [300] [301] [302] [303] [304] [305] [306] [307]
[308] [309] [310] [311] [312] [313] [314] [315] [316] [317] [318]
[319] [320] [321] [322] [323] [324] [325] [326] [327] [328] [329]
[330] [331] [332] [333] [334] [335] [336] [337] [338] [339] [340]
[341] [342] [343] [344] [345] [346] [347] [348] [349] [350] [351]
[352] [353] [354]
Underfull \hbox (badness 10000) in paragraph at lines 2034--2037
[]\elvtt read_clause/1 (used by consult/1) warns on

Underfull \hbox (badness 10000) in paragraph at lines 2034--2037
\elvtt variables only appearing once in a term

Underfull \hbox (badness 10000) in paragraph at lines 2034--2037
\elvtt (clause) which have a name not starting with

Underfull \hbox (badness 10000) in paragraph at lines 2037--2040
[]\elvtt read/1 and derivates will produce an error

Underfull \hbox (badness 10000) in paragraph at lines 2037--2040
\elvtt message on quoted atoms or strings longer

Underfull \hbox (badness 10000) in paragraph at lines 2040--2043
[]\elvtt Accept dollar as a lower case character,

Underfull \hbox (badness 10000) in paragraph at lines 2040--2043
\elvtt thus avoiding the need for quoting atoms

Underfull \hbox (badness 10000) in paragraph at lines 2040--2043
\elvtt with dollar signs. system maintenance use

Underfull \hbox (badness 10000) in paragraph at lines 2043--2045
[]\elvtt Warn if the clauses for a predicate are not

Underfull \hbox (badness 10000) in paragraph at lines 2045--2048
[]\elvtt Read and derivates transform "..." into a

Underfull \hbox (badness 10000) in paragraph at lines 2045--2048
\elvtt prolog string instead of a list of ascii

Overfull \hbox (34.20264pt too wide) in paragraph at lines 2030--2050
 [] 
[355] [356]
Underfull \hbox (badness 10000) in paragraph at lines 2065--2066
[]\elvtt (User) cpu time since Prolog was started in

Underfull \hbox (badness 10000) in paragraph at lines 2066--2068
[]\elvtt Total number of passes via the call and redo ports

Underfull \hbox (badness 10000) in paragraph at lines 2079--2081
[]\elvtt Total number of external references in all
[357] [358] [359] [360] [361] [362] [363] [364] [365] [366] [367]
[368] [369] [370] [371] [372]
Overfull \hbox (150.26836pt too wide) in paragraph at lines 2216--2223
 [] 
[373] [374]) [375] (./module.tex
Chapter 4.
[376] [377] [378] [379] [380] [381] [382] [383] [384] [385]) [386]
(./foreign.tex
Chapter 5.
[387] [388] [389] [390] [391] [392] [393] [394] [395] [396] [397]
[398] [399] [400] [401] [402] [403] [404]
Underfull \hbox (badness 10000) in paragraph at lines 307--309
[]\elvtt An unbound variable. The value of term as

Underfull \hbox (badness 10000) in paragraph at lines 307--309
\elvtt such is a unique identifier for the

Underfull \hbox (badness 10000) in paragraph at lines 313--315
[]\elvtt A compound term. Note that a list is a

Overfull \hbox (23.79996pt too wide) in paragraph at lines 305--316
 [] 
[405] [406] [407] [408] [409] [410] [411]
Overfull \hbox (31.7353pt too wide) in paragraph at lines 361--362
[][]  
[412] [413] [414] [415] [416] [417] [418] [419] [420] [421] [422]
[423] [424] [425] [426] [427] [428] [429] [430] [431] [432] [433]
[434] [435] [436] [437] [438] [439] [440] [441] [442] [443]
Underfull \hbox (badness 10000) in paragraph at lines 622--626
[]\elvtt Halt Prolog execution. This action should

Underfull \hbox (badness 10000) in paragraph at lines 622--626
\elvtt be called rather than Unix exit() to give

Underfull \hbox (badness 10000) in paragraph at lines 622--626
\elvtt Prolog the opportunity to clean up. This

Underfull \hbox (badness 10000) in paragraph at lines 626--628
[]\elvtt Generate a Prolog abort. This call does not

Underfull \hbox (badness 10000) in paragraph at lines 628--630
[]\elvtt Create a standard Prolog break environment.

Underfull \hbox (badness 10000) in paragraph at lines 630--635
[]\elvtt The argument (a char *) is considered to be

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt hold the symbolfile for further incremental

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt loading. Should be called by user

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt applications that perform incremental

Underfull \hbox (badness 10000) in paragraph at lines 630--635
\elvtt loading as well and want to inform Prolog of

Underfull \hbox (badness 10000) in paragraph at lines 617--636
[] []

Overfull \hbox (44.60495pt too wide) in paragraph at lines 617--636
[] 
[444] [445]
Underfull \hbox (badness 10000) in paragraph at lines 654--656
[]\elvtt Return an integer holding the number of

Underfull \hbox (badness 10000) in paragraph at lines 656--658
[]\elvtt Return a char ** holding the argument vector

Underfull \hbox (badness 10000) in paragraph at lines 658--660
[]\elvtt Return a char * holding the current symbol

Underfull \hbox (badness 10000) in paragraph at lines 660--665
[]\elvtt Return the initial symbol file (before

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt loading) of Prolog. By setting the symbol

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt file to this value no name clashes can occur

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt with previously loaded foreign files (but no

Underfull \hbox (badness 10000) in paragraph at lines 660--665
\elvtt symbols can be shared with earlier loaded

Underfull \hbox (badness 10000) in paragraph at lines 652--666
[] []

Overfull \hbox (44.60495pt too wide) in paragraph at lines 652--666
[] 
[446] [447]
Underfull \hbox (badness 10000) in paragraph at lines 685--686
[]\elvtt Predicate cannot be seen in the

Underfull \hbox (badness 10000) in paragraph at lines 687--690
[]\elvtt Predicate is non-deterministic. This

Underfull \hbox (badness 10000) in paragraph at lines 687--690
\elvtt attribute is currently ignored, but

Underfull \hbox (badness 10000) in paragraph at lines 687--690
\elvtt will probably be used in future

Overfull \hbox (35.84502pt too wide) in paragraph at lines 683--692
[]  
[448] [449] [450] [451] [452] [453] [454] [455] [456]) [457] (./hack.tex
Chapter 6.
[458] [459] [460]
Underfull \hbox (badness 10000) in paragraph at lines 31--35
[]\elvtt Value is unified with an integer reference

Underfull \hbox (badness 10000) in paragraph at lines 31--35
\elvtt to the local stack frame in which execution

Underfull \hbox (badness 10000) in paragraph at lines 31--35
\elvtt is resumed if the goal associated with Frame

Underfull \hbox (badness 10000) in paragraph at lines 31--35
\elvtt fails. Fails if the frame has no

Underfull \hbox (badness 10000) in paragraph at lines 35--37
[]\elvtt Value is unified with `1' if Frame still is

Underfull \hbox (badness 10000) in paragraph at lines 35--37
\elvtt a candidate for backtracking. `0'

Underfull \hbox (badness 10000) in paragraph at lines 37--42
[]\elvtt Value is unified with the goal associated

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt with Frame. If the definition module of the

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt active predicate is not user the goal is

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt represented as module:goal. Do not

Underfull \hbox (badness 10000) in paragraph at lines 37--42
\elvtt instantiate variables in this goal unless

Underfull \hbox (badness 10000) in paragraph at lines 42--44
[]\elvtt Value is unified with the recursion level of

Underfull \hbox (badness 10000) in paragraph at lines 44--47
[]\elvtt Value is unified with an integer reference

Underfull \hbox (badness 10000) in paragraph at lines 44--47
\elvtt to the parent local stack frame of Frame.

Underfull \hbox (badness 10000) in paragraph at lines 47--49
[]\elvtt Value is unified with the context module of

Underfull \hbox (badness 10000) in paragraph at lines 49--52
[]\elvtt Value is unified with `1' if Frame is the

Underfull \hbox (badness 10000) in paragraph at lines 49--52
\elvtt top Prolog goal from a recursive call back
[461] [462] [463] [464] [465]) [466] (./summary.tex
Chapter 7.
) [467] (./online.aux (./intro.aux) (./builtin.aux) (./module.aux)
(./foreign.aux) (./hack.aux) (./summary.aux))
(see the transcript file for additional information)
Output written on online.dvi (468 pages, 255856 bytes).
Transcript written on online.log.
portray compiled, 0.03 sec, 1,236 bytes.
~/.plrc compiled, 0.05 sec, 1,944 bytes.
Failed to parse "\chapter{Predicate Summary}"
Failed to parse ""
Failed to parse "\begin{tabbing}"
Failed to parse "xxxxxxxxxxxxxxxxxxxxxxxxxxx\=\kill"
Failed to parse "\end{tabbing}"
Unidentified:                  University of Amsterdam
page(unknown, offsets(0, 1152, 1))
page(section([1], Introduction), offsets(1153, 3640, 2))
page(section([1,1], Status), offsets(3641, 4274, 2))
page(section([1,2], Should you be Using SWI-Prolog?), offsets(4275, 6846, 2))
page(section([1,3], Version 1.4 Release Notes), offsets(6847, 9191, 2))
page(section([1,3,1], Incompatible Changes), offsets(9192, 10914, 2))
page(section([1,4], Portability), offsets(10915, 11700, 2))
page(section([1,5], Acknowledgements), offsets(11701, 12536, 2))
page(section([2], Overview), offsets(12537, 12595, 2))
page(section([2,1], Starting SWI-Prolog from the Unix Shell), offsets(12596, 13691, 2))
page(section([2,1,1], Command Line Options), offsets(13692, 16865, 2))
page(section([2,2], Online Help), offsets(16866, 17049, 2))
page(predicate(help, 0, Give help on help), offsets(17050, 17089, 2))
Not a defined predicate: help/1
page(predicate(help, 1, Give help on predicates and show parts of manual), offsets(17090, 17791, 2))
Not a defined predicate: apropos/1
page(predicate(apropos, 1, Show related predicates and manual sections), offsets(17792, 18194, 2))
page(section([2,3], Query Substitutions), offsets(18195, 20433, 2))
page(section([2,3,1], Limitations of the History System), offsets(20434, 21558, 2))
page(section([2,4], Overview of the Debugger), offsets(21559, 27038, 2))
page(section([2,5], Compilation), offsets(27039, 28342, 2))
page(section([2,6], Environment Control), offsets(28343, 28369, 2))
page(predicate(please, 3, Query/change environment parameters), offsets(28370, 30002, 2))
page(section([2,7], Stand Alone Executables), offsets(30003, 30306, 2))
page(predicate(save_program, 2, Save the current program on a file), offsets(30307, 32873, 2))
page(predicate(save_program, 1, Save the current program on a file), offsets(32874, 32952, 2))
page(section([2,8], Automatic loading of libraries), offsets(32953, 35290, 2))
page(section([2,8,1], Notes on Automatic Loading), offsets(35291, 36058, 2))
page(section([2,9], Garbage Collection), offsets(36059, 37422, 2))
page(section([2,10], Syntax Notes), offsets(37423, 38107, 2))
page(section([2,11], System Limits), offsets(38108, 38129, 2))
page(section([2,11,1], Limits on Memory Areas), offsets(38130, 41454, 2))
page(section([2,11,2], Other Limits), offsets(41455, 42516, 2))
page(section([2,11,3], Reserved Names), offsets(42517, 43101, 2))
page(section([3], Built-In  Predicates), offsets(43102, 43173, 2))
page(section([3,1], Notation of Predicate Descriptions), offsets(43174, 43612, 2))
page(section([3,2], Consulting Prolog Source files), offsets(43613, 44975, 2))
page(predicate(consult, 1, Read (compile) a Prolog source file), offsets(44976, 45566, 2))
page(predicate(ensure_loaded, 1, Consult a file if that has not yet been done), offsets(45567, 45748, 2))
page(predicate(make, 0, Reconsult all changed source files), offsets(45749, 46372, 2))
page(predicate(library_directory, 1, Directories holding Prolog libraries), offsets(46373, 46665, 2))
page(predicate(source_file, 1, Examine currently loaded source files), offsets(46666, 46891, 2))
page(predicate(source_file, 2, Obtain source file of predicate), offsets(46892, 47259, 2))
page(predicate(term_expansion, 2, Convert term before compilation), offsets(47260, 47772, 2))
page(predicate(compiling, 0, Is this a compilation run?), offsets(47773, 47979, 2))
page(predicate(preprocessor, 2, Install a preprocessor before the compiler), offsets(47980, 48463, 2))
page(section([3,3], Listing Predicates and Editor Interface), offsets(48464, 49574, 2))
page(predicate(ed, 1, Edit a predicate), offsets(49575, 49752, 2))
page(predicate(ed, 0, Edit last edited predicate), offsets(49753, 49873, 2))
page(predicate(edit, 1, Edit a file), offsets(49874, 50043, 2))
page(predicate(edit, 0, Edit last edited file), offsets(50044, 50165, 2))
page(predicate(listing, 1, List predicate), offsets(50166, 50451, 2))
page(predicate(listing, 0, List program in current module), offsets(50452, 50519, 2))
page(predicate(portray_clause, 1, Pretty print a clause), offsets(50520, 50764, 2))
page(section([3,4], Verify Type of a Term), offsets(50765, 50793, 2))
page(predicate(var, 1, Type check for unbound variable), offsets(50794, 50858, 2))
page(predicate(nonvar, 1, Type check for bound term), offsets(50859, 50930, 2))
page(predicate(integer, 1, Arithmetic: round to nearest integer), offsets(50931, 50993, 2))
page(predicate(float, 1, Type check for a floating point number), offsets(50994, 51067, 2))
page(predicate(number, 1, Type check for integer or float), offsets(51068, 51156, 2))
page(predicate(atom, 1, Type check for an atom), offsets(51157, 51213, 2))
page(predicate(string, 1, Type check for string), offsets(51214, 51273, 2))
page(predicate(atomic, 1, Type check for primitive), offsets(51274, 51378, 2))
page(predicate(ground, 1, Verify term holds no unbound variables), offsets(51379, 51441, 2))
page(section([3,5], Comparison and Unification or Terms), offsets(51442, 51484, 2))
page(section([3,5,1], Standard Order of Terms), offsets(51485, 52066, 2))
page(predicate(==, 2, Identical), offsets(52067, 52189, 2))
page(predicate(\==, 2, Not identical), offsets(52190, 52249, 2))
page(predicate(=, 2, Unification), offsets(52250, 52335, 2))
page(predicate(\=, 2, Not unifyable), offsets(52336, 52393, 2))
page(predicate(=@=, 2, Structural identical), offsets(52394, 52884, 2))
page(predicate(\=@=, 2, Not structural identical), offsets(52885, 52946, 2))
page(predicate(@<, 2, Standard order smaller), offsets(52947, 53036, 2))
page(predicate(@=<, 2, Standard order smaller or equal), offsets(53037, 53160, 2))
page(predicate(@>, 2, Standard order larger), offsets(53161, 53249, 2))
page(predicate(@>=, 2, Standard order larger or equal), offsets(53250, 53372, 2))
page(section([3,6], Control Predicates), offsets(53373, 53936, 2))
page(predicate(fail, 0, Always false), offsets(53937, 53961, 2))
page(predicate(true, 0, Succeed), offsets(53962, 53989, 2))
page(predicate(repeat, 0, Succeed, leaving infinite backtrackpoints), offsets(53990, 54064, 2))
page(predicate(!, 0, Cut.  Discard choicepoints), offsets(54065, 54939, 2))
page(predicate((,), 2, Conjuction of goals), offsets(54940, 55182, 2))
page(predicate((;), 2, Disjunction of goals), offsets(55183, 55304, 2))
page(predicate((|), 2, Disjunction of goals), offsets(55305, 55410, 2))
page(predicate((->), 2, If-then-else), offsets(55411, 55595, 2))
page(predicate(\+, 1, Negation by failure (not provable)), offsets(55596, 55739, 2))
page(section([3,7], Meta-Call Predicates), offsets(55740, 56166, 2))
page(predicate(call, 1, Call a goal), offsets(56167, 56355, 2))
page(predicate(apply, 2, Call goal with additional arguments), offsets(56356, 56684, 2))
page(predicate(not, 1, Negation by failure (not provable)), offsets(56685, 56803, 2))
page(predicate(once, 1, Call a goal deterministicaly), offsets(56804, 57097, 2))
page(predicate(ignore, 1, Call the argument, but always succeed), offsets(57098, 57282, 2))
page(section([3,8], Database), offsets(57283, 58733, 2))
page(predicate(abolish, 2, Remove predicate definition from the database), offsets(58734, 59215, 2))
page(predicate(retract, 1, Remove clause from the database), offsets(59216, 59396, 2))
page(predicate(retractall, 1, Remove unifying clauses from the database), offsets(59397, 59683, 2))
page(predicate(assert, 1, Add a clause to the database), offsets(59684, 59826, 2))
page(predicate(asserta, 1, Add a clause to the database (first)), offsets(59827, 59939, 2))
page(predicate(assertz, 1, Add a clause to the database (last)), offsets(59940, 59985, 2))
page(predicate(assert, 2, Add a clause to the database), offsets(59986, 60177, 2))
page(predicate(asserta, 2, Add a clause to the database (first)), offsets(60178, 60302, 2))
page(predicate(assertz, 2, Add a clause to the database (last)), offsets(60303, 60360, 2))
page(predicate(recorda, 3, Record term in the database (first)), offsets(60361, 60569, 2))
page(predicate(recorda, 2, Record term in the database (first)), offsets(60570, 60635, 2))
page(predicate(recordz, 3, Record term in the database (last)), offsets(60636, 60767, 2))
page(predicate(recordz, 2, Record term in the database (last)), offsets(60768, 60833, 2))
page(predicate(recorded, 3, Obtain term from the database), offsets(60834, 61009, 2))
page(predicate(recorded, 2, Obtain term from the database), offsets(61010, 61077, 2))
page(predicate(erase, 1, Erase a database record or clause), offsets(61078, 61714, 2))
page(predicate(flag, 3, Simple global variable system), offsets(61715, 62105, 2))
page(section([3,9], Declaring Properties of Predicates), offsets(62106, 62649, 2))
page(predicate((dynamic), 1, Indicate predicate definition may change), offsets(62650, 63029, 2))
page(predicate((multifile), 1, Indicate distributed definition of predicate), offsets(63030, 63248, 2))
page(predicate((discontiguous), 1, Indicate distributed definition of a predicate), offsets(63249, 63427, 2))
page(predicate(index, 1, Change clause indexing), offsets(63428, 65125, 2))
page(section([3,10], Examining the Program), offsets(65126, 65155, 2))
page(predicate(current_atom, 1, Examine existing atoms), offsets(65156, 65329, 2))
page(predicate(current_functor, 2, Examine existing name/arity pairs), offsets(65330, 65469, 2))
page(predicate(current_flag, 1, Examine existing flags), offsets(65470, 65575, 2))
page(predicate(current_key, 1, Examine existing database keys), offsets(65576, 65683, 2))
page(predicate(current_predicate, 2, Examine existing predicates), offsets(65684, 65886, 2))
page(predicate(predicate_property, 2, Query predicate attributes), offsets(65887, 67956, 2))
page(predicate(dwim_predicate, 2, Find predicate in ``Do What I Mean'' sense), offsets(67957, 68509, 2))
page(predicate(clause, 2, Get clauses of a predicate), offsets(68510, 68881, 2))
page(predicate(clause, 3, Get clauses of a predicate), offsets(68882, 69155, 2))
page(section([3,11], Input and Output), offsets(69156, 69684, 2))
page(section([3,11,1], Input and Output Using Implicit Source and Destination), offsets(69685, 71634, 2))
page(predicate(see, 1, Change the current input stream), offsets(71635, 71911, 2))
page(predicate(tell, 1, Change current output stream), offsets(71912, 72191, 2))
page(predicate(append, 1, Append to a file), offsets(72192, 72385, 2))
page(predicate(seeing, 1, Query the current input stream), offsets(72386, 72466, 2))
page(predicate(telling, 1, Query current output stream), offsets(72467, 72549, 2))
page(predicate(seen, 0, Close the current input stream), offsets(72550, 72629, 2))
page(predicate(told, 0, Close current output), offsets(72630, 72711, 2))
page(section([3,11,2], Explicit Input and Output Streams), offsets(72712, 73066, 2))
page(predicate(open, 3, Open a file (creating a stream)), offsets(73067, 73666, 2))
page(predicate(open_null_stream, 1, Open a stream to discard output), offsets(73667, 73901, 2))
page(predicate(close, 1, Close stream), offsets(73902, 74123, 2))
page(predicate(current_stream, 3, Examine open streams), offsets(74124, 74443, 2))
page(predicate(stream_position, 3, Get/seek to position in file), offsets(74444, 74769, 2))
page(section([3,11,3], Switching Between Implicit and Explicit I/O), offsets(74770, 74939, 2))
page(predicate(set_input, 1, Set current input stream from a stream), offsets(74940, 75095, 2))
page(predicate(set_output, 1, Set current output stream from a stream), offsets(75096, 75170, 2))
page(predicate(current_input, 1, Get current input stream), offsets(75171, 75306, 2))
page(predicate(current_output, 1, Get the current output stream), offsets(75307, 75368, 2))
page(section([3,12], Status of Input and Output Streams), offsets(75369, 75411, 2))
page(predicate(wait_for_input, 3, Wait for input with optional timeout), offsets(75412, 76169, 2))
page(predicate(character_count, 2, Get character index on a stream), offsets(76170, 76420, 2))
page(predicate(line_count, 2, Line number on stream), offsets(76421, 76536, 2))
page(predicate(line_position, 2, Character position in line on stream), offsets(76537, 76830, 2))
page(predicate(fileerrors, 2, Do/Don't warn on file errors), offsets(76831, 77076, 2))
ERROR: No summary for tty_fold/2
page(predicate(tty_fold, 2, ), offsets(77077, 77362, 2))
page(section([3,13], Primitive Character Input and Output), offsets(77363, 77407, 2))
page(predicate(nl, 0, Generate a newline), offsets(77408, 77525, 2))
page(predicate(nl, 1, Generate a newline on a stream), offsets(77526, 77571, 2))
page(predicate(put, 1, Write a character), offsets(77572, 77735, 2))
page(predicate(put, 2, Write a character on a stream), offsets(77736, 77784, 2))
page(predicate(tab, 1, Output number of spaces), offsets(77785, 77952, 2))
page(predicate(tab, 2, Output number of spaces on a stream), offsets(77953, 78013, 2))
page(predicate(flush, 0, Output pending characters on current stream), offsets(78014, 78219, 2))
page(predicate(flush_output, 1, Output pending characters on specified stream), offsets(78220, 78328, 2))
page(predicate(ttyflush, 0, Flush output on terminal), offsets(78329, 78400, 2))
page(predicate(get0, 1, Read next character), offsets(78401, 78533, 2))
page(predicate(get0, 2, Read next character from a stream), offsets(78534, 78598, 2))
page(predicate(get, 1, Read first non-blank character), offsets(78599, 78741, 2))
page(predicate(get, 2, Read first non-blank character from a stream), offsets(78742, 78815, 2))
page(predicate(get_single_char, 1, Read next character from the terminal), offsets(78816, 79367, 2))
page(section([3,14], Term Reading and Writing), offsets(79368, 79400, 2))
page(predicate(display, 1, Write a term, ignore operators), offsets(79401, 79653, 2))
page(predicate(display, 2, Write a term, ignore operators on a stream), offsets(79654, 79708, 2))
page(predicate(displayq, 1, Write a term with quotes, ignore operators), offsets(79709, 80009, 2))
page(predicate(displayq, 2, Write a term with quotes, ignore operators on a stream), offsets(80010, 80107, 2))
page(predicate(write, 1, Write term), offsets(80108, 80213, 2))
page(predicate(write, 2, Write term to stream), offsets(80214, 80264, 2))
page(predicate(writeq, 1, Write term, insert quotes), offsets(80265, 80546, 2))
page(predicate(writeq, 2, Write term, insert quotes on stream), offsets(80547, 80616, 2))
page(predicate(print, 1, Print a term), offsets(80617, 80907, 2))
page(predicate(print, 2, Print a term on a stream), offsets(80908, 80958, 2))
page(predicate(portray, 1, Modify behaviour of print/1), offsets(80959, 81338, 2))
page(predicate(read, 1, Read Prolog term), offsets(81339, 81617, 2))
page(predicate(read, 2, Read Prolog term from stream), offsets(81618, 81668, 2))
page(predicate(read_clause, 1, Read clause), offsets(81669, 81948, 2))
page(predicate(read_clause, 2, Read clause from stream), offsets(81949, 82010, 2))
page(predicate(read_variables, 2, Read clause including variable names), offsets(82011, 82188, 2))
page(predicate(read_variables, 3, Read clause including variable names from stream), offsets(82189, 82284, 2))
ERROR: No summary for read_history/6
page(predicate(read_history, 6, ), offsets(82285, 83027, 2))
page(predicate(history_depth, 1, Number of remembered queries), offsets(83028, 83265, 2))
page(predicate(prompt, 2, Change the prompt used by read/1), offsets(83266, 83768, 2))
page(section([3,15], Analysing and Constructing Terms), offsets(83769, 83809, 2))
page(predicate(functor, 3, Get name and arity of a term or construct a term), offsets(83810, 84049, 2))
page(predicate(arg, 3, Access argument of a term), offsets(84050, 84231, 2))
page(predicate(=.., 2, Univ.  Term to list conversion), offsets(84232, 84602, 2))
page(predicate(numbervars, 4, Enumerate unbound variables of a term), offsets(84603, 85153, 2))
page(predicate(free_variables, 2, Find unbound variables in a term), offsets(85154, 85416, 2))
page(predicate(copy_term, 2, Make a copy of a term), offsets(85417, 85850, 2))
page(section([3,16], Analysing and Constructing Atoms), offsets(85851, 85891, 2))
page(predicate(name, 2, Convert between atom and list of ASCII characters), offsets(85892, 86245, 2))
page(predicate(int_to_atom, 3, Convert from integer to atom (non-decimal)), offsets(86246, 86716, 2))
page(predicate(int_to_atom, 2, Convert from integer to atom), offsets(86717, 86790, 2))
page(predicate(term_to_atom, 2, Convert between term and atom), offsets(86791, 87016, 2))
page(predicate(atom_to_term, 3, Convert between atom and term), offsets(87017, 87304, 2))
page(predicate(concat, 3, Append two atoms), offsets(87305, 87499, 2))
page(predicate(concat_atom, 2, Append a list of atoms), offsets(87500, 87775, 2))
page(predicate(atom_length, 2, Determine length of an atom), offsets(87776, 87991, 2))
page(section([3,17], Representing Text in Strings), offsets(87992, 89265, 2))
page(predicate(string_to_atom, 2, Conversion between string and atom), offsets(89266, 89472, 2))
page(predicate(string_to_list, 2, Conversion between string and list of ASCII), offsets(89473, 89638, 2))
page(predicate(string_length, 2, Determine length of a string), offsets(89639, 89865, 2))
page(predicate(substring, 4, Get part of a string), offsets(89866, 90046, 2))
page(section([3,18], Operators), offsets(90047, 90064, 2))
page(predicate(op, 3, Declare an operator), offsets(90065, 91741, 2))
page(predicate(current_op, 3, Examine current operator declaractions), offsets(91742, 91902, 2))
page(section([3,19], Arithmetic), offsets(91903, 92718, 2))
page(predicate(between, 3, Integer range checking/generating), offsets(92719, 92929, 2))
page(predicate(succ, 2, Logical integer successor relation), offsets(92930, 93053, 2))
page(predicate(plus, 3, Logical integer addition), offsets(93054, 93191, 2))
page(predicate(>, 2, Arithmetic larger), offsets(93192, 93290, 2))
page(predicate(<, 2, Arithmetic smaller), offsets(93291, 93390, 2))
page(predicate(=<, 2, Arithmetic smaller or equal), offsets(93391, 93498, 2))
page(predicate(>=, 2, Arithmetic larger or equal), offsets(93499, 93605, 2))
page(predicate(=\=, 2, Arithmetic not equal), offsets(93606, 93707, 2))
page(predicate(=:=, 2, Arithmetic equal), offsets(93708, 93801, 2))
page(predicate(is, 2, Evaluate arithmetic expression), offsets(93802, 93915, 2))
page(section([3,20], Arithmetic Functions), offsets(93916, 95120, 2))
ERROR: No summary for -/1
page(predicate(-, 1, ), offsets(95121, 95148, 2))
page(predicate(+, 2, Arithmetic: addition), offsets(95149, 95192, 2))
page(predicate(-, 2, Arithmetic: subtraction), offsets(95193, 95235, 2))
page(predicate(*, 2, Arithmetic: multiplication), offsets(95236, 95282, 2))
page(predicate(/, 2, Arithmetic: division), offsets(95283, 95325, 2))
page(predicate(mod, 2, Arithmetic: remainder of division), offsets(95326, 95403, 2))
page(predicate(//, 2, Arithmetic: Integer division), offsets(95404, 95476, 2))
Not a defined predicate: abs/1
page(predicate(abs, 1, Arithmetic: absolute value), offsets(95477, 95545, 2))
page(predicate(., 2, List operator. Also consult), offsets(95546, 95932, 2))
Not a defined predicate: random/1
page(predicate(random, 1, Arithmetic: generate random number), offsets(95933, 96112, 2))
page(predicate(integer, 1, Arithmetic: round to nearest integer), offsets(96113, 96195, 2))
Not a defined predicate: floor/1
page(predicate(floor, 1, Arithmetic: largest integer below argument), offsets(96196, 96316, 2))
Not a defined predicate: ceil/1
page(predicate(ceil, 1, Arithmetic: smallest integer larger than argument), offsets(96317, 96436, 2))
page(predicate(>>, 2, Arithmetic: bitwise right shift), offsets(96437, 96560, 2))
page(predicate(<<, 2, Arithmetic: bitwise left shift), offsets(96561, 96641, 2))
page(predicate(\/, 2, Arithmetic: bitwise or), offsets(96642, 96705, 2))
page(predicate(/\, 2, Arithmetic: bitwise and), offsets(96706, 96770, 2))
page(predicate(xor, 2, Arithmetic: exclusive or), offsets(96771, 96845, 2))
page(predicate(\, 1, Bitwise negation), offsets(96846, 96881, 2))
Not a defined predicate: sqrt/1
page(predicate(sqrt, 1, Arithmetic: square root), offsets(96882, 96928, 2))
Not a defined predicate: sin/1
page(predicate(sin, 1, Arithmetic: sine), offsets(96929, 96999, 2))
Not a defined predicate: cos/1
page(predicate(cos, 1, Arithmetic: cosine), offsets(97000, 97072, 2))
Not a defined predicate: tan/1
page(predicate(tan, 1, Arithmetic: tangent), offsets(97073, 97145, 2))
Not a defined predicate: asin/1
page(predicate(asin, 1, Arithmetic: inverse (arc) sine), offsets(97146, 97227, 2))
Not a defined predicate: acos/1
page(predicate(acos, 1, Arithmetic: inverse (arc) cosine), offsets(97228, 97311, 2))
Not a defined predicate: atan/1
page(predicate(atan, 1, Arithmetic: inverse (arc) tangent), offsets(97312, 97395, 2))
Not a defined predicate: log/1
page(predicate(log, 1, Arithmetic: natural logarithm), offsets(97396, 97447, 2))
Not a defined predicate: log10/1
page(predicate(log10, 1, Arithmetic: 10 base logarithm), offsets(97448, 97501, 2))
Not a defined predicate: exp/1
page(predicate(exp, 1, Arithmetic: exponent (base $e$)), offsets(97502, 97547, 2))
page(predicate(^, 2, Existential quantification (bagof/3, setof/3)), offsets(97548, 97603, 2))
page(predicate(pi, 0, Arithmetic: mathematical constant), offsets(97604, 97670, 2))
page(predicate(e, 0, Arithmetic: mathematical constant), offsets(97671, 97735, 2))
page(predicate(cputime, 0, Arithmetic: get CPU time), offsets(97736, 97895, 2))
page(section([3,21], List Manipulation), offsets(97896, 97921, 2))
page(predicate(is_list, 1, Type check for a list), offsets(97922, 98036, 2))
page(predicate(proper_list, 1, Type check for list), offsets(98037, 98246, 2))
page(predicate(append, 3, Concatenate lists), offsets(98247, 98445, 2))
page(predicate(member, 2, Element is member of a list), offsets(98446, 98602, 2))
page(predicate(memberchk, 2, Deterministic member/2), offsets(98603, 98685, 2))
page(predicate(delete, 3, Delete all matching members from a list), offsets(98686, 98823, 2))
page(predicate(select, 3, Select element of a list), offsets(98824, 99167, 2))
page(predicate(nth0, 3, N-th element of a list (0-based)), offsets(99168, 99289, 2))
page(predicate(nth1, 3, N-th element of a list (1-based)), offsets(99290, 99411, 2))
page(predicate(last, 2, Last element of a list), offsets(99412, 99493, 2))
page(predicate(reverse, 2, Inverse the order of the elements in a list), offsets(99494, 99620, 2))
page(predicate(flatten, 2, Transform nested list into flat list), offsets(99621, 99911, 2))
page(predicate(length, 2, Length of a list), offsets(99912, 100060, 2))
page(predicate(merge, 3, Merge two sorted lists), offsets(100061, 100312, 2))
page(section([3,22], Set Manipulation), offsets(100313, 100337, 2))
page(predicate(is_set, 1, Type check for a set), offsets(100338, 100434, 2))
page(predicate(list_to_set, 2, Remove duplicates), offsets(100435, 100578, 2))
page(predicate(intersection, 3, Set intersection), offsets(100579, 100763, 2))
page(predicate(subtract, 3, Delete elements that do not meet condition), offsets(100764, 100897, 2))
page(predicate(union, 3, Union of two sets), offsets(100898, 101065, 2))
page(predicate(subset, 2, Generate/check subset relation), offsets(101066, 101158, 2))
page(predicate(merge_set, 3, Merge two sorted sets), offsets(101159, 101396, 2))
page(section([3,23], Sorting Lists), offsets(101397, 101418, 2))
page(predicate(sort, 2, Sort elements in a list), offsets(101419, 101665, 2))
page(predicate(msort, 2, Sort, do not remove duplicates), offsets(101666, 101748, 2))
page(predicate(keysort, 2, Sort, unsing a key), offsets(101749, 102212, 2))
page(predicate(predsort, 3, Sort, using a predicate to determine the order), offsets(102213, 102470, 2))
page(section([3,24], Finding all Solutions to a Goal), offsets(102471, 102510, 2))
page(predicate(findall, 3, Find all solutions to a goal), offsets(102511, 102886, 2))
page(predicate(bagof, 3, Find all solutions to a goal), offsets(102887, 103897, 2))
page(predicate(setof, 3, Find all unique solutions to a goal), offsets(103898, 104047, 2))
page(section([3,25], Invoking Predicates on all Members of a List), offsets(104048, 104477, 2))
page(predicate(checklist, 2, Invoke goal on all members of a list), offsets(104478, 104649, 2))
page(predicate(maplist, 3, Transform all elements of a list), offsets(104650, 104828, 2))
page(predicate(sublist, 3, Determine elements that meet condition), offsets(104829, 104942, 2))
page(section([3,26], Forall), offsets(104943, 104957, 2))
page(predicate(forall, 2, Prove goal for all solutions of another goal), offsets(104958, 105312, 2))
page(section([3,27], Formatted Write), offsets(105313, 105786, 2))
page(section([3,27,1], Writef), offsets(105787, 105803, 2))
page(predicate(write_ln, 1, Write term, followed by a newline), offsets(105804, 105857, 2))
page(predicate(writef, 1, Formatted write), offsets(105858, 105910, 2))
page(predicate(writef, 2, Formatted write), offsets(105911, 107846, 2))
page(predicate(swritef, 3, Formatted write on a string), offsets(107847, 108090, 2))
page(predicate(swritef, 2, Formatted write on a string), offsets(108091, 108166, 2))
page(section([3,27,2], Format), offsets(108167, 108183, 2))
page(predicate(format, 1, Produce formatted output), offsets(108184, 108257, 2))
page(predicate(format, 2, Produce formatted output on a stream), offsets(108258, 112437, 2))
page(predicate(sformat, 3, Format on a string), offsets(112438, 112685, 2))
page(predicate(sformat, 2, Format on a string), offsets(112686, 112763, 2))
page(section([3,27,3], Programming Format), offsets(112764, 112792, 2))
page(predicate(format_predicate, 2, Program format/[1,2]), offsets(112793, 113794, 2))
page(section([3,28], Terminal Control), offsets(113795, 114021, 2))
page(predicate(tty_get_capability, 3, Get terminal parameter), offsets(114022, 114536, 2))
page(predicate(tty_goto, 2, Goto position on screen), offsets(114537, 114730, 2))
page(predicate(tty_put, 2, Write control string to terminal), offsets(114731, 115070, 2))
page(predicate(set_tty, 2, Set `tty' stream), offsets(115071, 115216, 2))
page(section([3,29], Unix Interaction), offsets(115217, 115241, 2))
page(predicate(shell, 2, Execute Unix command), offsets(115242, 115427, 2))
page(predicate(shell, 1, Execute Unix command), offsets(115428, 115485, 2))
page(predicate(shell, 0, Execute interactive Unix subshell), offsets(115486, 115610, 2))
page(predicate(getenv, 2, Get Unix environment variable), offsets(115611, 115736, 2))
page(predicate(setenv, 2, Set Unix environment variable), offsets(115737, 115958, 2))
page(predicate(unsetenv, 1, Delete Unix environment variable), offsets(115959, 116036, 2))
page(predicate(time, 6, Get current time and date), offsets(116037, 116368, 2))
page(predicate(get_time, 1, Get current time), offsets(116369, 116598, 2))
page(section([3,30], Unix File System Interaction), offsets(116599, 116635, 2))
ERROR: No summary for access_file/2
page(predicate(access_file, 2, ), offsets(116636, 116880, 2))
page(predicate(exists_file, 1, Check existence of Unix file), offsets(116881, 117014, 2))
page(predicate(exists_directory, 1, Check existence of Unix directory), offsets(117015, 117174, 2))
page(predicate(delete_file, 1, Unlink a file from the Unix file system), offsets(117175, 117239, 2))
page(predicate(rename_file, 2, Change name of Unix file), offsets(117240, 117352, 2))
page(predicate(size_file, 2, Get size of a file in characters), offsets(117353, 117431, 2))
page(predicate(time_file, 2, Get last modification time of file), offsets(117432, 117763, 2))
page(predicate(absolute_file_name, 2, Get absolute Unix path name), offsets(117764, 118137, 2))
page(predicate(expand_file_name, 2, Wildcard expansion of file names), offsets(118138, 118629, 2))
page(predicate(chdir, 1, Change working directory), offsets(118630, 118683, 2))
page(section([3,31], User Toplevel Manipulation), offsets(118684, 118718, 2))
page(predicate(break, 0, Start interactive toplevel), offsets(118719, 119213, 2))
page(predicate(abort, 0, Abort execution, return to top level), offsets(119214, 119764, 2))
page(predicate(halt, 0, Exit from Prolog), offsets(119765, 119937, 2))
page(predicate(prolog, 0, Run interactive toplevel), offsets(119938, 120063, 2))
page(section([3,32], Creating a Protocol of the Unser Interaction), offsets(120064, 120296, 2))
page(predicate(protocol, 1, Make a log of the user interaction), offsets(120297, 120452, 2))
page(predicate(protocola, 1, Append log of the user interaction to file), offsets(120453, 120551, 2))
page(predicate(noprotocol, 0, Disable logging of user interaction), offsets(120552, 120661, 2))
page(predicate(protocolling, 1, On what file is user interaction logged), offsets(120662, 120814, 2))
page(section([3,33], Debugging and Tracing Programs), offsets(120815, 120853, 2))
page(predicate(trace, 0, Start the tracer), offsets(120854, 120930, 2))
page(predicate(tracing, 0, Query status of the tracer), offsets(120931, 121049, 2))
page(predicate(notrace, 0, Stop tracing), offsets(121050, 121129, 2))
page(predicate(debug, 0, Test for debugging mode), offsets(121130, 121179, 2))
page(predicate(nodebug, 0, Disable debugging), offsets(121180, 121248, 2))
page(predicate(debugging, 0, Show debugger status), offsets(121249, 121325, 2))
page(predicate(spy, 1, Force tracer on specified predicate), offsets(121326, 121441, 2))
page(predicate(nospy, 1, Remove spy point), offsets(121442, 121544, 2))
page(predicate(nospyall, 0, Remove all spy points), offsets(121545, 121607, 2))
page(predicate(leash, 1, Change ports visited by the tracer), offsets(121608, 122097, 2))
page(predicate(visible, 1, Set ports that are visible in the tracer), offsets(122098, 122237, 2))
page(predicate(unknown, 2, Trap undefined predicates), offsets(122238, 122685, 2))
page(predicate(style_check, 1, Change level of warnings), offsets(122686, 124305, 2))
page(section([3,34], Obtaining Runtime Statistics), offsets(124306, 124342, 2))
page(predicate(statistics, 2, Obtain collected statistics), offsets(124343, 125473, 2))
page(predicate(statistics, 0, Show execution statistics), offsets(125474, 125558, 2))
page(predicate(time, 1, Determine time needed to execute goal), offsets(125559, 125763, 2))
page(section([3,35], Finding Performance Bottlenecks), offsets(125764, 126775, 2))
page(predicate(profile, 3, Obtain execution statistics), offsets(126776, 127289, 2))
page(predicate(show_profile, 1, Show results of the profiler), offsets(127290, 127515, 2))
page(predicate(profiler, 2, Obtain/change status of the profiler), offsets(127516, 128423, 2))
page(predicate(reset_profiler, 0, Clear statistics obtained by the profiler), offsets(128424, 128510, 2))
page(predicate(profile_count, 3, Obtain profile results on a predicate), offsets(128511, 129042, 2))
page(section([3,36], Memory Management), offsets(129043, 129253, 2))
page(predicate(garbage_collect, 0, Invoke the garbage collector), offsets(129254, 129634, 2))
page(predicate(limit_stack, 2, Limit stack expansion), offsets(129635, 130154, 2))
page(predicate(trim_stacks, 0, Release unused memory resources), offsets(130155, 130500, 2))
page(section([3,37], Miscellaneous), offsets(130501, 130522, 2))
page(predicate(dwim_match, 2, Atoms match in ``Do What I Mean'' sense), offsets(130523, 131057, 2))
page(predicate(dwim_match, 3, Atoms match in ``Do What I Mean'' sense), offsets(131058, 131376, 2))
page(predicate(wildcard_match, 2, Csh(1) style wildcard match), offsets(131377, 131962, 2))
page(predicate(gensym, 2, Generate unique atoms from a base), offsets(131963, 132318, 2))
page(predicate(sleep, 1, Suspend execution for specified time), offsets(132319, 132708, 2))
page(section([4], Dividing  a  Progam  in  Source  Modules), offsets(132709, 133366, 2))
page(section([4,1], Handling Meta-Predicates with Modules), offsets(133367, 135243, 2))
page(section([4,2], Creating a Source Module), offsets(135244, 136729, 2))
Not a defined predicate: module/2
page(predicate(module, 2, Declare a module), offsets(136730, 136993, 2))
page(predicate(use_module, 1, Import a module), offsets(136994, 137493, 2))
page(predicate(use_module, 2, Import predicates from a module), offsets(137494, 137929, 2))
page(predicate((module_transparent), 1, Indicate module based meta predicate), offsets(137930, 138164, 2))
page(predicate(context_module, 1, Get context module of current goal), offsets(138165, 138297, 2))
page(predicate(export, 1, Export a predicate from a module), offsets(138298, 138651, 2))
page(predicate(import, 1, Import a predicate from a module), offsets(138652, 138982, 2))
page(section([4,3], Compatibility of the Module System), offsets(138983, 142332, 2))
page(section([5], Foreign  Language  Interface), offsets(142333, 143355, 2))
page(section([5,1], Portability of the Foreign Interface), offsets(143356, 143956, 2))
page(section([5,2], Overview of the Interface), offsets(143957, 145494, 2))
page(section([5,3], Loading Foreign Modules), offsets(145495, 145525, 2))
page(predicate(load_foreign, 2, Load foreign (C) module), offsets(145526, 146511, 2))
page(predicate(load_foreign, 5, Load foreign (C) module), offsets(146512, 147418, 2))
page(predicate(foreign_file, 1, Examine loaded foreign files), offsets(147419, 147525, 2))
page(section([5,4], Interface Data types), offsets(147526, 149685, 2))
page(section([5,5], The Foreign Include File), offsets(149686, 149717, 2))
page(section([5,5,1], Argument Passing and Control), offsets(149718, 150127, 2))
page(function(PL_succeed), offsets(150128, 150221, 2))
page(function(PL_fail), offsets(150222, 150324, 2))
page(section([5,5,1,1], Non-deterministic Foreign Predicates), offsets(150325, 152325, 2))
page(function(PL_retry), offsets(152326, 152737, 2))
page(function(PL_foreign_control), offsets(152738, 153040, 2))
page(function(PL_foreign_context), offsets(153041, 153346, 2))
Unidentified: Note:  If a non-deterministic foreign function returns using PL_succeed or
page(unknown, offsets(153347, 154316, 2))
page(section([5,5,2], Analysing Terms via the Foreign Interface), offsets(154317, 154831, 2))
page(function(PL_type), offsets(154832, 155607, 2))
page(function(PL_atomic), offsets(155608, 155776, 2))
page(function(PL_integer_value), offsets(155777, 155892, 2))
page(function(PL_float_value), offsets(155893, 156007, 2))
page(function(PL_atom_value), offsets(156008, 156321, 2))
page(function(PL_string_value), offsets(156322, 156776, 2))
page(function(PL_functor), offsets(156777, 157240, 2))
page(function(PL_functor_name), offsets(157241, 157502, 2))
page(function(PL_functor_arity), offsets(157503, 157595, 2))
page(function(PL_arg), offsets(157596, 157801, 2))
Unidentified: Figure 5.2 shows a definition of display/1 to illustrate the described
page(unknown, offsets(157802, 159069, 2))
page(section([5,5,3], Instantiating and Constructing Terms), offsets(159070, 159319, 2))
page(function(PL_new_term), offsets(159320, 159579, 2))
page(function(PL_new_atom), offsets(159580, 159720, 2))
page(function(PL_new_string), offsets(159721, 159882, 2))
page(function(PL_new_integer), offsets(159883, 160048, 2))
page(function(PL_new_float), offsets(160049, 160146, 2))
page(function(PL_new_functor), offsets(160147, 160411, 2))
page(function(PL_unify), offsets(160412, 160494, 2))
page(function(PL_unify_atomic), offsets(160495, 160572, 2))
page(function(PL_unify_functor), offsets(160573, 161084, 2))
Unidentified: An example of using these functions is shown in figure 5.3.
page(unknown, offsets(161085, 161147, 2))
page(section([5,5,4], Calling Prolog from C), offsets(161148, 161582, 2))
page(function(PL_call), offsets(161583, 161937, 2))
page(section([5,5,5], Discarding Data), offsets(161938, 162118, 2))
page(function(PL_mark), offsets(162119, 162197, 2))
page(function(PL_bktrk), offsets(162198, 162371, 2))
Unidentified: It is not necessary to call PL_bktrk() for each PL_mark().  The user
page(unknown, offsets(162372, 163360, 2))
page(section([5,5,6], Foreign Code and Modules), offsets(163361, 163511, 2))
page(function(PL_context), offsets(163512, 163642, 2))
page(function(PL_strip_module), offsets(163643, 164428, 2))
page(function(PL_module_name), offsets(164429, 164506, 2))
page(function(PL_new_module), offsets(164507, 164632, 2))
page(section([5,5,7], Catching Unix Signals), offsets(164633, 165053, 2))
page(function(PL_signal), offsets(165054, 165374, 2))
page(section([5,5,8], Errors and warnings), offsets(165375, 165503, 2))
page(function(PL_warning), offsets(165504, 165803, 2))
page(function(PL_fatal_error), offsets(165804, 165944, 2))
page(section([5,5,9], Environment Control from Foreign Code), offsets(165945, 165991, 2))
page(function(PL_action), offsets(165992, 167341, 2))
page(section([5,5,10], Querying Prolog), offsets(167342, 167367, 2))
page(function(PL_query), offsets(167368, 168486, 2))
page(section([5,5,11], Registering Foreign Predicates), offsets(168487, 168527, 2))
page(function(PL_register_foreign), offsets(168528, 169350, 2))
page(section([5,6], Example of Using the Foreign Interface), offsets(169351, 169618, 2))
page(section([5,6,1], C-Source file (lowercase.c)), offsets(169619, 170403, 2))
page(section([5,6,2], Compiling and Loading Foreign Code), offsets(170404, 170853, 2))
page(section([5,7], Notes on Using Foreign Code), offsets(170854, 170888, 2))
page(section([5,7,1], Garbage Collection and Foreign Code), offsets(170889, 171228, 2))
page(section([5,7,2], Memory Allocation), offsets(171229, 171492, 2))
page(section([5,7,3], Debugging Foreign Code), offsets(171493, 173210, 2))
page(section([5,7,4], Name Conflicts in C modules), offsets(173211, 173806, 2))
page(section([5,7,5], Compatibility of the Foreign Interface), offsets(173807, 174773, 2))
page(section([6], Hackers  corner), offsets(174774, 175226, 2))
page(section([6,1], Examining the Environment Stack), offsets(175227, 175265, 2))
page(predicate(prolog_current_frame, 1, Reference to goal's environment stack), offsets(175266, 175579, 2))
page(predicate(prolog_frame_attribute, 3, Obtain information on a goal environment), offsets(175580, 177388, 2))
page(section([6,2], Intercepting the Tracer), offsets(177389, 177419, 2))
page(predicate(prolog_trace_interception, 3, Intercept the Prolog tracer), offsets(177420, 178937, 2))
page(predicate(prolog_skip_level, 2, Indicate deepest recursion to trace), offsets(178938, 179499, 2))
page(section([6,3], Exception Handling), offsets(179500, 179838, 2))
page(predicate(exception, 3, Handle runtime exceptions), offsets(179839, 181216, 2))
page(section([7], Predicate  Summary), offsets(181217, 198679, 2))
