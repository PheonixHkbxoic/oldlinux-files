%!PS-Adobe-3.0
%%Creator: groff version 1.03
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.03 0
%%Pages: 28
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.03 0

/setpacking where {
	pop
	currentpacking
	true setpacking
} if

/grops 120 dict dup begin 

% The ASCII code of the space character.
/SC 32 def

/A /show load def
/B { 0 SC 3 -1 roll widthshow } bind def
/C { 0 exch ashow } bind def
/D { 0 exch 0 SC 5 2 roll awidthshow } bind def
/E { 0 rmoveto show } bind def
/F { 0 rmoveto 0 SC 3 -1 roll widthshow } bind def
/G { 0 rmoveto 0 exch ashow } bind def
/H { 0 rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/I { 0 exch rmoveto show } bind def
/J { 0 exch rmoveto 0 SC 3 -1 roll widthshow } bind def
/K { 0 exch rmoveto 0 exch ashow } bind def
/L { 0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/M { rmoveto show } bind def
/N { rmoveto 0 SC 3 -1 roll widthshow } bind def
/O { rmoveto 0 exch ashow } bind def
/P { rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/Q { moveto show } bind def 
/R { moveto 0 SC 3 -1 roll widthshow } bind def
/S { moveto 0 exch ashow } bind def
/T { moveto 0 exch 0 SC 5 2 roll awidthshow } bind def

% name size font SF -

/SF {
	findfont exch
	[ exch dup 0 exch 0 exch neg 0 0 ] makefont
	dup setfont
	[ exch /setfont cvx ] cvx bind def
} bind def

% name a c d font MF -

/MF {
	findfont
	[ 5 2 roll
	0 3 1 roll % b
	neg 0 0 ] makefont
	dup setfont
	[ exch /setfont cvx ] cvx bind def
} bind def

/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def

% BP -

/BP {
	/level0 save def
	1 setlinecap
	1 setlinejoin
	72 RES div dup scale
	LS {
		90 rotate
	} {
		0 PL translate
	} ifelse
	1 -1 scale
} bind def

/EP {
	level0 restore
	showpage
} bind def


% centerx centery radius startangle endangle DA -

/DA {
	newpath arcn stroke
} bind def

% x y SN - x' y'
% round a position to nearest (pixel + (.25,.25))

/SN {
	transform 
	.25 sub exch .25 sub exch
	round .25 add exch round .25 add exch
	itransform
} bind def
	
% endx endy startx starty DL -
% we round the endpoints of the line, so that parallel horizontal
% and vertical lines will appear even

/DL {
	SN
	moveto
	SN
	lineto stroke
} bind def

% centerx centery radius DC -

/DC {
	newpath 0 360 arc closepath
} bind def


/TM matrix def

%  width height centerx centery DE -

/DE {
	TM currentmatrix pop
	translate scale newpath 0 0 .5 0 360 arc closepath
	TM setmatrix
} bind def

% these are for splines

/RC /rcurveto load def
/RL /rlineto load def
/ST /stroke load def
/MT /moveto load def
/CL /closepath load def

% fill the last path

% amount FL -

/FL {
	currentgray exch setgray fill setgray
} bind def

% fill with the ``current color''

/BL /fill load def

/LW /setlinewidth load def
% new_font_name encoding_vector old_font_name RE -

/RE {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def

/DEFS 0 def

% hpos vpos EBEGIN -

/EBEGIN {
	moveto
	DEFS begin
} bind def

/EEND /end load def

/CNT 0 def
/level1 0 def

% llx lly newwid wid newht ht newllx newlly PBEGIN -

/PBEGIN {
	/level1 save def
	translate
	div 3 1 roll div exch scale
	neg exch neg exch translate
	% set the graphics state to default values
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {
		pop
		false setstrokeadjust
	} if
	/setoverprint where {
		pop
		false setoverprint
	} if
	newpath
	/CNT countdictstack def
	/showpage {} def
} bind def

/PEND {
	clear
	countdictstack CNT sub { end } repeat
	level1 restore
} bind def

end def

/setpacking where {
	pop
	setpacking
} if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Symbol
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72 def/PL
841.89 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron/scaron
/zcaron/Ydieresis/trademark/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space
/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft
/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four
/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C
/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash
/bracketright/circumflex/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q
/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase
/guillemotleft/guillemotright/bullet/florin/fraction/perthousand/dagger
/daggerdbl/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guilsinglleft/logicalnot/minus
/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guilsinglright
/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 9/Times-Bold@0 SF(NAME)72 84 Q F0
(gcc, g++ \255 GNU project C and C++ Compiler \(v2 preliminary\))108 96 Q F1
(SYNOPSIS)72 112.8 Q F0(gcc)108 124.8 Q/F2 10/Times-Bold@0 SF([)2.5 E/F3 10
/Times-Italic@0 SF(option)A F0(|)2.71 E F3(\214lename)4.36 E F0 -.834(]. . .)
2.68 F(g++)108 136.8 Q F2([)2.5 E F3(option)A F0(|)2.71 E F3(\214lename)4.36 E
F0 -.834(]. . .)2.68 F F1 -.999(WA)72 153.6 S(RNING).999 E F0 .392(The informa\
tion in this man page is an extract from the full documentation of the GNU C c\
ompiler)108 165.6 R 2.892(,a)-.4 G .392(nd is)520.438 165.6 R
(limited to the meaning of the options.)108 177.6 Q .007
(For complete, current documentation, refer to the Info \214le `)108 201.6 R F2
(gcc)1.666 E F0 2.507('o)1.666 G 2.507(rt)373.561 201.6 S .007(he manual)
382.178 201.6 R F3 .007(Using and Porting GNU CC)2.507 F(\(for version 2.0\))
108 213.6 Q F0 5(.B)C(oth are made from the T)187.44 213.6 Q
(exinfo source \214le)-.7 E F2(gcc.texinfo)2.5 E F0(.)A F1(DESCRIPTION)72 230.4
Q F0 .353(The C and C++ compilers are integrated.)108 242.4 R .352
(Both process input \214les through one or more of four stages: pre-)5.352 F
.47(processing, compilation, assembly)108 254.4 R 2.971(,a)-.65 G .471
(nd linking.)255.971 254.4 R .471(Source \214lename suf)5.471 F .471
(\214xes identify the source language, but)-.18 F
(which name you use for the compiler governs default assumptions:)108 266.4 Q
F2(gcc)108 283.2 Q F0(assumes preprocessed \()144 283.2 Q F2(.i)A F0 2.5<298c>C
(les are C and assumes C style linking.)254.53 283.2 Q F2(g++)108 300 Q F0
(assumes preprocessed \()144 300 Q F2(.i)A F0 2.5<298c>C
(les are C++ and assumes C++ style linking.)254.53 300 Q(Suf)108 316.8 Q(\214x\
es of source \214le names indicate the language and kind of processing to be d\
one:)-.18 E F2(.c)108 340.8 Q F0 2.5(Cs)134.38 340.8 S
(ource; preprocess, compile, assemble)147.44 340.8 Q F2(.C)108 352.8 Q F0
(C++ source; preprocess, compile, assemble)137.16 352.8 Q F2(.cc)108 364.8 Q F0
(C++ source; preprocess, compile, assemble)138.82 364.8 Q F2(.cxx)108 376.8 Q
F0(C++ source; preprocess, compile, assemble)144.38 376.8 Q F2(.m)108 388.8 Q
F0(Objective-C source; preprocess, compile, assemble)138.27 388.8 Q F2(.i)108
400.8 Q F0(preprocessed C or C++; compile, assemble)132.72 400.8 Q F2(.s)108
412.8 Q F0(Assembler source; assemble)133.83 412.8 Q F2(.S)108 424.8 Q F0
(Assembler source; preprocess, assemble)135.5 424.8 Q F2(.h)108 436.8 Q F0
(Preprocessor \214le; not usually named on command line)135.5 436.8 Q F3(??)108
460.8 Q F0(Other \(unrecognized\) \214les passed to linker)137.44 460.8 Q(.)
-.55 E(Common cases:)127.44 472.8 Q F2(.o)108 484.8 Q F0(Object \214le)134.94
484.8 Q F2(.a)108 496.8 Q F0(Archive \214le)134.94 496.8 Q .3
(Linking is always the last stage unless you use one of the)108 520.8 R F2
<ad63>2.8 E F0(,)A F2<ad53>2.799 E F0 2.799(,o)C(r)379.688 520.8 Q F2<ad45>
2.799 E F0 .299(options to avoid it \(or unless com-)2.799 F 1.549
(pilation errors stop the whole process\).)108 532.8 R 1.549
(For the link stage, all)6.549 F F2(.o)4.05 E F0 1.55
(\214les corresponding to source \214les,)4.05 F F2<ad6c>4.05 E F0 .658
(libraries, unrecognized \214lenames \(including named)108 544.8 R F2(.o)3.158
E F0 .657(object \214les and)3.157 F F2(.a)3.157 E F0 .657
(archives\) are passed to the linker)3.157 F(in command-line order)108 556.8 Q
(.)-.55 E F1(OPTIONS)72 585.6 Q F0(Options must be separate: `)108 597.6 Q F2
(\255dr)1.666 E F0 2.5('i)1.666 G 2.5(sq)245.072 597.6 S(uite dif)256.462 597.6
Q(ferent from `)-.18 E F2<ad6420ad72>1.666 E F0('.)4.166 E 2.726(Most `)108
621.6 R F2<ad66>1.666 E F0 5.226('a)1.666 G 2.727(nd `)162.474 621.6 R F2<ad57>
1.666 E F0 5.227('o)1.666 G 2.727(ptions have two contrary forms:)213.62 621.6
R F2<ad66>5.227 E F3(name).27 E F0(and)5.227 E F2<ad666e6fad>5.227 E F3(name)
.27 E F0(\(or)5.227 E F2<ad57>5.227 E F3(name).27 E F0(and)5.227 E F2
<ad576e6fad>108 633.6 Q F3(name).27 E F0
(\). Only the non-default forms are shown here.)A
(Here is a summary of all the options, grouped by type.)108 657.6 Q
(Explanations are in the following sections.)5 E F2(Overall Options)108 686.4 Q
F0<ad6320ad5320ad4520ad6f>144 698.4 Q F3(\214le)4.36 E F0
(\255pipe \255v \255vpath \255vspec \255x)2.5 E F3(language)2.59 E F0(GNU T)72
768 Q 163.32(ools 27dec1991)-.7 F(1)535 768 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(Language Options)108 84 Q F0(\255ansi\
 \255fall\255virtual \255fcond\255mismatch \255fdollars\255in\255identi\214ers\
 \255fenum\255int\255equiv \255fno\255asm)144 96 Q(\255fno\255builtin \255fno\
\255strict\255prototype \255fsigned\255bit\214elds \255fsigned\255char \255fth\
is\255is\255variable)144 108 Q(\255funsigned\255bit\214elds \255funsigned\255c\
har \255fwritable\255strings \255traditional \255traditional\255cpp \255trigra\
phs)144 120 Q F1 -.55(Wa)108 148.8 S(rning Options).55 E F0
(\255fsyntax\255only \255pedantic \255pedantic\255errors \255w \255W \255W)144
160.8 Q(all \255W)-.8 E(aggregate\255return \255Wcast\255align)-.8 E
(\255Wcast\255qual \255Wcomment \255Wconversion \255W)144 172.8 Q
(enum\255clash \255W)-.8 E(error \255Wformat \255W)-.8 E(id\255clash\255)-.4 E
/F2 10/Times-Italic@0 SF(len).09 E F0<ad57>144 184.8 Q(implicit \255Wmissing\
\255prototypes \255Wno\255parentheses \255Wpointer\255arith \255W)-.4 E
(return\255type)-.4 E(\255Wshadow \255Wstrict\255prototypes \255Wswitch \255Wt\
raditional \255Wtrigraphs \255W)144 196.8 Q(uninitialized)-.4 E<ad57>144 208.8
Q(unused \255Wwrite\255strings)-.4 E F1(Debugging Options)108 237.6 Q F0
<ad6120ad64>144 249.6 Q F2(letters).09 E F0(\255fpretend\255\215oat \255g \255\
gdbx \255gdwarf \255ggdb \255gsdb \255p \255pg \255save\255temps)2.5 E F1
(Optimization Options)108 278.4 Q F0(\255fcaller\255saves \255fcse\255follow\
\255jumps \255fdelayed\255branch \255felide\255constructors)144 290.4 Q
(\255fexpensive\255optimizations \255f)144 302.4 Q(\215oat\255store \255f)-.18
E(force\255addr \255f)-.18 E
(force\255mem \255\214nline \255\214nline\255functions)-.18 E(\255fkeep\255inl\
ine\255functions \255fmemoize\255lookups \255fno\255default\255inline \255fno\
\255defer\255pop)144 314.4 Q(\255fno\255function\255cse \255fomit\255frame\255\
pointer \255frerun\255cse\255after\255loop \255fschedule\255insns)144 326.4 Q(\
\255fschedule\255insns2 \255fstrength\255reduce \255fthread\255jumps \255funro\
ll\255all\255loops \255funroll\255loops \255O \255O2)144 338.4 Q F1(Pr)108
367.2 Q(epr)-.18 E(ocessor Options)-.18 E F0(\255C \255dD \255dM \255dN \255D)
144 379.2 Q F2(macr).39 E(o)-.37 E F0 1.666([=).17 G F2(defn)-1.316 E F0 2.5
<5dad>1.876 G 2.5<45ad>301.712 379.2 S 2.5<48ad>315.962 379.2 S(i)331.322 379.2
Q F2(\214le)4.36 E F0(\255M \255MD \255MM \255MMD \255nostdinc \255P)2.5 E
<ad55>144 391.2 Q F2(macr).39 E(o)-.37 E F0(\255undef)2.5 E F1(Linker Options)
108 420 Q F0(\255dynamic \255l)144 432 Q F2(library).09 E F0
(\255nostdlib \255static)2.5 E F1(Dir)108 460.8 Q(ectory Options)-.18 E F0
<ad42>144 472.8 Q F2(pr)1.25 E(e\214x)-.37 E F0<ad49>2.5 E F2(dir).35 E F0
<ad49ad20ad4c>2.5 E F2(dir).35 E F1 -.92(Ta)108 501.6 S(rget Options).92 E F0
<ad62>144 513.6 Q F2(machine)5.39 E F0<ad56>2.5 E F2(version)2.76 E F1
(Machine Dependent Options)108 542.4 Q F2(M680x0 Options)144 554.4 Q F0(\255m6\
8000 \255m68020 \255m68881 \255mbit\214eld \255mc68000 \255mc68020 \255mfpa \
\255mnobit\214eld \255mrtd)144 566.4 Q(\255mshort \255msoft\255\215oat)144
578.4 Q F2 -.74(VA)144 602.4 S 2.5(XO).74 G(ptions)171.31 602.4 Q F0
(\255mg \255mgnu \255munix)144 614.4 Q F2(SP)144 638.4 Q(ARC Options)-1.29 E F0
(\255mfpu \255mno\255epilogue)144 650.4 Q F2(Convex Options)144 674.4 Q F0
(\255mar)144 686.4 Q(gcount \255mc1 \255mc2 \255mnoar)-.18 E(gcount)-.18 E F2
(AMD29K Options)144 710.4 Q F0
(\255m29000 \255m29050 \255mbw \255mdw \255mkernel\255registers \255mlar)144
722.4 Q(ge \255mnbw \255mnodw \255msmall)-.18 E(GNU T)72 768 Q 163.32
(ools 27dec1991)-.7 F(2)535 768 Q EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F(\255mstack\255check \255muser\255registers)144 84 Q/F1 10
/Times-Italic@0 SF(M88K Options)144 108 Q F0
(\255mbig\255pic \255mcheck\255zero\255division \255mhandle\255lar)144 120 Q
(ge\255shift \255midentify\255revision)-.18 E(\255mno\255check\255zero\255divi\
sion \255mno\255ocs\255debug\255info \255mno\255ocs\255frame\255position)144
132 Q(\255mno\255optimize\255ar)144 144 Q(g\255area \255mno\255underscores \
\255mocs\255debug\255info \255mocs\255frame\255position)-.18 E
(\255moptimize\255ar)144 156 Q(g\255area \255mshort\255data\255)-.18 E F1(num)
.27 E F0(\255msvr3 \255msvr4 \255mtrap\255lar)2.5 E(ge\255shift)-.18 E(\255mus\
e\255div\255instruction \255mversion\25503.00 \255mwarn\255passed\255structs)
144 168 Q F1(RS6000 Options)144 192 Q F0
(\255mfp\255in\255toc \255mno\255fop\255in\255toc)144 204 Q F1(RT Options)144
228 Q F0(\255mcall\255lib\255mul \255mfp\255ar)144 240 Q
(g\255in\255fpregs \255mfp\255ar)-.18 E
(g\255in\255gregs \255mfull\255fp\255blocks \255mhc\255struct\255return)-.18 E
(\255min\255line\255mul \255mminimum\255fp\255blocks \255mnohc\255struct\255re\
turn)144 252 Q F1(MIPS Options)144 276 Q F0(\255mcpu=)144 288 Q F1(cpu type)A
F0(\255mips2 \255mips3 \255mint64 \255mlong64 \255mlonglong128 \255mmips\255as\
 \255mgas)2.5 E(\255mrnames \255mno\255rnames \255mgpopt \255mno\255gpopt \255\
mstats \255mno\255stats \255mmemcpy \255mno\255memcpy)144 300 Q(\255mno\255mip\
s\255t\214le \255mmips\255t\214le \255msoft\255\215oat \255mhard\255\215oat \
\255mabicalls \255mno\255abicalls \255mhalf\255pic)144 312 Q
(\255mno\255half\255pic \255G)144 324 Q F1(num)2.5 E/F2 10/Times-Bold@0 SF
(Code Generation Options)108 352.8 Q F0(+e)144 364.8 Q F1(N).86 E F0
(\255fcall\255saved\255)2.5 E F1 -.37(re)C(g).37 E F0(\255fcall\255used\255)2.5
E F1 -.37(re)C(g).37 E F0<ad66>2.5 E<8c786564ad>-.18 E F1 -.37(re)C(g).37 E F0
(\255fno\255common \255fno\255gnu\255binutils)2.5 E(\255fnonnull\255objects \
\255fpcc\255struct\255return \255fpic \255fPIC \255fshared\255data \255fshort\
\255enums \255fshort\255double)144 376.8 Q(\255fvolatile)144 388.8 Q/F3 9
/Times-Bold@0 SF(OVERALL OPTIONS)72 417.6 Q F2<ad78>108 429.6 Q F1(language)
2.59 E F0 .591(Specify explicitly the)144 441.6 R F1(language)3.091 E F0 .591
(for the following input \214les \(rather than choosing a default based)3.091 F
.072(on the \214le name suf)144 453.6 R .072(\214x\) .)-.18 F .073
(This option applies to all following input \214les until the next `)5.072 F F2
<ad78>1.666 E F0 2.573('o)1.666 G(ption.)516.94 453.6 Q 4.053
(Possible values of)144 465.6 R F1(language)6.552 E F0 4.052(are `)6.552 F F2
(c)1.666 E F0 4.052(', `)1.666 F F2(objective\255c)1.666 E F0 4.052(', `)1.666
F F2(c\255header)1.666 E F0 4.052(', `)1.666 F F2(c++)1.666 E F0 4.052(', `)
1.666 F F2(cpp\255output)1.666 E F0(',)1.666 E(`)144 477.6 Q F2(assembler)1.666
E F0(', and `)1.666 E F2(assembler\255with\255cpp)1.666 E F0('.)1.666 E F2
(\255x none)108 494.4 Q F0 -.35(Tu)144 506.4 S .117(rn of).35 F 2.617(fa)-.18 G
.118(ny speci\214cation of a language, so that subsequent \214les are handled \
according to their \214le)184.244 506.4 R(name suf)144 518.4 Q
(\214xes \(as they are if `)-.18 E F2<ad78>1.666 E F0 2.5('h)1.666 G
(as not been used at all\).)286.982 518.4 Q .602(If you want only some of the \
four stages \(preprocess, compile, assemble, link\), you can use `)108 547.2 R
F2<ad78>1.666 E F0 3.101('\()1.666 G .601(or \214le-)512.459 547.2 R .222
(name suf)108 559.2 R .222(\214xes\) to tell)-.18 F F2(gcc)2.722 E F0 .222
(where to start, and one of the options `)2.722 F F2<ad63>1.666 E F0 .222(', `)
1.666 F F2<ad53>1.666 E F0 .222(', or `)1.666 F F2<ad45>1.666 E F0 2.722('t)
1.666 G 2.722(os)455.3 559.2 S .222(ay where)466.912 559.2 R F2(gcc)2.722 E F0
.222(is to)2.722 F 2.5(stop. Note)108 571.2 R
(that some combinations \(for example, `)2.5 E F2(\255x cpp\255output \255E)
1.666 E F0('\) instruct)1.666 E F2(gcc)2.5 E F0(to do nothing at all.)2.5 E F2
<ad63>108 588 Q F0 .388
(Compile or assemble the source \214les, but do not link.)144 588 R .387
(The compiler output is an object \214le corre-)5.388 F
(sponding to each source \214le.)144 600 Q 1.184(By default, GCC makes the obj\
ect \214le name for a source \214le by replacing the suf)144 624 R 1.185
(\214x `)-.18 F F2(.c)1.666 E F0 1.185(', `)1.666 F F2(.i)1.666 E F0(',)1.666 E
(`)144 636 Q F2(.s)1.666 E F0(', etc., with `)1.666 E F2(.o)1.666 E F0 2.5
('. Use)1.666 F F2<ad6f>2.5 E F0(to select another name.)2.5 E .034(GCC ignore\
s any unrecognized input \214les \(those that do not require compilation or as\
sembly\) with)144 660 R(the)144 672 Q F2<ad63>2.5 E F0(option.)2.5 E F2<ad53>
108 688.8 Q F0 .517
(Stop after the stage of compilation proper; do not assemble.)144 688.8 R .517
(The output is an assembler code \214le)5.517 F
(for each non-assembler input \214le speci\214ed.)144 700.8 Q .27(By default, \
GCC makes the assembler \214le name for a source \214le by replacing the suf)
144 724.8 R .269(\214x `)-.18 F F2(.c)1.666 E F0 .269(', `)1.666 F F2(.i)1.666
E F0(',)1.666 E(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(3)535 768 Q EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F(etc., with `)144 84 Q/F1 10/Times-Bold@0 SF(.s)1.666 E F0
2.5('. Use)1.666 F F1<ad6f>2.5 E F0(to select another name.)2.5 E
(GCC ignores any input \214les that don')144 120 Q 2.5(tr)-.18 G
(equire compilation.)302.43 120 Q F1<ad45>108 136.8 Q F0 1.346
(Stop after the preprocessing stage; do not run the compiler proper)144 136.8 R
6.346(.T)-.55 G 1.346(he output is preprocessed)434.592 136.8 R
(source code, which is sent to the standard output.)144 148.8 Q
(GCC ignores input \214les which don')144 172.8 Q 2.5(tr)-.18 G
(equire preprocessing.)294.93 172.8 Q F1<ad6f>108 189.6 Q/F2 10/Times-Italic@0
SF(\214le)4.36 E F0 1.297(Place output in \214le)147.797 189.6 R F2(\214le)
3.797 E F0 6.297(.T)C 1.297
(his applies regardless to whatever sort of output GCC is producing,)257.892
189.6 R(whether it be an executable \214le, an object \214le, an assembler \
\214le or preprocessed C code.)144 201.6 Q .902(Since only one output \214le c\
an be speci\214ed, it does not make sense to use `)144 225.6 R F1<ad6f>1.666 E
F0 3.403('w)1.666 G .903(hen compiling)481.597 225.6 R(more than one input \
\214le, unless you are producing an executable \214le as output.)144 237.6 Q
.896(If you do not specify `)144 261.6 R F1<ad6f>1.666 E F0 .896
(', the default is to put an executable \214le in `)1.666 F F1(a.out)1.666 E F0
.896(', the object \214le for)1.666 F(`)144 273.6 Q F2(sour)1.666 E(ce)-.37 E
F0(.)A F2(suf\214x)A F0 3.651('i)1.666 G 3.651(n`)210.323 273.6 S F2(sour)
-1.985 E(ce)-.37 E F0 -.834(.o ',)B 1.151(its assembler \214le in `)3.651 F F2
(sour)1.666 E(ce)-.37 E F0 -.834(.s ',)B 1.151
(and all preprocessed C source on)3.651 F(standard output.)144 285.6 Q F1<ad76>
108 302.4 Q F0 1.226(Print \(on standard error output\) the commands executed \
to run the stages of compilation.)144 302.4 R(Also)6.225 E .35(print the versi\
on number of the compiler driver program and of the preprocessor and the compi\
ler)144 314.4 R(proper)144 326.4 Q(.)-.55 E F1(\255vpath)108 343.2 Q F0 1.642(\
Print \(on standard error output\) all attempts at \214nding \214les, tracing \
how the `)5.85 F F1<ad42>1.666 E F0 1.642(', `)1.666 F F1<ad62>1.666 E F0 1.642
(', and)1.666 F(`)144 355.2 Q F1<ad56>1.666 E F0 3.497('o)1.666 G .997
(ptions interact.)175.409 355.2 R .997
(Also, print the commands executed to run the stages of compilation and)5.997 F
(version numbers, like the `)144 367.2 Q F1<ad76>1.666 E F0 2.5('o)1.666 G
(ption.)275.792 367.2 Q F1(\255vspec)108 384 Q F0 .552
(Print \(on standard error output\) all spec')6.97 F 3.052(sp)-.55 G .552
(rocessed by the)319.784 384 R F1(do_spec_1)3.052 E F0 .552(function in `)3.052
F F1(gcc.c)1.666 E F0 3.052('. Also,)1.666 F .394(print the commands executed \
to run the stages of compilation and version numbers, like the `)144 396 R F1
<ad76>1.666 E F0(')1.666 E(option.)144 408 Q F1(\255pipe)108 424.8 Q F0 .873(U\
se pipes rather than temporary \214les for communication between the various s\
tages of compila-)144 424.8 R 3.525(tion. This)144 436.8 R 1.026(fails to work\
 on some systems where the assembler cannot read from a pipe; but the)3.525 F
(GNU assembler has no trouble.)144 448.8 Q/F3 9/Times-Bold@0 SF
(LANGUAGE OPTIONS)72 482.4 Q F0
(The following options control the dialect of C that the compiler accepts:)108
494.4 Q F1(\255ansi)108 511.2 Q F2(Support all ANSI standar)144 511.2 Q 2.5
(dCp)-.37 G -.37(ro)266.7 511.2 S(grams.).37 E .343
(This turns off certain featur)144 535.2 R .343(es of GNU C that ar)-.37 F
2.843(ei)-.37 G .343(ncompatible with)347.82 535.2 R F0 .343
(ANSI C, such as the)2.843 F F1(asm)2.842 E F0(,)A F1(in-)2.842 E(line)144
547.2 Q F0(and)3.346 E F1(typeof)3.346 E F0 .847
(keywords, and prede\214ned macros such as)3.347 F F1(unix)3.347 E F0(and)3.347
E F1(vax)3.347 E F0 .847(that identify the type of)3.347 F .702
(system you are using.)144 559.2 R .702
(It also enables the undesirable and rarely used ANSI trigraph feature, and)
5.702 F(makes the preprocessor accept `)144 571.2 Q F1($)1.666 E F0 2.5('a)
1.666 G 2.5(sp)290.332 571.2 S(art of identi\214ers.)301.722 571.2 Q 1.215
(The alternate keywords)144 595.2 R F1(__asm__)3.715 E F0(,)A F1(__extension__)
3.715 E F0(,)A F1(__inline__)3.715 E F0(and)3.715 E F1(__typeof__)3.715 E F0
1.215(continue to work)3.715 F .29(despite `)144 607.2 R F1(\255ansi)1.666 E F0
2.79('. Y)1.666 F .289
(ou would not want to use them in an ANSI C program, of course, but it is use-)
-1 F .796(ful to put them in header \214les that might be included in compilat\
ions done with `)144 619.2 R F1(\255ansi)1.666 E F0 3.297('. Alter)1.666 F(-)
-.2 E 2.859(nate prede\214ned macros such as)144 631.2 R F1(__unix__)5.359 E F0
(and)5.359 E F1(__vax__)5.358 E F0 2.858(are also available, with or without)
5.358 F(`)144 643.2 Q F1(\255ansi)1.666 E F0('.)1.666 E 1.871(The `)144 667.2 R
F1(\255ansi)1.666 E F0 4.371('o)1.666 G 1.871
(ption does not cause non-ANSI programs to be rejected gratuitously)206.214
667.2 R 6.872(.F)-.65 G 1.872(or that,)509.798 667.2 R(`)144 679.2 Q F1
(\255pedantic)1.666 E F0 2.5('i)1.666 G 2.5(sr)201.642 679.2 S
(equired in addition to `)211.362 679.2 Q F1(\255ansi)1.666 E F0('.)1.666 E
2.002(The preprocessor prede\214nes a macro)144 703.2 R F1(__STRICT_ANSI__)
4.502 E F0 2.001(when you use the `)4.502 F F1(\255ansi)1.666 E F0 4.501('o)
1.666 G(ption.)516.94 703.2 Q .751(Some header \214les may notice this macro a\
nd refrain from declaring certain functions or de\214ning)144 715.2 R .946
(certain macros that the ANSI standard doesn')144 727.2 R 3.446(tc)-.18 G .945
(all for; this is to avoid interfering with any pro-)342.342 727.2 R(GNU T)72
768 Q 163.32(ools 27dec1991)-.7 F(4)535 768 Q EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F(grams that might use these names for other things.)144 84 Q
/F1 10/Times-Bold@0 SF(\255fno\255asm)108 100.8 Q F0 .781(Do not recognize)144
112.8 R F1(asm)3.281 E F0(,)A F1(inline)3.281 E F0(or)3.282 E F1(typeof)3.282 E
F0 .782(as a keyword.)3.282 F .782(These words may then be used as identi-)
5.782 F 2.5(\214ers. Y)144 124.8 R(ou can use)-1 E F1(__asm__)2.5 E F0(,)A F1
(__inline__)2.5 E F0(and)2.5 E F1(__typeof__)2.5 E F0 2.5(instead. `)2.5 F F1
(\255ansi)1.666 E F0 2.5('i)1.666 G(mplies `)448.402 124.8 Q F1(\255fno\255asm)
1.666 E F0('.)1.666 E F1(\255fno\255builtin)108 141.6 Q/F2 10/Times-Italic@0 SF
(\(Ignor)144 153.6 Q 1.164(ed for C++.\))-.37 F F0(Don')6.164 E 3.664(tr)-.18 G
1.164(ecognize non-ANSI built-in functions.)259.926 153.6 R(`)6.164 E F1
(\255ansi)1.666 E F0 3.664('a)1.666 G 1.164(lso has this ef)464.478 153.6 R
(fect.)-.18 E(Currently)144 165.6 Q 2.5(,t)-.65 G(he only function af)189.46
165.6 Q(fected is)-.18 E F1(alloca)2.5 E F0(.)A F1(\255fno\255strict\255pr)108
182.4 Q(ototype)-.18 E F2 .721(\(C++ only)144 194.4 R(.\))-.55 E F0 .721
(Consider the declaration)5.721 F F1 .721(int foo \(\);)3.221 F F0 5.721(.I)C
3.221(nC)354.348 194.4 S .721(++, this means that the function)369.239 194.4 R
F1(foo)3.222 E F0(takes)3.222 E 9.046(no ar)144 206.4 R 11.546(guments. In)-.18
F 9.046(ANSI C, this is declared)243.448 206.4 R F1 9.046(int foo\(void\);)
388.668 206.4 R F0 14.046(.W)C 9.045(ith the \215ag)479.13 206.4 R(`)144 218.4
Q F1(\255fno\255strict\255pr)1.666 E(ototype)-.18 E F0 .36
(', declaring functions with no ar)1.666 F .361
(guments is equivalent to declaring its ar)-.18 F(-)-.2 E
(gument list to be untyped, i.e.,)144 230.4 Q F1(int foo \(\);)2.5 E F0
(is equivalent to saying)2.5 E F1(int foo \(...\);)2.5 E F0(.)A F1
(\255trigraphs)108 247.2 Q F0(Support ANSI C trigraphs.)144 259.2 Q(The `)5 E
F1(\255ansi)1.666 E F0 2.5('o)1.666 G(ption implies `)314.692 259.2 Q F1
(\255trigraphs)1.666 E F0('.)1.666 E F1(\255traditional)108 276 Q F0
(Attempt to support some aspects of traditional C compilers.)144 288 Q
(Speci\214cally)144 312 Q 2.5(,f)-.65 G(or both C and C++ programs:)198.9 312 Q
25<8349>115.5 328.8 S 2.974(nt)147.33 328.8 S .474(he preprocessor)158.084
328.8 R 2.974(,c)-.4 G .474
(omments convert to nothing at all, rather than to a space.)231.102 328.8 R
.473(This allows tradi-)5.473 F(tional token concatenation.)144 340.8 Q 25
<8349>115.5 357.6 S 2.969(nt)147.33 357.6 S .469(he preprocessor)158.079 357.6
R 2.969(,m)-.4 G .469(acro ar)234.427 357.6 R .469
(guments are recognized within string constants in a macro de\214nition)-.18 F
.353(\(and their values are stringi\214ed, though without additional quote mar\
ks, when they appear in such)144 369.6 R 2.5(ac)144 381.6 S 2.5(ontext\). The)
155.38 381.6 R
(preprocessor always considers a string constant to end at a newline.)2.5 E 25
<8354>115.5 398.4 S .24(he preprocessor does not prede\214ne the macro)150.11
398.4 R F1(__STDC__)2.741 E F0 .241(when you use `)2.741 F F1(\255traditional)
1.666 E F0 .241(', but still)1.666 F(prede\214nes)144 410.4 Q F1(__GNUC__)A F0
1.352(\(since the GNU extensions indicated by)3.852 F F1(__GNUC__)3.852 E F0
1.352(are not af)3.852 F 1.351(fected by)-.18 F(`)144 422.4 Q F1
(\255traditional)1.666 E F0 4.059('\). If)1.666 F 1.56
(you need to write header \214les that work dif)4.059 F 1.56
(ferently depending on whether)-.18 F(`)144 434.4 Q F1(\255traditional)1.666 E
F0 2.56('i)1.666 G 2.56(si)210.592 434.4 S 2.56(nu)219.822 434.4 S .059(se, by\
 testing both of these prede\214ned macros you can distinguish four situa-)
232.382 434.4 R(tions: GNU C, traditional GNU C, other ANSI C compilers, and o\
ther old C compilers.)144 446.4 Q 25<8349>115.5 463.2 S 2.973(nt)147.33 463.2 S
.473(he preprocessor)158.083 463.2 R 2.973(,c)-.4 G .474
(omments convert to nothing at all, rather than to a space.)231.099 463.2 R
.474(This allows tradi-)5.474 F(tional token concatenation.)144 475.2 Q 25
<8349>115.5 492 S 2.97(nt)147.33 492 S .47(he preprocessor)158.08 492 R 2.97
(,m)-.4 G .469(acro ar)234.43 492 R .469
(guments are recognized within string constants in a macro de\214nition)-.18 F
.353(\(and their values are stringi\214ed, though without additional quote mar\
ks, when they appear in such)144 504 R 2.5(ac)144 516 S 2.5(ontext\). The)
155.38 516 R
(preprocessor always considers a string constant to end at a newline.)2.5 E 25
<8354>115.5 532.8 S .241(he preprocessor does not prede\214ne the macro)150.11
532.8 R F1(__STDC__)2.741 E F0 .24(when you use `)2.741 F F1(\255traditional)
1.666 E F0 .24(', but still)1.666 F(prede\214nes)144 544.8 Q F1(__GNUC__)A F0
1.352(\(since the GNU extensions indicated by)3.851 F F1(__GNUC__)3.852 E F0
1.352(are not af)3.852 F 1.352(fected by)-.18 F(`)144 556.8 Q F1
(\255traditional)1.666 E F0 4.06('\). If)1.666 F 1.56
(you need to write header \214les that work dif)4.06 F 1.559
(ferently depending on whether)-.18 F(`)144 568.8 Q F1(\255traditional)1.666 E
F0 2.559('i)1.666 G 2.559(si)210.591 568.8 S 2.559(nu)219.82 568.8 S .059(se, \
by testing both of these prede\214ned macros you can distinguish four situa-)
232.379 568.8 R(tions: GNU C, traditional GNU C, other ANSI C compilers, and o\
ther old C compilers.)144 580.8 Q 25<8353>115.5 602.4 S 1.266(tring `)149.56
602.4 R(`constants')-.74 E 3.766('a)-.74 G 1.265
(re not necessarily constant; they are stored in writable space, and identical)
229.482 602.4 R 7.75(looking constants are allocated separately)144 614.4 R
12.751(.\()-.65 G 7.751(This is the same as the ef)359.563 614.4 R 7.751
(fect of)-.18 F(`)144 626.4 Q F1(\255fwritable\255strings)1.666 E F0('.\))1.666
E(In addition, `)144 650.4 Q F1(\255traditional)1.666 E F0 2.5('h)1.666 G
(as these ef)261.362 650.4 Q(fects for C programs \(not C++\):)-.18 E 25<8341>
115.5 667.2 S(ll)151.22 667.2 Q F1(extern)2.806 E F0 .306(declarations take ef)
2.806 F .306
(fect globally even if they are written inside of a function de\214nition.)-.18
F(This includes implicit declarations of functions.)144 679.2 Q 25<8354>115.5
696 S .21(he keywords)150.11 696 R F1(typeof)2.71 E F0(,)A F1(inline)2.71 E F0
(,)A F1(signed)2.71 E F0(,)A F1(const)2.71 E F0(and)2.711 E F1(volatile)2.711 E
F0 .211(are not recognized.)2.711 F(\(Y)5.211 E .211(ou can still use the)-1 F
(alternative keywords such as)144 708 Q F1(__typeof__)2.5 E F0(,)A F1
(__inline__)2.5 E F0 2.5(,a)C(nd so on.\))366.75 708 Q(GNU T)72 768 Q 163.32
(ools 27dec1991)-.7 F(5)535 768 Q EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F 25<8343>115.5 84 S
(omparisons between pointers and integers are always allowed.)150.67 84 Q 25
<8349>115.5 100.8 S(nteger types)147.33 100.8 Q/F1 10/Times-Bold@0 SF
(unsigned short)2.5 E F0(and)2.5 E F1(unsigned char)2.5 E F0(promote to)2.5 E
F1(unsigned int)2.5 E F0(.)A 25<834f>115.5 117.6 S
(ut-of-range \215oating point literals are not an error)151.22 117.6 Q(.)-.55 E
25<8341>115.5 134.4 S .618(ll automatic variables not declared)151.22 134.4 R
F1 -.18(re)3.118 G(gister).18 E F0 .618(are preserved by)3.118 F F1(longjmp)
3.118 E F0 5.617(.O)C(rdinarily)451.589 134.4 Q 3.117(,G)-.65 G .617(NU C fol-)
498.216 134.4 R(lows ANSI C: automatic variables not declared)144 146.4 Q F1
(volatile)2.5 E F0(may be clobbered.)2.5 E(Finally)144 170.4 Q 3.452(,f)-.65 G
.952(or C++ programs only \(not C\), `)180.972 170.4 R F1(\255traditional)1.666
E F0 3.452('h)1.666 G .952(as one additional ef)381.828 170.4 R .953
(fect: assignment to)-.18 F F1(this)144 182.4 Q F0(is permitted.)2.5 E
(This is the same as the ef)5 E(fect of `)-.18 E F1
(\255fthis\255is\255variable)1.666 E F0('.)1.666 E F1(\255traditional\255cpp)
108 199.2 Q F0 2.066
(Attempt to support some aspects of traditional C preprocessors.)144 211.2 R
2.066(This includes the items that)7.066 F
(speci\214cally mention the preprocessor above, but none of the other ef)144
223.2 Q(fects of `)-.18 E F1(\255traditional)1.666 E F0('.)1.666 E F1
(\255fdollars\255in\255identi\214ers)108 240 Q/F2 10/Times-Italic@0 SF .927
(\(C++ only)144 252 R(.\))-.55 E F0 .927(Permit the use of `)5.927 F F1($)1.666
E F0 3.428('i)1.666 G 3.428(ni)294.812 252 S 5.928(denti\214ers. \(For)306.02
252 R .928(GNU C, this is the default, and you can)3.428 F .253
(forbid it with `)144 264 R F1(\255ansi)1.666 E F0 2.753('.\) T)1.666 F .253
(raditional C allowed the character `)-.35 F F1($)1.666 E F0 2.753('t)1.666 G
2.753(of)409.614 264 S .253(orm part of identi\214ers; by de-)420.697 264 R
.791(fault, GNU C also allows this.)144 276 R(However)5.791 E 3.291(,A)-.4 G
.791(NSI C forbids `)323.837 276 R F1($)1.666 E F0 3.291('i)1.666 G 3.291(ni)
405.883 276 S .791(denti\214ers, and GNU C++ also)416.954 276 R .1
(forbids it by default on most platforms \(though on some platforms it')144 288
R 2.599(se)-.55 G .099(nabled by default for GNU)431.854 288 R(C++ as well\).)
144 300 Q F1(\255fenum\255int\255equiv)108 316.8 Q F2 .008(\(C++ only)144 328.8
R(.\))-.55 E F0 .009(Normally GNU C++ allows conversion of)5.008 F F1(enum)
2.509 E F0(to)2.509 E F1(int)2.509 E F0 2.509(,b)C .009
(ut not the other way around.)427.195 328.8 R
(Use this option if you want GNU C++ to allow conversion of)144 340.8 Q F1(int)
2.5 E F0(to)2.5 E F1(enum)2.5 E F0(as well.)2.5 E F1(\255fall\255virtual)108
357.6 Q F2 1.694(\(C++ only)144 369.6 R(.\))-.55 E F0 1.694(When you use the `)
6.694 F F1(\255fall\255virtual)1.666 E F0 1.694
(', all member functions \(except for constructor)1.666 F .476(functions and n\
ew/delete member operators\) declared in the same class with a `)144 381.6 R
(`method-call')-.74 E 2.977('o)-.74 G(p-)531.67 381.6 Q .173
(erator method are treated as virtual functions of the given class.)144 393.6 R
.173(In ef)5.173 F .173(fect, all of these methods be-)-.18 F(come `)144 405.6
Q(`implicitly virtual.')-.74 E(')-.74 E .026(This does)144 429.6 R F2(not)2.526
E F0 .027(mean that all calls to these methods will be made through the intern\
al table of virtual)2.526 F 3.435(functions. There)144 441.6 R .934(are some c\
ircumstances under which it is obvious that a call to a given virtual)3.435 F
(function can be made directly)144 453.6 Q 2.5(,a)-.65 G
(nd in these cases the calls still go direct.)271.65 453.6 Q .229(The ef)144
477.6 R .229(fect of making all methods of a class with a declared `)-.18 F F1
(operator)1.666 E(->\(\)\(\))-.37 E F0 2.73('i)1.666 G .23
(mplicitly virtual us-)460.09 477.6 R .571(ing `)144 489.6 R F1
(\255fall\255virtual)1.666 E F0 3.071('e)1.666 G .571
(xtends also to all non-constructor methods of any class derived from such a)
231.534 489.6 R(class.)144 501.6 Q F1(\255fcond\255mismatch)108 518.4 Q F0 .072
(Allow conditional expressions with mismatched types in the second and third a\
r)144 530.4 R 2.573(guments. The)-.18 F(val-)2.573 E
(ue of such an expression is void.)144 542.4 Q F1(\255fthis\255is\255variable)
108 559.2 Q F2 .393(\(C++ only)144 571.2 R(.\))-.55 E F0 .393
(The incorporation of user)5.393 F .392
(-de\214ned free store management into C++ has made assign-)-.2 F .314(ment to)
144 583.2 R F1(this)2.814 E F0 .314(an anachronism.)2.814 F .314
(Therefore, by default GNU C++ treats the type of)5.314 F F1(this)2.814 E F0
.315(in a member)2.814 F 1.093(function of)144 595.2 R F1 1.093(class X)3.593 F
F0 1.093(to be)3.593 F F1 3.593(X*)3.593 G(const)267.471 595.2 Q F0 6.093(.I)C
3.593(no)301.614 595.2 S 1.092(ther words, it is illegal to assign to)315.207
595.2 R F1(this)3.592 E F0 1.092(within a class)3.592 F .44(member function.)
144 607.2 R(However)5.44 E 2.94(,f)-.4 G .441(or backwards compatibility)266
607.2 R 2.941(,y)-.65 G .441(ou can invoke the old behavior by us-)386.103
607.2 R(ing `)144 619.2 Q F1(\255fthis\255is\255variable)1.666 E F0('.)1.666 E
F1(\255funsigned\255char)108 636 Q F0(Let the type)144 648 Q F1(char)2.5 E F0
(be unsigned, like)2.5 E F1(unsigned char)2.5 E F0(.)A .012
(Each kind of machine has a default for what)144 672 R F1(char)2.512 E F0 .012
(should be.)2.512 F .011(It is either like)5.011 F F1 .011(unsigned char)2.511
F F0 .011(by de-)2.511 F(fault or like)144 684 Q F1(signed char)2.5 E F0
(by default.)2.5 E(Ideally)144 708 Q 2.982(,ap)-.65 G .482
(ortable program should always use)189.024 708 R F1 .483(signed char)2.983 F F0
(or)2.983 E F1 .483(unsigned char)2.983 F F0 .483(when it depends on)2.983 F
.21(the signedness of an object.)144 720 R .209
(But many programs have been written to use plain)5.21 F F1(char)2.709 E F0
.209(and expect it)2.709 F(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(6)535 768
Q EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F .666(to be signed, or expect it to be unsigned, depending o\
n the machines they were written for)144 84 R 5.667(.T)-.55 G(his)528.33 84 Q(\
option, and its inverse, let you make such a program work with the opposite de\
fault.)144 96 Q .094(The type)144 120 R/F1 10/Times-Bold@0 SF(char)2.594 E F0
.094(is always a distinct type from each of)2.594 F F1 .093(signed char)2.593 F
F0(and)2.593 E F1 .093(unsigned char)2.593 F F0 2.593(,e)C .093(ven though)
495.187 120 R(its behavior is always just like one of those two.)144 132 Q F1
(\255fsigned\255char)108 160.8 Q F0(Let the type)144 172.8 Q F1(char)2.5 E F0
(be signed, like)2.5 E F1(signed char)2.5 E F0(.)A 4.562
(Note that this is equivalent to `)144 196.8 R F1(\255fno\255unsigned\255char)
1.666 E F0 4.563(', which is the negative form of)1.666 F(`)144 208.8 Q F1
(\255funsigned\255char)1.666 E F0 2.5('. Likewise,)1.666 F(`)2.5 E F1
(\255fno\255signed\255char)1.666 E F0 2.5('i)1.666 G 2.5(se)368.604 208.8 S
(quivalent to `)379.434 208.8 Q F1(\255funsigned\255char)1.666 E F0('.)1.666 E
F1(\255fsigned\255bit\214elds)108 225.6 Q(\255funsigned\255bit\214elds)108
242.4 Q(\255fno\255signed\255bit\214elds)108 259.2 Q
(\255fno\255unsigned\255bit\214elds)108 276 Q F0 1.523(These options control w\
hether a bit\214eld is signed or unsigned, when declared with no explicit)144
288 R(`)144 300 Q F1(signed)1.666 E F0 2.889('o)1.666 G 2.889(r`)189.111 300 S
F1(unsigned)-1.223 E F0 2.889('q)1.666 G(uali\214er)251.561 300 Q 5.389(.B)-.55
G 2.889(yd)293.9 300 S .389
(efault, such a bit\214eld is signed, because this is consistent:)306.789 300 R
(the basic integer types such as)144 312 Q F1(int)2.5 E F0(are signed types.)
2.5 E(However)144 336 Q 2.5(,w)-.4 G(hen you specify `)192.47 336 Q F1
(\255traditional)1.666 E F0(', bit\214elds are all unsigned no matter what.)
1.666 E F1(\255fwritable\255strings)108 352.8 Q F0 .544
(Store string constants in the writable data segment and don')144 364.8 R 3.044
(tu)-.18 G .544(niquize them.)398.68 364.8 R .544(This is for compati-)5.544 F
.815
(bility with old programs which assume they can write into string constants.)
144 376.8 R(`)5.816 E F1(\255traditional)1.666 E F0 3.316('a)1.666 G(lso)528.33
376.8 Q(has this ef)144 388.8 Q(fect.)-.18 E -.4(Wr)144 412.8 S
(iting into string constants is a very bad idea; `).4 E(`constants')-.74 E 2.5
('s)-.74 G(hould be constant.)390.98 412.8 Q/F2 9/Times-Bold@0 SF
(PREPROCESSOR OPTIONS)72 446.4 Q F0(These options control the C preprocessor)
108 458.4 Q 2.5(,w)-.4 G
(hich is run on each C source \214le before actual compilation.)283.96 458.4 Q
.866(If you use the `)108 482.4 R F1<ad45>1.666 E F0 3.366('o)1.666 G .866
(ption, GCC does nothing except preprocessing.)199.402 482.4 R .865
(Some of these options make sense)5.865 F .962(only together with `)108 494.4 R
F1<ad45>1.666 E F0 3.462('b)1.666 G .963(ecause they cause the preprocessor ou\
tput to be unsuitable for actual compila-)217.54 494.4 R(tion.)108 506.4 Q F1
<ad69>108 523.2 Q/F3 10/Times-Italic@0 SF(\214le)4.36 E F0(Process)146.885
523.2 Q F3(\214le)2.885 E F0 .385(as input, discarding the resulting output, b\
efore processing the regular input \214le.)2.885 F(Be-)5.384 E .232
(cause the output generated from)144 535.2 R F3(\214le)2.732 E F0 .232
(is discarded, the only ef)2.732 F .232(fect of `)-.18 F F1<ad69>1.666 E F3
(\214le)2.732 E F0 2.732('i)1.666 G 2.732(st)454.64 535.2 S 2.732(om)464.042
535.2 S .233(ake the macros)479.554 535.2 R .085(de\214ned in)144 547.2 R F3
(\214le)2.585 E F0 .085(available for use in the main input.)2.585 F .085
(The preprocessor evaluates any `)5.085 F F1<ad44>1.666 E F0 2.584('a)1.666 G
.084(nd `)504.504 547.2 R F1<ad55>1.666 E F0(')1.666 E
(options on the command line before processing `)144 559.2 Q F1<ad69>1.666 E F0
(')1.666 E F3(\214le)2.5 E F0(.)A F1(\255nostdinc)108 576 Q F0 .165
(Do not search the standard system directories for header \214les.)144 588 R
.166(Only the directories you have spec-)5.165 F(i\214ed with `)144 600 Q F1
<ad49>1.666 E F0 2.5('o)1.666 G(ptions \(and the current directory)211.642 600
Q 2.5(,i)-.65 G 2.5(fa)347.632 600 S(ppropriate\) are searched.)357.902 600 Q
.575(By using both `)144 624 R F1(\255nostdinc)1.666 E F0 3.075('a)1.666 G .575
(nd `)263.672 624 R F1<ad49ad>1.666 E F0 .575
(', you can limit the include-\214le search \214le to only those di-)1.666 F
(rectories you specify explicitly)144 636 Q(.)-.65 E F1(\255undef)108 652.8 Q
F0(Do not prede\214ne any nonstandard macros.)5.85 E
(\(Including architecture \215ags\).)5 E F1<ad45>108 669.6 Q F0 .655
(Run only the C preprocessor)144 669.6 R 5.655(.P)-.55 G .655
(reprocess all the C source \214les speci\214ed and output the results to)
274.215 669.6 R(standard output or to the speci\214ed output \214le.)144 681.6
Q F1<ad43>108 698.4 Q F0 -.7(Te)144 698.4 S
(ll the preprocessor not to discard comments.).7 E(Used with the `)5 E F1<ad45>
1.666 E F0 2.5('o)1.666 G(ption.)423.682 698.4 Q F1<ad50>108 715.2 Q F0 -.7(Te)
144 715.2 S(ll the preprocessor not to generate `).7 E F1(#line)1.666 E F0 2.5
('c)1.666 G 2.5(ommands. Used)329.642 715.2 R(with the `)2.5 E F1<ad45>1.666 E
F0 2.5('o)1.666 G(ption.)463.944 715.2 Q(GNU T)72 768 Q 163.32(ools 27dec1991)
-.7 F(7)535 768 Q EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF<ad4d>108 84 Q F0 -.7(Te)144 84 S .101
(ll the preprocessor to output a rule suitable for).7 F F1(make)2.601 E F0 .1
(describing the dependencies of each object)2.601 F 3.398(\214le. For)144 96 R
.898(each source \214le, the preprocessor outputs one)3.398 F F1(make)3.398 E
F0 .898(-rule whose tar)B .898(get is the object \214le)-.18 F .079
(name for that source \214le and whose dependencies are all the \214les `)144
108 R F1(#include)1.666 E F0 .078('d in it.)1.666 F .078(This rule may)5.078 F
.579(be a single line or may be continued with `)144 120 R F1(\\)1.666 E F0
.579('-newline if it is long.)1.666 F .58(The list of rules is printed on)5.58
F(standard output instead of the preprocessed C program.)144 132 Q(`)144 156 Q
F1<ad4d>1.666 E F0 2.5('i)1.666 G(mplies `)174.412 156 Q F1<ad45>1.666 E F0('.)
1.666 E F1(\255MM)108 172.8 Q F0 .028(Like `)144 172.8 R F1<ad4d>1.666 E F0
2.528('b)1.666 G .028
(ut the output mentions only the user header \214les included with `)197.518
172.8 R F1(#include)1.666 E/F2 10/Times-Italic@0 SF(\214le)2.527 E F0 1.666("')
C 5.027(.S)-1.666 G(ys-)527.78 172.8 Q(tem header \214les included with `)144
184.8 Q F1(#include <)1.666 E F2(\214le)A F0 -3.332 1.666(>' a)D(re omitted.)
-1.666 E F1(\255MD)108 201.6 Q F0 .431(Like `)144 201.6 R F1<ad4d>1.666 E F0
2.931('b)1.666 G .432(ut the dependency information is written to \214les with\
 names made by replacing `)198.324 201.6 R F1(.c)1.666 E F0(')1.666 E 2.788
(with `)144 213.6 R F1(.d)1.666 E F0 5.288('a)1.666 G 5.287(tt)194.848 213.6 S
2.787(he end of the input \214le names.)205.695 213.6 R 2.787
(This is in addition to compiling the \214le as)7.787 F(speci\214ed\212`)144
225.6 Q F1(\255MD)1.666 E F0 2.5('d)1.666 G
(oes not inhibit ordinary compilation the way `)229.402 225.6 Q F1<ad4d>1.666 E
F0 2.5('d)1.666 G(oes.)442.304 225.6 Q .628(The Mach utility `)144 249.6 R F1
(md)1.666 E F0 3.128('c)1.666 G .628(an be used to mer)247.054 249.6 R .628
(ge the `)-.18 F F1(.d)1.666 E F0 3.128<278c>1.666 G .628
(les into a single dependency \214le suitable)374.582 249.6 R
(for using with the `)144 261.6 Q F1(make)1.666 E F0 2.5('c)1.666 G(ommand.)
257.592 261.6 Q F1(\255MMD)108 278.4 Q F0(Like `)144 290.4 Q F1(\255MD)1.666 E
F0 2.5('e)1.666 G
(xcept mention only user header \214les, not system header \214les.)204.122
290.4 Q F1<ad48>108 307.2 Q F0(Print the name of each header \214le used, in a\
ddition to other normal activities.)144 307.2 Q F1<ad44>108 324 Q F2(macr).39 E
(o)-.37 E F0(De\214ne macro)144 336 Q F2(macr)2.5 E(o)-.37 E F0
(with the string `)2.5 E F1(1)1.666 E F0 2.5('a)1.666 G 2.5(si)310.542 336 S
(ts de\214nition.)319.712 336 Q F1<ad44>108 352.8 Q F2(macr).39 E(o)-.37 E F1
(=).17 E F2(defn).35 E F0 .774(De\214ne macro)144 364.8 R F2(macr)3.274 E(o)
-.37 E F0(as)3.274 E F2(defn)3.273 E F0 10.773(.A)C .773(ll instances of `)
279.968 364.8 R F1<ad44>1.666 E F0 3.273('o)1.666 G 3.273(nt)371.522 364.8 S
.773(he command line are processed before)382.575 364.8 R(any `)144 376.8 Q F1
<ad55>1.666 E F0 2.5('o)1.666 G 2.5(r`)191.352 376.8 S F1<ad69>-.834 E F0 2.5
('o)1.666 G(ptions.)223.154 376.8 Q F1<ad55>108 393.6 Q F2(macr).39 E(o)-.37 E
F0 .847(Unde\214ne macro)144 405.6 R F2(macr)3.347 E(o)-.37 E F0 5.847(.`)C F1
<ad55>250.867 405.6 Q F0 3.347('o)1.666 G .847
(ptions are evaluated after all `)277.13 405.6 R F1<ad44>1.666 E F0 3.348('o)
1.666 G .848(ptions, but before any `)428.426 405.6 R F1<ad69>1.666 E F0(')
1.666 E(options.)144 417.6 Q F1(\255dM)108 434.4 Q F0 -.7(Te)144 434.4 S .76(l\
l the preprocessor to output only a list of the macro de\214nitions that are i\
n ef).7 F .76(fect at the end of)-.18 F 2.5(preprocessing. Used)144 446.4 R
(with the `)2.5 E F1<ad45>1.666 E F0 2.5('o)1.666 G(ption.)294.952 446.4 Q F1
(\255dD)108 463.2 Q F0 -.7(Te)144 463.2 S .369(ll the preprocessing to pass al\
l macro de\214nitions into the output, in their proper sequence in the).7 F
(rest of the output.)144 475.2 Q F1(\255dN)108 492 Q F0 .714(Like `)144 492 R
F1(\255dD)1.666 E F0 3.214('e)1.666 G .714(xcept that the macro ar)201.67 492 R
.713(guments and contents are omitted.)-.18 F .713(Only `)5.713 F F1(#de\214ne)
1.666 E F2(name)3.213 E F0 3.213('i)1.666 G(s)536.11 492 Q
(included in the output.)144 504 Q/F3 9/Times-Bold@0 SF(LINKER OPTIONS)72 537.6
Q F0 .463(These options come into play when the compiler links object \214les \
into an executable output \214le.)108 549.6 R .464(They are)5.464 F
(meaningless if the compiler is not doing a link step.)108 561.6 Q F2
(object-\214le-name)108 578.4 Q F0 2.785<418c>144 590.4 S .285
(le name that does not end in a special recognized suf)159.565 590.4 R .284
(\214x is considered to name an object \214le or)-.18 F(library)144 602.4 Q
5.617(.\()-.65 G .618(Object \214les are distinguished from libraries by the l\
inker according to the \214le contents.\))181.457 602.4 R
(If GCC does a link step, these object \214les are used as input to the linker)
144 614.4 Q(.)-.55 E F1(\255dynamic)108 631.2 Q F0(On systems that support dyn\
amic linking, you can use this option to request it explicitly)144 643.2 Q(.)
-.65 E F1<ad6c>108 660 Q F2(library).09 E F0(Use the library named)146.5 672 Q
F2(library)2.5 E F0(when linking.)2.5 E 1.445
(The linker searches a standard list of directories for the library)144 696 R
3.945(,w)-.65 G 1.445(hich is actually a \214le named)420.845 696 R(`)144 708 Q
F1(lib)1.666 E F2(library)A F0 -.834(.a '.)B(The linker then uses this \214le \
as if it had been speci\214ed precisely by name.)5 E(GNU T)72 768 Q 163.32
(ools 27dec1991)-.7 F(8)535 768 Q EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F .105(The directories searched include several standard syst\
em directories plus any that you specify with)144 84 R(`)144 96 Q/F1 10
/Times-Bold@0 SF<ad4c>1.666 E F0('.)1.666 E .691(Normally the \214les found th\
is way are library \214les\212archive \214les whose members are object \214les\
.)144 120 R .644(The linker handles an archive \214le by scanning through it f\
or members which de\214ne symbols that)144 132 R .979
(have so far been referenced but not de\214ned.)144 144 R(However)5.979 E 3.479
(,i)-.4 G 3.479(ft)376.781 144 S .978
(he linker \214nds an ordinary object \214le)386.37 144 R .243
(rather than a library)144 156 R 2.743(,t)-.65 G .243
(he object \214le is linked in the usual fashion.)231.241 156 R .243
(The only dif)5.243 F .243(ference between us-)-.18 F .829(ing an `)144 168 R
F1<ad6c>1.666 E F0 3.329('o)1.666 G .828
(ption and specifying a \214le name is that `)199.679 168 R F1<ad6c>1.666 E F0
3.328('s)1.666 G(urrounds)389.206 168 Q/F2 10/Times-Italic@0 SF(library)3.328 E
F0 .828(with `)3.328 F F1(lib)1.666 E F0 3.328('a)1.666 G .828(nd `)509.18 168
R F1(.a)1.666 E F0(')1.666 E(and searches several directories.)144 180 Q F1
(\255nostdlib)108 196.8 Q F0(Don')144 208.8 Q 3.118(tu)-.18 G .618
(se the standard system libraries and startup \214les when linking.)175.268
208.8 R .618(Only the \214les you specify)5.618 F(will be passed to the linker)
144 220.8 Q(.)-.55 E F1(\255static)108 237.6 Q F0 .123(On systems that support\
 dynamic linking, this prevents linking with the shared libraries.)7.53 F(\(`)
5.122 E F1<ad67>1.666 E F0 2.622('a)1.666 G(l-)533.89 237.6 Q(so has this ef)
144 249.6 Q 2.5(fect.\) On)-.18 F(other systems, this option has no ef)2.5 E
(fect.)-.18 E/F3 9/Times-Bold@0 SF(DIRECT)72 283.2 Q(OR)-.162 E 2.25(YO)-.315 G
(PTIONS)135.774 283.2 Q F0(These options specify directories to search for hea\
der \214les, for libraries and for parts of the compiler:)108 295.2 Q F1<ad49>
108 312 Q F2(dir).35 E F0(Append directory)146.5 312 Q F2(dir)2.5 E F0
(to the list of directories searched for include \214les.)2.5 E F1<ad49ad>108
328.8 Q F0 .728(Any directories you specify with `)144 328.8 R F1<ad49>1.666 E
F0 3.228('o)1.666 G .728(ptions before the `)309.04 328.8 R F1<ad49ad>1.666 E
F0 3.229('o)1.666 G .729(ption are searched only for the)414.445 328.8 R
(case of `)144 340.8 Q F1(#include ")1.666 E F2(\214le)A F1(")A F0
('; they are not searched for `)1.666 E F1(#include <)1.666 E F2(\214le)A F0
1.666(>')C(.)-1.666 E 2.059(If additional directories are speci\214ed with `)
144 364.8 R F1<ad49>1.666 E F0 4.559('o)1.666 G 2.059(ptions after the `)
354.905 364.8 R F1<ad49ad>1.666 E F0 2.059(', these directories are)1.666 F
(searched for all `)144 376.8 Q F1(#include)1.666 E F0 2.5('d)1.666 G 2.5
(irectives. \(Ordinarily)261.752 376.8 R F2(all)2.5 E F0(`)2.5 E F1<ad49>1.666
E F0 2.5('d)1.666 G(irectories are used this way)390.764 376.8 Q(.\))-.65 E
.447(In addition, the `)144 400.8 R F1<ad49ad>1.666 E F0 2.947('o)1.666 G .447
(ption inhibits the use of the current directory \(where the current input \
\214le)241.9 400.8 R .147(came from\) as the \214rst search directory for `)144
412.8 R F1 .146(#include ")1.666 F F2(\214le)A F1(")A F0 2.646('. There)1.666 F
.146(is no way to override this ef-)2.646 F 1.108(fect of `)144 424.8 R F1
<ad49ad>1.666 E F0 3.608('. W)1.666 F 1.108(ith `)-.4 F F1(\255I.)1.666 E F0
3.608('y)1.666 G 1.109
(ou can specify searching the directory which was current when the)262.324
424.8 R .362(compiler was invoked.)144 436.8 R .362
(That is not exactly the same as what the preprocessor does by default, but)
5.362 F(it is often satisfactory)144 448.8 Q(.)-.65 E(`)144 472.8 Q F1<ad49ad>
1.666 E F0 2.582('d)1.666 G .082(oes not inhibit the use of the standard syste\
m directories for header \214les.)176.864 472.8 R .083(Thus, `)5.083 F F1
<ad49ad>1.666 E F0 2.583('a)1.666 G(nd)530 472.8 Q(`)144 484.8 Q F1
(\255nostdinc)1.666 E F0 2.5('a)1.666 G(re independent.)202.752 484.8 Q F1
<ad4c>108 501.6 Q F2(dir).35 E F0(Add directory)146.5 501.6 Q F2(dir)2.5 E F0
(to the list of directories to be searched for `)2.5 E F1<ad6c>1.666 E F0('.)
1.666 E F1<ad42>108 518.4 Q F2(pr)1.25 E(e\214x)-.37 E F0(This option speci\
\214es where to \214nd the executables, libraries and data \214les of the comp\
iler itself.)146.5 530.4 Q 1.273
(The compiler driver program runs one or more of the subprograms `)144 554.4 R
F1(cpp)1.666 E F0 1.273(', `)1.666 F F1(cc1)1.666 E F0 3.773('\()1.666 G(or)
489.914 554.4 Q 3.773(,f)-.4 G 1.273(or C++,)507.447 554.4 R(`)144 566.4 Q F1
(cc1plus)1.666 E F0 .119('\), `)1.666 F F1(as)1.666 E F0 2.619('a)1.666 G .119
(nd `)220.052 566.4 R F1(ld)1.666 E F0 2.619('. It)1.666 F(tries)2.619 E F2(pr)
2.619 E(e\214x)-.37 E F0 .12
(as a pre\214x for each program it tries to run, both with and)2.62 F
(without `)144 578.4 Q F2(machine)1.666 E F0(/)A F2(version)A F0 1.666(/')C(.)
-1.666 E .273
(For each subprogram to be run, the compiler driver \214rst tries the `)144
602.4 R F1<ad42>1.666 E F0 2.772('p)1.666 G .272(re\214x, if any)437.09 602.4 R
5.272(.I)-.65 G 2.772(ft)494.466 602.4 S .272(hat name)503.348 602.4 R 2.158
(is not found, or if `)144 614.4 R F1<ad42>1.666 E F0 4.658('w)1.666 G 2.158
(as not speci\214ed, the driver tries two standard pre\214xes, which are)261.25
614.4 R(`)144 626.4 Q F1(/usr/lib/gcc/)1.666 E F0 3.546('a)1.666 G 1.046(nd `)
211.988 626.4 R F1(/usr/local/lib/gcc/)1.666 E F0 3.546('. If)1.666 F 1.045
(neither of those results in a \214le name that is found,)3.546 F .852(the com\
piler driver searches for the unmodi\214ed program name, using the directories\
 speci\214ed in)144 638.4 R(your `)144 650.4 Q F1 -.74(PAT)1.666 G(H).74 E F0
2.5('e)1.666 G(nvironment variable.)208.062 650.4 Q .495
(The run-time support \214le `)144 674.4 R F1(libgcc.a)1.666 E F0 2.995('i)
1.666 G 2.995(sa)297.018 674.4 S .495(lso searched for using the `)308.343
674.4 R F1<ad42>1.666 E F0 2.995('p)1.666 G .495(re\214x, if needed.)445.875
674.4 R .495(If it is)5.495 F .247(not found there, the two standard pre\214xe\
s above are tried, and that is all.)144 686.4 R .248
(The \214le is left out of the)5.248 F .2
(link if it is not found by those means.)144 698.4 R .199
(Most of the time, on most machines, `)5.199 F F1(libgcc.a)1.666 E F0 2.699('i)
1.666 G 2.699(sn)497.942 698.4 S .199(ot actu-)509.531 698.4 R(ally necessary)
144 710.4 Q(.)-.65 E(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(9)535 768 Q EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F -1(Yo)144 84 S 3.836(uc)1 G 1.336
(an get a similar result from the environment variable)168.496 84 R/F1 10
/Times-Bold@0 SF(GCC_EXEC_PREFIX)3.837 E F0 3.837(;i)C 3.837(fi)500.159 84 S
3.837(ti)510.106 84 S 3.837(sd)519.503 84 S(e-)532.23 84 Q 3.527
(\214ned, its value is used as a pre\214x in the same way)144 96 R 8.527(.I)
-.65 G 6.027(fb)395.926 96 S 3.527(oth the `)410.283 96 R F1<ad42>1.666 E F0
6.027('o)1.666 G 3.527(ption and the)480.726 96 R F1(GCC_EXEC_PREFIX)144 108 Q
F0 1.255(variable are present, the `)3.755 F F1<ad42>1.666 E F0 3.756('o)1.666
G 1.256(ption is used \214rst and the environment)379.134 108 R
(variable value second.)144 120 Q/F2 9/Times-Bold@0 SF -.999(WA)72 153.6 S
(RNING OPTIONS).999 E F0 -.8(Wa)108 165.6 S .884(rnings are diagnostic message\
s that report constructions which are not inherently erroneous but which).8 F
(are risky or suggest there may have been an error)108 177.6 Q(.)-.55 E
(These options control the amount and kinds of warnings produced by GNU CC:)108
201.6 Q F1(\255fsyntax\255only)108 218.4 Q F0
(Check the code for syntax errors, but don')144 230.4 Q 2.5(te)-.18 G
(mit any output.)322.39 230.4 Q F1<ad77>108 247.2 Q F0
(Inhibit all warning messages.)144 247.2 Q F1(\255pedantic)108 264 Q F0 .275(I\
ssue all the warnings demanded by strict ANSI standard C; reject all programs \
that use forbidden)144 276 R(extensions.)144 288 Q -1.11(Va)144 312 S .946(lid\
 ANSI standard C programs should compile properly with or without this option \
\(though a)1.11 F .679(rare few will require `)144 324 R F1(\255ansi)1.666 E F0
3.179('\). However)1.666 F 3.179(,w)-.4 G .679
(ithout this option, certain GNU extensions and tradi-)324.706 324 R .479
(tional C features are supported as well.)144 336 R -.4(Wi)5.479 G .479
(th this option, they are rejected.).4 F .478(There is no reason to)5.479 F/F3
10/Times-Italic@0 SF(use)144 348 Q F0
(this option; it exists only to satisfy pedants.)2.5 E(`)144 372 Q F1
(\255pedantic)1.666 E F0 2.647('d)1.666 G .147(oes not cause warning messages \
for use of the alternate keywords whose names be-)204.009 372 R .719
(gin and end with `)144 384 R F1(__)1.666 E F0 3.219('. Pedantic)1.666 F .718
(warnings are also disabled in the expression that follows)3.219 F F1(__ex-)
3.218 E(tension__)144 396 Q F0 6.44(.H)C(owever)200.72 396 Q 3.94(,o)-.4 G
1.441
(nly system header \214les should use these escape routes; application pro-)
241.19 396 R(grams should avoid them.)144 408 Q F1(\255pedantic\255err)108
424.8 Q(ors)-.18 E F0(Like `)144 436.8 Q F1(\255pedantic)1.666 E F0
(', except that errors are produced rather than warnings.)1.666 E F1<ad57>108
453.6 Q(err)-.55 E(or)-.18 E F0 -.35(Tr)144 465.6 S
(eat warnings as errors; abort compilation after any warning.).35 E F1<ad57>108
482.4 Q F0(Print extra warning messages for these events:)144 482.4 Q 25<8341>
115.5 499.2 S .089
(nonvolatile automatic variable might be changed by a call to)153.81 499.2 R F1
(longjmp)2.589 E F0 5.089(.T)C .089(hese warnings are pos-)448.373 499.2 R
(sible only in optimizing compilation.)144 511.2 Q .226
(The compiler sees only the calls to)144 535.2 R F1(setjmp)2.726 E F0 5.226(.I)
C 2.726(tc)326.886 535.2 S .226(annot know where)336.832 535.2 R F1(longjmp)
2.726 E F0 .226(will be called; in fact,)2.726 F 3.428(as)144 547.2 S .928
(ignal handler could call it at any point in the code.)155.758 547.2 R .928
(As a result, you may get a warning even)5.928 F 1.42
(when there is in fact no problem because)144 559.2 R F1(longjmp)3.92 E F0 1.42
(cannot in fact be called at the place which)3.92 F(would cause a problem.)144
571.2 Q 25<8341>115.5 588 S .655
(function can return either with or without a value.)154.375 588 R .655
(\(Falling of)5.655 F 3.155(ft)-.18 G .655(he end of the function body is)
416.64 588 R(considered returning without a value.\))144 600 Q
(For example, this function would evoke such a warning:)5 E(foo \(a\))144 624 Q
({)144 636 Q(if \(a > 0\))149 648 Q(return a;)154 660 Q(})144 672 Q .788(Spuri\
ous warnings can occur because GNU CC does not realize that certain functions \
\(including)144 708 R F1(abort)144 720 Q F0(and)2.5 E F1(longjmp)2.5 E F0 2.5
(\)w)C(ill never return.)235.38 720 Q(GNU T)72 768 Q 163.32(ools 27dec1991)-.7
F(10)530 768 Q EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F 25<8341>115.5 84 S 2.5(ne)151.22 84 S
(xpression-statement contains no side ef)163.16 84 Q(fects.)-.18 E 25<8341>
115.5 100.8 S 2.5(nu)151.22 100.8 S
(nsigned value is compared against zero with `)163.72 100.8 Q/F1 10
/Times-Bold@0 SF(>)1.666 E F0 2.5('o)1.666 G 2.5(r`)366.602 100.8 S F1(<=)-.834
E F0('.)1.666 E F1<ad57>108 122.4 Q(implicit)-.18 E F0 -.8(Wa)144 134.4 S
(rn whenever a function or parameter is implicitly declared.).8 E F1<ad57>108
151.2 Q -.18(re)-.18 G(turn\255type).18 E F0 -.8(Wa)144 163.2 S .534
(rn whenever a function is de\214ned with a return-type that defaults to).8 F
F1(int)3.034 E F0 5.533(.A)C .533(lso warn about any)462.581 163.2 R F1 -.18
(re)144 175.2 S(turn).18 E F0
(statement with no return-value in a function whose return-type is not)2.5 E F1
(void)2.5 E F0(.)A F1<ad57>108 192 Q(unused)-.18 E F0 -.8(Wa)144 204 S .979(rn\
 whenever a local variable is unused aside from its declaration, whenever a fu\
nction is de-).8 F .849(clared static but never de\214ned, and whenever a stat\
ement computes a result that is explicitly not)144 216 R(used.)144 228 Q F1
(\255Wswitch)108 244.8 Q F0 -.8(Wa)144 256.8 S .044(rn whenever a).8 F F1
(switch)2.544 E F0 .044(statement has an index of enumeral type and lacks a)
2.544 F F1(case)2.545 E F0 .045(for one or more)2.545 F .48
(of the named codes of that enumeration.)144 268.8 R .48(\(The presence of a)
5.48 F F1(default)2.98 E F0 .48(label prevents this warning.\))2.98 F F1(case)
144 280.8 Q F0(labels outside the enumeration range also provoke warnings when\
 this option is used.)2.5 E F1(\255Wcomment)108 297.6 Q F0 -.8(Wa)144 309.6 S
(rn whenever a comment-start sequence `).8 E F1(/*)1.666 E F0 2.5('a)1.666 G
(ppears in a comment.)340.352 309.6 Q F1(\255Wtrigraphs)108 326.4 Q F0 -.8(Wa)
144 338.4 S(rn if any trigraphs are encountered \(assuming they are enabled\).)
.8 E F1<ad57>108 355.2 Q(aggr)-.55 E(egate\255r)-.18 E(eturn)-.18 E F0 -.8(Wa)
144 367.2 S .775
(rn if any functions that return structures or unions are de\214ned or called.)
.8 F .775(\(In languages where)5.775 F(you can return an array)144 379.2 Q 2.5
(,t)-.65 G(his also elicits a warning.\))243.87 379.2 Q F1(\255Wformat)108 396
Q F0 .547(Check calls to)144 408 R F1(printf)3.047 E F0(and)3.047 E F1(scanf)
3.046 E F0 3.046(,e)C .546(tc., to make sure that the ar)282.54 408 R .546
(guments supplied have types appro-)-.18 F
(priate to the format string speci\214ed.)144 420 Q F1<ad57>108 436.8 Q
(uninitialized)-.18 E F0
(An automatic variable is used without \214rst being initialized.)144 448.8 Q
.353(These warnings are possible only in optimizing compilation, because they \
require data \215ow infor)144 472.8 R(-)-.2 E .453
(mation that is computed only when optimizing.)144 484.8 R .453(If you don')
5.453 F 2.952(ts)-.18 G .452(pecify `)396.678 484.8 R F1<ad4f>1.666 E F0 .452
(', you simply won')1.666 F 2.952(tg)-.18 G(et)532.78 484.8 Q(these warnings.)
144 496.8 Q .043(These warnings occur only for variables that are candidates f\
or register allocation.)144 520.8 R .044(Therefore, they)5.043 F .986
(do not occur for a variable that is declared)144 532.8 R F1(volatile)3.486 E
F0 3.486(,o)C 3.486(rw)366.312 532.8 S .986
(hose address is taken, or whose size is)380.348 532.8 R .641
(other than 1, 2, 4 or 8 bytes.)144 544.8 R .641
(Also, they do not occur for structures, unions or arrays, even when)5.641 F
(they are in registers.)144 556.8 Q .246(Note that there may be no warning abo\
ut a variable that is used only to compute a value that itself)144 580.8 R .776
(is never used, because such computations may be deleted by data \215ow analys\
is before the warn-)144 592.8 R(ings are printed.)144 604.8 Q 1.143(These warn\
ings are made optional because GNU CC is not smart enough to see all the reaso\
ns)144 628.8 R .996
(why the code might be correct despite appearing to have an error)144 640.8 R
5.996(.H)-.55 G .996(ere is one example of how)429.77 640.8 R(this can happen:)
144 652.8 Q({)144 688.8 Q(int x;)149 700.8 Q(switch \(y\))149 712.8 Q({)154
724.8 Q(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F -.37(11)530.37 768 S EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F(case 1: x = 1;)154 84 Q(break;)159 96 Q(case 2: x = 4;)154
108 Q(break;)159 120 Q(case 3: x = 5;)154 132 Q(})154 144 Q(foo \(x\);)149 156
Q(})144 168 Q .548(If the value of)144 216 R/F1 10/Times-Bold@0 SF(y)3.047 E F0
.547(is always 1, 2 or 3, then)3.047 F F1(x)3.047 E F0 .547
(is always initialized, but GNU CC doesn')3.047 F 3.047(tk)-.18 G .547
(now this.)502.783 216 R(Here is another common case:)144 228 Q({)144 264 Q
(int save_y;)149 276 Q(if \(change_y\) save_y = y)149 288 Q 2.5(,y=n)-.65 G
(ew_y;)273.49 288 Q 1.666(...)149 300 S(if \(change_y\) y = save_y;)149 312 Q
(})144 324 Q(This has no bug because)144 372 Q F1(save_y)2.5 E F0
(is used only if it is set.)2.5 E .969
(Some spurious warnings can be avoided if you declare as)144 396 R F1(volatile)
3.469 E F0 .969(all the functions you use that)3.469 F(never return.)144 408 Q
F1(\255Wstrict\255pr)108 424.8 Q(ototypes)-.18 E F0 -.8(Wa)144 436.8 S 1.337
(rn if a function is declared or de\214ned without specifying the ar).8 F 1.336
(gument types.)-.18 F 1.336(\(An old-style)6.336 F .314(function de\214nition \
is permitted without a warning if preceded by a declaration which speci\214es \
the)144 448.8 R(ar)144 460.8 Q(gument types.\))-.18 E F1(\255Wmissing\255pr)108
477.6 Q(ototypes)-.18 E F0 -.8(Wa)144 489.6 S .512(rn if a global function is \
de\214ned without a previous prototype declaration.).8 F .512
(This warning is is-)5.512 F .863
(sued even if the de\214nition itself provides a prototype.)144 501.6 R .863
(The aim is to detect global functions that)5.863 F
(fail to be declared in header \214les.)144 513.6 Q F1<ad57>108 530.4 Q(all)
-.55 E F0 .856(All of the above `)144 530.4 R F1<ad57>1.666 E F0 3.356('o)1.666
G .856(ptions combined.)248.682 530.4 R .855
(These are all the options which pertain to usage that)5.856 F(we recommend av\
oiding and that we believe is easy to avoid, even in conjunction with macros.)
144 542.4 Q .068(The remaining `)108 571.2 R F1<ad57>1.666 E 1.666(...)-.92 G
F0 2.568('o)C .068(ptions are not implied by `)212.408 571.2 R F1<ad57>1.666 E
(all)-.55 E F0 2.568('b)1.666 G .069
(ecause they warn about constructions that we)358.518 571.2 R
(consider reasonable to use, on occasion, in clean programs.)108 583.2 Q F1
(\255Wtraditional)108 600 Q F0 -.8(Wa)144 612 S
(rn about certain constructs that behave dif).8 E
(ferently in traditional and ANSI C.)-.18 E 25<834d>115.5 628.8 S .251(acro ar)
152.89 628.8 R .251
(guments occurring within string constants in the macro body)-.18 F 5.251(.T)
-.65 G .25(hese would substitute the)438.42 628.8 R(ar)144 640.8 Q
(gument in traditional C, but are part of the constant in ANSI C.)-.18 E 25
<8341>115.5 657.6 S(function declared external in one block and then used afte\
r the end of the block.)153.72 657.6 Q 25<8341>115.5 674.4 S F1(switch)153.72
674.4 Q F0(statement has an operand of type)2.5 E F1(long)2.5 E F0(.)A F1
(\255Wshadow)108 696 Q F0 -.8(Wa)144 708 S
(rn whenever a local variable shadows another local variable.).8 E(GNU T)72 768
Q 163.32(ools 27dec1991)-.7 F(12)530 768 Q EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF<ad57>108 84 Q(id\255clash\255)-.18 E
/F2 10/Times-Italic@0 SF(len).09 E F0 -.8(Wa)147.137 96 S .637
(rn whenever two distinct identi\214ers match in the \214rst).8 F F2(len)3.138
E F0 3.138(characters. This)3.138 F .638(may help you pre-)3.138 F(pare a prog\
ram that will compile with certain obsolete, brain-damaged compilers.)144 108 Q
F1(\255Wpointer\255arith)108 124.8 Q F0 -.8(Wa)144 136.8 S .965
(rn about anything that depends on the `).8 F .965(`size of)-.74 F 2.445 -.74
('' a f).55 H .965(unction type or of).74 F F1(void)3.464 E F0 5.964(.G)C .964
(NU C assigns)483.072 136.8 R .585
(these types a size of 1, for convenience in calculations with)144 148.8 R F1
.585(void *)3.085 F F0 .586(pointers and pointers to func-)3.086 F(tions.)144
160.8 Q F1(\255Wcast\255qual)108 177.6 Q F0 -.8(Wa)144 189.6 S .578
(rn whenever a pointer is cast so as to remove a type quali\214er from the tar)
.8 F .577(get type.)-.18 F .577(For exam-)5.577 F(ple, warn if a)144 201.6 Q F1
(const char *)2.5 E F0(is cast to an ordinary)2.5 E F1(char *)2.5 E F0(.)A F1
(\255Wcast\255align)108 218.4 Q F0 -.8(Wa)144 230.4 S .008
(rn whenever a pointer is cast such that the required alignment of the tar).8 F
.008(get is increased.)-.18 F .008(For ex-)5.008 F 1.041(ample, warn if a)144
242.4 R F1 1.041(char *)3.541 F F0 1.041(is cast to an)3.541 F F1 1.04(int *)
3.541 F F0 1.04(on machines where integers can only be accessed at)3.54 F
(two- or four)144 254.4 Q(-byte boundaries.)-.2 E F1(\255Wwrite\255strings)108
271.2 Q F0 .898(Give string constants the type)144 283.2 R F1 .899(const char[)
3.399 F F2(length)A F0 3.399(]s)C 3.399(ot)353.879 283.2 S .899
(hat copying the address of one into a non-)365.058 283.2 R F1 .503
(const char *)144 295.2 R F0 .503(pointer will get a warning.)3.003 F .502
(These warnings will help you \214nd at compile time code)5.502 F .026(that ca\
n try to write into a string constant, but only if you have been very careful \
about using)144 307.2 R F1(const)2.527 E F0 .453
(in declarations and prototypes.)144 319.2 R .453
(Otherwise, it will just be a nuisance; this is why we did not make)5.453 F(`)
144 331.2 Q F1<ad57>1.666 E(all)-.55 E F0 2.5('r)1.666 G
(equest these warnings.)185.532 331.2 Q F1(\255Wconversion)108 348 Q F0 -.8(Wa)
144 360 S .137(rn if a prototype causes a type conversion that is dif).8 F .138
(ferent from what would happen to the same)-.18 F(ar)144 372 Q .841
(gument in the absence of a prototype.)-.18 F .84
(This includes conversions of \214xed point to \215oating and)5.841 F 1.299(vi\
ce versa, and conversions changing the width or signedness of a \214xed point \
ar)144 384 R 1.3(gument except)-.18 F(when the same as the default promotion.)
144 396 Q F1<ad57>108 412.8 Q(enum\255clash)-.55 E F2(\(C++ only)144 424.8 Q
(.\))-.55 E F0 -.8(Wa)5 G(rn when converting between dif).8 E
(ferent enumeration types.)-.18 E F1(\255Wno\255par)108 441.6 Q(entheses)-.18 E
F0(Disable warnings that parentheses are suggested around an expression.)144
453.6 Q F1<ad57>108 470.4 Q(overloaded\255virtual)-.55 E F2 .614(\(C++ only)144
482.4 R(.\))-.55 E F0 .613(In a derived class, the de\214nitions of virtual fu\
nctions must match the type signature)5.614 F .014
(of a virtual function declared in the base class.)144 494.4 R .014
(Use this option to request warnings when a derived)5.014 F 1.403(class declar\
es a function that may be an erroneous attempt to de\214ne a virtual function:\
 that is,)144 506.4 R .67(warn when a function with the same name as a virtual\
 function in the base class, but with a type)144 518.4 R(signature that doesn')
144 530.4 Q 2.5(tm)-.18 G(atch any virtual functions from the base class.)240.2
530.4 Q/F3 9/Times-Bold@0 SF(DEBUGGING OPTIONS)72 564 Q F0(GNU CC has various \
special options that are used for debugging either your program or GCC:)108 576
Q F1<ad67>108 592.8 Q F0 1.982
(Produce debugging information in the operating system')144 592.8 R 4.482(sn)
-.55 G 1.981(ative format \(for DBX or SDB or)394.804 592.8 R(DW)144 604.8 Q
2.969(ARF\). GDB)-1.11 F .469(also can work with this debugging information.)
2.969 F .47(On most systems that use DBX)5.469 F .804(format, `)144 616.8 R F1
<ad67>1.666 E F0 3.304('e)1.666 G .804(nables use of extra debugging informati\
on that only GDB can use; if you want to)204.9 616.8 R
(control for certain whether to generate this information, use `)144 628.8 Q F1
(\255ggdb)1.666 E F0 2.5('o)1.666 G 2.5(r`)429.372 628.8 S F1(\255gdbx)-.834 E
F0('.)1.666 E .168(Unlike most other C compilers, GNU CC allows you to use `)
144 652.8 R F1<ad67>1.666 E F0 2.668('w)1.666 G .168(ith `)416.976 652.8 R F1
<ad4f>1.666 E F0 2.668('. The)1.666 F .168(shortcuts taken)2.668 F .459(by opt\
imized code may occasionally produce surprising results: some variables you de\
clared may)144 664.8 R 1.122(not exist at all; \215ow of control may brie\215y\
 move where you did not expect it; some statements)144 676.8 R .684(may not be\
 executed because they compute constant results or their values were already a\
t hand;)144 688.8 R(some statements may execute in dif)144 700.8 Q
(ferent places because they were moved out of loops.)-.18 E .05
(Nevertheless it proves possible to debug optimized output.)144 724.8 R .051
(This makes it reasonable to use the op-)5.051 F(GNU T)72 768 Q 163.32
(ools 27dec1991)-.7 F(13)530 768 Q EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F(timizer for programs that might have bugs.)144 84 Q .947(Th\
e following options are useful when GNU CC is con\214gured and compiled with t\
he capability)144 108 R(for more than one debugging format.)144 120 Q/F1 10
/Times-Bold@0 SF(\255ggdb)108 136.8 Q F0(Produce debugging information in DBX \
format \(if that is supported\), including GDB extensions.)9.18 E F1(\255gdbx)
108 153.6 Q F0(Produce debugging information in DBX format \(if that is suppor\
ted\), without GDB extensions.)9.18 E F1(\255gsdb)108 170.4 Q F0
(Produce debugging information in SDB format \(if that is supported\).)144
170.4 Q F1(\255gdwarf)108 187.2 Q F0(Produce debugging information in DW)144
199.2 Q(ARF format \(if that is supported\).)-1.11 E F1<ad67>108 216 Q/F2 10
/Times-Italic@0 SF(level).09 E F1(\255ggdb)108 228 Q F2(level).09 E F1
(\255gdbx)108 240 Q F2(level).09 E F1(\255gsdb)108 252 Q F2(level).09 E F1
(\255gdwarf)108 268.8 Q F2(level).09 E F0 .572
(Request debugging information and also use)144 280.8 R F2(level)3.072 E F0
.572(to specify how much information.)3.072 F .573(The default)5.573 F
(level is 2.)144 292.8 Q .294(Level 1 produces minimal information, enough for\
 making backtraces in parts of the program that)144 316.8 R .266(you don')144
328.8 R 2.766(tp)-.18 G .266(lan to debug.)190.462 328.8 R .267
(This includes descriptions of functions and external variables, but no in-)
5.266 F(formation about local variables and no line numbers.)144 340.8 Q F1
<ad70>108 357.6 Q F0(Generate extra code to write pro\214le information suitab\
le for the analysis program)144 357.6 Q F1(pr)2.5 E(of)-.18 E F0(.)A F1(\255pg)
108 374.4 Q F0(Generate extra code to write pro\214le information suitable for\
 the analysis program)144 374.4 Q F1(gpr)2.5 E(of)-.18 E F0(.)A F1<ad61>108
391.2 Q F0 .295(Generate extra code to write pro\214le information for basic b\
locks, which will record the number of)144 391.2 R 1.022
(times each basic block is executed.)144 403.2 R 1.023
(This data could be analyzed by a program like)6.022 F F1(tcov)3.523 E F0 6.023
(.N)C(ote,)525.28 403.2 Q(however)144 415.2 Q 3.28(,t)-.4 G .78
(hat the format of the data is not what)186.59 415.2 R F1(tcov)3.28 E F0 3.28
(expects. Eventually)3.28 F(GNU)3.28 E F1(gpr)3.28 E(of)-.18 E F0 .78
(should be)3.28 F(extended to process this data.)144 427.2 Q F1<ad64>108 444 Q
F2(letters).09 E F0 .375
(Says to make debugging dumps during compilation at times speci\214ed by)
146.875 456 R F2(letters)2.876 E F0 5.376(.T)C .376(his is used for)483.042 456
R .503(debugging the compiler)144 468 R 5.503(.T)-.55 G .503
(he \214le names for most of the dumps are made by appending a word to)253.559
468 R(the source \214le name \(e.g.)144 480 Q(`)5 E F1(foo.c.rtl)1.666 E F0 2.5
('o)1.666 G 2.5(r`)300.342 480 S F1(foo.c.jump)-.834 E F0('\).)1.666 E F1
(\255dM)108 496.8 Q F0(Dump all macro de\214nitions, at the end of preprocessi\
ng, and write no output.)144 496.8 Q F1(\255dN)108 513.6 Q F0
(Dump all macro names, at the end of preprocessing.)144 513.6 Q F1(\255dD)108
530.4 Q F0(Dump all macro de\214nitions, at the end of preprocessing, in addit\
ion to normal output.)144 530.4 Q F1(\255dy)108 547.2 Q F0
(Dump debugging information during parsing, to standard error)144 547.2 Q(.)
-.55 E F1(\255dr)108 564 Q F0(Dump after R)144 564 Q(TL generation, to `)-.6 E
F2(\214le)1.666 E F0 -.834(.rtl '.)B F1(\255dx)108 580.8 Q F0(Just generate R)
144 580.8 Q(TL for a function instead of compiling it.)-.6 E
(Usually used with `)5 E F1(r)1.666 E F0('.)1.666 E F1(\255dj)108 597.6 Q F0
(Dump after \214rst jump optimization, to `)144 597.6 Q F2(\214le)1.666 E F0
-.834(.jump '.)B F1(\255ds)108 614.4 Q F0(Dump after CSE \(including the jump \
optimization that sometimes follows CSE\), to `)144 614.4 Q F2(\214le)1.666 E
F0 -.834(.cse '.)B F1(\255dL)108 631.2 Q F0(Dump after loop optimization, to `)
144 631.2 Q F2(\214le)1.666 E F0 -.834(.loop '.)B F1(\255dt)108 648 Q F0 .633(\
Dump after the second CSE pass \(including the jump optimization that sometime\
s follows CSE\),)144 648 R(to `)144 660 Q F2(\214le)1.666 E F0 -.834(.cse2 '.)B
F1(\255df)108 676.8 Q F0(Dump after \215ow analysis, to `)144 676.8 Q F2
(\214le)1.666 E F0 -.834(.\215ow '.)B F1(\255dc)108 693.6 Q F0
(Dump after instruction combination, to `)144 693.6 Q F2(\214le)1.666 E F0
-.834(.combine '.)B F1(\255dS)108 710.4 Q F0
(Dump after the \214rst instruction scheduling pass, to `)144 710.4 Q F2
(\214le)1.666 E F0 -.834(.sched '.)B(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F
(14)530 768 Q EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255dl)108 84 Q F0
(Dump after local register allocation, to `)144 84 Q/F2 10/Times-Italic@0 SF
(\214le)1.666 E F0 -.834(.lreg '.)B F1(\255dg)108 100.8 Q F0
(Dump after global register allocation, to `)144 100.8 Q F2(\214le)1.666 E F0
-.834(.greg '.)B F1(\255dR)108 117.6 Q F0
(Dump after the second instruction scheduling pass, to `)144 117.6 Q F2(\214le)
1.666 E F0 -.834(.sched2 '.)B F1(\255dJ)108 134.4 Q F0
(Dump after last jump optimization, to `)144 134.4 Q F2(\214le)1.666 E F0 -.834
(.jump2 '.)B F1(\255dd)108 151.2 Q F0
(Dump after delayed branch scheduling, to `)144 151.2 Q F2(\214le)1.666 E F0
-.834(.dbr '.)B F1(\255dk)108 168 Q F0
(Dump after conversion from registers to stack, to `)144 168 Q F2(\214le)1.666
E F0 -.834(.stack '.)B F1(\255dm)108 184.8 Q F0
(Print statistics on memory usage, at the end of the run, to standard error)144
184.8 Q(.)-.55 E F1(\255dp)108 201.6 Q F0 .338(Annotate the assembler output w\
ith a comment indicating which pattern and alternative was used.)144 201.6 R F1
(\255fpr)108 218.4 Q(etend\255\215oat)-.18 E F0 .747
(When running a cross-compiler)144 230.4 R 3.247(,p)-.4 G .747
(retend that the tar)282.948 230.4 R .747
(get machine uses the same \215oating point for)-.18 F(-)-.2 E .014
(mat as the host machine.)144 242.4 R .014(This causes incorrect output of the\
 actual \215oating constants, but the actu-)5.014 F .691(al instruction sequen\
ce will probably be the same as GNU CC would make when running on the)144 254.4
R(tar)144 266.4 Q(get machine.)-.18 E F1(\255save\255temps)108 283.2 Q F0 1.14
(Store the usual `)144 295.2 R(`temporary')-.74 E 3.639('i)-.74 G 1.139
(ntermediate \214les permanently; place them in the current directory)268.718
295.2 R .322(and name them based on the source \214le.)144 307.2 R .323
(Thus, compiling `)5.323 F F1(foo.c)1.666 E F0 2.823('w)1.666 G .323(ith `)
420.559 307.2 R F1 .323(\255c \255save\255temps)1.666 F F0 2.823('w)1.666 G
(ould)522.22 307.2 Q(produce \214les `)144 319.2 Q F1(foo.cpp)1.666 E F0 2.5
('a)1.666 G(nd `)246.202 319.2 Q F1(foo.s)1.666 E F0(', as well as `)1.666 E F1
(foo.o)1.666 E F0('.)1.666 E/F3 9/Times-Bold@0 SF(OPTIMIZA)72 352.8 Q
(TION OPTIONS)-.666 E F0(These options control various sorts of optimizations:)
108 364.8 Q F1<ad4f>108 381.6 Q F0 2.806(Optimize. Optimizing)144 381.6 R .306
(compilation takes somewhat more time, and a lot more memory for a lar)2.806 F
(ge)-.18 E(function.)144 393.6 Q -.4(Wi)144 417.6 S 1.098(thout `).4 F F1<ad4f>
1.666 E F0 1.098(', the compiler)1.666 F 2.198 -.55('s g).37 H 1.099
(oal is to reduce the cost of compilation and to make debugging).55 F .752
(produce the expected results.)144 429.6 R .751
(Statements are independent: if you stop the program with a break-)5.752 F .397
(point between statements, you can then assign a new value to any variable or \
change the program)144 441.6 R .761(counter to any other statement in the func\
tion and get exactly the results you would expect from)144 453.6 R
(the source code.)144 465.6 Q -.4(Wi)144 489.6 S .381(thout `).4 F F1<ad4f>
1.666 E F0 .381(', only variables declared)1.666 F F1 -.18(re)2.881 G(gister)
.18 E F0 .382(are allocated in registers.)2.881 F .382(The resulting compiled)
5.382 F(code is a little worse than produced by PCC without `)144 501.6 Q F1
<ad4f>1.666 E F0('.)1.666 E -.4(Wi)144 525.6 S(th `).4 E F1<ad4f>1.666 E F0
(', the compiler tries to reduce code size and execution time.)1.666 E .603
(When you specify `)144 549.6 R F1<ad4f>1.666 E F0 .603(', `)1.666 F F1
(\255fthr)1.666 E(ead\255jumps)-.18 E F0 3.103('a)1.666 G .603(nd `)337.23
549.6 R F1(\255fdelayed\255branch)1.666 E F0 3.103('a)1.666 G .603
(re turned on.)445.938 549.6 R .603(On some)5.603 F
(machines other \215ags may also be turned on.)144 561.6 Q F1(\255O2)108 578.4
Q F0 .757(Highly optimize.)144 578.4 R .757(As compared to `)5.757 F F1<ad4f>
1.666 E F0 .757(', this option will increase both compilation time and the)
1.666 F(performance of the generated code.)144 590.4 Q 1.769(All `)144 614.4 R
F1<ad66>1.666 E F2(\215ag)A F0 4.269('o)1.666 G 1.768
(ptions that control optimization are turned on when you specify `)204.34 614.4
R F1(\255O2)1.666 E F0 1.768(', except)1.666 F(`)144 626.4 Q F1(\255funr)1.666
E(oll\255loops)-.18 E F0 2.5('a)1.666 G(nd `)223.832 626.4 Q F1(\255funr)1.666
E(oll\255all\255loops)-.18 E F0('.)1.666 E .573(Options of the form `)108 655.2
R F1<ad66>1.666 E F2(\215ag)A F0 3.073('s)1.666 G .573
(pecify machine-independent \215ags.)232.937 655.2 R .574
(Most \215ags have both positive and nega-)5.573 F .206
(tive forms; the negative form of `)108 667.2 R F1(\255ffoo)1.666 E F0 2.705
('w)1.666 G .205(ould be `)281.493 667.2 R F1(\255fno\255foo)1.666 E F0 2.705
('. The)1.666 F .205(following list shows only one form\212)2.705 F
(the one which is not the default.)108 679.2 Q -1(Yo)5 G 2.5(uc)1 G
(an \214gure out the other form by either removing `)264.2 679.2 Q F1(no\255)
1.666 E F0 2.5('o)1.666 G 2.5(ra)489.312 679.2 S(dding it.)499.582 679.2 Q F1
(\255f\215oat\255stor)108 696 Q(e)-.18 E F0 1.127
(Do not store \215oating point variables in registers.)144 708 R 1.128
(This prevents undesirable excess precision on)6.128 F .206(machines such as t\
he 68000 where the \215oating registers \(of the 68881\) keep more precision t\
han a)144 720 R(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(15)530 768 Q EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(double)144 84 Q F0
(is supposed to have.)2.5 E .796(For most programs, the excess precision does \
only good, but a few programs rely on the precise)144 108 R
(de\214nition of IEEE \215oating point.)144 120 Q(Use `)5 E F1
(\255f\215oat\255stor)1.666 E(e)-.18 E F0 2.5('f)1.666 G(or such programs.)
369.362 120 Q F1(\255fmemoize\255lookups)108 136.8 Q(\255fsave\255memoized)108
153.6 Q/F2 10/Times-Italic@0 SF .43(\(C++ only)144 165.6 R(.\))-.55 E F0 .429(\
These \215ags are used to get the compiler to compile programs faster using he\
uristics.)5.43 F .403(They are not on by default since they are only ef)144
177.6 R .403(fective about half the time.)-.18 F .404(The other half of the)
5.403 F(time programs compile more slowly \(and take more memory\).)144 189.6 Q
.044(The \214rst time the compiler must build a call to a member function \(or\
 reference to a data member\),)144 213.6 R 1.107(it must \(1\) determine wheth\
er the class implements member functions of that name; \(2\) resolve)144 225.6
R .088(which member function to call \(which involves \214guring out what sort\
s of type conversions need to)144 237.6 R .479(be made\); and \(3\) check the \
visibility of the member function to the caller)144 249.6 R 5.479(.A)-.55 G
.479(ll of this adds up to)460.655 249.6 R .758(slower compilation.)144 261.6 R
(Normally)5.758 E 3.258(,t)-.65 G .757
(he second time a call is made to that member function \(or refer)276.174 261.6
R(-)-.2 E .986(ence to that data member\), it must go through the same lengthy\
 process again.)144 273.6 R .986(This means that)5.986 F(code like this)144
285.6 Q(cout << "This " << p << " has " << n << " legs.\\n";)149 309.6 Q .356
(makes six passes through all three steps.)144 333.6 R .355
(By using a software cache, a `)5.355 F(`hit')-.74 E 2.855('s)-.74 G .355
(igni\214cantly reduces)461.045 333.6 R .815(this cost.)144 345.6 R
(Unfortunately)5.815 E 3.315(,u)-.65 G .815
(sing the cache introduces another layer of mechanisms which must be)252.455
345.6 R 2.772(implemented, and so incurs its own overhead.)144 357.6 R(`)7.772
E F1(\255fmemoize\255lookups)1.666 E F0 5.272('e)1.666 G 2.771
(nables the software)457.258 357.6 R(cache.)144 369.6 Q 1.956(Because access p\
rivileges \(visibility\) to members and member functions may dif)144 393.6 R
1.956(fer from one)-.18 F .975(function context to the next,)144 405.6 R F1
(g++)3.475 E F0 .975(may need to \215ush the cache. W)3.475 F .974(ith the `)
-.4 F F1(\255fmemoize\255lookups)1.666 E F0(')1.666 E .561
(\215ag, the cache is \215ushed after every function that is compiled.)144
417.6 R .562(The `)5.562 F -.834(\255fsave\255memoized ')1.666 F .562
(\215ag en-)3.062 F .294(ables the same software cache, but when the compiler \
determines that the context of the last func-)144 429.6 R .403(tion compiled w\
ould yield the same access privileges of the next function to compile, it pres\
erves)144 441.6 R .031(the cache.)144 453.6 R .031(This is most helpful when d\
e\214ning many member functions for the same class: with the)5.031 F .694(exce\
ption of member functions which are friends of other classes, each member func\
tion has ex-)144 465.6 R(actly the same access privileges as every other)144
477.6 Q 2.5(,a)-.4 G(nd the cache need not be \215ushed.)338.82 477.6 Q F1
(\255fno\255default\255inline)108 494.4 Q F2 .975(\(C++ only)144 506.4 R(.\))
-.55 E F0 .975(If `)5.975 F F1(\255fdefault\255inline)1.666 E F0 3.475('i)1.666
G 3.475(se)294.462 506.4 S .975
(nabled then member functions de\214ned inside class scope)306.267 506.4 R .072
(are compiled inline by default; i.e., you don')144 518.4 R 2.572(tn)-.18 G
.072(eed to add `)332.986 518.4 R F1(inline)1.666 E F0 2.572('i)1.666 G 2.572
(nf)416.046 518.4 S .073(ront of the member function)426.948 518.4 R 2.754
(name. By)144 530.4 R .254(popular demand, this option is now the default.)
2.754 F 1.654 -.7(To k)5.254 H .253(eep GNU C++ from inlining these).7 F
(member functions, specify `)144 542.4 Q F1(\255fno\255default\255inline)1.666
E F0('.)1.666 E F1(\255fno\255defer\255pop)108 559.2 Q F0 1.138
(Always pop the ar)144 571.2 R 1.138
(guments to each function call as soon as that function returns.)-.18 F 1.138
(For machines)6.138 F .409(which must pop ar)144 583.2 R .408
(guments after a function call, the compiler normally lets ar)-.18 F .408
(guments accumulate)-.18 F
(on the stack for several function calls and pops them all at once.)144 595.2 Q
F1(\255ffor)108 612 Q(ce\255mem)-.18 E F0 1.186(Force memory operands to be co\
pied into registers before doing arithmetic on them.)144 624 R 1.187(This may)
6.187 F .982(produce better code by making all memory references potential com\
mon subexpressions.)144 636 R(When)5.981 E .954(they are not common subexpress\
ions, instruction combination should eliminate the separate reg-)144 648 R
(ister)144 660 Q 2.5(-load. I)-.2 F(am interested in hearing about the dif)2.5
E(ference this makes.)-.18 E F1(\255ffor)108 676.8 Q(ce\255addr)-.18 E F0 .194
(Force memory address constants to be copied into registers before doing arith\
metic on them.)144 688.8 R(This)5.194 E .265(may produce better code just as `)
144 700.8 R F1(\255ffor)1.666 E(ce\255mem)-.18 E F0 2.765('m)1.666 G(ay)352.287
700.8 Q 5.265(.I)-.65 G .265(am interested in hearing about the dif)374.937
700.8 R(fer)-.18 E(-)-.2 E(ence this makes.)144 712.8 Q(GNU T)72 768 Q 163.32
(ools 27dec1991)-.7 F(16)530 768 Q EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255fomit\255frame\255pointer)108 84 Q
F0(Don')144 96 Q 3.385(tk)-.18 G .885
(eep the frame pointer in a register for functions that don')175.535 96 R 3.385
(tn)-.18 G .884(eed one.)422.54 96 R .884(This avoids the in-)5.884 F 1.091(st\
ructions to save, set up and restore frame pointers; it also makes an extra re\
gister available in)144 108 R(many functions.)144 120 Q/F2 10/Times-Italic@0 SF
(It also makes debugging impossible on)5 E F0(most machines.)2.5 E .375
(On some machines, such as the V)144 144 R .374(ax, this \215ag has no ef)-1.11
F .374(fect, because the standard calling sequence)-.18 F .762(automatically h\
andles the frame pointer and nothing is saved by pretending it doesn')144 156 R
3.263(te)-.18 G 3.263(xist. The)501.737 156 R .059(machine-description macro)
144 168 R F1(FRAME_POINTER_REQUIRED)2.559 E F0 .058(controls whether a tar)
2.559 F .058(get machine)-.18 F(supports this \215ag.)144 180 Q F1
(\255\214nline)108 196.8 Q F0 .685(Pay attention the)144 208.8 R F1(inline)
3.185 E F0 3.185(keyword. Normally)3.185 F .686(the negation of this option `)
3.185 F F1(\255fno\255inline)1.666 E F0 3.186('i)1.666 G 3.186(su)503.628 208.8
S .686(sed to)515.704 208.8 R .496
(keep the compiler from expanding any functions inline.)144 220.8 R(However)
5.496 E 2.996(,t)-.4 G .496(he opposite ef)419.684 220.8 R .495
(fect may be de-)-.18 F(sirable when compiling with `)144 232.8 Q F1<ad67>1.666
E F0(', since `)1.666 E F1<ad67>1.666 E F0 2.5('n)1.666 G(ormally turns of)
337.594 232.8 Q 2.5(fa)-.18 G(ll inline function expansion.)412.124 232.8 Q F1
(\255\214nline\255functions)108 249.6 Q F0 1.292
(Integrate all simple functions into their callers.)144 261.6 R 1.293
(The compiler heuristically decides which func-)6.293 F
(tions are simple enough to be worth integrating in this way)144 273.6 Q(.)-.65
E .047
(If all calls to a given function are integrated, and the function is declared)
144 297.6 R F1(static)2.547 E F0 2.547(,t)C .047(hen GCC normal-)468.246 297.6
R(ly does not output the function as assembler code in its own right.)144 309.6
Q F1(\255fcaller\255saves)108 326.4 Q F0 .049(Enable values to be allocated in\
 registers that will be clobbered by function calls, by emitting extra)144
338.4 R .274(instructions to save and restore the registers around such calls.)
144 350.4 R .274(Such allocation is done only when)5.274 F
(it seems to result in better code than would otherwise be produced.)144 362.4
Q .334(This option is enabled by default on certain machines, usually those wh\
ich have no call-preserved)144 386.4 R(registers to use instead.)144 398.4 Q F1
(\255fkeep\255inline\255functions)108 415.2 Q F0 .207(Even if all calls to a g\
iven function are integrated, and the function is declared)144 427.2 R F1
(static)2.706 E F0 2.706(,n)C(evertheless)495.57 427.2 Q
(output a separate run-time callable version of the function.)144 439.2 Q F1
(\255fno\255function\255cse)108 456 Q F0 1.424(Do not put function addresses i\
n registers; make each instruction that calls a constant function)144 468 R
(contain the function')144 480 Q 2.5(sa)-.55 G(ddress explicitly)237.6 480 Q(.)
-.65 E 1.082(This option results in less ef)144 504 R 1.081
(\214cient code, but some strange hacks that alter the assembler output)-.18 F
(may be confused by the optimizations performed when this option is not used.)
144 516 Q .133(The following options control speci\214c optimizations.)108
544.8 R .133(The `)5.133 F F1(\255O2)1.666 E F0 2.633('o)1.666 G .134
(ption turns on all of these optimizations)380.306 544.8 R(except `)108 556.8 Q
F1(\255funr)1.666 E(oll\255loops)-.18 E F0 2.5('a)1.666 G(nd `)216.432 556.8 Q
F1(\255funr)1.666 E(oll\255all\255loops)-.18 E F0('.)1.666 E .749(The `)108
580.8 R F1<ad4f>1.666 E F0 3.249('o)1.666 G .749(ption usually turns on the `)
158.52 580.8 R F1(\255fthr)1.666 E(ead\255jumps)-.18 E F0 3.249('a)1.666 G .748
(nd `)353.666 580.8 R F1(\255fdelayed\255branch)1.666 E F0 3.248('o)1.666 G
.748(ptions, but speci\214c)463.224 580.8 R
(machines may change the default optimizations.)108 592.8 Q -1(Yo)108 616.8 S
3.307(uc)1 G .807(an use the following \215ags in the rare cases when `)131.967
616.8 R(`\214ne-tuning')-.74 E 3.307('o)-.74 G 3.307(fo)400.144 616.8 S .807
(ptimizations to be performed is)411.781 616.8 R(desired.)108 628.8 Q F1
(\255fstr)108 645.6 Q(ength\255r)-.18 E(educe)-.18 E F0(Perform the optimizati\
ons of loop strength reduction and elimination of iteration variables.)144
657.6 Q F1(\255fthr)108 674.4 Q(ead\255jumps)-.18 E F0 .173(Perform optimizati\
ons where we check to see if a jump branches to a location where another com-)
144 686.4 R .29(parison subsumed by the \214rst is found.)144 698.4 R .29
(If so, the \214rst branch is redirected to either the destination)5.29 F .81(\
of the second branch or a point immediately following it, depending on whether\
 the condition is)144 710.4 R(known to be true or false.)144 722.4 Q(GNU T)72
768 Q 163.32(ools 27dec1991)-.7 F(17)530 768 Q EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255funr)108 84 Q(oll\255loops)-.18 E
F0 .976(Perform the optimization of loop unrolling.)144 96 R .976
(This is only done for loops whose number of itera-)5.976 F
(tions can be determined at compile time or run time.)144 108 Q F1(\255funr)108
124.8 Q(oll\255all\255loops)-.18 E F0 .938
(Perform the optimization of loop unrolling.)144 136.8 R .938
(This is done for all loops.)5.938 F .938(This usually makes pro-)5.938 F
(grams run more slowly)144 148.8 Q(.)-.65 E F1(\255fcse\255follow\255jumps)108
165.6 Q F0 .078(In common subexpression elimination, scan through jump instruc\
tions in certain cases.)144 177.6 R .079(This is not)5.079 F
(as powerful as completely global CSE, but not as slow either)144 189.6 Q(.)
-.55 E F1(\255fr)108 206.4 Q(erun\255cse\255after\255loop)-.18 E F0(Re-run com\
mon subexpression elimination after loop optimizations has been performed.)144
218.4 Q F1(\255felide\255constructors)108 235.2 Q/F2 10/Times-Italic@0 SF .95
(\(C++ only)144 247.2 R(.\))-.55 E F0 .95(Use this option to instruct the comp\
iler to be smarter about when it can elide con-)5.95 F 2.5(structors. W)144
259.2 R(ithout this \215ag, GNU C++ and cfront both generate ef)-.4 E
(fectively the same code for:)-.18 E 2.5(Af)144 283.2 S(oo \(\);)157.05 283.2 Q
2.5(Ax\()144 295.2 S(foo \(\)\);)164.55 295.2 Q
(// x initialized by `foo \(\)', no ctor called)7.5 E 2.5(Ay=f)144 307.2 S
(oo \(\);)172.69 307.2 Q(// call to `foo \(\)' heads to temporary)7.5 E(,)-.65
E(// y is initialized from the temporary)184 319.2 Q(.)-.65 E .299
(Note the dif)144 343.2 R 2.799(ference! W)-.18 F .299
(ith this \215ag, GNU C++ initializes `)-.4 F F1(y)1.666 E F0 2.799('d)1.666 G
.299(irectly from the call to)399.872 343.2 R F1 .3(foo \(\))2.8 F F0(with-)2.8
E(out going through a temporary)144 355.2 Q(.)-.65 E F1
(\255fexpensive\255optimizations)108 372 Q F0
(Perform a number of minor optimizations that are relatively expensive.)144 384
Q F1(\255fdelayed\255branch)108 400.8 Q F0 1.889(If supported for the tar)144
412.8 R 1.888
(get machine, attempt to reorder instructions to exploit instruction slots)-.18
F(available after delayed branch instructions.)144 424.8 Q F1
(\255fschedule\255insns)108 441.6 Q F0 1.291(If supported for the tar)144 453.6
R 1.292
(get machine, attempt to reorder instructions to eliminate execution stalls)
-.18 F .052(due to required data being unavailable.)144 465.6 R .051
(This helps machines that have slow \215oating point or mem-)5.051 F .109(ory \
load instructions by allowing other instructions to be issued until the result\
 of the load or \215oat-)144 477.6 R(ing point instruction is required.)144
489.6 Q F1(\255fschedule\255insns2)108 506.4 Q F0 .178(Similar to `)144 518.4 R
F1(\255fschedule\255insns)1.666 E F0 .177
(', but requests an additional pass of instruction scheduling after reg-)1.666
F .384(ister allocation has been done.)144 530.4 R .385
(This is especially useful on machines with a relatively small num-)5.384 F
(ber of registers and where memory load instructions take more than one cycle.)
144 542.4 Q/F3 9/Times-Bold@0 SF -.666(TA)72 576 S(RGET OPTIONS).666 E F0 .291
(By default, GNU CC compiles code for the same type of machine that you are us\
ing.)108 588 R(However)5.291 E 2.791(,i)-.4 G 2.791(tc)501.648 588 S .291
(an also)511.659 588 R .468(be installed as a cross-compiler)108 600 R 2.968
(,t)-.4 G 2.968(oc)243.25 600 S .468(ompile for some other type of machine.)
255.658 600 R .469(In fact, several dif)5.468 F .469(ferent con-)-.18 F 1.61
(\214gurations of GNU CC, for dif)108 612 R 1.61(ferent tar)-.18 F 1.61
(get machines, can be installed side by side.)-.18 F 1.61(Then you specify)6.61
F(which one to use with the `)108 624 Q F1<ad62>1.666 E F0 2.5('o)1.666 G
(ption.)241.742 624 Q .226(In addition, older and newer versions of GNU CC can\
 be installed side by side.)108 648 R .226(One of them \(probably the)5.226 F
(newest\) will be the default, but you may sometimes wish to use another)108
660 Q(.)-.55 E F1<ad62>108 676.8 Q F2(machine)2.89 E F0 1.49(The ar)147.99
688.8 R(gument)-.18 E F2(machine)3.99 E F0 1.49(speci\214es the tar)3.99 F 1.49
(get machine for compilation.)-.18 F 1.49(This is useful when you)6.49 F
(have installed GNU CC as a cross-compiler)144 700.8 Q(.)-.55 E .667
(The value to use for)144 724.8 R F2(machine)3.167 E F0 .668
(is the same as was speci\214ed as the machine type when con\214guring)3.167 F
(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(18)530 768 Q EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F .822(GNU CC as a cross-compiler)144 84 R 5.822(.F)-.55 G
.822(or example, if a cross-compiler was con\214gured with `)277.82 84 R/F1 10
/Times-Bold@0 SF(con\214gur)1.666 E(e)-.18 E F0 -.834(i386v ',)144 96 R .571
(meaning to compile for an 80386 running System V)3.07 F 3.071(,t)-1.29 G .571
(hen you would specify `)397.293 96 R F1 .571(\255b i386v)1.666 F F0(')1.666 E
(to run that cross compiler)144 108 Q(.)-.55 E .773(When you do not specify `)
144 132 R F1<ad62>1.666 E F0 .772
(', it normally means to compile for the same type of machine that)1.666 F
(you are using.)144 144 Q F1<ad56>108 160.8 Q/F2 10/Times-Italic@0 SF(version)
2.76 E F0 .735(The ar)147.235 172.8 R(gument)-.18 E F2(version)3.235 E F0 .736
(speci\214es which version of GNU CC to run.)3.235 F .736
(This is useful when multiple)5.736 F .107(versions are installed.)144 184.8 R
.107(For example,)5.107 F F2(version)2.607 E F0 .107(might be `)2.607 F F1(2.0)
1.666 E F0 .106(', meaning to run GNU CC version 2.0.)1.666 F .02
(The default version, when you do not specify `)144 208.8 R F1<ad56>1.666 E F0
.021(', is controlled by the way GNU CC is installed.)1.666 F(Normally)144
220.8 Q 2.5(,i)-.65 G 2.5(tw)189.46 220.8 S
(ill be a version that is recommended for general use.)201.96 220.8 Q/F3 9
/Times-Bold@0 SF(MACHINE DEPENDENT OPTIONS)72 254.4 Q F0 .892(Each of the tar)
108 266.4 R .892
(get machine types can have its own special options, starting with `)-.18 F F1
<ad6d>1.666 E F0 .891(', to choose among)1.666 F .052(various hardware models \
or con\214gurations\212for example, 68010 vs 68020, \215oating coprocessor or \
none.)108 278.4 R(A)5.053 E .91(single installed version of the compiler can c\
ompile for any model or con\214guration, according to the op-)108 290.4 R
(tions speci\214ed.)108 302.4 Q(These are the `)108 326.4 Q F1<ad6d>1.666 E F0
2.5('o)1.666 G(ptions de\214ned for the 68000 series:)195.332 326.4 Q F1
(\255m68020)108 343.2 Q(\255mc68020)108 360 Q F0 .732
(Generate output for a 68020 \(rather than a 68000\).)144 372 R .733
(This is the default if you use the unmodi\214ed)5.732 F(sources.)144 384 Q F1
(\255m68000)108 400.8 Q(\255mc68000)108 417.6 Q F0
(Generate output for a 68000 \(rather than a 68020\).)144 429.6 Q F1
(\255m68881)108 446.4 Q F0 .272
(Generate output containing 68881 instructions for \215oating point.)144 458.4
R .272(This is the default if you use the)5.272 F(unmodi\214ed sources.)144
470.4 Q F1(\255mfpa)108 487.2 Q F0(Generate output containing Sun FP)8.08 E 2.5
(Ai)-.92 G(nstructions for \215oating point.)296.13 487.2 Q F1
(\255msoft\255\215oat)108 504 Q F0 .887
(Generate output containing library calls for \215oating point.)144 516 R F2
-.7(WA)5.888 G(RNING:).7 E F0 .888(the requisite libraries are)3.388 F .421
(not part of GNU CC.)144 528 R .421(Normally the facilities of the machine')
5.421 F 2.92(su)-.55 G .42(sual C compiler are used, but this)403.88 528 R
(can')144 540 Q 3.633(tb)-.18 G 3.633(ed)172.443 540 S 1.134
(one directly in cross-compilation.)185.516 540 R -1(Yo)6.134 G 3.634(um)1 G
1.134(ust make your own arrangements to provide)357.116 540 R
(suitable library functions for cross-compilation.)144 552 Q F1(\255mshort)108
568.8 Q F0(Consider type)144 580.8 Q F1(int)2.5 E F0(to be 16 bits wide, like)
2.5 E F1(short int)2.5 E F0(.)A F1(\255mnobit\214eld)108 597.6 Q F0
(Do not use the bit-\214eld instructions.)144 609.6 Q(`)5 E F1(\255m68000)1.666
E F0 2.5('i)1.666 G(mplies `)347.192 609.6 Q F1(\255mnobit\214eld)1.666 E F0
('.)1.666 E F1(\255mbit\214eld)108 626.4 Q F0 .251
(Do use the bit-\214eld instructions.)144 638.4 R(`)5.251 E F1(\255m68020)1.666
E F0 2.751('i)1.666 G .25(mplies `)333.418 638.4 R F1(\255mbit\214eld)1.666 E
F0 2.75('. This)1.666 F .25(is the default if you use)2.75 F
(the unmodi\214ed sources.)144 650.4 Q F1(\255mrtd)108 667.2 Q F0 .757
(Use a dif)8.64 F .757(ferent function-calling convention, in which functions \
that take a \214xed number of ar)-.18 F(gu-)-.18 E .266(ments return with the)
144 679.2 R F1(rtd)2.766 E F0 .266(instruction, which pops their ar)2.766 F
.266(guments while returning.)-.18 F .265(This saves one)5.265 F
(instruction in the caller since there is no need to pop the ar)144 691.2 Q
(guments there.)-.18 E .428(This calling convention is incompatible with the o\
ne normally used on Unix, so you cannot use it)144 715.2 R
(if you need to call libraries compiled with the Unix compiler)144 727.2 Q(.)
-.55 E(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(19)530 768 Q EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F .901(Also, you must provide function prototypes for all fun\
ctions that take variable numbers of ar)144 84 R(gu-)-.18 E(ments \(including)
144 96 Q/F1 10/Times-Bold@0 SF(printf)2.5 E F0
(\); otherwise incorrect code will be generated for calls to those functions.)A
1.1(In addition, seriously incorrect code will result if you call a function w\
ith too many ar)144 120 R(guments.)-.18 E(\(Normally)144 132 Q 2.5(,e)-.65 G
(xtra ar)194.45 132 Q(guments are harmlessly ignored.\))-.18 E(The)144 156 Q F1
(rtd)2.5 E F0(instruction is supported by the 68010 and 68020 processors, but \
not by the 68000.)2.5 E(These `)108 184.8 Q F1<ad6d>1.666 E F0 2.5('o)1.666 G
(ptions are de\214ned for the V)165.902 184.8 Q(ax:)-1.11 E F1(\255munix)108
201.6 Q F0 1.002(Do not output certain jump instructions \()144 213.6 R F1
(aobleq)A F0 1.002(and so on\) that the Unix assembler for the V)3.502 F(ax)
-1.11 E(cannot handle across long ranges.)144 225.6 Q F1(\255mgnu)108 242.4 Q
F0 .03(Do output those jump instructions, on the assumption that you will asse\
mble with the GNU assem-)5.85 F(bler)144 254.4 Q(.)-.55 E F1(\255mg)108 271.2 Q
F0(Output code for g-format \215oating point numbers instead of d-format.)144
271.2 Q(These `)108 300 Q F1<ad6d>1.666 E F0 2.5('s)1.666 G
(witches are supported on the Sparc:)164.792 300 Q F1(\255mfpu)108 316.8 Q F0
.668(Generate output containing \215oating point instructions.)7.52 F .668
(This is the default if you use the unmodi-)5.668 F(\214ed sources.)144 328.8 Q
F1(\255mno\255epilogue)108 345.6 Q F0 .66
(Generate separate return instructions for)144 357.6 R F1 -.18(re)3.161 G(turn)
.18 E F0 3.161(statements. This)3.161 F .661(has both advantages and disad-)
3.161 F(vantages; I don')144 369.6 Q 2.5(tr)-.18 G(ecall what they are.)216.86
369.6 Q(These `)108 398.4 Q F1<ad6d>1.666 E F0 2.5('o)1.666 G
(ptions are de\214ned for the Convex:)165.902 398.4 Q F1(\255mc1)108 415.2 Q F0
(Generate output for a C1.)144 415.2 Q
(This is the default when the compiler is con\214gured for a C1.)5 E F1
(\255mc2)108 432 Q F0(Generate output for a C2.)144 432 Q
(This is the default when the compiler is con\214gured for a C2.)5 E F1
(\255margcount)108 448.8 Q F0 1.412(Generate code which puts an ar)144 460.8 R
1.412(gument count in the word preceding each ar)-.18 F 1.412(gument list.)-.18
F(Some)6.412 E 1.285(nonportable Convex and V)144 472.8 R 1.285
(ax programs need this word.)-1.11 F 1.285(\(Debuggers don')6.285 F 1.285
(t, except for functions)-.18 F(with variable-length ar)144 484.8 Q
(gument lists; this info is in the symbol table.\))-.18 E F1(\255mnoargcount)
108 501.6 Q F0(Omit the ar)144 513.6 Q(gument count word.)-.18 E
(This is the default if you use the unmodi\214ed sources.)5 E(These `)108 542.4
Q F1<ad6d>1.666 E F0 2.5('o)1.666 G(ptions are de\214ned for the AMD Am29000:)
165.902 542.4 Q F1(\255mdw)108 559.2 Q F0 .693(Generate code that assumes the \
DW bit is set, i.e., that byte and halfword operations are directly)9.19 F
(supported by the hardware.)144 571.2 Q(This is the default.)5 E F1(\255mnodw)
108 588 Q F0(Generate code that assumes the DW bit is not set.)144 600 Q F1
(\255mbw)108 616.8 Q F0 .869(Generate code that assumes the system supports by\
te and halfword write operations.)9.19 F .87(This is the)5.87 F(default.)144
628.8 Q F1(\255mnbw)108 645.6 Q F0 1.748(Generate code that assumes the system\
s does not support byte and halfword write operations.)144 657.6 R
(This implies `)144 669.6 Q F1(\255mnodw)1.666 E F0('.)1.666 E F1(\255msmall)
108 686.4 Q F0 .447(Use a small memory model that assumes that all function ad\
dresses are either within a single 256)144 698.4 R 1.123
(KB segment or at an absolute address of less than 256K.)144 710.4 R 1.123
(This allows the)6.123 F F1(call)3.623 E F0 1.123(instruction to be)3.623 F
(used instead of a)144 722.4 Q F1(const)2.5 E F0(,)A F1(consth)2.5 E F0(,)A F1
(calli)2.5 E F0(sequence.)2.5 E(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(20)
530 768 Q EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255mlarge)108 84 Q F0
(Do not assume that the)144 96 Q F1(call)2.5 E F0
(instruction can be used; this is the default.)2.5 E F1(\255m29050)108 112.8 Q
F0(Generate code for the Am29050.)144 124.8 Q F1(\255m29000)108 141.6 Q F0
(Generate code for the Am29000.)144 153.6 Q(This is the default.)5 E F1
(\255mkernel\255r)108 170.4 Q(egisters)-.18 E F0 .533
(Generate references to registers)144 182.4 R F1(gr64-gr95)3.034 E F0 .534
(instead of)3.034 F F1(gr96-gr127)3.034 E F0 5.534(.T)C .534
(his option can be used when)424.29 182.4 R 1.213(compiling kernel code that w\
ants a set of global registers disjoint from that used by user)144 194.4 R
(-mode)-.2 E(code.)144 206.4 Q .676
(Note that when this option is used, register names in `)144 230.4 R F1<ad66>
1.666 E F0 3.176<278d>1.666 G .676(ags must use the normal, user)390.448 230.4
R(-mode,)-.2 E(names.)144 242.4 Q F1(\255muser\255r)108 259.2 Q(egisters)-.18 E
F0(Use the normal set of global registers,)144 271.2 Q F1(gr96-gr127)2.5 E F0 5
(.T)C(his is the default.)359.24 271.2 Q F1(\255mstack\255check)108 288 Q F0
(Insert a call to)144 300 Q F1(__msp_check)2.5 E F0
(after each stack adjustment.)2.5 E(This is often used for kernel code.)5 E
(These `)108 328.8 Q F1<ad6d>1.666 E F0 2.5('o)1.666 G
(ptions are de\214ned for Motorola 88K architectures:)165.902 328.8 Q F1
(\255mbig\255pic)108 345.6 Q F0 1.538(Emit position-independent code, suitable\
 for dynamic linking, even if branches need lar)144 357.6 R 1.538(ge dis-)-.18
F 3.48(placements. Equivalent)144 369.6 R .98(to the general-use option `)3.48
F F1(\255fPIC)1.666 E F0 3.481('. The)1.666 F .981(general-use option `)3.481 F
F1(\255fpic)1.666 E F0 .981(', by)1.666 F 1.204(contrast, only emits valid 88k\
 code if all branches involve small displacements.)144 381.6 R 1.204
(GCC does not)6.204 F(emit position-independent code by default.)144 393.6 Q F1
(\255midentify\255r)108 410.4 Q(evision)-.18 E F0 .612(Include an)144 422.4 R
F1(ident)3.112 E F0 .612(directive in the assembler output recording the sourc\
e \214le name, compiler name)3.112 F
(and version, timestamp, and compilation \215ags used.)144 434.4 Q F1
(\255mno\255underscor)108 451.2 Q(es)-.18 E F0 .552(In assembler output, emit \
symbol names without adding an underscore character at the beginning)144 463.2
R(of each name.)144 475.2 Q
(The default is to use an underscore as pre\214x on each name.)5 E F1
(\255mno\255check\255zer)108 492 Q(o\255division)-.18 E(\255mcheck\255zer)108
508.8 Q(o\255division)-.18 E F0 .838(Early models of the 88K architecture had \
problems with division by zero; in particular)144 520.8 R 3.338(,m)-.4 G .838
(any of)513.892 520.8 R .284(them didn')144 532.8 R 2.784(tt)-.18 G 2.784
(rap. Use)196.058 532.8 R .284(these options to avoid including \(or to includ\
e explicitly\) additional code to)2.784 F 2.931
(detect division by zero and signal an exception.)144 544.8 R 2.932
(All GCC con\214gurations for the 88K use)7.931 F(`)144 556.8 Q F1
(\255mcheck\255zer)1.666 E(o\255division)-.18 E F0 2.5('b)1.666 G 2.5(yd)
262.852 556.8 S(efault.)275.352 556.8 Q F1(\255mocs\255debug\255info)108 573.6
Q(\255mno\255ocs\255debug\255info)108 590.4 Q F0 .873(Include \(or omit\) addi\
tional debugging information \(about registers used in each stack frame\) as)
144 602.4 R 1.481(speci\214ed in the 88Open Object Compatibility Standard, `)
144 614.4 R(`OCS')-.74 E 3.982('. This)-.74 F 1.482(extra information is not)
3.982 F .749(needed by GDB.)144 626.4 R .749(The default for DG/UX, SV)5.749 F
.749(r4, and Delta 88 SV)-.6 F .748(r3.2 is to include this informa-)-.6 F
(tion; other 88k con\214gurations omit this information by default.)144 638.4 Q
F1(\255mocs\255frame\255position)108 655.2 Q
(\255mno\255ocs\255frame\255position)108 672 Q F0 .169(Force \(or do not requi\
re\) register values to be stored in a particular place in stack frames, as sp\
eci-)144 684 R 10.8(\214ed in OCS.)144 696 R 10.8(The DG/UX, Delta88 SV)231.13
696 R 10.8(r3.2, and BCS con\214gurations use)-.6 F(`)144 708 Q F1
(\255mocs\255frame\255position)1.666 E F0 19.731
('; other 88k con\214gurations have the default)1.666 F(`)144 720 Q F1
(\255mno\255ocs\255frame\255position)1.666 E F0('.)1.666 E(GNU T)72 768 Q
163.32(ools 27dec1991)-.7 F(21)530 768 Q EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255moptimize\255arg\255ar)108 84 Q
(ea)-.18 E(\255mno\255optimize\255arg\255ar)108 100.8 Q(ea)-.18 E F0 .596
(Control how to store function ar)144 112.8 R .596(guments in stack frames.)
-.18 F(`)5.596 E F1(\255moptimize\255arg\255ar)1.666 E(ea)-.18 E F0 3.096('s)
1.666 G .596(aves space,)494.424 112.8 R 2.123
(but may break some debuggers \(not GDB\).)144 124.8 R(`)7.123 E F1
(\255mno\255optimize\255arg\255ar)1.666 E(ea)-.18 E F0 4.623('c)1.666 G 2.123
(onforms better to)466.874 124.8 R 5(standards. By)144 136.8 R
(default GCC does not optimize the ar)2.5 E(gument area.)-.18 E F1
(\255mshort\255data\255)108 153.6 Q/F2 10/Times-Italic@0 SF(num).27 E(num)
146.829 165.6 Q F0 .329
(Generate smaller data references by making them relative to)2.829 F F1(r0)
2.829 E F0 2.829(,w)C .328(hich allows loading a val-)435.368 165.6 R .2
(ue using a single instruction \(rather than the usual two\).)144 177.6 R -1
(Yo)5.201 G 2.701(uc)1 G .201(ontrol which data references are af-)397.115
177.6 R 1.301(fected by specifying)144 189.6 R F2(num)3.801 E F0 1.301
(with this option.)3.801 F 1.3(For example, if you specify `)6.301 F F1
(\255mshort\255data\255512)1.666 E F0(',)1.666 E 2.832
(then the data references af)144 201.6 R 2.832
(fected are those involving displacements of less than 512 bytes.)-.18 F(`)144
213.6 Q F1(\255mshort\255data\255)1.666 E F2(num)A F0 2.5('i)1.666 G 2.5(sn)
243.032 213.6 S(ot ef)254.422 213.6 Q(fective for)-.18 E F2(num)2.5 E F0
(greater than 64K.)2.5 E F1(\255msvr4)108 230.4 Q(\255msvr3)108 247.2 Q F0 -.35
(Tu)144 259.2 S .159(rn on \(`).35 F F1(\255msvr4)1.666 E F0 .159('\) or of)
1.666 F 2.658(f\()-.18 G(`)258.536 259.2 Q F1(\255msvr3)1.666 E F0 .158
('\) compiler extensions related to System V release 4 \(SV)1.666 F(r4\).)-.6 E
(This controls the following:)144 271.2 Q 25<8357>115.5 288 S 3.008(hich varia\
nt of the assembler syntax to emit \(which you can select independently using)
153.44 288 R(`)144 300 Q F1(\255mversion03.00)1.666 E F0('\).)1.666 E 25<8360>
115.5 316.8 S F1(\255msvr4)148.996 316.8 Q F0 2.5('m)1.666 G
(akes the C preprocessor recognize `)196.632 316.8 Q F1(#pragma weak)1.666 E F0
(')1.666 E 25<8360>115.5 333.6 S F1(\255msvr4)148.996 333.6 Q F0 2.5('m)1.666 G
(akes GCC issue additional declaration directives used in SV)196.632 333.6 Q
(r4.)-.6 E(`)108 350.4 Q F1(\255msvr3)1.666 E F0 2.5('i)1.666 G 2.5(st)155.632
350.4 S(he default for all m88K con\214gurations except the SV)164.802 350.4 Q
(r4 con\214guration.)-.6 E F1(\255mtrap\255large\255shift)108 367.2 Q
(\255mhandle\255large\255shift)108 384 Q F0 .329
(Include code to detect bit-shifts of more than 31 bits; respectively)144 396 R
2.829(,t)-.65 G .329(rap such shifts or emit code to)417.489 396 R
(handle them properly)144 408 Q 5(.B)-.65 G 2.5(yd)243.06 408 S
(efault GCC makes no special provision for lar)255.56 408 Q(ge bit shifts.)-.18
E F1(\255muse\255div\255instruction)108 424.8 Q F0 -1.11(Ve)144 436.8 S .268
(ry early models of the 88K architecture didn')1.11 F 2.768(th)-.18 G .268
(ave a divide instruction, so GCC avoids that in-)347.584 436.8 R
(struction by default.)144 448.8 Q(Use this option to specify that it')5 E 2.5
(ss)-.55 G(afe to use the divide instruction.)370.11 448.8 Q F1
(\255mversion\25503.00)108 465.6 Q F0 .171(Use alternative assembler syntax fo\
r the assembler version corresponding to SV)144 477.6 R .17
(r4, but without en-)-.6 F .586(abling the other features triggered by `)144
489.6 R F1(\255svr4)1.666 E F0 3.087('. This)1.666 F .587(is implied by `)3.087
F F1(\255svr4)1.666 E F0 .587(', is the default for the)1.666 F(SV)144 501.6 Q
.395(r4 con\214guration of GCC, and is permitted by the DG/UX con\214guration \
only if `)-.6 F F1(\255svr4)1.666 E F0 2.895('i)1.666 G 2.895(sa)517.105 501.6
S(lso)528.33 501.6 Q 2.5(speci\214ed. The)144 513.6 R(Delta 88 SV)2.5 E
(r3.2 con\214guration ignores this option.)-.6 E F1
(\255mwarn\255passed\255structs)108 530.4 Q F0 -.8(Wa)144 542.4 S 1.632
(rn when a function passes a struct as an ar).8 F 1.633(gument or result.)-.18
F 1.633(Structure-passing conventions)6.633 F .293(have changed during the evo\
lution of the C language, and are often the source of portability prob-)144
554.4 R 2.5(lems. By)144 566.4 R(default, GCC issues no such warning.)2.5 E
(These options are de\214ned for the IBM RS6000:)108 583.2 Q F1
(\255mfp\255in\255toc)108 612 Q(\255mno\255fp\255in\255toc)108 628.8 Q F0 .831
(Control whether or not \215oating-point constants go in the T)144 640.8 R .831
(able of Contents \(T)-.7 F .832(OC\), a table of all)-.18 F .443
(global variable and function addresses.)144 652.8 R .443
(By default GCC puts \215oating-point constants there; if the)5.443 F -.18(TO)
144 664.8 S 3.05(Co).18 G .55(ver\215ows, `)171.87 664.8 R F1
(\255mno\255fp\255in\255toc)1.666 E F0 3.05('w)1.666 G .55
(ill reduce the size of the T)303.812 664.8 R .551
(OC, which may avoid the over)-.18 F(-)-.2 E(\215ow)144 676.8 Q(.)-.65 E
(These `)108 705.6 Q F1<ad6d>1.666 E F0 2.5('o)1.666 G
(ptions are de\214ned for the IBM R)165.902 705.6 Q 2.5(TP)-.6 G(C:)310.012
705.6 Q(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(22)530 768 Q EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255min\255line\255mul)108 84 Q F0
(Use an in-line code sequence for integer multiplies.)144 96 Q
(This is the default.)5 E F1(\255mcall\255lib\255mul)108 112.8 Q F0(Call)144
124.8 Q F1(lmul$$)2.5 E F0(for integer multiples.)2.5 E F1
(\255mfull\255fp\255blocks)108 141.6 Q F0 .381(Generate full-size \215oating p\
oint data blocks, including the minimum amount of scratch space rec-)144 153.6
R(ommended by IBM.)144 165.6 Q(This is the default.)5 E F1
(\255mminimum\255fp\255blocks)108 182.4 Q F0 .569
(Do not include extra scratch space in \215oating point data blocks.)144 194.4
R .569(This results in smaller code, but)5.569 F
(slower execution, since scratch space must be allocated dynamically)144 206.4
Q(.)-.65 E F1(\255mfp\255arg\255in\255fpr)108 223.2 Q(egs)-.18 E F0 .008(Use a\
 calling sequence incompatible with the IBM calling convention in which \215oa\
ting point ar)144 235.2 R(gu-)-.18 E .16
(ments are passed in \215oating point registers.)144 247.2 R .161(Note that)
5.161 F F1(varargs.h)2.661 E F0(and)2.661 E F1(stdargs.h)2.661 E F0 .161
(will not work with)2.661 F
(\215oating point operands if this option is speci\214ed.)144 259.2 Q F1
(\255mfp\255arg\255in\255gr)108 276 Q(egs)-.18 E F0
(Use the normal calling convention for \215oating point ar)144 288 Q 2.5
(guments. This)-.18 F(is the default.)2.5 E F1(\255mhc\255struct\255r)108 304.8
Q(eturn)-.18 E F0 .368(Return structures of more than one word in memory)144
316.8 R 2.867(,r)-.65 G .367(ather than in a register)363.291 316.8 R 5.367(.T)
-.55 G .367(his provides com-)467.606 316.8 R .271(patibility with the MetaW)
144 328.8 R .272(are HighC \(hc\) compiler)-.8 F 5.272(.U)-.55 G .272(se `)
360.912 328.8 R F1(\255fpcc\255struct\255r)1.666 E(eturn)-.18 E F0 2.772('f)
1.666 G .272(or compatibility)475.558 328.8 R
(with the Portable C Compiler \(pcc\).)144 340.8 Q F1(\255mnohc\255struct\255r)
108 357.6 Q(eturn)-.18 E F0 .571
(Return some structures of more than one word in registers, when convenient.)
144 369.6 R .57(This is the default.)5.57 F 4.039
(For compatibility with the IBM-supplied compilers, use either `)144 381.6 R F1
(\255fpcc\255struct\255r)1.666 E(eturn)-.18 E F0 6.539('o)1.666 G(r)536.67
381.6 Q(`)144 393.6 Q F1(\255mhc\255struct\255r)1.666 E(eturn)-.18 E F0('.)
1.666 E(These `)108 410.4 Q F1<ad6d>1.666 E F0 2.5('o)1.666 G
(ptions are de\214ned for the MIPS family of computers:)165.902 410.4 Q F1
(\255mcpu=)108 427.2 Q/F2 10/Times-Italic@0 SF(cpu-type).18 E F0 .019
(Assume the defaults for the machine type)144 439.2 R F2(cpu-type)2.518 E F0
.018(when scheduling insturctions.)2.518 F .018(The default)5.018 F F2(cpu-)
2.518 E(type)144 451.2 Q F0(is)3.754 E F1(default)3.754 E F0 3.754(,w)C 1.255(\
hich picks the longest cycles times for any of the machines, in order that the)
218.312 451.2 R 1.536(code run at reasonable rates on all MIPS cpu')144 463.2 R
4.036(s. Other)-.55 F 1.536(choices for)4.036 F F2(cpu-type)4.036 E F0(are)
4.036 E F1(r2000)4.036 E F0(,)A F1(r3000)4.036 E F0(,)A F1(r4000)144 475.2 Q F0
3.564(,a)C(nd)178.944 475.2 Q F1(r6000)3.564 E F0 6.064(.W)C 1.064
(hile picking a speci\214c)234.952 475.2 R F2(cpu-type)3.565 E F0 1.065
(will schedule things appropriately for that)3.565 F 1.075(particular chip, th\
e compiler will not generate any code that does not meet level 1 of the MIPS)
144 487.2 R(ISA \(instruction set architecture\) without the)144 499.2 Q F1
(\255mips2)2.5 E F0(or)2.5 E F1(\255mips3)2.5 E F0(switches being used.)2.5 E
F1(\255mips2)108 516 Q F0 1.569
(Issue instructions from level 2 of the MIPS ISA \(branch likely)144 528 R 4.07
(,s)-.65 G 1.57(quare root instructions\).)418.92 528 R(The)6.57 E F1
(\255mcpu=r4000)144 540 Q F0(or)2.5 E F1(\255mcpu=r6000)2.5 E F0
(switch must be used in conjuction with)2.5 E F1(\255mips2)2.5 E F0(.)A F1
(\255mips3)108 556.8 Q F0 .687
(Issue instructions from level 3 of the MIPS ISA \(64 bit instructions\).)144
568.8 R(The)5.687 E F1(\255mcpu=r4000)3.187 E F0(switch)3.187 E
(must be used in conjuction with)144 580.8 Q F1(\255mips2)2.5 E F0(.)A F1
(\255mint64)108 597.6 Q(\255mlong64)108 614.4 Q(\255mlonglong128)108 631.2 Q F0
(These options don')144 643.2 Q 2.5(tw)-.18 G(ork at present.)232.98 643.2 Q F1
(\255mmips\255as)108 660 Q F0 .806(Generate code for the MIPS assembler)144 672
R 3.306(,a)-.4 G .806(nd invoke)312.556 672 R F1(mips\255t\214le)3.306 E F0
.806(to add normal debug information.)3.306 F .811(This is the default for all\
 platforms except for the OSF/1 reference platform, using the OSF/rose)144 684
R 1.058(object format.)144 696 R 1.058(If the any of the)6.058 F F1(\255ggdb)
3.558 E F0(,)A F1(\255gstabs)3.558 E F0 3.558(,o)C(r)355.182 696 Q F1
(\255gstabs+)3.558 E F0 1.058(switches are used, the)3.558 F F1
(mips\255t\214le)3.558 E F0
(program will encapsulate the stabs within MIPS ECOFF)144 708 Q(.)-.8 E(GNU T)
72 768 Q 163.32(ools 27dec1991)-.7 F(23)530 768 Q EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255mgas)108 84 Q F0 .332
(Generate code for the GNU assembler)8.08 F 5.331(.T)-.55 G .331
(his is the default on the OSF/1 reference platform, using)312.051 84 R
(the OSF/rose object format.)144 96 Q F1(\255mrnames)108 112.8 Q
(\255mno\255rnames)108 129.6 Q F0(The)144 141.6 Q F1(\255mrnames)3.375 E F0
.875(switch says to output code using the MIPS software names for the register\
s, in-)3.375 F 1.474(stead of the hardware names \(ie,)144 153.6 R F1(a0)3.974
E F0 1.474(instead of)3.974 F F1($4)3.974 E F0 3.974(\). The)B 1.473
(GNU assembler does not support the)3.974 F F1(\255mrnames)144 165.6 Q F0 1.274
(switch, and the MIPS assembler will be instructed to run the MIPS C preproces\
sor)3.774 F(over the source \214le.)144 177.6 Q(The)5 E F1(\255mno\255rnames)
2.5 E F0(switch is default.)2.5 E F1(\255mgpopt)108 194.4 Q(\255mno\255gpopt)
108 211.2 Q F0(The)144 223.2 Q F1(\255mgpopt)3.46 E F0 .959(switch says to wri\
te all of the data declarations before the instructions in the text)3.46 F .664
(section, to all the MIPS assembler to generate one word memory references ins\
tead of using two)144 235.2 R(words for short global or static data items.)144
247.2 Q(This is on by default if optimization is selected.)5 E F1(\255mstats)
108 264 Q(\255mno\255stats)108 280.8 Q F0 .098
(For each non-inline function processed, the)144 292.8 R F1(\255mstats)2.598 E
F0 .098(switch causes the compiler to emit one line to)2.598 F .719(the standa\
rd error \214le to print statistics about the program \(number of registers sa\
ved, stack size,)144 304.8 R(etc.\).)144 316.8 Q F1(\255mmemcpy)108 333.6 Q
(\255mno\255memcpy)108 350.4 Q F0(The)144 362.4 Q F1(\255mmemcpy)3.405 E F0
.905(switch makes all block moves call the appropriate string function \()3.405
F F1(memcpy)A F0(or)3.404 E F1(bcopy)144 374.4 Q F0 2.5(\)i)C
(nstead of possibly generating inline code.)178.17 374.4 Q F1
(\255mmips\255t\214le)108 391.2 Q(\255mno\255mips\255t\214le)108 408 Q F0(The)
144 420 Q F1(\255mno\255mips\255t\214le)5.744 E F0 3.244
(switch causes the compiler not postprocess the object \214le with the)5.744 F
F1(mips\255t\214le)144 432 Q F0 3.446
(program, after the MIPS assembler has generated it to add debug support.)5.947
F(If)8.446 E F1(mips\255t\214le)144 444 Q F0 .16
(is not run, then no local variables will be available to the debugger)2.66 F
5.16(.I)-.55 G 2.66(na)467.74 444 S(ddition,)479.84 444 Q F1(stage2)2.66 E F0
(and)144 456 Q F1(stage3)3.516 E F0 1.015(objects will have the temporary \214\
le names passed to the assembler embedded in the)3.516 F
(object \214le, which means the objects will not compare the same.)144 468 Q F1
(\255msoft\255\215oat)108 484.8 Q F0 .887
(Generate output containing library calls for \215oating point.)144 496.8 R/F2
10/Times-Italic@0 SF -.7(WA)5.888 G(RNING:).7 E F0 .888
(the requisite libraries are)3.388 F .421(not part of GNU CC.)144 508.8 R .421
(Normally the facilities of the machine')5.421 F 2.92(su)-.55 G .42
(sual C compiler are used, but this)403.88 508.8 R(can')144 520.8 Q 3.633(tb)
-.18 G 3.633(ed)172.443 520.8 S 1.134(one directly in cross-compilation.)
185.516 520.8 R -1(Yo)6.134 G 3.634(um)1 G 1.134
(ust make your own arrangements to provide)357.116 520.8 R
(suitable library functions for cross-compilation.)144 532.8 Q F1
(\255mhard\255\215oat)108 549.6 Q F0 .668
(Generate output containing \215oating point instructions.)144 561.6 R .668
(This is the default if you use the unmodi-)5.668 F(\214ed sources.)144 573.6 Q
F1(\255mfp64)108 590.4 Q F0 .697(Assume that the)144 602.4 R F1(FR)3.197 E F0
.697(bit in the status word is on, and that there are 32 64-bit \215oating poi\
nt regis-)3.197 F 1.176(ters, instead of 32 32-bit \215oating point registers.)
144 614.4 R -1(Yo)6.176 G 3.676(um)1 G 1.175(ust also specify the)378.574 614.4
R F1(\255mcpu=r4000)3.675 E F0(and)3.675 E F1(\255mips3)144 626.4 Q F0
(switches.)2.5 E F1(\255mfp32)108 643.2 Q F0
(Assume that there are 32 32-bit \215oating point registers.)144 655.2 Q
(This is the default.)5 E F1(\255mabicalls)108 672 Q F0(The)144 684 Q F1
(\255mabicalls)3.15 E F0 .651(switch says to emit the)3.15 F F1(.abicalls)3.151
E F0(,)A F1(.cpload)3.151 E F0 3.151(,a)C(nd)390.286 684 Q F1(.cpr)3.151 E
(estor)-.18 E(e)-.18 E F0 .651(pseudo operations that)3.151 F(some System V)144
696 Q(.4 ports use for position independent code.)-1.29 E(GNU T)72 768 Q 163.32
(ools 27dec1991)-.7 F(24)530 768 Q EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255mhalf\255pic)108 84 Q
(\255mno\255half\255pic)108 100.8 Q F0(The)144 112.8 Q F1(\255mhalf\255pic)
3.792 E F0 1.292(switch says to put pointers to extern references into the dat\
a section and load)3.792 F .732
(them up, rather than put the references in the text section.)144 124.8 R .733
(This option does not work at present.)5.732 F F1<ad47>144 136.8 Q/F2 10
/Times-Italic@0 SF(num).27 E F0 .544
(Put global and static items less than or equal to)3.044 F F2(num)3.044 E F0
.543(bytes into the small data or bss sec-)3.044 F .044
(tions instead of the normal data or bss section.)144 148.8 R .045
(This allows the assembler to emit one word memo-)5.045 F .362
(ry reference instructions based on the global pointer \()144 160.8 R F1(gp)A
F0(or)2.862 E F1($28)2.862 E F0 .362(\), instead of the normal two words)B
3.082(used. By)144 172.8 R(default,)3.082 E F2(num)3.082 E F0 .583
(is 8 when the MIPS assembler is used, and 0 when the GNU assembler is)3.082 F
2.817(used. The)144 184.8 R F1<ad47>2.817 E F2(num).27 E F0 .316
(switch is also passed to the assembler and linker)2.817 F 5.316(.A)-.55 G .316
(ll modules should be com-)432.626 184.8 R(piled with the same)144 196.8 Q F1
<ad47>2.5 E F2(num).27 E F0(value.)2.5 E/F3 9/Times-Bold@0 SF(CODE GENERA)72
230.4 Q(TION OPTIONS)-.666 E F0(These machine-independent options control the \
interface conventions used in code generation.)108 242.4 Q .393
(Most of them begin with `)108 266.4 R -.834(\255f '.)1.666 F .394
(These options have both positive and negative forms; the negative form of)
5.393 F(`)108 278.4 Q F1(\255ffoo)1.666 E F0 2.532('w)1.666 G .032(ould be `)
150.104 278.4 R F1(\255fno\255foo)1.666 E F0 2.532('. In)1.666 F .032
(the table below)2.532 F 2.532(,o)-.65 G .032
(nly one of the forms is listed\212the one which is not the)319.94 278.4 R 2.5
(default. Y)108 290.4 R
(ou can \214gure out the other form by either removing `)-1 E F1(no\255)1.666 E
F0 2.5('o)1.666 G 2.5(ra)391.542 290.4 S(dding it.)401.812 290.4 Q F1(+e)108
307.2 Q F2 18.33(N\().86 G .917(C++ only)147.33 307.2 R(.\))-.55 E F0 .917(con\
trol whether virtual function de\214nitions in classes are used to generate co\
de, or)5.917 F .235(only to de\214ne interfaces for their callers.)144 319.2 R
.235(These options are provided for compatibility with cfront)5.235 F .56
(1.x usage; the recommended GNU C++ usage is to use)144 331.2 R F1 .56
(#pragma interface)3.06 F F0(and)3.06 E F1 .56(#pragma imple-)3.06 F(mentation)
144 343.2 Q F0 2.5(,i)C(nstead.)195.11 343.2 Q -.4(Wi)144 367.2 S .234(th `).4
F F1(+e0)1.666 E F0 .233(', virtual function de\214nitions in classes are decl\
ared extern; the declaration is used only)1.666 F(as an interface speci\214cat\
ion, not to generate code for the virtual functions \(in this compilation\).)
144 379.2 Q -.4(Wi)144 403.2 S .741(th `).4 F F1(+e1)1.666 E F0(',)1.666 E F1
(g++)3.241 E F0 .741(actually generates the code implementing virtual function\
s de\214ned in the code,)3.241 F(and makes them publicly visible.)144 415.2 Q
F1(\255fnonnull\255objects)108 432 Q F2 .175(\(C++ only)144 444 R(.\))-.55 E F0
(Normally)5.175 E 2.675(,G)-.65 G .174
(NU C++ makes conservative assumptions about objects reached through)247.925
444 R 2.5(references. For)144 456 R(example, the compiler must check that `)2.5
E F1(a)1.666 E F0 2.5('i)1.666 G 2.5(sn)386.162 456 S
(ot null in code like the following:)397.552 456 Q(obj &a = g \(\);)154 468 Q
(a.f \(2\);)154 480 Q .747(Checking that references of this sort have non-null\
 values requires extra code, however)144 492 R 3.248(,a)-.4 G .748(nd it is)
511.274 492 R .226(unnecessary for many programs.)144 504 R -1(Yo)5.226 G 2.726
(uc)1 G .226(an use `)303.81 504 R F1(\255fnonnull\255objects)1.666 E F0 2.726
('t)1.666 G 2.725(oo)425.05 504 S .225(mit the checks for null, if)437.775 504
R(your program doesn')144 516 Q 2.5(tr)-.18 G(equire the default checking.)
236.3 516 Q F1(\255fpcc\255struct\255r)108 532.8 Q(eturn)-.18 E F0 .11
(Use the same convention for returning)144 544.8 R F1(struct)2.61 E F0(and)2.61
E F1(union)2.61 E F0 .11(values that is used by the usual C compil-)2.61 F .372
(er on your system.)144 556.8 R .371(This convention is less ef)5.372 F .371
(\214cient for small structures, and on many machines it)-.18 F .786(fails to \
be reentrant; but it has the advantage of allowing intercallability between GC\
C-compiled)144 568.8 R(code and PCC-compiled code.)144 580.8 Q F1
(\255fshort\255enums)108 597.6 Q F0 .199(Allocate to an)144 609.6 R F1(enum)
2.699 E F0 .198(type only as many bytes as it needs for the declared range of \
possible values.)2.699 F(Speci\214cally)144 621.6 Q 2.556(,t)-.65 G(he)198.406
621.6 Q F1(enum)2.556 E F0 .057
(type will be equivalent to the smallest integer type which has enough room.)
2.556 F F1(\255fshort\255double)108 638.4 Q F0(Use the same size for)144 650.4
Q F1(double)2.5 E F0(as for)2.5 E F1(\215oat)2.5 E F0(.)2.5 E F1(\255fshar)108
667.2 Q(ed\255data)-.18 E F0 .646(Requests that the data and non-)144 679.2 R
F1(const)A F0 .645
(variables of this compilation be shared data rather than pri-)3.145 F 1.207
(vate data.)144 691.2 R 1.207(The distinction makes sense only on certain oper\
ating systems, where shared data is)6.207 F 1.367(shared between processes run\
ning the same program, while private data exists in one copy per)144 703.2 R
(process.)144 715.2 Q(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(25)530 768 Q
EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 10/Times-Bold@0 SF(\255fno\255common)108 84 Q F0 .492(Al\
locate even uninitialized global variables in the bss section of the object \
\214le, rather than gener)144 96 R(-)-.2 E .946(ating them as common blocks.)
144 108 R .946(This has the ef)5.946 F .945
(fect that if the same variable is declared \(without)-.18 F F1(extern)144 120
Q F0 2.872(\)i)C 2.872(nt)180.192 120 S .372(wo dif)190.844 120 R .372
(ferent compilations, you will get an error when you link them.)-.18 F .373
(The only reason)5.373 F .215(this might be useful is if you wish to verify th\
at the program will work on other systems which al-)144 132 R
(ways work this way)144 144 Q(.)-.65 E F1(\255fvolatile)108 160.8 Q F0
(Consider all memory references through pointers to be volatile.)144 172.8 Q F1
(\255fpic)108 189.6 Q F0 1.742(If supported for the tar)144 189.6 R 1.742
(get machines, generate position-independent code, suitable for use in a)-.18 F
(shared library)144 201.6 Q(.)-.65 E F1(\255fPIC)108 218.4 Q F0 .45
(If supported for the tar)9.75 F .45
(get machine, emit position-independent code, suitable for dynamic linking,)
-.18 F(even if branches need lar)144 230.4 Q(ge displacements.)-.18 E F1
<ad668c786564ad>108 247.2 Q/F2 10/Times-Italic@0 SF -.37(re)C(g).37 E F0 -.35
(Tr)147.506 259.2 S 1.006(eat the register named).35 F F2 -.37(re)3.506 G(g).37
E F0 1.007
(as a \214xed register; generated code should never refer to it \(except)3.506
F(perhaps as a stack pointer)144 271.2 Q 2.5(,f)-.4 G
(rame pointer or in some other \214xed role\).)254.68 271.2 Q F2 -.37(re)144
295.2 S(g).37 E F0 .475(must be the name of a register)2.975 F 5.475(.T)-.55 G
.475(he register names accepted are machine-speci\214c and are de-)296.85 295.2
R(\214ned in the)144 307.2 Q F1(REGISTER_NAMES)2.5 E F0
(macro in the machine description macro \214le.)2.5 E(This \215ag does not hav\
e a negative form, because it speci\214es a three-way choice.)144 331.2 Q F1
(\255fcall\255used\255)108 348 Q F2 -.37(re)C(g).37 E F0 -.35(Tr)147.014 360 S
.514(eat the register named).35 F F2 -.37(re)3.014 G(g).37 E F0 .515
(as an allocatable register that is clobbered by function calls.)3.015 F .515
(It may)5.515 F 1.126
(be allocated for temporaries or variables that do not live across a call.)144
372 R 1.126(Functions compiled this)6.126 F
(way will not save and restore the register)144 384 Q F2 -.37(re)2.5 G(g).37 E
F0(.)A 1.206(Use of this \215ag for a register that has a \214xed pervasive ro\
le in the machine')144 408 R 3.707(se)-.55 G 1.207(xecution model,)474.353 408
R(such as the stack pointer or frame pointer)144 420 Q 2.5(,w)-.4 G
(ill produce disastrous results.)321.06 420 Q(This \215ag does not have a nega\
tive form, because it speci\214es a three-way choice.)144 444 Q F1
(\255fcall\255saved\255)108 460.8 Q F2 -.37(re)C(g).37 E F0 -.35(Tr)147.655
472.8 S 1.155(eat the register named).35 F F2 -.37(re)3.655 G(g).37 E F0 1.155
(as an allocatable register saved by functions.)3.655 F 1.155
(It may be allocated)6.155 F 1.089
(even for temporaries or variables that live across a call.)144 484.8 R 1.09
(Functions compiled this way will save)6.089 F(and restore the register)144
496.8 Q F2 -.37(re)2.5 G(g).37 E F0(if they use it.)2.5 E 1.207(Use of this \
\215ag for a register that has a \214xed pervasive role in the machine')144
520.8 R 3.706(se)-.55 G 1.206(xecution model,)474.354 520.8 R
(such as the stack pointer or frame pointer)144 532.8 Q 2.5(,w)-.4 G
(ill produce disastrous results.)321.06 532.8 Q 2.784(Ad)144 556.8 S(if)159.004
556.8 Q .285(ferent sort of disaster will result from the use of this \215ag f\
or a register in which function val-)-.18 F(ues may be returned.)144 568.8 Q(T\
his \215ag does not have a negative form, because it speci\214es a three-way c\
hoice.)144 592.8 Q F1(\255fgnu\255binutils)108 609.6 Q
(\255fno\255gnu\255binutils)108 626.4 Q F2 1.258(\(C++ only)144 638.4 R(.\))
-.55 E F0(`)6.258 E F1(\255fgnu\255binutils)1.666 E F0 3.758('\()5.424 G 1.258
(the default for most, but not all, platforms\) makes GNU C++)283.944 638.4 R
.656(emit extra information for static initialization and \214nalization.)144
650.4 R .656(This information has to be passed)5.656 F .062
(from the assembler to the GNU linker)144 662.4 R 5.062(.S)-.55 G .062
(ome assemblers won')308.584 662.4 R 2.562(tp)-.18 G .062
(ass this information; you must ei-)405.52 662.4 R(ther use GNU)144 674.4 Q F1
(as)2.5 E F0(or specify the option `)2.5 E F1(\255fno\255gnu\255binutils)1.666
E F0('.)1.666 E -.4(Wi)144 698.4 S .759(th `).4 F F1
(\255fno\255gnu\255binutils)1.666 E F0 .759(', you must use the program)1.666 F
F1(collect)3.259 E F0 .759(\(part of the GCC distribution\) for)3.259 F
(linking.)144 710.4 Q(GNU T)72 768 Q 163.32(ools 27dec1991)-.7 F(26)530 768 Q
EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 9/Times-Bold@0 SF(PRAGMAS)72 84 Q F0 -.7(Tw)108 96 S
2.993(o`).7 G/F2 10/Times-Bold@0 SF(#pragma)-1.327 E F0 2.993('d)1.666 G .492(\
irectives are supported for GNU C++, to permit using the same header \214le fo\
r two pur)184.938 96 R(-)-.2 E .672(poses: as a de\214nition of interfaces to \
a given object class, and as the full de\214nition of the contents of that)108
108 R(object class.)108 120 Q F2(#pragma interface)108 136.8 Q/F3 10
/Times-Italic@0 SF .673(\(C++ only)144 148.8 R(.\))-.55 E F0 .673(Use this dir\
ective in header \214les that de\214ne object classes, to save space in most o\
f)5.673 F 2.14(the object \214les that use those classes.)144 160.8 R(Normally)
7.14 E 4.64(,l)-.65 G 2.14(ocal copies of certain information \(backup)359.62
160.8 R .549(copies of inline member functions, debugging information, and the\
 internal tables that implement)144 172.8 R .439(virtual functions\) must be k\
ept in each object \214le that includes class de\214nitions.)144 184.8 R -1(Yo)
5.44 G 2.94(uc)1 G .44(an use this)496.9 184.8 R .318
(pragma to avoid such duplication.)144 196.8 R .317
(When a header \214le containing `)5.318 F F2 .317(#pragma interface)1.666 F F0
2.817('i)1.666 G 2.817(si)504.963 196.8 S(nclud-)514.45 196.8 Q .365(ed in a c\
ompilation, this auxiliary information will not be generated \(unless the main\
 input source)144 208.8 R .125(\214le itself uses `)144 220.8 R F2 .125
(#pragma implementation)1.666 F F0 2.625('\). Instead,)1.666 F .124
(the object \214les will contain references to be)2.625 F
(resolved at link time.)144 232.8 Q F2(#pragma implementation)108 249.6 Q
(#pragma implementation ")108 266.4 Q F3(objects).23 E F2(.h").28 E F3 .051
(\(C++ only)144 278.4 R(.\))-.55 E F0 .051(Use this pragma in a main input \
\214le, when you want full output from included header)5.051 F 1.348
(\214les to be generated \(and made globally visible\).)144 290.4 R 1.348
(The included header \214le, in turn, should use)6.348 F(`)144 302.4 Q F2 1.383
(#pragma interface)1.666 F F0 3.883('. Backup)1.666 F 1.384
(copies of inline member functions, debugging information, and)3.884 F(the int\
ernal tables used to implement virtual functions are all generated in implemen\
tation \214les.)144 314.4 Q 1.118(If you use `)144 338.4 R F2 1.118
(#pragma implementation)1.666 F F0 3.618('w)1.666 G 1.118(ith no ar)319.842
338.4 R 1.118(gument, it applies to an include \214le with the)-.18 F .159
(same basename as your source \214le; for example, in `)144 350.4 R F2
(allclass.cc)1.666 E F0 .159(', `)1.666 F F2 .159(#pragma implementation)1.666
F F0 2.659('b)1.666 G(y)535 350.4 Q .865(itself is equivalent to `)144 362.4 R
F2 .865(#pragma implementation "allclass.h")1.666 F F0 3.365('. Use)1.666 F
.865(the string ar)3.365 F .864(gument if you)-.18 F(want a single implementat\
ion \214le to include code from multiple header \214les.)144 374.4 Q(There is \
no way to split up the contents of a single header \214le into multiple implem\
entation \214les.)144 398.4 Q F1(FILES)72 415.2 Q F0 67.75(\214le.c C)108 427.2
R(source \214le)2.5 E 67.19(\214le.h C)108 439.2 R
(header \(preprocessor\) \214le)2.5 E 69.41(\214le.i preprocessed)108 451.2 R
2.5(Cs)2.5 G(ource \214le)265.73 451.2 Q 65.52(\214le.C C++)108 463.2 R
(source \214le)2.5 E 63.31(\214le.cc C++)108 475.2 R(source \214le)2.5 E 57.75
(\214le.cxx C++)108 487.2 R(source \214le)2.5 E 64.41(\214le.m Objective-C)108
499.2 R(source \214le)2.5 E 68.3(\214le.s assembly)108 511.2 R(language \214le)
2.5 E 67.19(\214le.o object)108 523.2 R(\214le)2.5 E 67.75(a.out link)108 535.2
R(edited output)2.5 E F3(TMPDIR)108 547.2 Q F0(/cc)A/F4 10/Symbol SF(*)A F0
(temporary \214les)197.97 547.2 Q F3(LIBDIR)108 559.2 Q F0 38.59
(/cpp preprocessor)B F3(LIBDIR)108 571.2 Q F0 39.15(/cc1 compiler)B(for C)2.5 E
F3(LIBDIR)108 583.2 Q F0 22.48(/cc1plus compiler)B(for C++)2.5 E F3(LIBDIR)108
595.2 Q F0 26.37(/collect linker)B(front end needed on some machines)2.5 E F3
(LIBDIR)108 607.2 Q F0 21.65(/libgcc.a GCC)B(subroutine library)2.5 E 31.64
(/lib/crt[01n].o start-up)108 619.2 R(routine)2.5 E F3(LIBDIR)108 631.2 Q F0
33.04(/ccrt0 additional)B(start-up routine for C++)2.5 E 49.41
(/lib/libc.a standard)108 643.2 R 2.5(Cl)2.5 G(ibrary)246.3 643.2 Q 2.5(,s)-.65
G(ee)278.42 643.2 Q F3(intr)2.5 E(o)-.37 E F0(\(3\)).17 E 40.25
(/usr/include standard)108 655.2 R(directory for)2.5 E F2(#include)2.5 E F0
(\214les)2.5 E F3(LIBDIR)108 667.2 Q F0 23.59(/include standard)B
(gcc directory for)2.5 E F2(#include)2.5 E F0(\214les)2.5 E F3(LIBDIR)108 679.2
Q F0 1.67(/g++\255include additional)B(g++ directory for)2.5 E F2(#include)2.5
E F3(LIBDIR)108 703.2 Q F0(is usually)2.5 E F2(/usr/local/lib/)2.5 E F3
(machine)A F0(/).18 E F3(version).26 E F0(.).21 E F3(TMPDIR)108 715.2 Q F0
(comes from the environment variable)2.5 E F2(TMPDIR)2.5 E F0(\(default)2.5 E
F2(/usr/tmp)2.5 E F0(if available, else)2.5 E F2(/tmp)2.5 E F0(\).)A(GNU T)72
768 Q 163.32(ools 27dec1991)-.7 F(27)530 768 Q EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 176.16(GCC\(1\) GNU)72 48 R -.7(To)2.5 G 176.16
(ols GCC\(1\)).7 F/F1 9/Times-Bold@0 SF(SEE ALSO)72 84 Q F0
(cpp\(1\), as\(1\), ld\(1\), gdb\(1\), adb\(1\), dbx\(1\), sdb\(1\).)108 96 Q
(`)108 108 Q/F2 10/Times-Bold@0 SF(gcc)1.666 E F0(', `)1.666 E F2(cpp)1.666 E
F0(', `)1.666 E F2(as)1.666 E F0(',)1.666 E F2(`)A F0(ld)1.666 E F2(',)1.666 E
F0(and `)2.5 E F2(gdb)1.666 E F0 2.5('e)1.666 G(ntries in)261.57 108 Q F2(info)
2.5 E F0(.)A/F3 10/Times-Italic@0 SF .294
(Using and Porting GNU CC \(for version 2.0\))108 120 R F0 2.795(,R)C .295
(ichard M. Stallman, November 1990;)303.695 120 R F3 .295(The C Pr)2.795 F(epr)
-.37 E(ocessor)-.37 E F0(,)A 1.106(Richard M. Stallman, July 1990;)108 132 R F3
1.105(Using GDB: A Guide to the GNU Sour)3.606 F 1.105(ce-Level Debugger)-.37 F
F0 3.605(,R)C 1.105(ichard M.)500.015 132 R .293
(Stallman and Roland H. Pesch, December 1991;)108 144 R F3 .293
(Using as: the GNU Assembler)2.793 F F0 2.794(,D)C .294(ean Elsner)440.648 144
R 2.794(,J)-.4 G .294(ay Fenlason)491.656 144 R 2.5(&f)108 156 S
(riends, March 1991;)121.61 156 Q F3(gld: the GNU linker)2.5 E F0 2.5(,S)C
(teve Chamberlain and Roland Pesch, April 1991.)295.76 156 Q F1(BUGS)72 184.8 Q
F0 .122(Report bugs to)108 196.8 R F2(bug\255gcc@pr)2.622 E(ep.ai.mit.edu)-.18
E F0 5.122(.B)C .122
(ugs tend actually to be \214xed if they can be isolated, so it is in)294.148
196.8 R(your interest to report them in such a way that they can be easily rep\
roduced.)108 208.8 Q F1(COPYING)72 225.6 Q F0
(Copyright \(c\) 1991 Free Software Foundation, Inc.)108 237.6 Q .525(Permissi\
on is granted to make and distribute verbatim copies of this manual provided t\
he copyright notice)108 254.4 R
(and this permission notice are preserved on all copies.)108 266.4 Q .383(Perm\
ission is granted to copy and distribute modi\214ed versions of this manual un\
der the conditions for ver)108 283.2 R(-)-.2 E .006(batim copying, provided th\
at the entire resulting derived work is distributed under the terms of a permi\
ssion)108 295.2 R(notice identical to this one.)108 307.2 Q 1.099(Permission i\
s granted to copy and distribute translations of this manual into another lang\
uage, under the)108 324 R .681(above conditions for modi\214ed versions, excep\
t that this permission notice may be included in translations)108 336 R
(approved by the Free Software Foundation instead of in the original English.)
108 348 Q F1(AUTHORS)72 364.8 Q F0
(See the GNU CC Manual for the contributors to GNU CC.)108 376.8 Q(GNU T)72 768
Q 163.32(ools 27dec1991)-.7 F(28)530 768 Q EP
%%Trailer
end
%%EOF
