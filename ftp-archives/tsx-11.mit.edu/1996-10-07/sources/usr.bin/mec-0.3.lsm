Mec is the next generation of debugging technology.

Mec provides a trace-and-replay facility which works in conjunction with
standard operating systems, debuggers, and compilers.

Usage:

    mec-trace -o a.trace a.out		# Run 'a.out' and trace it.
    mec-control gdb a.trace		# Replay under debugger control.

The tracer can trace any program without recompilation or relinking.

The controller replays a target program from a trace file and also runs
a viewer program such as 'gdb' or 'strace'.  The viewer program sees the
target program re-executing with the same input data.  The viewer can
inspect code and data, set breakpoints, and single-step.  The controller
works with stock 'gdb', stock 'strace', or any other program that uses
'ptrace' and '/proc/$pid/mem' to inspect a target program.

The trace file contains all the information needed to replay the
execution of the target program, including the original executable,
shared libraries that it uses, and all input data.  Trace files will
replay on any Linux system with a similar kernel version.

The Linux version is free.

Michael Chastain
mec@duracef.shout.net

Begin3
Title:		Mec
Version:	0.3
Entered-date:	19NOV95
Description:	Trace and replay debugger.
		Run a program and trace execution into a trace file.
		Replays execution under control of debugger.
Keywords:	trace replay debugger
Author:		mec@duracef.shout.net (Michael Elizabeth Chastain)
Primary-site:	tsx-11.mit.edu /pub/linux/sources/usr.bin
		288221 mec-0.3.tar.gz
Platforms:	Linux 1.3.42, g++ 2.6.3, a.out format executables
Copying-Policy:	GPL
End
