From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Fri, 16 Sep 94 10:13:15 EDT
Subject:  Linux-Development Digest #182

Linux-Development Digest #182, Volume #2         Fri, 16 Sep 94 10:13:15 EDT

Contents:
  Threads, garbage collection and dynamic loading (Carl Hauser)
  huh? /usr/include/arpa/inet.h missing? (Mark Swanson)
  Re: VHDL for Linux...? (Bardo Muller)
  Re: Don't use Linux?! (Kai Petzke)
  Re: Don't use Linux?! (Kai Petzke)
  Re: Netware Client (Timothy Weaver)
  Re: AX25 & KISS Amateur Radio Protocols in Linux?? (Peter Onion)
  HELP: How to patch Slackware 2.0 to 1.1.44 Kernel (Chris Wong)
  Re: Driver for NCR 53C825 on the horizon? (Harald Schreiber)
  Q: Accessing SCSI scanner via linux generic SCSI interface --- how? (Richard Kunze)
  Q: Accessing SCSI scanner via linux generic SCSI interface --- how? (Richard Kunze)
  Re: Help with development using vi. (Kai Petzke)
  Re: Public domain DHCP available ? (Matti Aarnio)
  Re: Survey: who wants f77,cc,c++,hpf for linux? (Zygo Blaxell)
  Re: Don't use Linux?! (Eric V. Bruno)
  Re: Wanted: DAT Scsi Driver. (Hannes Reinecke)

----------------------------------------------------------------------------

From: chauser@parc.xerox.com (Carl Hauser)
Subject: Threads, garbage collection and dynamic loading
Date: 15 Sep 1994 17:09:06 GMT


The Posix Portable Common Runtime (PPCR) provides integrated
user-level support for pre-emptive lightweight threads, garbage
collected storage, and dynamic programming loading.  It should run on
any POSIX.1-conforming implementation that also supports BSD select()
or System V poll().  PPCR can take advantage of kernel thread
extensions of the underlying system, such as the LWP facility of
Solaris 2.3 and the sproc facility of Irix 5, to achieve true
concurrent execution by its threads on multiprocessors.  It also uses
memory protection features available in some systems (e.g. mprotect())
to support incremental garbage collection.  Note that this is NOT an 
implementation of the POSIX pthreads proposal, though of course, the concepts 
are similar. 

PPCR has been successfully built for SunOS 4.1.3 (aka Solaris 1.1),
SunOS 5.3 (aka Solaris 2.3), Irix 5, Linux 1.0 and BSDI.  We would be
interested in hearing of others' experience in porting it to
additional platforms.

Acquiring PPCR

  PPCR is available in ftp://parcftp.xerox.com/pub/ppcr/v1.20/v1.20.tar.z, a
  compressed tarfile.  A README file in the same directory explains what to do
  once you have it.  The v1.20 release includes support for the platforms named
  above.  This is a source-code-only release.  To use PPCR you will have to compile
  it for your platform.  

  Documentation beyond that found in the header files is sketchy at this time.

If you find PPCR useful we would like to hear from you.  Please send email to:
pcrcoordinator@parc.xerox.com.


-- Carl Hauser, Al Demers and Hans Boehm 

------------------------------

From: ag010@FreeNet.Carleton.CA (Mark Swanson)
Subject: huh? /usr/include/arpa/inet.h missing?
Reply-To: ag010@FreeNet.Carleton.CA (Mark Swanson)
Date: Wed, 14 Sep 1994 04:52:34 GMT



When compiling dip337i.
Also missing is ../arpa/nameserver.h, ../netdb.h, ../resolv.h.
What gives??
Thanx.
--
Mark Swanson.    ag010@freenet.carleton.ca
Linux FREE BBS V.Fast 24,000bps.  Ottawa, Canada. (613)-829-1941

------------------------------

From: bardo@ief-paris-sud.fr (Bardo Muller)
Crossposted-To: comp.os.linux.misc,comp.lsi.cad,comp.lang.vhdl
Subject: Re: VHDL for Linux...?
Date: 14 Sep 1994 08:46:53 GMT
Reply-To: bardo@ief-paris-sud.fr

In article 139g@hearst.cac.psu.edu,  donadio@mxd120.rh.psu.edu (Matthew Donadio) writes:
>ADA (ada@nic.cerf.net) wrote:
>: I have been playing (or trying to play) with both magic and ocean.  I
>: was wondering if there are any free VHDL simulators available or being
>: worked on for Linux.  If so, what about synthesis tools?
>
>Are there _any_ free VHDL tools?  All of the ones I have used haven't
>been..

  A set of VHDL models and tools for modeling the IEEE 1149.1
test standard is available as public domain from Northeastern
University. A paper describing the models and utilities was
presented at the VUIF spring conference.  A more detailed  
description of this work with the complete code for the models
and utility procedures was presented at the Atlantic Test Work-
shop in New Hampshire.  
  The software consists of a set of VHDL descriptions that model
the various components of the 1149.1 standard, and a set of  
procedures that can be used in a test bench for control and data
application to the standard models.  All models and utilities  
have been tested and readme and documentation files provide  
complete information for their usage.
  You will be able to ftp the software from the nuvlsi machine:
       nuvlsi.coe.northeastern.edu
  The ftp directory is:
       /pub/IEEE_1149/*
  Please use the models, and if you make improvements, please keep
us informed.  I appreciate if you send me a mail message if you get
the software.  This way I'll know who has the software.  My mail
address is navabi@northeastern.edu


Bardo

======="===============================================================
Bardo MULLER                           Phone  : [33] [1] 69 41 78 50    
Institut d'Electronique Fondamentale   Fax    : [33] [1] 60 19 25 93    
Bat. 220 Universite Paris Sud  p.029   e-mail : bardo@ief-paris-sud.fr  
91405 ORSAY CEDEX FRANCE                        





------------------------------

From: wpp@marie.physik.tu-berlin.de (Kai Petzke)
Subject: Re: Don't use Linux?!
Date: 14 Sep 94 09:03:13 GMT

riku.saikkonen@compart.fi (Riku Saikkonen) writes:

>>Wrong.  You may make statically linked, binary-only releases.
>>All you have to do is to distribute an unlinked version of your
>>program along the ready-to-use version.  This is not too much
>>of a hassle.

>Uh... Stupid question: What is the best way to distribute the unlinked
>binary? The .o files?

It is one method, perhaps not the best.  You can also load all the
.o-files into one library, or you can pre-link all the .o files in
another .o file:

        ld -r *.o -o application.o
        strip --discard-all application.o

You then ship application.o.  All you have to tell your customer
for relinking:

        gcc application.o -lm -lX11 -l...  -o application
                          ^^^^^^^^^^^^^^^
                        put all the necessary libraries here


Kai
-- 
Kai Petzke                      | How fast can computers get?
Technical University of Berlin  |
Berlin, Germany                 | Sol 9, of course, on Star Trek.
wpp@marie.physik.tu-berlin.de   |

------------------------------

From: wpp@marie.physik.tu-berlin.de (Kai Petzke)
Subject: Re: Don't use Linux?!
Date: 14 Sep 94 09:07:39 GMT

info@acc-corp.com (ACC Corp.) writes:

>We resell a bunch of Linux CD's.  None have as catchy a name (for marketing
>purposes) as your "Dream Linux" CD.

There is a "Dream Linux" CD sold in Germany.  Haven't tested it, though.


Kai
-- 
Kai Petzke                      | How fast can computers get?
Technical University of Berlin  |
Berlin, Germany                 | Sol 9, of course, on Star Trek.
wpp@marie.physik.tu-berlin.de   |

------------------------------

From: tweaver@kaiwan.com (Timothy Weaver)
Subject: Re: Netware Client
Date: 15 Sep 1994 10:17:43 -0700

In article <QPCSB16W@math.fu-berlin.de>,
rzm@dain.oso.chalmers.se (Rafal Maszkowski) wrote:
> > : Alternatively you wait for Undocumented Netware to come out and work from
> > : that.
> > Or you read the Dr Dobbs stuff, look at lots of ethernet packets, apply guesswork and
> > trial and error.
> 
> Just curiosity: can the author be sued for writing or distributing
> client written as above?
> 

The basic answer is yes. You can be sued for anything.

The legal answer is that no, if you get all your information from the public
domain or figure it out yourself, then you haven't infringed upon any of
Novell's intellectual property. If you start reverse engineering their
drivers, the law is much more gray. Some courts have said you can't do it
at all and some courts have said that if you make that kind of effort, it
is ok.

If someone wants to do this, my suggestion is to not use any copyrighted
stuff. Of course, if Novell has a patent on any of their software routines
then it won't matter whether you accidently happen to create a driver that
does its work the same way, they can sue you if you infringe on a patent.

Then you have to get the Patent and Trademark Office to invalidate the
patent...you'll have to pay an attorney for that one.

------------------------------

From: onion_p_j@bt-web.bt.co.uk (Peter Onion)
Subject: Re: AX25 & KISS Amateur Radio Protocols in Linux??
Date: 14 Sep 1994 09:17:44 GMT

In article <bart.112.00138BA4@dunedin.es.co.nz>, bart@dunedin.es.co.nz 
(Bart Kindt) says:
>
>Hi! Is any development going on to support AX25 and KISS protocols, so 
that 
>Linux can be used as a Internet <> Amateur Radio Gateway (Just like 
KA9Q's 
>NOS/NET program)?
>
>Any info welcome!

Hi,  YES is the answer!  Alan Cox (iialan @ iifeak.swan.ac.uk) and the 
guys at swansea are the people to talk to.  I'm runing 1.1.35 kernel with 
1.twenty somrthing of his networking code.  I goes realy well.  It even 
runs WWW (a bit slowly I admit but....).  SMTP works ok to NOS systems, 
but the NNTP in WNOS is not quite up to serving Linux clients (eg tin).  
Plus there are other problems if you want to do interactive stuff as 
Linux likes to work in character mode with echoing from the remote host, 
which can take several seconds on a moderatly busy chan.

The standard answer to Internet <> Amateur Radio Gateways seems to be a 
sharp intake of breath, some "tut tut" noises,  followed by a long list 
of legal reasons as to why it can't be done.  I dont think that there are 
any technical reasons! 



------------------------------

From: chris@helser54 (Chris Wong)
Subject: HELP: How to patch Slackware 2.0 to 1.1.44 Kernel
Date: 15 Sep 1994 18:51:09 GMT

Please help me patch Slackware 2.0 kernel to 1.1.44.

Which directory should I cd to and issue the patch command?

Is the following right?

cd /usr/src/linux
patch < $patchFileDir/patchfile

I'm a novice who wants to patch the kernel with an alpha SCSI
driver but fails to do so.

Please help.  Many many many thanks.

Chris


------------------------------

Crossposted-To: comp.os.linux.help
From: harald@blizzard.oche.de (Harald Schreiber)
Subject: Re: Driver for NCR 53C825 on the horizon?
Date: Thu, 15 Sep 1994 21:18:35 GMT

janne@avocado.pc.helsinki.fi (Janne Sinkkonen) writes:

>Does it exist (as ALPHA) or is there any hope that one will appear in
>near future? I've a PCI Pentium here with a NCR 53C825 and an ISA
>SCSI is currently the only available option.

>Or should the 53C810 driver work with 53C825?

>--
>Janne

The 53C810 driver should work with the 53C825 in 53C810 emulation
mode (no WIDE SCSI supported) if you fix a little bug in the file
/usr/src/linux/drivers/scsi/53c7,8xx.c , line 285 :
static struct pci_chip pci_chip_ids[2]
should be changed to
static struct pci_chip pci_chip_ids[] 

I hope this helps

Harald

-- 
=============================================================
Harald Schreiber, Ronheider Berg 208, D-52076 Aachen, Germany
Phone: [+49|0]-241-79823,     E-mail: harald@blizzard.oche.de
=============================================================

------------------------------

From: kunze@helios.informatik.uni-hannover.de (Richard Kunze)
Subject: Q: Accessing SCSI scanner via linux generic SCSI interface --- how?
Date: Thu, 15 Sep 1994 17:10:10 GMT

Hi all, especially SCSI Gurus,

as the subject says, I want to use the generic SCSI interface of linux
to get access to an HP Scanjet hanging off the SCSI bus, but I don't
know how. The documentation says next to nothing about this interface
(the SCSI Howto says it's there, it works, and it uses character major
no 21, thats all).

My configuration: 486DX/33, AHA1542C SCSI Controller, SyQuest SCSI
Disk, SCSI CDROM, HP Scanjet SCSI Scanner, Kernel 1.0

My first problem was that the kernel totally ignored the scanner. I
traced this one down to linux/drivers/scsi/scsi.c, routine
scan_scsis(), which seems to only recognize tapes, disks, changeable
disks, cdroms amd worms. Any other scsi device is ignored. I changed
this so that these devices are registered as generic scsi
devices. This seems to work and not to break anything, but I'm by no
means a kernel guru, so please tell me if I'm doing something totally
wrong...  (btw, I checked with the most recent kernel I have (1.1.42),
scan_scsis() still ignores devices that are not tapes, disks or CD's).
OK, now the kernel recognizes the scanner and registers it as a
generic scsi device (at least there is a device with major 21, minor
3, which should be the scanner), but I can't open any of the generic
devices. All I get is 'permission denied', regardless of the
permissions set on the character special files, even if I try as root.

What am I missing?

Thanks in advance for your help,

        Richard 

PS: Please answer by mail, as I can't read news more often than once a week at
the moment and our newsfeed expires very fast.
-- 
Richard Kunze (at Uni. of Hannover)
kunze@zeus.informatik.uni-hannover.de

------------------------------

From: kunze@informatik.uni-hannover.de (Richard Kunze)
Subject: Q: Accessing SCSI scanner via linux generic SCSI interface --- how?
Reply-To: kunze@informatik.uni-hannover.de
Date: Thu, 15 Sep 1994 17:25:45 GMT

Hi all, especially SCSI Gurus,

as the subject says, I want to use the generic SCSI interface of linux to get access
to an HP Scanjet hanging off the SCSI bus, but I don't know how. The documentation
says next to nothing about this interface (the SCSI Howto says it's there, it works,
and it uses character major no 21, thats all). 

My configuration: 486DX/33, AHA1542C SCSI Controller, SyQuest SCSI Disk, SCSI CDROM,
HP Scanjet SCSI Scanner, Kernel 1.0

My first problem was that the kernel totally ignored the scanner. I traced this one
down to linux/drivers/scsi/scsi.c, routine scan_scsis(), which seems to only
recognize tapes, disks, changeable disks, cdroms amd worms. Any other scsi device
is ignored. I changed this so that these devices are registered as
generic scsi devices. This seems to work and not to break anything, but I'm by
no means a kernel guru, so please tell me if I'm doing something totally wrong...
(btw, I checked with the most recent kernel I have (1.1.42), scan_scsis() still
ignores devices that are not tapes, disks or CD's).
OK, now the kernel recognizes the scanner and registers it as a generic scsi device
(at least there is a device with major 21, minor 3, which should be the scanner), but
I can't open any of the generic devices. All I get is 'permission denied', 
regardless of the permissions set on the character special files, even if I try as
root.

What am I missing?

Thanks in advance for your help,

        Richard 

PS: Please answer by mail, as I can't read news more often than once a week at
the moment and our newsfeed expires very fast.

---
Richard Kunze (at Uni. of Hannover)
kunze@zeus.informatik.uni-hannover.de



---
Richard Kunze (at Uni. of Hannover)
kunze@zeus.informatik.uni-hannover.de



------------------------------

From: wpp@marie.physik.tu-berlin.de (Kai Petzke)
Crossposted-To: comp.os.linux.help
Subject: Re: Help with development using vi.
Date: 14 Sep 94 09:08:30 GMT

jcej@tragus.atl.ga.us (James CE Johnson) writes:

>I'm running a color_xterm.

>I 'cat' a file to the screen.

>Button one selects text.

>Button two will paste it.

>       (so far so good)

>Now I am vi'ing/elvis'ing a file.

>Button clicks just move the cursor around.

>       (this is what you folks are seeing too)

I think, this is a new feature of elvis 1.7.  Not too many people
have it, yet.  But because mouse clicks are delivered from the
xterm to elvis, cut-and-paste does no longer work as expected.

So press the shift-key and the left/middle/right mouse button
for cut-and-paste.



Kai
-- 
Kai Petzke                      | How fast can computers get?
Technical University of Berlin  |
Berlin, Germany                 | Sol 9, of course, on Star Trek.
wpp@marie.physik.tu-berlin.de   |

------------------------------

From: mea@utu.fi (Matti Aarnio)
Subject: Re: Public domain DHCP available ?
Date: Fri, 16 Sep 1994 09:28:02 GMT

komarimf@craft.camp.clarkson.edu (Mark 'Enry' Komarinski) writes:
>G Dinesh Dutt (brat@htilbom.ernet.in) wrote:
>: Hi folks,
>:
>: Is there a public domain DHCP version available ? For or not for Linux.
>: Appreciate any pointers,
>
...
>Unless you're not talking about the Decentralized Hospital Computer Program
>which has been around for 10+ years.

        "DHCP" -- Distributed Host Configuration Protocol, the successor
                  of BOOTP

See RFCs: 1531 -- DHCP
          1532 -- "BOOTP revised"
          1533 -- DHCP options and BOOTP vendor extensions
          1534 -- Interoperation Between DHCP and BOOTP

I didn't -- offhand -- find any files with "dhcp" in their name from Archie,
but there MUST be something -- propably with different name..

>--
>- Mark Komarinski - komarimf@craft.camp.clarkson.edu

        /Matti Aarnio   <mea@utu.fi>

------------------------------

From: zblaxell@miranda.uwaterloo.ca (Zygo Blaxell)
Subject: Re: Survey: who wants f77,cc,c++,hpf for linux?
Date: Fri, 16 Sep 1994 08:42:25 GMT

In article <34nh0u$rul@chaos.aoc.nrao.edu>,
Chris Flatters <cflatter@nrao.edu> wrote:
>In article bju@indy.pgroup.com,  lfm@pgroup.com (Larry Meadows) writes:
>>3. What distribution media would be required?
>
>In decreasing order of usefulness to the Linux community
>
>       floppy
>       ftp (if feasible)
>       CD Rom
>       tape formats
>

I've noticed FTP mentioned a few times.  I analysed the cost/benefit
ratio of a CD-ROM drive versus an Internet feed, and chose the Internet
feed (more up to date, more useful, and interactive, too).  I wouldn't
know what to do with a CD-ROM.  I can easily sleep or work while
Slackware transfers in 7 or 8 hours, and the cost is comparable to all
the CDs I would want to buy.

Back when I actually used commercial software, I would have loved to be
able to phone up FooBarSoft, Inc., read out my Visa number to an
operator, and get a one-time login to download my favorite application.

Tape formats are right out.  I know three people who own three
incompatible tape drives, and none of these formats are ones I've heard
of.


------------------------------

From: eribruno@netcom.com (Eric V. Bruno)
Subject: Re: Don't use Linux?!
Date: Wed, 14 Sep 1994 08:23:57 GMT

Michael Schumacher (hightec@sbusol.rz.uni-sb.de) wrote:

: Hello Linuxers!

: Okay. Before you start sending me endless flames, I want to make sure
: that you know that I *love* Linux. It's probably the best PC Un*x you
: can find between here and the sun. Linux has some nice features, e.g.
: the /proc filesystem, it is fast, it supports lots of hardware, it
: follows the POSIX standard (which makes porting of existing software
: much easier), plus: it's free. Nobody knows the exact number of Linux
: installations, but it's likely to be in the 100000's. One could think
: that companies are willing to consider Linux a reasonable and serious
: platform, and that they would port and offer their products to the
: Linux community. However, they are far away from doing so, actually. 
: Here's why:

: 1. Commercial software products are typically binary-only (i.e., no
:    source code is available). No matter what language you use for
:    compilation, you will finally need libc, which happens to be FSF's
:    libc on Linux. From the GLPL you learn that you are not allowed
:    to make statically linked, binary-only releases of your software.
:    You may, however, distribute a dynamically linked version of your
:    product, since then only the startup code (crt0) is needed, which
:    is explicitly excluded from the GLPL. This is perfectly okay for
:    other commercial OSs, but:

: 2. Linux's libc tends to change its version number almost every week
:    (sometimes even more often). Even though changes of the minor
:    version number should not affect previous applications, they will
:    sometimes break them. This means for a company that they have to
:    debug the library in order to find a work-around (see 3.).

: 3. The kernel versions change faster than the speed of light. If you
:    ask for a "stable" version, you'll be teached that there are two
:    versions: 1.0 (production) and 1.1 (hacker's paradise). Wanna have a
:    stable one? Get 1.0! Okay, but if I want to offer a commercial
:    product, it doesn't matter what kernel version *I* am using, but
:    what version is used by my potential *customers*! There's a reason
:    for 1.1: it is a bit faster, it supports more hardware, it provides
:    more features. As a result, most Linuxers traditionally pick up the
:    the newest kernel releases all the time - and usually end up in this
:    newsgroup, saying "this is broken", "that doesn't work anymore",
:    "can't compile", etc. (if you don't believe me, just exit this thread
:    for a moment and take a look at the other subjects). Besides other
:    disadvantages, this will definitely not convince companies of the
:    stability and usefulness of Linux!

: 4. The spirit of free software is all around. Free in both meanings:
:    free availability of the sources, and free of charge. Which does
:    not go together with commercial interests very well. Just to give
:    you an example of what I'm talking about: I'm the author of tgdb,
:    a graphical user interface for gdb. I like the idea of free software,
:    and so I asked my employer for permission to make it GPL'd freeware.
:    Guess what, he said "No way!". So I ripped off my bones and used all
:    of my talents to persuade him to make it a shareware product instead
:    of a true commercial package. Well, now that tgdb is available for
:    a couple of weeks, I'm quite sure there are 100's or even more people
:    who use it for their daily debug sessions. Fine. But the bloody truth
:    is that not even a *single* person has paid the nominal shareware
:    fee of US$30!
   
     I have downloaded tgdb today has a matter of fact, Haven't unpacked
     it yet. Of course the rest of week is shot since my 3 year has
     decide that play leggos with daddy is more pressing. I also
     have fix a leakly value in kichten ...etc. :-).
     But I always take 30  days to decide 
     (same with eval copies of "commerical products").
     Normally use someting for week, put it aside for week, Pick it back up 
     and if I'm still using it 10 day latter I put the check in the mail.
     If I like it I'll tell some co-works, they will have to look at it
     and decide just takes time.
 
    Give tgbb sometime say  90 to 180 days, takes time word of mouth,
     Then if don't hear anything worry a bit.

: 5. On the other hand, I can tell you how to make lots of money with Linux: 
:    simply download the archives of tsx-11, sunsite, nic.funet.fi,
:    prep.ai.mit.edu and ftp.x.org, put them on a CDROM, call it "Dream Linux"
:    or similar, and sell if for US$35 per copy. It's that easy. Let's say,
:    an average user is looking for "the better OS" and wants to try out
:    Linux. He buys a "Dream Linux" CD - and is lost. Nothing works "out of
:    the box", no reasonable documentation is available, nor hotline support. 
:    What will happen? I'm quite sure that most of these desperated people
:    will close the Linux chapter - forever.

: There are a lot more things which speak against Linux as a platform for
: commercial products. If an operating system is successful or not depends
: on the availability of qualified (commercial) software for end-users. I
: would like to see companies porting their WYSIWIG word processors, graphic
: tools, spreadsheets, compilers, backup software, and whatever to Linux.
: Linux is great, but at present mostly for developers and freaks - *not* for
: average users who need a reliable platform for doing their jobs. Whoever
: asks for a good word processor for Linux, hears something like "word
: processing is out - try TeX", or "you can run xyz under DOSEMU" or "try SCO
: versions of xyz; just recompile the kernel with SYSV support and get the
: iBSC2 package from foo.bar". This can be - at most - a temporary 
: work-around.
: Users don't want to know how to roll a new kernel, they don't want to ftp
: packages, unpack, configure, compile, debug and install them. That's why
: they are willing to spend some bucks in commercial software, and that's why
: Macs and Windoze are so successful. And that's why Linux is not.

:    Quo vadis, Linux? Do we continue to like Linux "as is", or should we
: change something in order to encourage companies to develop commercial, but
: sophisticated end-user software for this beautiful OS? Do we continue to
: keep Linux a powerful tool for wizards only, or do we want to see Linux 
: being used in offices and other commercial environments? If we *really*
: want Linux to succeed, we *need* the companies and their 
: commercial products!

: Thanks,
: mike

: PS: See 4. ;-)
: --
: In Linux we trust.

Before commercial "mainstream developers" can port products to Linux
two basic things would have to happen.

   1) "Official Stable" releases would have to released a slower rate no
       more than 1 per year. New drivers and hardware fixs should be made
       available when completed.

   2)  Commercial developers would have to have the releases at least
       6 months before release to the general public in order to 
       regession test and upgrade the products to be in lock-step
       if new release was not fully backwards compatible with the
       previous release.

The hacker version of Linux would end up being 1 to 3 years a head of
the "commercial version.

In a "production" environment say 100 machines.  My sysadmin people
can only upgrade x machines, x applications per day.  To install 
a new OS on all 100 machines I have to allocate 1 day per machine.
(8 hours). That is backup the current machine, load the new OS 
test the configuration (each machine is going to be little different since
different users have different configurations depending on what they do
and when the equipment was purchased). Before I do the install I would 
have to build a version of new OS load all of the main apps my 
org is using regession test them to ensure that nothing breaks.  
Say one week (40 hours) to do this with out problems.  
The system then needs to be burned in.
Say one week of uptime with out major problem.

Basically, unless there is compiling reason (need hardware or 
software support) OS upgrades more often than once every 2 or 3 years
is a major impact on organization.

I worked on on project where the users asked for bigger updates less
often (once a year verse a proposed 4 times a year) 
since it was a major impact to thier operations to install and
train thier people.

Linux still has some growing to do.  Look at alot of the gnu code
many items have not changed since they are stable.


Give Linux another 18 months and the commerical venders will either
port or new venders will start up.

How much have the main stream Un*x's (kernel) changed in the past 5 years?

However, the hacker version is the best thing around for R&D (schools and
companies) It is also great for platform for test tools. Since I can
fire up as may copies as I need provided I have the hardware.  


------------------------------

From: hare@zarquon.mathi.uni-heidelberg.de (Hannes Reinecke)
Subject: Re: Wanted: DAT Scsi Driver.
Date: 16 Sep 1994 09:32:39 GMT

werner@cs.sun.ac.za (Werner Fouche ) schrieb:

   I have an SCSI Exabyte DAT drive that once was connected
   to a VAX, that I would like to use on our SCSI-based Linux
   fileserver. So, far I've could not get Linux to talk to the
   DAT drive. Do I need a special device driver for the DAT
   drive, or should the genetic SCSI support of Linux be sufficient
   to get me to DAT heaven!! :-)

Well, as long as it is SCSI-compliant it should work without problems.
I'm working here on a plug-n-play basis with a HP-DAT.
It would be interesting to know what the bootup-messages are.
Did the tape get registered correctly ? And, if so, do the necessary
devices ( aka /dev/[rst0|st0] ) exist ?

Hope this helps

Hannes
=======
Hannes Reinecke                      |
<hare@vogon.mathi.uni-heidelberg.de> |  XVII.: WHAT ?
                                     |  
PGP fingerprint available            |          T.Pratchett: Small Gods
see  'finger' for details            |          

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
