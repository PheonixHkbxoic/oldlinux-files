From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Sat, 24 Sep 94 00:13:11 EDT
Subject:  Linux-Development Digest #217

Linux-Development Digest #217, Volume #2         Sat, 24 Sep 94 00:13:11 EDT

Contents:
  Re: VHDL for Linux...? (John Leslie)
  Re: RFD: new moderated newsgroups (Stephen E. Farlow)
  Re: Don't use Linux?! (Shannon Hendrix)
  Re: Digi Intelligent Boards? (Alan Cox)
  Re: Extending the IP Protocol? (Malcolm Beattie)
  How to Compile Ftptools 4.6 under Linux?? (root)
  Re: [STATUS] Linus Floppy Driver Development (Pyramids-R-Us)
  Info Wanted:  Linux Distribution CD-ROMS (Rakesh Malik)
  Re: Simple Device Driver example needed... (with mmap()) (Petteri Stenius)
  Source Level Kernel Debugging (Doug Niehaus)
  Re: [STATUS] Linus Floppy (Riku Saikkonen)
  elm2.4 (Wolfgang Feldmann)
  Re: Extending the IP Protocol? (Johannes Stille)
  Re: Try this IPX bridging code ... (Rob Janssen)
  Re: 680x0: separate newsgroup? (Michael B. Smith)

----------------------------------------------------------------------------

Crossposted-To: comp.os.linux.misc,comp.lsi.cad,comp.lang.vhdl
From: jleslie@microbus.demon.co.uk (John Leslie)
Subject: Re: VHDL for Linux...?
Reply-To: jleslie@microbus.demon.co.uk
Date: Thu, 22 Sep 1994 12:50:10 +0000

> mainstream designs. The most common choices among people I know seems
> to be:
> 
> Magic
> IRSIM
> Gemini
> WireC
> 

Could somebody tell me firstly what these packages do and secondly where I can
get them from (I think that could be a popular request). Versions for Windows
or Linux or HP/UX would be preferred by me (especially linux). Thanks in
advance...
-- 
John Leslie

------------------------------

From: sefarlow@crl.com (Stephen E. Farlow)
Subject: Re: RFD: new moderated newsgroups
Date: 23 Sep 1994 07:14:56 -0700


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
WHOA!!!! What about the philosophy of openess and non-censorship on 
internet??
I would strenuously OPPOSE such a move. I WILL vote against it!!

sefarlow@crl.com
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Edmund Humenberger (ed@wildsau.idv.uni-linz.ac.at) wrote:
: To build a place where you can get information I suggest
: a new group: comp.os.linux.development.moderated

: or something like this.

: There should be only a limited group of members be allowed
: to pst to this group. These members can vote for any
: other person to be allowed to post also.
: If there is a majority of 30%, the new person can
: become member to.
: How can somebody become member?
: to write good articles in Comp.os.linux.development!!!

: then the others will sea and vote for himher.

: If there are more votes than 30% of the members to quit
: the right of somebody to post, the right will be canceled.

: this can be done automaticly: are there some volunteers out
: to do  it?

: Even if I am not alowed to post. I like to read information.

: thanks ed
-- 
***********************************************************
email : sefarlow@crl.com
Stephen E. Farlow           Amateur Radio Call:  KJ5YN
Houston, TX.

------------------------------

From: shendrix@escape.widomaker.com (Shannon Hendrix)
Subject: Re: Don't use Linux?!
Date: Mon, 19 Sep 1994 01:36:27 GMT

mike@moocow.math.nat.tu-bs.de (Mike Dowling) writes:

>Which is one good reason why I don't like commercial software.

True, but sometimes I think it is better to have just a binary than to
have nothing at all.

>Not at all.  Actually, a software company need only create POSIX conforming
>source code and it will be easily ported to Linux and most other UNIX
>workstations.  A company should not write software for a specific platform,
>although writing for DOS or OS/2 probably precludes any portability.

Writing POSIX for OS/2 should not be that hard.  I wish IBM would just can
Presentation Manager and put X on top of OS/2.

>They are sad that their MS Word or Lotus are not
>ported to Linux.  

Not necessarily.  I could care less if the DOS applications are ported
to Linux.  But I would like to have some nice programs similar to them.
There are loads of UNIX programs out there but I don't know anything
about them.  Let's take CrystalWriter for example.  I have never seen it
before.  About the only way I'll ever get to is for UNIX to start
showing up in CompUSA or I buy the program and hope it's worth using.

So if people seem to want their DOS software maybe it's because they 
know if they like it or not.  Something they have never seen before is
a little harder to trust until you've had a chance to try it and trying
it is very hard in the UNIX world.

-- 
csh
===========================================================================
shendrix@escape.widomaker.com      | Linux and BSD

------------------------------

From: iialan@iifeak.swan.ac.uk (Alan Cox)
Subject: Re: Digi Intelligent Boards?
Date: Fri, 23 Sep 1994 14:49:28 GMT

In article <troyd.779983677@digibd> troyd@digibd.digibd.com (Troy DeJongh) writes:
>Well, I'm responsible for the maintenance/development of our SCO serial 
>drivers and the development of the Linux driver for our PC/Xe product, 
>and I haven't heard anything like that yet.  Plans are to release a 
>Linux driver for our PC/Xe line of products this fall. 

I guess you don't get a better answer than that.

Alan

-- 
  ..-----------,,----------------------------,,----------------------------,,
 // Alan Cox  //  iialan@www.linux.org.uk   //  GW4PTS@GB7SWN.#45.GBR.EU  //
 ``----------'`----------------------------'`----------------------------''

------------------------------

From: mbeattie@sable.ox.ac.uk (Malcolm Beattie)
Subject: Re: Extending the IP Protocol?
Date: Fri, 23 Sep 94 17:41:25 BST

In article <CwBrGI.71s@pe1chl.ampr.org>, Rob Janssen <pe1chl@rabo.nl> wrote:
>IP-in-IP encapsulation is already being used to tunnel IP packets
>between nonstandard networks over another network.  In fact, *two*
>protocol numbers have already been allocated to this purpose, probably
>by oversight...  (numbers 4 and 94)

94 is specifically allocated to swIPe for doing authenticated/encrypted
IP (see "The Architecture and Implementation of Network-Layer Security
Under Unix" by John Ioannidis and Matt Blaze in the proceedings of
the Usenix Security symposium in Santa Clara last year). Maybe 4 is
just intended for "ordinary" IP-inside-IP? There are couple of refs
in the above paper for that.

--Malcolm

-- 
Malcolm Beattie <mbeattie@sable.ox.ac.uk> (note new address)
Oxford University Computing Services
"Widget. It's got a widget. A lovely widget. A widget it has got." --Jack Dee

------------------------------

Date: Thu, 22 Sep 1994 13:25:33 +0000
From: root@myhost.subdomain.domain (root)
Subject: How to Compile Ftptools 4.6 under Linux??

Hi, I like to know if anybody here is able to compile
Ftptools 4.6 under linux. When i started to compile it said that
Imake.tmpl file missing. How do I get or rebuild this file ?
Btw, I am using Slackware 2.0 w/ kernel 1.1.50.
thanks


------------------------------

From: ges@earth.baylor.edu (Pyramids-R-Us)
Subject: Re: [STATUS] Linus Floppy Driver Development
Date: 22 Sep 1994 13:12:32 -0500

In article <DHOLLAND.94Sep17154858@husc7.harvard.edu>,
David Holland <dholland@husc7.harvard.edu> wrote:
>I additionally think it's not reasonable to force the user to look up
>the filesystem type and issue a mount command before reading from the
>disk. Floppies should mount themselves (like on Macs and Amigas) to
>the greatest extent possible given the hardware.

Actually a fair percentage of the time I DONT mount the
floppy when i use it.  I primarly do this when I want to 
either copy floppies or dump a disk image on one.  A good example
of this is when i has to copy 40 floppy and I used dd to dump the
source floppy to disk and then used it to dump it back to the 
destination floppy.  

Aonther problem is that there is no simple way to mount a floppy.
The big question is 'where?'  since a floppy can be mounted on ANY
directory.  Also I don't want my unprivelged users to be able to mount
a minix or ext2 filesystem that has executables owned by root and with
the setuid bit on.  Most of the users of the linux machine I adminiter
at school have access to the console so this is a real concern.

Gene E. Scogin
 

------------------------------

From: vlad@myhost.subdomain.domain (Rakesh Malik)
Subject: Info Wanted:  Linux Distribution CD-ROMS
Date: 22 Sep 1994 18:36:09 GMT

        Are there any Linux CD distributions which include WABI?  This is mostly a
point of curiosity. 

        The real reason for this post is to find out which of the many Linux CD
distributions you would recommend, and why.  One of my friends is planning to get
one, and he has minimal internet access currently, which will change when het gets
ehternet in his dorm and installs Linux on his machine.  

        If any of you have any advice on this matter, please e-mail it to me or post
it here (if I'm posting this on the wrong group, sorry, just let me know).  

        Thanks.

        -Rakesh

------------------------------

From: Petteri.Stenius@cs.hut.fi (Petteri Stenius)
Subject: Re: Simple Device Driver example needed... (with mmap())
Date: 23 Sep 1994 18:53:06 GMT

In article <35su5aINN4vc@thud.cs.utk.edu> mucci@cs.utk.edu (Philip Mucci) writes:

> 
>       Hi fellow Linux-ers!
> 
>       We need some help over here in the Amiga Linux camp. We're gearing up
> for an X11 port (fun, fun, fun!). To start with, we basically need a device 
> driver that can mmap() the Amigas coprocessor registers into the user space. 
> Is there a document around that gives hints how to do this? The old Linux
> character device driver manual skips over the mmap part... :-(
> 
>       All we really need is:
> 
>       open()
>       mmap()

The following works (for me) for mmap of one page of kernel allocated
memory.

first allocate one page of memory in the kernel, possibly in the init 
routine (I do this in the init routine of my installable module):

...
ptr = get_free_page(GFP_KERNEL);
...

then in the mmap routine of your driver:

static int xxx_mmap(struct inode * inode, struct file * file,
                    struct vm_area_struct * vma)
{
  if((vma->vm_end - vma->vm_start) != 4096)
    return -EINVAL;
  if(vma->vm_offset != 0)
    return -EINVAL;

  vma->vm_offset = ptr;

  if(remap_page_range(vma->vm_start, vma->vm_offset, 
                      vma->vm_end - vma->vm_start, vma->vm_page_prot))
    return -EAGAIN;

  return 0;
}

and in the user process:

...
ptr = mmap(NULL, 4096,
           PROT_READ|PROT_WRITE,
           MAP_SHARED,
           handle, 0);
if((int)ptr == -1) {
  printf("mmap failed\n");
  exit(1);
}
...

>       unmap()

Well, hopefully the memory is magically unmapped by the kernel when the
process is killed ;)

>       close()
> 
>       ...and a way to wake up the user process upon reception of a
> hardware interrupt (from the blitter)
> 
>       I know someone out there must know how to do this!
> 
>       Thanks!
>       


--
Petteri Stenius                  I " My punctuality is well known, when
Mail : Petteri.Stenius@cs.hut.fi I the revolution takes place, I'll be late
Tel. : +358-0-492382             I and I'll be shot as a traitor "


------------------------------

Subject: Source Level Kernel Debugging
From: niehaus@morse.tisl.ukans.edu (Doug Niehaus)
Date: 23 Sep 94 14:27:20 CDT
Reply-To: niehaus@morse.tisl.ukans.edu (Doug Niehaus)


I figure I will build a way to do this if it doesn't already exist, but
why reinvent the wheel needlessly?

I am looking at using Linux for several kinds of OS research here at
the University of Kansas. As a precursor to that, I am wondering how
people currently debug the kernel. In previous incarnations I have ported
UNIX to different boxes, and written a real-time multiprocessor distributed OS.
When doing this, I have used a couple different kernel debugging schemes.
Some had better features than others.

When contemplating what I want to do with Linux, I'd really like to get
a setup where I can do source level debugging of the kernel code most of
the time, assembler when necessary. I've hacked debuggers before, and
WILL do this if it doesn't already exist, but want to avoid redoing what
someone else already has done.

What I have in mind is using GDB with a pair of systems. One runs GDB and
has the executables, symbol tables, source on it. It uses GDB support for
embedded systems to talk to the OTHER box throught he serial port. The
other box is the one being debugged and has a simple debug monitor in it
that talks to GDB, reading and writing memory for breakpoints, etc. That way,
you can set a breakpoint ANYWHERE int he kernel, hit it, and do GDB to your
heart's content to figure out what is what. 

Clearly this can be extended to include logging of error messages to buffers
to limit the instrumentation effect we see with kprintf....

I'd appreciate only mail telling me about such a system that exists at this
time, not people wanting to know about it if it exists. If I find one, I'll
post an announcement about it to cover the latter category. If we have to do this
ourselves, then we will get it ready, bundle it up, and give it to the community.

Let me know if you have/know-of a way that is already set up. We are poised to
begin this development, and will begin in the next week if we don't hear from anybody.


-- 
================================================================================
 Douglas Niehaus    
 Assistant Professor                              EMAIL: niehaus@eecs.ukans.edu

 Electrical Engineering and          DISCLAIMER: The opinions expressed here are
  Computer Science Department                    my own. My Department probably
 University of Kansas                            wouldn't agree, the university 
 Lawrence, KS 66045                              wouldn't care, and the state 
                                                 is too conservative to have
 Office: 913-864-7785                            ANY opinions, let alone these.
 Fax:    913-864-7789
================================================================================
-- 
================================================================================
 Douglas Niehaus    
 Assistant Professor                              EMAIL: niehaus@eecs.ukans.edu


------------------------------

Subject: Re: [STATUS] Linus Floppy
From: riku.saikkonen@compart.fi (Riku Saikkonen)
Date: Sat, 24 Sep 94 00:28:00 +0200

>directory.  Also I don't want my unprivelged users to be able to mount
>a minix or ext2 filesystem that has executables owned by root and with
>the setuid bit on.  Most of the users of the linux machine I adminiter
>at school have access to the console so this is a real concern.

See man mount, especially the 'user', 'nosuid', and 'noexec' options...

-=- Rjs -=- riku.saikkonen@compart.fi - IRC: Rjs
"For still there are so many things / that I have never seen: /
in every wood in every spring / there is a different green." - Tolkien


------------------------------

From: wolle@anguish.ancient.trillium.se (Wolfgang Feldmann)
Subject: elm2.4
Date: 23 Sep 1994 22:12:49 +0200

I get this nice error when I try to compile elm2.4:

cc  -O -I../hdrs    -c opt_utils.c
opt_utils.c: In function `gethostname':
opt_utils.c:90: argument `size' doesn't match prototype
/usr/include/unistd.h:564: prototype declaration
*** Error code 1

Stop.
make: *** [all] Error 1


Any ideas please?

Wolfgang Feldmann


------------------------------

Crossposted-To: comp.protocols.tcp-ip
From: johannes@titan.westfalen.de (Johannes Stille)
Subject: Re: Extending the IP Protocol?
Date: Fri, 23 Sep 1994 13:12:06 GMT

In article <35kjmt$8j7@mark.ucdavis.edu>,
        Sam Oscar Lantinga <slouken@cs.ucdavis.edu> wrote:
[...]
>I have:
>
>       NET1_work-ethernet- Linux_box - NET1_work-ethernet- ROUTER1 -
>INTERNET_router_router_router_INTERNET - SLIP_server -serial-Home_Linux_box
>
>       I want my Linux box on the network at work to act as a proxy
>for my Home_Linux_box, making it appear as though my home Linux box is
>on the same network as my machine at work.  I think the proxy arp will
>work, but the issue is routing subnet packets all the way past the
>SLIP server to my home linux box.

Proxy ARP is clearly not enough in this case.

>       ... I've gotten proxy arp working, but routing is still a
>problem, hence the need for the IPOPT_RELAY extension... ?
[...]

You ought to know the protocol a little better before you start to
think about modifying it. The option you need does already exist. It is
called "Loose Source and Record Route". Read RFC 791 for details.

You should be careful, though, because it is not universally supported.
Especially firewalls usually prevent you from using this option across
them.

Linux currently can't handle this option. But if you would add it to
the Linux kernel, you'd do the Linux community a good service. I'd
advise you to check with the Linux network developers first how to do
it right, though, before you start implementing. Use the NET channel of
the Linux mailing list for this.



Since you're using Linux on both ends, you have another option: Use
SLIP-over-rlogin to get a direct SLIP connection between the two Linux
machines. This is the most simple way to encapsulate IP in IP.

First set up the at-work Linux box as SLIP server. This machine should
proxy-ARP for the work-ethernet-address of your home Linux box. You
could test the installation by bringing another Linux box and
connecting them with a nullmodem cable.

Probably your SLIP server can act not only as SLIP server, but also as
terminal server. Then you can do it like this: From your home Linux
box, use dip to dial up the server, rlogin -8 -E to the Linux box at
work and log in to the SLIP account; then let dip switch the serial line
into SLIP mode.
It is important to use "rlogin -8 -E" because standard SLIP needs a
completely 8-bit clean line. telnet is not enough! The command might
have a different name or need other options on a terminal server, but
the clean connection to the rlogind port on the work Linux machine is
what matters.
If you can't get a clean connection (e.g telnet only), you might
consider using "printable SLIP" that uses standard ASCII characters
only. It is supported in the Linux kernel, but you might have to add
the support into dip.

If you have a SLIP-only server, it gets a little more complicated.
First you have to get a rlogin connection from you home box to your
at-work box. Then connect the local input and output of the rlogin
program to the master side of a pseudo terminal. Use dip on the slave
side to build a SLIP connection to your at-work machine.

        Johannes

------------------------------

From: rob@pe1chl.ampr.org (Rob Janssen)
Subject: Re: Try this IPX bridging code ...
Reply-To: pe1chl@rabo.nl
Date: Fri, 23 Sep 1994 21:55:05 GMT

In <1994Sep23.043240.3840@cse.iitb.ernet.in> vinod@cse.iitb.ernet.in (Vinod G Kulkarni) writes:

>I have uploaded IPX bridging code to sunsite (Incoming). This is 
>pre-pre-alpha, but is precursor for fulfledged development of IPX 
>bridging/routing on linux. At this stage, it *may* work for you.
>And it is not all that efficient as of now. We mainly want feedbacks and
>design ideas for efficiency. 

Why do you want bridging when there already is IPX *routing* available
in the kernel?

Rob
-- 
=========================================================================
| Rob Janssen                | AMPRnet:   rob@pe1chl.ampr.org           |
| e-mail: pe1chl@rabo.nl     | AX.25 BBS: PE1CHL@PI8UTR.#UTR.NLD.EU     |
=========================================================================

------------------------------

From: mbs@Hopper.itc.Virginia.EDU (Michael B. Smith)
Subject: Re: 680x0: separate newsgroup?
Date: Tue, 20 Sep 1994 19:56:54 GMT

In article <35n7ed$hum@bambi.zdv.uni-mainz.de>,
Michael Neuffer <neuffer@wilbur.zdv.Uni-Mainz.DE> wrote:
>Hamish Macdonald (Hamish.Macdonald@bnr.ca) wrote:
>: I'd suggest that people interested in a general Linux/68k port *not* use
>: this newsgroup, since it is not a global one.
>
>It is global and connects Fidonet, Mausnet (where the main Atari devellopers 
>are) and Usenet.....

It isn't part of the "Big 7" hierarchies which are all that can be had 
in some places.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
