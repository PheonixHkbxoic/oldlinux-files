WARNING - WARNING:
	If you installed older versions of this, you will have a symbolic
link in /usr/lib/elf -> /lib/elf.  You must remove it before you install
recent versions.
***************************************************************************

	This distribution contains everything you need to start
working with native ELF images under linux.  There is still work being
done, and there are certainly bugs.  This distribution was put
together so as to facilitate ALPHA testing - if you do not want to be
an ALPHA tester, do not bother with this.

	Contents:

elf-gcc:
	1) gcc-2.5.8, compiled as a dynamicly linked ELF image.  Can
	generate both DWARF and stabs type debugging.  To get stabs, use
	-g, to get DWARF, use -gdwarf.

elf-libc:
	1) /lib/elf/ld-linux.so - native linux dynamic linker.
	2) /usr/lib/elf/crt?.0 - the usual.
	3) /lib/elf/libc.so.4.6.5 - libc-linux, build as ELF shared lib with
		binut.
	4) /lib/elf/libm.so.4.6.5   libm from libc-linux.  ELF shared lib.
	5) /lib/elf/libc.so.4 and libm.so.4.  Symlinks required for runtime.
	6) /usr/lib/elf/libc.so libm.so. Symlinks required for runtime.

elf-binut:
	6) Snapshot of binutils - built with jump table library
	   so as to minimize binary size.  This should be completely
	   compatible with a.out as well, so there should not be much
	   danger of installing this, but you should keep a copy off the
	   old binutils handy just in case.  Based upon 940830, plus a
	   number of my patches.

elf-static:
	Some of the other static libraries, like termcap, curses, etc.

elfbin-src:
	Sources to kernel ELF loader, as front end.  Also contains
	patches to just about everything modified to get other binaries
	distributions.

	There is one important piece missing - the binary format
loader for ELF.  This can be found in the binsrc.tar.gz distribution.
It is a loadable kernel module so there is no need to recompile your
kernel.  I have not included a precompiled version since this is
something that needs to be recompiled everytime you update your
kernel.

	The compiler driver is named gcc-elf, so you can build an ELF image
by typing "gcc-elf -o foo foo.c" for example.

	libc now contains all of the aliases that it is supposed to.
	
	For a set of sources to things that are not in GCC, binutils
or libc-linux, please see the binsrc.tar.gz distribution.

	To build GCC, I just did a "./configure --with-elf i486-linux.
There were a few patches (present in binsrc) to get the spec file correct.

	To build binutils, I did a "./configure i486-linux" in the top
directory.  I then went into the jump directory (from binsrc.tar.gz),
and typeed "make", which built the whole thing.

-Eric

