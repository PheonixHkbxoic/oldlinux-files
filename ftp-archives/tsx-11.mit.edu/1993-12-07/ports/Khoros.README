****************************************************************
*                      Khoros for Linux                        *
****************************************************************

Wolfram Gloger
wmglo@dent.med.uni-muenchen.de
May 03 1993.


This is the third release of my patches to the Khoros system
for image processing.
If you want to compile it, you need

0. Khoros 1.0, patchlevel 5 (source distribution)
1. Linux 0.99.4 or higher
2. XFree86 1.2
3. GCC 2.3.3, libc 4.3, flex 2.3, BSD yacc (or Bison)
4. f2c Fortran to C Converter, version "Feb 1993" (not essential)
5. CShell (or TCShell with an appropriate symlink)

and up to 100MB free disk space (that includes the complete
package 0.).

Install 0. first; then unzip and untar the enclosed .z-file
in the Khoros home directory.
Refer to README.Linux for details.

In comparison with the previous "release", there are NO
further changes except one to make the imake utility coming
with Khoros work (a few people complained about the confusing
error messages).  In case you only had problems getting this
imake to work, you can apply the short patch appearing at the
end of this file (run "patch" on it in the Khoros home dir).
Of course, it is now also included in the big diff file in
khoros.1.0.5.tar.

diff -u ./src/bootstrap/imake/imake.c.org ./src/bootstrap/imake/imake.c
--- ./src/bootstrap/imake/imake.c.org   Wed Dec 18 10:57:37 1991
+++ ./src/bootstrap/imake/imake.c       Mon May  3 00:57:33 1993
@@ -11,6 +11,7 @@
  * Revision 1.4  1991/12/18  09:59:03  dkhoros
  * HellPatch3
  *
+ * Changed for GNU cpp and better portability (WG)
   */
 
 
@@ -308,6 +309,9 @@
        char    **argv;
 {
        errno = 0;
+#ifdef __GNUC__
+       AddCppArg("-traditional");
+#endif
        /*
         * Now gather the arguments for make
         */
@@ -678,7 +682,7 @@
                /*
                 * Slurp it all up.
                 */
-               fseek(tmpfd, 0, 0);
+               lseek(fileno(tmpfd), 0, 0); /* better than fseek! (WG) */
                fstat(fileno(tmpfd), &st);
                pline = buf = Emalloc(st.st_size+1);
                total_red = read(fileno(tmpfd), buf, st.st_size);
