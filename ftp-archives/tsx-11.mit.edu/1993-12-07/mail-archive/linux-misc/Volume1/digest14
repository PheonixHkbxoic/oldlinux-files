From:     Digestifier <Linux-Misc-Request@senator-bedfellow.mit.edu>
To:       Linux-Misc@senator-bedfellow.mit.edu
Reply-To: Linux-Misc@senator-bedfellow.mit.edu
Date:     Tue, 17 Aug 93 22:19:53 EDT
Subject:  Linux-Misc Digest #14

Linux-Misc Digest #14, Volume #1                 Tue, 17 Aug 93 22:19:53 EDT

Contents:
  Re: WABI/WINE - INFO! (Mark A. Davis)
  Re: mouse problem on mcc distribution (Sehyo Chang)
  UUCP configuration (Marc G Fournier)
  386bsd or linux? (Robt Ransbottom)
  Re: Something is wrong with Linux boot code... (jcburt@gats486.larc.nasa.gov)
  Re: JANA: still don't answer e-mail (BARRY TITMARSH)
  Re: INN1.4 under Linux - WOW !!!!!! (Marc G Fournier)
  Re: linux docs? (Dan Warburton)
  linux DOS emu and double space (Albatross)
  Re: Engineering Applications (Weimin Zhao)
  Shm is broken for 99.12.  Here is patch. (gwoho liu)
  Atdisk2 is fun.  Fun hardware modification. (gwoho liu)

----------------------------------------------------------------------------

From: mark@taylor.uucp (Mark A. Davis)
Subject: Re: WABI/WINE - INFO!
Date: Tue, 17 Aug 1993 18:48:44 GMT

byron@cc.gatech.edu (Byron A Jeff) writes:

>First of all the Linux binary execute project is called WINE.
>SUMMARY: It's being worked on. It's making progress. We'll be informed when
>         something useful is done. The developers need help. So if you have
>         time/energy join the WABI channel.

>Here is the info I just received by Email (thanks Kurt!)

>----------------- WINE INFO BY EMAIL --------------------------------
>----- end included README -----

>Just thought you might like to know!

Yes, thank you.  I appreciate the status info and summary.  I don't have
time to join all the mail channels.  Perhaps it would be a good idea to
set up "formal" status reports on projects for posting to USENET.  It could
eliminate lots of questions and wondering.  Thanks!
-- 
  /--------------------------------------------------------------------------\
  | Mark A. Davis    | Lake Taylor Hospital | Norfolk, VA (804)-461-5001x431 |
  | Sys.Administrator|  Computer Services   | mark@taylor.wyvern.com   .uucp |
  \--------------------------------------------------------------------------/

------------------------------

Crossposted-To: comp.windows.x.i386unix,comp.os.linux.help
From: sehyo@netcom.com (Sehyo Chang)
Subject: Re: mouse problem on mcc distribution
Date: Tue, 17 Aug 1993 20:33:40 GMT

In article <93229.124727U47041@uicvm.uic.edu> <U47041@uicvm.uic.edu> writes:
>
>Newsgroups: comp.windows.x.i386unix,comp.os.linux.help,comp.os.linux.misc
>Path:
>uicvm.uic.edu!news.acns.nwu.edu!math.ohio-state.edu!usc!elroy.jpl.nasa.gov!decwr
>l!netcomsv!netcom.com!sehyo
>From: sehyo@netcom.com (Sehyo Chang)
>Subject: mouse problem on mcc distribution
>Message-ID: <sehyoCBvn5w.M1C@netcom.com>
>Organization: NETCOM On-line Communication Services (408 241-9760 guest)
>Date: Tue, 17 Aug 1993 00:10:43 GMT
>Lines: 9
>Xref: news.acns.nwu.edu comp.windows.x.i386unix:3278 comp.os.linux.help:296
>comp.os.linux.misc:160
>
>I just installed Xfree386 on my Versa which has mouse port.
>I can't seem a way to find X386 to use mouse port. I don't
>see '/dev/mouse' or anythinging like that. I am using MCC 1.3
>distribution (Is this mean I have to go back to SLS, ugh.....).
>Extreamly frustrated....
>
>P.S:  Does anyone has VGA Color driver for Versa UltraLite Laptop?
>
>
>well someone else had a similar problem.
>one solution is to run syssetupbb
>( in etc) and it will prompt you ofr mouse, modem
>and some more ( lilo i think)
>theis is a problem with mcc if i remeber right from
>the other case
>(and this oonly to configure your mouse at the serial
>nao as a ps/2 one )
>cheers
>kapoulas@math.uic.edu

I fixed the problem by downloading Mcc kernel and recompiling.

thanks



------------------------------

From: marcf@nexus.yorku.ca (Marc G Fournier)
Subject: UUCP configuration
Date: Tue, 17 Aug 1993 22:27:08 GMT

Hi...

        a quick question...taylor uucp 1.04, should I have
HAVE_UNBLOCKED_WRITES set to 1 or to 0?

        sorry to waste the bandwidth, but it says that I'll
be using more CPU time then necessary if I have it wrong :(

Thanks...



------------------------------

From: rob@phavl.UUCP (Robt Ransbottom)
Subject: 386bsd or linux?
Date: 17 Aug 93 16:33:41 GMT

Which system will support several interactive 
database app users better?

-- 
rob   Robert Ransbottom
"It is extremely important to maintain correct attributions." -- anonymous

------------------------------

From: jcburt@gats486.larc.nasa.gov
Subject: Re: Something is wrong with Linux boot code...
Date: 17 Aug 1993 17:24:37 GMT

In article <1993Aug17.150122.19856@noao.edu> swampler@noao.edu (Steve Wampler) writes:

   I've been unsuccessful getting Linux (any version since 99pl4 - don't know
   about earlier versions) on my 486 to boot.  Invariably, it dies during the
   boot with a message about "no free pages".  Many kind people have been
   helpful, with suggestions about trying:

           (1) Booting w/o cache
           (2) Replacing the memory chips
           (3) Replacing the BIOS
           (4) Replacing the motherboard

   However, to be honest, I don't believe any of them.  I believe (easy
   for me to say, I know) that the correct answer is:

           Fix the Linux boot process.

Well, you know, you haven't given us a lot to go on, other than "it don't work, fix it! "
You *could*, for instance, give us some specifics such as a few details about your hardware
(motherboard, amount of memory, bus type, speed, list of add in boards, type/size of
disk drive...you know, the trivial stuff...:-). You could also give us some specifics about
which particular Linux distribution you are trying to use (SLS, MCC, etc...). Another thing that
would be *most* helpful is *where* in the boot process does it fail? alot of info is printed to the
screen during bootup, so how about passing that info (up to the point of failure) on to the
rest of us...You could also mention the *exact* error message...

   (Yes, I also recognize that I'm in a very minority position with Linux,
   as it works *on most hardware*, but I wonder if there are people running
   w/o cache, etc. that really shouldn't have to be doing it that way?)

I've never had any problems with or without cache, so I doubt that that is the problem
with Linux...


   I happen to like Linux (I've used it on other machines), it's a clean design,
   and the general net support is much nicer than that I've seen for the BSDs
   out there.  It's very frustrating that something in the boot process is
   keeping me from using it.

The main possibilities I can see from what little description you gave are a non-supported
board, or IRQ conflict. Best way to check it out is to remove every board from the system
except for video card and hard/floppy controller. If you can boot with just these boards, then
shutdown and add another board, continue this until either all the boards are in, or it fails to
boot...

John
--
John Burton                      G & A Technical Software, Inc.
jcburt@gatsibm.larc.nasa.gov     28 Research Dr. Hampton, Va. 23666
jcburt@gast486.larc.nasa.gov     (804) 865-7491

------------------------------

Date: Tue, 17 Aug 1993 23:59:45 CET
From: BARRY TITMARSH <BTITMARS@ESOC.BITNET>
Subject: Re: JANA: still don't answer e-mail

I have an Auto resend on my one mail
to date Sent 153 mails Recieved 1
this mail asked me to send the same by fax.
Sent faxes 47  replys NONE
recieved CD's NONE
I think the Jana enterprise is ONE BUG HOCUS POCUS. !!
Barry

------------------------------

Crossposted-To: news.software.nntp
From: marcf@nexus.yorku.ca (Marc G Fournier)
Subject: Re: INN1.4 under Linux - WOW !!!!!!
Date: Wed, 18 Aug 1993 00:48:28 GMT

devet@adv.win.tue.nl (Arjan de Vet) writes:

>In article <marcf.745562680@yorku.ca>,
>Marc G Fournier <marcf@nexus.yorku.ca> wrote:

>>      Hmmm...can someone explain this DBZINCORE a little mnore to me?
>>I tried -DMMAP, changed READ to MMAP the other day, compiled and installed
>>aeverything and it totally killed my system...well...killed is a bad 

>Don't use mmap on Linux, because it is not similar to the SunOS mmap (yet
>:-).

        Okay :)  thanks...thought that was what totally screwed up
my news...shouldn't play with functions I don't know, eh? :)

marc

------------------------------

From: warb@tgf.tc.faa.gov (Dan Warburton)
Subject: Re: linux docs?
Date: 18 Aug 1993 00:53:55 GMT

>About 600 pages have been written, but only two books are in relatively
>complete form.  Matt Welsh's _Installation and Getting Started_ has
>been released, ....

>As it is released, all documentation produced by the Linux
>Documentation Project will be made available in at least two places:
>tsx-11.mit.edu:/pub/linux/docs/LDP/
>sunsite.unc.edu:/pub/Linux/docs/LDP/

>For those who want to help: we need people who enjoy spending a *lot*
>of time writing good documentation, and who take pride in their work.
 
I've just read over the Installation and Getting Started Doc and wanted to 
say "Well Done Men". This is a execelent book and should go a long way 
in getting new Linux'ers and Unix'ers started. Thanks, as soon as I can
raise money for a disk drive I'll be putting it to use.
--
Dan Warburton warb@faa.gov warb@tgf.tc.faa.gov warb@pilot.njin.net 
TGF (Target Generation Facility, an Air Traffic Control Simulator) 
FAA Technical Center, Atlantic City International Airport, NJ
08405  Mail Stop ACN-400c  Phone: 609-485-4480 

------------------------------

From: mgrstk@NeXTwork.Rose-Hulman.Edu (Albatross)
Subject: linux DOS emu and double space
Date: 17 Aug 1993 20:20:07 GMT
Reply-To: mgrstk@NeXTwork.Rose-Hulman.Edu (Steve King)


Quick question:

Can a doublespace partition be accessed to through the Linux DOS emulator ?


thanks,

steve

------------------------------

From: wzhao@mcs.kent.edu (Weimin Zhao)
Subject: Re: Engineering Applications
Date: 18 Aug 1993 01:59:14 GMT

In article <24r44d$dgp@charm.magnus.acs.ohio-state.edu> tabaer@magnus.acs.ohio-state.edu (Troy A. Baer) writes:
>BTW, how much interest would there be in getting the NetLib packages
>(LinPack, BLAS, EisPack, and other numerical methods packages) compiled
>and put into shared libraries?  I might be willing to coordinate such an
>effort if I'm not the only person on the planet interested...

Porting these numerical libraries IS surely a nice addition to the linux
community.  But when you have some really floating-point intensive programs,
the hardware (even the 486-66) isn't just fit enough to do the heavy duty
stuff, IMHO.  Better off waiting for a Pentium or a RISC;-)


------------------------------

From: gwoho@ucrmath.ucr.edu (gwoho liu)
Subject: Shm is broken for 99.12.  Here is patch.
Date: 18 Aug 93 02:04:46 GMT

Unfortunately the sysv shm thing is broken for 99.12.  Here is a patch
that apparently fixes it.  The problem is that it attempts to allocate
a chunk of memory bigger than a page if I try to make a shared memory
thing bigger than 4 megs.

I made these patches for 99.11, then today just patched them into 99.12.
These diffs are relative to 99.12.  I have checked the 99.11 patches a little
but the 99.12 patches not as much.

gwoho liu.

diff --context --recursive linux/include/linux/shm.h linux.new/include/linux/shm.h
*** linux/include/linux/shm.h   Mon Aug  9 18:02:30 1993
--- linux.new/include/linux/shm.h       Tue Aug 17 18:37:02 1993
***************
*** 13,19 ****
        short   shm_nattch;             /* no. of current attaches */
        /* the following are private */
        unsigned short   shm_npages;  /* size of segment (pages) */
!       unsigned long   *shm_pages;   /* array of ptrs to frames -> SHMMAX */ 
        struct shm_desc *attaches;    /* descriptors for attaches */
  };
  
--- 13,19 ----
        short   shm_nattch;             /* no. of current attaches */
        /* the following are private */
        unsigned short   shm_npages;  /* size of segment (pages) */
!       unsigned long   **shm_pages;   /* array of ptrs to frames -> SHMMAX */ 
        struct shm_desc *attaches;    /* descriptors for attaches */
  };
  
diff --context --recursive linux/ipc/shm.c linux.new/ipc/shm.c
*** linux/ipc/shm.c     Mon Aug  9 18:02:31 1993
--- linux.new/ipc/shm.c Tue Aug 17 18:44:11 1993
***************
*** 66,72 ****
  {
        struct shmid_ds *shp;
        int numpages = (size + PAGE_SIZE -1) >> PAGE_SHIFT;
!       int id, i;
  
        if (size < SHMMIN)
                return -EINVAL;
--- 66,72 ----
  {
        struct shmid_ds *shp;
        int numpages = (size + PAGE_SIZE -1) >> PAGE_SHIFT;
!       int id, i,j,k;
  
        if (size < SHMMIN)
                return -EINVAL;
***************
*** 87,94 ****
                        wake_up (&shm_lock);
                return -ENOMEM;
        }
! 
!       shp->shm_pages = (ulong *) kmalloc (numpages*sizeof(ulong),GFP_KERNEL);
        if (!shp->shm_pages) {
                shm_segs[id] = (struct shmid_ds *) IPC_UNUSED;
                if (shm_lock)
--- 87,94 ----
                        wake_up (&shm_lock);
                return -ENOMEM;
        }
!       j = numpages+1023 >> 10;
!       shp->shm_pages = (ulong **) kmalloc (j*sizeof(ulong *),GFP_KERNEL);
        if (!shp->shm_pages) {
                shm_segs[id] = (struct shmid_ds *) IPC_UNUSED;
                if (shm_lock)
***************
*** 96,103 ****
                kfree_s (shp, sizeof (*shp));
                return -ENOMEM;
        }
  
-       for (i=0; i< numpages; shp->shm_pages[i++] = 0);
        shm_tot += numpages;
        shp->shm_perm.key = key;
        shp->shm_perm.mode = (shmflg & S_IRWXUGO);
--- 96,118 ----
                kfree_s (shp, sizeof (*shp));
                return -ENOMEM;
        }
+       for (i=0; i<j; i++) {
+               k = i==j-1&&numpages&1023 ? (numpages&1023)*4 : 4096;
+               if ((shp->shm_pages[i]=(ulong *)kmalloc(k,GFP_KERNEL)) == NULL) {
+                       shm_segs[id] = (struct shmid_ds *)IPC_UNUSED;
+                       if (shm_lock)
+                               wake_up(&shm_lock);
+                       while (--i >= 0)
+                               kfree_s(shp->shm_pages[i],4096);
+                       kfree_s(shp->shm_pages,j*sizeof(ulong *));
+                       kfree_s(shp,sizeof(*shp));
+                       return -ENOMEM;
+               }
+               k /= 4;
+               while (k)
+                       shp->shm_pages[i][--k] = 0;
+       }
  
        shm_tot += numpages;
        shp->shm_perm.key = key;
        shp->shm_perm.mode = (shmflg & S_IRWXUGO);
***************
*** 154,160 ****
  static void killseg (int id)
  {
        struct shmid_ds *shp;
!       int i, numpages;
        ulong page;
  
        shp = shm_segs[id];
--- 169,175 ----
  static void killseg (int id)
  {
        struct shmid_ds *shp;
!       int i,j, numpages;
        ulong page;
  
        shp = shm_segs[id];
***************
*** 174,194 ****
                printk ("shm nono: killseg shp->pages=NULL. id=%d\n", id);
                return;
        }
!       for (i=0; i< numpages ; i++) {
!               if (!(page = shp->shm_pages[i]))
!                       continue;
!               if (page & 1) {
!                       free_page (page & PAGE_MASK);
!                       shm_rss--;
!               } else {
!                       swap_free (page);
!                       shm_swp--;
!               }
!       }
!       kfree_s (shp->shm_pages, numpages * sizeof (ulong));
!       shm_tot -= numpages;
!       kfree_s (shp, sizeof (*shp));
!       return;
  }
  
  int sys_shmctl (int shmid, int cmd, struct shmid_ds *buf)
--- 189,216 ----
                printk ("shm nono: killseg shp->pages=NULL. id=%d\n", id);
                return;
        }
!       for (i=0; i<numpages+1023>>10 ; i++) {
!               if (shp->shm_pages[i] == NULL) {
!                       printk ("shm nono: killseg shp->pages[%d]=NULL. id=%d\n",i,id);
!                       return;
!               }
!               for (j=0; j<numpages-i*1024&&j<1024; j++) {
!                       if (!(page = shp->shm_pages[i][j]))
!                               continue;
!                       if (page & 1) {
!                               free_page (page & ~0xfff);
!                               shm_rss--;
!                       } else {
!                               swap_free (page);
!                               shm_swp--;
!                       }
!               }
!               kfree_s(shp->shm_pages[i],j*4);
!       }
!       kfree_s (shp->shm_pages, i * sizeof (ulong));
!       shm_tot -= numpages;
!       kfree_s (shp, sizeof (*shp));
!       return;
  }
  
  int sys_shmctl (int shmid, int cmd, struct shmid_ds *buf)
***************
*** 595,627 ****
                return;
        }
  
!       if (!(shp->shm_pages[idx] & PAGE_PRESENT)) {
                if(!(page = __get_free_page(GFP_KERNEL))) {
                        oom(current);
                        *ptent = BAD_PAGE | PAGE_ACCESSED | 7;
                        return;
                }
!               if (shp->shm_pages[idx] & PAGE_PRESENT) {
                        free_page (page);
                        goto done;
                }
!               if (shp->shm_pages[idx]) {
!                       read_swap_page (shp->shm_pages[idx], (char *) page);
!                       if (shp->shm_pages[idx] & PAGE_PRESENT)  {
                                free_page (page);
                                goto done;
                        }
!                       swap_free (shp->shm_pages[idx]);
                        shm_swp--;
                }
                shm_rss++;
!               shp->shm_pages[idx] = page | (PAGE_SHARED | PAGE_DIRTY);
        } else 
                --current->maj_flt;  /* was incremented in do_no_page */
  
  done:
        current->min_flt++;
!       page = shp->shm_pages[idx];
        if (code & SHM_READ_ONLY)           /* write-protect */
                page &= ~2;
        mem_map[MAP_NR(page)]++;
--- 617,649 ----
                return;
        }
  
!       if (!(shp->shm_pages[idx>>10][idx&1023] & PAGE_PRESENT)) {
                if(!(page = __get_free_page(GFP_KERNEL))) {
                        oom(current);
                        *ptent = BAD_PAGE | PAGE_ACCESSED | 7;
                        return;
                }
!               if (shp->shm_pages[idx>>10][idx&1023] & PAGE_PRESENT) {
                        free_page (page);
                        goto done;
                }
!               if (shp->shm_pages[idx>>10][idx&1023]) {
!                       read_swap_page (shp->shm_pages[idx>>10][idx&1023], (char *) page);
!                       if (shp->shm_pages[idx>>10][idx&1023] & PAGE_PRESENT)  {
                                free_page (page);
                                goto done;
                        }
!                       swap_free (shp->shm_pages[idx>>10][idx&1023]);
                        shm_swp--;
                }
                shm_rss++;
!               shp->shm_pages[idx>>10][idx&1023] = page | (PAGE_SHARED | PAGE_DIRTY);
        } else 
                --current->maj_flt;  /* was incremented in do_no_page */
  
  done:
        current->min_flt++;
!       page = shp->shm_pages[idx>>10][idx&1023];
        if (code & SHM_READ_ONLY)           /* write-protect */
                page &= ~2;
        mem_map[MAP_NR(page)]++;
***************
*** 667,673 ****
                goto check_id;
        }
  
!       page = shp->shm_pages[idx];
        if (!(page & PAGE_PRESENT))
                goto check_table;
        swap_attempts++;
--- 689,695 ----
                goto check_id;
        }
  
!       page = shp->shm_pages[idx>>10][idx&1023];
        if (!(page & PAGE_PRESENT))
                goto check_table;
        swap_attempts++;
***************
*** 715,721 ****
        if (mem_map[MAP_NR(page)] != 1) 
                goto check_table;
        page &= PAGE_MASK;
!       shp->shm_pages[idx] = swap_nr;
        if (invalid)
                invalidate();
        write_swap_page (swap_nr, (char *) page);
--- 737,743 ----
        if (mem_map[MAP_NR(page)] != 1) 
                goto check_table;
        page &= PAGE_MASK;
!       shp->shm_pages[idx>>10][idx&1023] = swap_nr;
        if (invalid)
                invalidate();
        write_swap_page (swap_nr, (char *) page);

------------------------------

From: gwoho@ucrmath.ucr.edu (gwoho liu)
Subject: Atdisk2 is fun.  Fun hardware modification.
Date: 18 Aug 93 02:14:22 GMT

This is completely serious.

Here is a fun modification to make you your IDE card for Atdisk2.  I have
two IDE disks, and two adapter cards.  Unfortunately neither can move the
io address and only one can disable the floppy.  Thus I did the following--

I changed card to use interrupt 15 and swapped address lines 8 and 9.  This
does not move the floppy adapter address, but moves the hd address to
2f0.  The control or whatever register does not move, but it seems to
work anyway.  This line is used not much and both of my drives require the
same value.  I guess when the computer tries to reset one drive the other one
will reset too.  I applied the patches for Atdisk2 and it works fine--I
did this about 10 days ago--no problems at all.

I guess this modification would be fun to put in the README file.  I dont
think 2f0-2f7 are used for anything else usually.

Another fun hardware modification is one that will turn a ST02 into an ST01.
(These are seagate scsi cards.)  There is no jumper for ST02 to disable
floppy.  But with a hacksaw, you can saw about 1 inch off of the end of
the card.  This has the result of disabling the floppy adapter (in fact,
removing the whole thing) and also makes the card easier to insert into
the computer.  I think cutting this little trace which is not on my
card anymore would have the same effect, but not the second effect.
Card works perfectly as SCSI card but not as floppy card.  My other floppy
card now works perfectly with this card.

gwoho liu.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Misc-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.misc) via:

    Internet: Linux-Misc@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Misc Digest
******************************
