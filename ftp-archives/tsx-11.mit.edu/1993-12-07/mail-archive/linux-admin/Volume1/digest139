From:     Digestifier <Linux-Admin-Request@senator-bedfellow.mit.edu>
To:       Linux-Admin@senator-bedfellow.mit.edu
Reply-To: Linux-Admin@senator-bedfellow.mit.edu
Date:     Thu, 4 Nov 93 02:32:41 EST
Subject:  Linux-Admin Digest #139

Linux-Admin Digest #139, Volume #1                Thu, 4 Nov 93 02:32:41 EST

Contents:
  Re: How-to make a 5 1/4 Boot-/RootDisk (Jaroslaw Knap,MAE Graduate Student)
  Re: SYSV init? (Christoph Rimek)

----------------------------------------------------------------------------

From: knap@sun.com (Jaroslaw Knap,MAE Graduate Student)
Subject: Re: How-to make a 5 1/4 Boot-/RootDisk
Reply-To: knap@sun.com
Date: Wed, 3 Nov 1993 22:09:09 GMT

Moze Ci sie przydac. To o tym jak zrobic boot-disk.


Jarek

In article 66@winx03.informatik.uni-wuerzburg.de, phar006@wrzx12.rz.uni-wuerzburg.de (Thomas Heiling) writes:
>
>
>HOW-TO make a Rescue-Disk with two 5 1/4 Floppies
>
>By Thomas Heiling 
>
>Email heiling@wrzv01.rz.uni-wuerzburg.de
>
>Here is my proposal for all those in Net-world, who want
>a Rescue-Disk, because the SLS-Boot Disk ( as in the
>version for the 5 1/4 Disk comes with an old Kernel and
>- this is the main problem - an old libc).
>
>The biggest Problem is *SPACE* therefore the following !
>
>What You need :
>   - Two (MS-DOS) formatted 5 1/4 disks
>   - A Kernel-Image, usually /vmlinuz or /zImage
>   - A copy of rdev, singleinit, agetty, (optional ksh)
>   - Eventually the util-etc-2.1 Package, if you
>     have no recent mount or the above files
>
>Therefore the ( I hope ) easiest way is the following :
>1. Make a Directory TMP which holds all the temporary files
>   eg mkdir /usr/tmp/tmp
>
>2. Copy your Kernel-Image to TMP
>
>3. Modify your Kernel-Image
>   - to boot from your Floppy
>        /etc/rdev TMP/vmlinuz /dev/fd0 
>   - to boot the Kernel Read-Only
>       /etc/rootflags TMP/vmlinuz /dev/fd0 1
>   - to boot with a RAMDISK with kkk KB ( eg. 1200 KB )
>       /etc/ramsize TMP/vmlinuz 1200
>   - optional: boot with asking for the videomode
>       /etc/vidmode TMP/vmlinuz 3
>
>4. Make the Boot-Floppy
>   Put a formatted floppy in your 5 1/4 Drive 
>       dd if=TMP/vmlinuz of=/dev/fd0 bs=16k
>
>If you don't have /etc/rootflags,/etc/ramsize and/or /etc/vidmode
>-> These are only symlinks to /etc/rdev
>You can make them with
>       ln -sf /etc/rdev /etc/rootflags
>       ln -sf /etc/rdev /etc/ramsize
>       ln -sf /etc/rdev /etc/vidmode
>       
>Now you have a bootable Floppy, but no Filesystem.
>
>/*
>
>The other method to obtain a bootable Floppy with LILO
>is a little bit complex. Only a hint :
>- Make a fs on the floppy
>- Mount the floppy on (eg) /mnt
>- Make the directories /mnt/etc and /mnt/etc/lilo
>- cd to /mnt/etc/lilo
>- edit the file /mnt/etc/lilo/config as shown
>
>       boot = /dev/fd0
>       install = /etc/lilo/boot.b
>       delay = 100
>       compact
>       image = /vmlinuz
>               label = LX
>               root = /dev/fd0
>               read-only
>- Test the LILO installation
>       /etc/lilo/install -r /mnt -v -v -t
>- Make the installation
>       /etc/lilo/install -r /mnt -v -v
>
>*/
>
>5. Take the Boot-Floppy out of the Floppy-Drive and
>   label it.
>
>6. Put a new formatted Disk in the Floppy-Drive
>
>7. Make a Filesystem on it 
>   ( I would propose a MINIX-Filesystem, because an EXT-2 FS
>     needs extra space for the lost+found directory )
>       /etc/mkfs.minix -c -n30 /dev/fd0 1200
>
>8. Mount the new Filesystem on /mnt
>       mount -t minix /dev/fd0 /mnt
>
>9. Change to /mnt and make directories
>       cd /mnt
>       mkdir bin dev etc lib proc tmp usr user
>
>10. Absolutely necessary files in /mnt/bin are
>       cp gzip login mkdir mv passwd rm sh
>    (I have used the PD-Kornshell as sh, and the 
>     normal passwd not the shadow passwd )
>    Copy these files to /mnt/bin
>
>12. The next directory is /mnt/dev
>    ChangeDir to it and copy your /dev/MAKEDEV to it
>    /* If you have no such File you must make the 
>       devices per hand with mknod */
>    Make the Standard Devices,Hard Disks, Floppy Disks
>    Terminals and all Devices for your Setup.
>
>    BEWARE!! In my MAKEDEV Script are the /dev/ram with a
>    major 1 and minor 0. THIS IS IMHO WRONG !!
>    It should be major 1 and minor 1.
>    If this is the case do a "rm -f ram",
>    "mknod -m 660 ram b 1 1" and "chown root.disk ram" 
>     
>13. Absolutely necessary files in /mnt/etc
>
>adjtime             getty*       mkfs.ext2*   profile*     shells       umount*
>brc         group        mkfs.minix*  psdatabase   shutdown*    update*
>fsck.ext2*   init*       mkfs.xiafs*  rc           swapon*      utmp
>fsck.minix*  inittab     motd         rc.local     sync*        wtmp
>fsck.xiafs*  issue       mount*       rdev*        termcap
>fstab       lilo/        passwd       securetty    tune2fs*
>
>
>You may skip the mkfs.* and fsck.* files, if your kernel can't 
>recognize this Filesystem.
>
>14. If you are using LILO on your Hardrive add a
>    directory /mnt/etc/lilo with these files:
>
>    any_d.b, boot.b, bootargs, bootsave, chain.b, config, disktab, 
>    install@, install.lilo*, lilo*, map, mkck*, os2_d.b
>
>15. Copy your /libc-so.4.4.? and /lib/libm.so.4.4.? to /mnt/lib
>       cp /lib/libc.so.4.4.4 /mnt/libc.so.4.4.4
>       cp /lib/libm.so.4.4.4 /mnt/libm.so.4.4.4
>
>16. Make symbolic links to lib[cm].so.4
>       BEWARE!!! You *must* be in /mnt/lib
>
>       ln -sf libc.so.4.4.4 libc.so.4
>       ln -sf libm.so.4.4.4 libm.so.4 
>
>17. Now look how much Space is left on the device
>       df
>
>18. Copy your Keymap to /mnt/tmp/keys.map and
>    compress it with gzip -9 
>
>19. Copy necessary Files to a temporary Directory on
>    your Harddrive. Compress it with gzip -9.
>    I have done it with these Files :
>
>awk*, chmod*, clock*, ctrlaltdel*, date*, df*, dmesg*, 
>domainname*, doshell*, du*, env*, fdformat*, fdisk*, 
>fdprm*, frag*, free*, hostname*, ipcrm*, ipcs*, joe*, 
>joerc*, kbdrate*, keys.map*, kill*, killall*, ldd*, ln*, 
>loadkeys*, ls*, makehole*, mkswap*, more*, newgrp*, ps*, 
>rdev*, sed*, setfdprm*, setserial*, setterm*, top*, 
>uname*, vi*, w*, wall*, write*
> 
>20. Move the compressed Files to /mnt/tmp 
>       ( As long as Space permits it )
>
>Now you have a full FileSystem, but you have to
>edit the scripts in /mnt/etc:
>
>21. You have to edit these Files in /mnt/etc
>        adjtime, brc, fstab, group, inittab, issue, motd, 
>        passwd, profile*, rc, rc.local, securetty, shells, 
>       
>I will give you my setup for every File :
>See it in the Addendum A
>
>22. As a last step you must edit the root Init Files
>    These are .profile and .kshrc ( Remember ? I use
>    the ksh as sh. As usually because of space ... )
>    See it in Addendum B
>
>23. You are finished !!!
>    Try it out ...
>    /* Boot with your Boot-Floppy,after the Kernel-Request
>       to enter the ROOT-DISK put your Root-Disk in the
>       floppy-drive and watch for error messages */
>
>
>P.S.
>The whole Thing started, because i wanted to "tune2fs" my
>machine at work. OK, No Problem - i thought. Simple boot
>the SLS-Disk, copy the tune2fs to it and that's all.
>But..., Wrong Library Version ...
>
>After 2 days hack with one Disk, LILO and the EXT2-FS,
>i gave up.
>There is not enough Space on a 5 1/4 disk...
>( I *don't* want learn ed, i need vi or joe !
>  And i hate the US-Chars on my German-Keyboard )
>
>Then i tried it with TCX/UNTCX, but after some time
>i thought it's overkill. I must have space to expand
>the files and the only way is to do it via a RAMDISK.
>And if i must have a RAMDISK, i don't need TCX, because
>i can unpack all file to it when i modify my Startup
>scripts.
>Much later ( in the night ... ) i tried it again with
>one Disk, but the Kernel Image needs to much space,
>therefore i maked it in the described way.
>If anyone can show me another way to do it, i would
>say much thanks.
>
>Ideas,Flames and critics to heiling@wrzv01.rz.uni-wuerzburg.de
>
>
>Addendum A : Here is a list of all setup file in /mnt/etc
>***                    adjtime                 ***
>0.0 0 0.0
>
>***                    brc                     ***
>#!/bin/sh
>#
># /etc/brc.. This script gets run just before the system is down.
>#
>PATH=/bin:/etc:/usr/bin
>/bin/killall -KILL
>echo Unmounting file systems.....
>/etc/umount -a
>echo Done.
>
>***                    fstab                   ***
># /etc/fstab
># static file system information, see fstab(5)
>
>/dev/fd0       /               minix   defaults
>none           /proc           proc    defaults
>
>***                    group                   ***
>root::0:root
>other::1:
>bin::2:root,bin,daemon
>sys::3:root,bin,sys,adm
>adm::4:root,adm,daemon
>uucp::5:uucp
>users::6:
>mail::7:root
>info::8:root,adm,info
>wheel::10:root
>daemon::12:root,daemon
>floppy::13:root
>cron::16:
>tty::17:tty
>lp::18:lp
>disk::19:root,adm
>mem::20:root
>kmem::21:
>sysadmin::23:sysadmin
>shadow::49:root
>group::50:
>
>***                    inittab                 ***
># Format:
># ttyline:termcap-entry:getty-command
>tty1:con80x25:/etc/getty 9600 tty1
>tty2:con80x25:/etc/getty 9600 tty2
>tty3:con80x25:/etc/getty 9600 tty3
>tty4:con80x25:/etc/getty 9600 tty4
># tty5:con80x60:/etc/getty 9600 tty5
># ttys1:dumb:/etc/getty 9600 tty64
># tty65:dumb:/etc/getty -m -t60 2400 tty65
>
>***                    issue                   ***
>
>Welcome to Linux !
>
>***                    motd                    ***
>
>       |^^^^^^|        _____________________
>       |      |       /                     \
>       |      |      | Welcome to emperor.   |
>       | (o)(o)      |                       |
>      @      _)      | A public access Linux |
>       | ,___|     ,,| system.               |
>       |   /   ..''  |                       |
>      /____\          \_____________________/
>
>
>***    passwd  /* No Password for root,uucp and sync !! */ ***
>root::0:0::/:/bin/sh
>daemon:x:1:1::/etc:
>bin:x:2:2::/bin:
>adm:x:4:4::/:
>uucp::5:5::/usr/uucp:
>sync::255:0:::/bin/sync
>                       
>***                    profile                 ***
># commands common to all logins
>PATH="/etc:/bin:/usr/bin:/usr/local/bin:."
>TERM=console
>PS1='$ '
>PS2='> '
>alias rm='rm -i'
>alias md=mkdir
>alias rd=rmdir
>alias ll='ls -l'
>alias ls='ls -F'
>alias cp='cp -i'
>alias mv='mv -i'
>alias which='type -path'
>alias m1d='mount -t msdos /dev/fd1 /user'
>alias m0d='mount -t msdos /dev/fd0 /user'
>alias u0='umount /dev/fd0'
>alias u1='umount /dev/fd1'
>alias lf0d="mf0d; ls -s /user; uf0"
>alias lf1d="mf1d; ls -s /user; uf1"
>ignoreeof=10
>DISPLAY=":0"
>export PATH DISPLAY TERM PS1 PS2 ignoreeof
>export XDVIFONTS=/usr/local/lib/tex/fonts/cm/%f.%p
>umask 022
>
>***                    rc                      ***
># /etc/rc
>#
># These commands are executed at boot time by init(8).
># User customization should go in /etc/rc.local.
>
>PATH=/bin:/usr/bin:/etc
>
># fsck disks if system crashed
>
>if [ -f /fastboot ]
>then
>    echo Skipping fsck
>else
>    echo "Starting fsck"
>    /etc/fsck.minix -a /dev/fd0
>    # If there was a failure, drop into single-user mode.
>    # NOTE: This is not secure.  If security is needed, make sure than
>    #       /etc/securesinlge exists and "reboot single".  simipleinit
>    #       will then prompt for root's password.
>    if [ $? -gt 1 ]
>    then
>        echo "Warning: fsck FAILED"
>        echo "         Starting single user shell"
>        echo "         Fix filesystem and REBOOT"
>        /bin/sh -si < /dev/console > /dev/console 2>&1
>    fi
>fi
>
># Remount the root filesystem in read-write mode
>echo "Remounting the ROOT Filesystem!"
>/etc/mount -n -o remount /dev/fd0 /
>
># start the update(8) sync demon
>/etc/update &
>
># remove /etc/mtab* so that mount will create it with a root entry
>/bin/rm -f /etc/nologin /fastboot /etc/mtab*
>
># mount file systems in fstab (and create an entry for /)
># but not NFS because TCP/IP is not yet configured
>/etc/mount -avt nonfs
>
># remove stale locks (must be done after mount -a!)
>/bin/rm -f /usr/spool/locks/* /usr/spool/uucp/LCK*
>
># remove /etc/utmp and touch it
>rm -f /etc/utmp /etc/wtmp
>echo -n > /etc/utmp
>echo -n > /etc/wtmp
>
># enable swapping
>/etc/swapon -a
>
># start up cron if it exists
>if [ -f /usr/etc/crond ]; then
>       /usr/etc/crond
>fi
>
># do any local stuff
>/bin/sh /etc/rc.local
>
>exit 0
>
>***                    rc.local                ***
># /etc/rc.local
>#
># This file is executed after /etc/rc and consist of local customizations.
>
>#This is a hack ...
>
>mkfs.minix -c -n30 /dev/ram 2400
>if [ $? -gt 1 ]
>then
>       echo "Warning: mkfs failed"
>       /bin/sh < /dev/console > /dev/console 2>&1
>fi
>
>/etc/mount -t minix /dev/ram /usr
>mkdir /usr/bin
>mkdir /usr/tmp
>export TMPDIR='/usr/tmp'
>cp /tmp/*.gz /usr/bin/
>mkdir /usr/lib
>mv /usr/bin/joerc.gz /usr/lib
>gzip -dv /usr/lib/joerc
>gzip -dv /usr/bin/*
>
># update clock
>clock -a
>
># Set your hostname
>hostname linux
>
># enable screen blanking
>setterm -term console -foreground black -background white \
> -store -blank 10 -clear rest > /dev/tty1
>setterm -term console -foreground white -background blue \
> -store  -clear all > /dev/tty2
>setterm -term console -foreground blue -background cyan \
> -store  -clear all > /dev/tty3
>setterm -term console -foreground cyan -background blue \
> -store  -clear all > /dev/tty4
>
># set the modem speed to 57600 when 38400 is selected
># setserial /dev/modem spd_hi
>
># make keyboard repeat rate reasonable
>kbdrate -r 24 -d 250
>
>if [ -f /etc/rc.net ]
>then
>       /etc/rc.net
>       # now we can safely mount our NFS filesystems, if any
>       mount -avt nfs
>fi
>
>#Load the German Keymap
>loadkeys /usr/bin/keys.map
>
>***                    securetty                       ***
>tty1
>tty2
>tty3
>tty4
>
>***                    shells                          ***
>/bin/sh
>/bin/bash
>/bin/csh
>/bin/ksh
>/bin/tcsh
>/bin/rc
>/bin/zsh
>
>
>Addendum B:
>Here are my .kshrc and .profile
>***                    .profile                        ***
>HOSTNAME=`hostname`
>PS1='$HOSTNAME[!]$PWD> '
>PS2='rest?> '
>export HOSTNAME PS1 PS2
>
>CDPATH=:$HOME
>ENV=$HOME/.kshrc
>FCEDIT=/usr/bin/vi
>HISTFILE=$HOME/.ksh_history
>export HISTSIZE=25
>#export HZ=100
>MAIL=/usr/spool/mail/$USER
>PATH=/etc:$HOME/bin:/bin:/usr/bin:/usr/local/bin:/usr/bin/X11
>VISUAL=/usr/bin/vi
>
>umask 022
>#trap clear 0
>export CDPATH ENV FCEDIT HISTFILE
>export SHELL VISUAL
>export TERM MAIL PATH 
>       
>And here is my .kshrc
>***                    .kshrc                          ***
>#!/bin/ksh
>#ksh environment setup
>
>if [ xx$HOSTNAME = xx ]
>then
>  HOSTNAME=`hostname`
>  export HOSTNAME
>fi
>
>alias rm='rm -i'
>alias md=mkdir
>alias rd=rmdir
>alias ll='ls -l'
>alias ls='ls -F'
>alias cp='cp -i'
>alias mv='mv -i'
>alias which='type -path'
>alias m1d='mount -t msdos /dev/fd1 /user'
>alias m0d='mount -t msdos /dev/fd0 /user'
>alias u0='umount /dev/fd0'
>alias u1='umount /dev/fd1'
>alias lf0d="mf0d; ls -s /user; uf0"
>alias lf1d="mf1d; ls -s /user; uf1"
>alias m=more
>alias h='fc -l'
>alias al=alias
>alias bye=exit
>alias rmv=/bin/rm
>alias lc='ls -C'
>
>#stty erase \^h susp \^z kill \^u intr \^?
>set -o trackall -o ignoreeof -o monitor
>
>set -o emacs >/dev/null 2>/dev/null
>bind '^I'=complete >/dev/null 2>/dev/null
>bind '^A'=beginning-of-line >/dev/null 2>/dev/null
>bind '^[['=prefix-2  >/dev/null 2>/dev/null
>bind '^XA'=up-history >/dev/null 2>/dev/null
>bind '^XB'=down-history >/dev/null 2>/dev/null
>bind '^XC'=forward-char >/dev/null 2>/dev/null
>bind '^XD'=backward-char >/dev/null 2>/dev/null
>bind '^P'=up-history > /dev/null 2>/dev/null
>bind '^N'=down-history >/dev/null 2>/dev/null
>
>Addendum C : Here is a complete List of My Files
>
>total 18
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ./
>drwxr-xr-x  16 root     root         1024 Nov  1 22:53 ../
>-rw-r--r--   1 root     root         1088 Nov  2 00:22 .kshrc
>-rw-r--r--   1 root     root          406 Nov  2 00:16 .profile
>drwxr-xr-x   2 root     root          512 Nov  1 23:16 bin/
>drwxr-xr-x   2 root     root         2304 Nov  1 23:54 dev/
>drwxr-xr-x   3 root     root         1248 Nov  2 00:57 etc/
>drwxr-xr-x   2 root     root          192 Nov  1 23:14 lib/
>drwxr-xr-x   2 root     root           64 Nov  2 00:13 mnt/
>drwxr-xr-x   2 root     root           64 Nov  1 23:09 proc/
>drwxr-xr-x   2 root     root         1504 Nov  2 00:26 tmp/
>drwxr-xr-x   2 root     root           64 Nov  1 23:09 user/
>drwxr-xr-x   2 root     root           64 Nov  1 23:09 usr/
>
>bin:
>total 201
>drwxr-xr-x   2 root     root          512 Nov  1 23:16 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>-r-xr-xr-x   1 root     root        12080 Nov  1 23:09 cp*
>-r-xr-xr-x   1 root     root        15792 Nov  1 23:21 ed*
>-r-xr-xr-x   1 root     root        46084 Nov  1 23:09 gzip*
>-r-xr-xr-x   1 root     root         8156 Nov  1 23:09 login*
>-r-xr-xr-x   1 root     root         4104 Nov  1 23:09 mkdir*
>-r-xr-xr-x   1 root     root         6724 Nov  1 23:09 mv*
>-r-xr-xr-x   1 root     root         5100 Nov  1 23:09 passwd*
>-r-xr-xr-x   1 root     root         5056 Nov  1 23:09 rm*
>-r-xr-xr-x   1 root     root        91140 Nov  1 23:09 sh*
>
>dev:
>total 15
>drwxr-xr-x   2 root     root         2304 Nov  1 23:54 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>-rwxr-xr-x   1 root     root         9723 Nov  1 23:49 MAKEDEV*
>crw--w--w-   1 root     tty        4,   1 Nov  1 23:52 console
>brw-r-----   1 root     floppy     2,   0 Nov  1 12:00 fd0
>brw-r-----   1 root     floppy     2,   1 Nov  1 12:00 fd1
>brw-r-----   1 root     disk       3,   0 Nov  1 12:00 hda
>brw-r-----   1 root     disk       3,   1 Nov  1 12:00 hda1
>brw-r-----   1 root     disk       3,   2 Nov  1 12:01 hda2
>brw-r-----   1 root     disk       3,   3 Nov  1 12:01 hda3
>brw-r-----   1 root     disk       3,   4 Nov  1 12:01 hda4
>brw-r-----   1 root     disk       3,   5 Nov  1 12:01 hda5
>brw-r-----   1 root     disk       3,   6 Nov  1 12:01 hda6
>brw-r-----   1 root     disk       3,   7 Nov  1 12:01 hda7
>brw-r-----   1 root     disk       3,   8 Nov  1 12:01 hda8
>brw-r-----   1 root     disk       3,  64 Nov  1 12:01 hdb
>brw-r-----   1 root     disk       3,  65 Nov  1 12:01 hdb1
>brw-r-----   1 root     disk       3,  66 Nov  1 12:01 hdb2
>brw-r-----   1 root     disk       3,  67 Nov  1 12:01 hdb3
>brw-r-----   1 root     disk       3,  68 Nov  1 12:01 hdb4
>brw-r-----   1 root     disk       3,  69 Nov  1 12:01 hdb5
>brw-r-----   1 root     disk       3,  70 Nov  1 12:01 hdb6
>brw-r-----   1 root     disk       3,  71 Nov  1 12:01 hdb7
>brw-r-----   1 root     disk       3,  72 Nov  1 12:01 hdb8
>crw-r-----   1 root     mem        1,   2 Nov  1 11:59 kmem
>crw-r-----   1 root     daemon     6,   0 Nov  1 12:01 lp0
>crw-r-----   1 root     daemon     6,   1 Nov  1 12:01 lp1
>crw-r-----   1 root     daemon     6,   2 Nov  1 12:01 lp2
>crw-rw----   1 root     mem        1,   1 Nov  1 11:59 mem
>crw-rw-rw-   1 root     mem        1,   3 Nov  1 11:59 null
>crw-rw----   1 root     mem        1,   4 Nov  1 11:59 port
>crw-------   1 root     tty        4, 128 Nov  1 12:03 ptyp0
>crw-------   1 root     tty        4, 129 Nov  1 12:03 ptyp1
>crw-------   1 root     tty        4, 130 Nov  1 12:03 ptyp2
>crw-------   1 root     tty        4, 131 Nov  1 12:03 ptyp3
>crw-------   1 root     tty        4, 132 Nov  1 12:03 ptyp4
>crw-------   1 root     tty        4, 133 Nov  1 12:03 ptyp5
>crw-------   1 root     tty        4, 134 Nov  1 12:03 ptyp6
>crw-------   1 root     tty        4, 135 Nov  1 12:03 ptyp7
>crw-------   1 root     tty        4, 136 Nov  1 12:03 ptyp8
>brw-rw----   1 root     disk       1,   1 Nov  1 23:55 ram
>crw-rw-rw-   1 root     tty        5,   0 Nov  1 11:59 tty
>crw-------   1 root     tty        4,   0 Nov  1 19:55 tty0
>crw--w--w-   1 root     other      4,   1 Nov  2 00:48 tty1
>crw--w--w-   1 root     root       4,   2 Nov  2 00:53 tty2
>crw--w--w-   1 root     root       4,   3 Nov  2 00:48 tty3
>crw--w--w-   1 root     root       4,   4 Nov  2 00:48 tty4
>crw-------   1 root     tty        4,   5 Nov  1 19:55 tty5
>crw-------   1 root     tty        4,   6 Nov  1 19:55 tty6
>crw-------   1 root     tty        4,   7 Nov  1 19:55 tty7
>crw-------   1 root     tty        4,   8 Nov  1 19:55 tty8
>crw-r--r--   1 root     tty        4,  64 Nov  1 12:04 ttyS0
>crw-r--r--   1 root     tty        4,  65 Nov  1 12:04 ttyS1
>crw-------   1 root     tty        4, 192 Nov  1 12:03 ttyp0
>crw-------   1 root     tty        4, 193 Nov  1 12:03 ttyp1
>crw-------   1 root     tty        4, 194 Nov  1 12:03 ttyp2
>crw-------   1 root     tty        4, 195 Nov  1 12:03 ttyp3
>crw-------   1 root     tty        4, 196 Nov  1 12:03 ttyp4
>crw-------   1 root     tty        4, 197 Nov  1 12:03 ttyp5
>crw-------   1 root     tty        4, 198 Nov  1 12:03 ttyp6
>crw-------   1 root     tty        4, 199 Nov  1 12:03 ttyp7
>crw-------   1 root     tty        4, 200 Nov  1 12:03 ttyp8
>crw-------   1 root     tty        4, 240 Nov  1 12:03 ttys0
>crw-------   1 root     tty        4, 241 Nov  1 12:03 ttys1
>crw-------   1 root     tty        4, 242 Nov  1 12:03 ttys2
>crw-------   1 root     tty        4, 243 Nov  1 12:03 ttys3
>crw-------   1 root     tty        4, 244 Nov  1 12:03 ttys4
>crw-------   1 root     tty        4, 245 Nov  1 12:03 ttys5
>crw-------   1 root     tty        4, 246 Nov  1 12:03 ttys6
>crw-------   1 root     tty        4, 247 Nov  1 12:03 ttys7
>crw-------   1 root     tty        4, 248 Nov  1 12:03 ttys8
>crw-rw-rw-   1 root     mem        1,   5 Nov  1 11:59 zero
>
>etc:
>total 280
>drwxr-xr-x   3 root     root         1248 Nov  2 00:57 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>-rw-r--r--   1 root     root           28 Nov  2 00:48 adjtime
>-rw-r--r--   1 root     root          183 Nov  2 00:07 brc
>-r-xr-xr-x   1 root     root        37892 Nov  1 23:10 fsck.ext2*
>-r-xr-xr-x   1 root     root        11356 Nov  1 23:15 fsck.minix*
>-r-xr-xr-x   1 root     root        21508 Nov  1 23:16 fsck.xiafs*
>-rw-r--r--   1 root     root          115 Nov  2 02:16 fstab
>-r-xr-xr-x   1 root     root         8564 Nov  1 23:10 getty*
>-rw-r--r--   1 root     root          327 Nov  1 23:10 group
>-r-xr-xr-x   1 root     root         6232 Nov  1 23:10 init*
>-rw-r--r--   1 root     root          335 Nov  1 23:10 inittab
>-rw-r--r--   1 root     root           22 Nov  1 23:10 issue
>drwxr-xr-x   2 root     root          800 Nov  1 23:35 lilo/
>-r-xr-xr-x   1 root     root        21508 Nov  1 23:10 mkfs.ext2*
>-r-xr-xr-x   1 root     root         8988 Nov  1 23:15 mkfs.minix*
>-r-xr-xr-x   1 root     root        17412 Nov  1 23:16 mkfs.xiafs*
>-rw-r--r--   1 root     root          374 Nov  1 23:10 motd
>-r-xr-xr-x   1 root     root         9660 Nov  1 23:10 mount*
>-rw-r--r--   1 root     root          118 Nov  1 23:10 passwd
>-rwxr--r--   1 root     root          586 Nov  1 23:10 profile*
>-rw-r--r--   1 root     root        52912 Nov  1 23:33 psdatabase
>-rw-r--r--   1 root     root         1552 Nov  2 00:34 rc
>-rw-r--r--   1 root     root         1221 Nov  2 00:09 rc.local
>-r-xr-xr-x   1 root     root         5724 Nov  1 23:15 rdev*
>-rw-r--r--   1 root     root           21 Nov  1 23:10 securetty
>-rw-r--r--   1 root     root           63 Nov  1 23:10 shells
>-r-xr-xr-x   1 root     root         6424 Nov  1 23:10 shutdown*
>-r-xr-xr-x   1 root     root         3992 Nov  1 23:10 swapon*
>-r-xr-xr-x   1 root     root         3104 Nov  1 23:10 sync*
>-rw-r--r--   1 root     root         3434 Nov  1 23:10 termcap
>-r-xr-xr-x   1 root     root        13316 Nov  1 23:15 tune2fs*
>-r-xr-xr-x   1 root     root         7328 Nov  1 23:10 umount*
>-r-xr-xr-x   1 root     root         3212 Nov  1 23:10 update*
>-rw-r--r--   1 root     root            0 Nov  2 00:57 utmp
>-rw-r--r--   1 root     root            0 Nov  2 00:57 wtmp
>
>etc/lilo:
>total 69
>drwxr-xr-x   2 root     root          800 Nov  1 23:35 ./
>drwxr-xr-x   3 root     root         1248 Nov  2 00:57 ../
>-rw-r--r--   1 root     root          192 Nov  1 23:34 any_d.b
>-rw-r--r--   1 root     root         2984 Nov  1 23:34 boot.b
>-rw-r--r--   1 root     root           31 Nov  1 23:34 bootargs
>-rw-r--r--   1 root     root          512 Nov  1 23:34 bootsave
>-rw-r--r--   1 root     root           84 Nov  1 23:34 chain.b
>-rw-r--r--   1 root     root          120 Nov  1 23:34 config
>-rw-r--r--   1 root     root          169 Nov  1 23:34 config.orig
>-rw-------   1 root     root          358 Nov  1 23:34 disktab
>lrwxrwxrwx   1 root     root            4 Nov  1 23:35 install -> lilo*
>-rwxr--r--   1 root     root           41 Nov  1 23:34 install.lilo*
>-r-xr-xr-x   1 root     root        46084 Nov  1 23:34 lilo*
>-rw-------   1 root     root         4608 Nov  1 23:34 map
>-r-xr-xr-x   1 root     root          419 Nov  1 23:34 mkck*
>-rw-r--r--   1 root     root          140 Nov  1 23:34 os2_d.b
>
>lib:
>total 724
>drwxr-xr-x   2 root     root          192 Nov  1 23:14 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>lrwxrwxrwx   1 root     root           13 Nov  1 23:13 libc.so.4 -> libc.so.4.4.2*
>-rwxr-xr-x   1 root     root       623620 Nov  1 23:13 libc.so.4.4.2*
>lrwxrwxrwx   1 root     root           13 Nov  1 23:14 libm.so.4 -> libm.so.4.4.2*
>-rwxr-xr-x   1 root     root       107524 Nov  1 23:13 libm.so.4.4.2*
>
>mnt:
>total 2
>drwxr-xr-x   2 root     root           64 Nov  2 00:13 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>
>proc:
>total 2
>drwxr-xr-x   2 root     root           64 Nov  1 23:09 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>
>tmp:
>total 315
>drwxr-xr-x   2 root     root         1504 Nov  2 00:26 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>-r-xr-xr-x   1 root     root        46998 Nov  2 00:28 awk.gz*
>-r-xr-xr-x   1 root     root         3046 Nov  1 23:10 chmod.gz*
>-r-xr-xr-x   1 root     root         3223 Nov  1 23:22 clock.gz*
>-r-xr-xr-x   1 root     root         2076 Nov  1 23:22 ctrlaltdel.gz*
>-r-xr-xr-x   1 root     root         7171 Nov  2 00:14 date.gz*
>-r-xr-xr-x   1 root     root         2853 Nov  2 00:14 df.gz*
>-r-xr-xr-x   1 root     root         2002 Nov  1 23:22 dmesg.gz*
>-r-xr-xr-x   1 root     root         2023 Nov  1 23:21 domainname.gz*
>-r-xr-xr-x   1 root     root         1953 Nov  1 23:22 doshell.gz*
>-r-xr-xr-x   1 root     root         3099 Nov  2 00:14 du.gz*
>-r-xr-xr-x   1 root     root         1393 Nov  2 00:14 env.gz*
>-r-xr-xr-x   1 root     root         2610 Nov  1 23:22 fdformat.gz*
>-r-xr-xr-x   1 root     root         9953 Nov  1 23:22 fdisk.gz*
>-r-xr-xr-x   1 root     root          526 Nov  1 23:22 fdprm.gz*
>-r-xr-xr-x   1 root     root         2951 Nov  1 23:22 frag.gz*
>-r-xr-xr-x   1 root     root         2284 Nov  2 00:14 free.gz*
>-r-xr-xr-x   1 root     root         2022 Nov  1 23:21 hostname.gz*
>-r-xr-xr-x   1 root     root         2102 Nov  1 23:22 ipcrm.gz*
>-r-xr-xr-x   1 root     root         5251 Nov  1 23:22 ipcs.gz*
>-r-xr-xr-x   1 root     root        22349 Nov  1 23:10 joe.gz*
>-r-xr-xr-x   1 root     root         3129 Nov  1 23:32 joerc.gz*
>-r-xr-xr-x   1 root     root         2367 Nov  1 23:22 kbdrate.gz*
>-r-xr-xr-x   1 root     root         1966 Nov  1 23:10 keys.map.gz*
>-r-xr-xr-x   1 root     root         2434 Nov  1 23:21 kill.gz*
>-r-xr-xr-x   1 root     root         3247 Nov  2 00:06 killall.gz*
>-r-xr-xr-x   1 root     root         2257 Nov  1 23:21 ldd.gz*
>-r-xr-xr-x   1 root     root         3174 Nov  1 23:40 ln.gz*
>-r-xr-xr-x   1 root     root        10431 Nov  1 23:10 loadkeys.gz*
>-r-xr-xr-x   1 root     root         6903 Nov  2 00:04 ls.gz*
>-r-xr-xr-x   1 root     root         2604 Nov  1 23:22 makehole.gz*
>-r-xr-xr-x   1 root     root         2649 Nov  1 23:22 mkswap.gz*
>-r-xr-xr-x   1 root     root         9768 Nov  1 23:21 more.gz*
>-r-xr-xr-x   1 root     root         2133 Nov  1 23:21 newgrp.gz*
>-r-xr-xr-x   1 root     root         6633 Nov  1 23:34 ps.gz*
>-r-xr-xr-x   1 root     root         3242 Nov  1 23:22 rdev.gz*
>-r-xr-xr-x   1 root     root        18380 Nov  2 00:26 sed.gz*
>-r-xr-xr-x   1 root     root         2703 Nov  1 23:22 setfdprm.gz*
>-r-xr-xr-x   1 root     root         4611 Nov  1 23:22 setserial.gz*
>-r-xr-xr-x   1 root     root         5445 Nov  1 23:21 setterm.gz*
>-r-xr-xr-x   1 root     root         7869 Nov  2 00:05 top.gz*
>-r-xr-xr-x   1 root     root         1393 Nov  2 00:08 uname.gz*
>-r-xr-xr-x   1 root     root        43740 Nov  1 23:23 vi.gz*
>-r-xr-xr-x   1 root     root         6283 Nov  1 23:34 w.gz*
>-r-xr-xr-x   1 root     root         3396 Nov  1 23:21 wall.gz*
>-r-xr-xr-x   1 root     root         3378 Nov  1 23:21 write.gz*
>
>user:
>total 2
>drwxr-xr-x   2 root     root           64 Nov  1 23:09 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>
>usr:
>total 2
>drwxr-xr-x   2 root     root           64 Nov  1 23:09 ./
>drwxr-xr-x  11 root     root          448 Nov  2 00:58 ../
>
>
>
>
>
>
>
>



---
================================================================================
Jaroslaw Knap                           
Arizona State University                
Tempe, AZ  
phone: (602) 965 3604                   
Internet: knap@enuxsa.eas.asu.edu                                        
================================================================================


------------------------------

Date: 03 Nov 1993 20:47:00 +0100
From: chrimek@rimki.toppoint.de (Christoph Rimek)
Subject: Re: SYSV init?
Reply-To: chrimek@tpki.toppoint.de

Hello

gareth@gblinux.demon.co.uk wrote on 31.10.93:

> On Sun, 31 Oct 1993 02:59:37 GMT;
> ----PERUCCI, PHILIP A. (SSB1PZP@imcvms.med.navy.mil) said:
> >
> >How do I tell if I am running SYSV init or Poe's "simpleinit"?
> >
> Read the MAN page. SysV init has lots of nice options like CTRL-ALT-DEL
> handling...

Yes, it's wonderful in this respect. I have chosen to assign a simple sync  
to the CAD-combination:

     ...
     ctrlaltdel::/bin/sync
     ...

No user can cause any trouble when playing in the well-known DOS-manner.
The only drawback I have to admit: even the system admin cannot escape.

-cr

--
Christoph Rimek, Kiel, Germany                       chrimek@toppoint.de
phone: +49 431 18307 (voice)                        Zer:  CHRIMEK@KRISKI

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Admin-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.admin) via:

    Internet: Linux-Admin@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Admin Digest
******************************
