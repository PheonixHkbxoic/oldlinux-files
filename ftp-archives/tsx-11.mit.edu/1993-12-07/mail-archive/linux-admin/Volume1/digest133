From:     Digestifier <Linux-Admin-Request@senator-bedfellow.mit.edu>
To:       Linux-Admin@senator-bedfellow.mit.edu
Reply-To: Linux-Admin@senator-bedfellow.mit.edu
Date:     Sun, 31 Oct 93 17:16:01 EST
Subject:  Linux-Admin Digest #133

Linux-Admin Digest #133, Volume #1               Sun, 31 Oct 93 17:16:01 EST

Contents:
  Linux HOWTO Index (Matt Welsh)
  Corel SCSI LS2000 card [Q] (Claus S. Kristensen)
  Re: BIG Security Hole in SLACKWARE (jacobsd@solar.cor2.epa.gov)
  Re: BIG Security Hole in SLACKWARE (Jean Liddle)
  Re: Introduction into Unix (Robert L. McMillin)
  Re: Is PLIP possible form a LAN? (Daniel D Deavours)

----------------------------------------------------------------------------

From: mdw@sunsite.unc.edu (Matt Welsh)
Crossposted-To: comp.os.linux.announce,comp.os.linux.help,news.answers,comp.answers
Subject: Linux HOWTO Index
Date: 31 Oct 1993 16:36:17 GMT

Archive-name: linux/howto/index
Last-modified: 31 October 1993

The Linux HOWTO Index 
Matt Welsh, <mdw@sunsite.unc.edu>
=============================================================================
Last Modified 31 October 1993

This is an introduction and index to the Linux HOWTO documents. 

0. What are Linux HOWTOs?

        Linux HOWTOs are short online documents which describe in detail
        a certain aspect of configuring or using the Linux system. For 
        example, there is the Installation HOWTO, which gives instructions
        on installing Linux, and the Mail HOWTO, which describes how to
        set up and configure mail under Linux. Other examples include the
        NET-2-HOWTO (previously the NET-2-FAQ) and the Linux-vs-386BSD HOWTO.

        Information in HOWTOs is generally more detailed and in-depth than
        what can be squeezed into the Linux FAQ. For this reason, the
        Linux FAQ is being rewritten. A large amount of the information
        contained therein will be relegated to various HOWTO documents.
        The FAQ will be a shorter list of frequently asked questions about 
        Linux, covering small specific topics. Most of the ``useful'' 
        information in the FAQ will now be covered in the HOWTOs. 

        HOWTOs are comprehensive docs---much like an FAQ but generally not
        in question-and-answer format. However, many HOWTOs contain an FAQ
        section at the end. For example, the NET-2-FAQ has been renamed to
        the NET-2-HOWTO, because it wasn't in question-and-answer format. 
        However, you will see the NET-2-HOWTO named as the NET-2-FAQ in many
        places. The two docs are one and the same.


1. Where to get Linux HOWTOs

        HOWTOs can be retrieved via anonymous FTP from the following
        sites:

                sunsite.unc.edu:/pub/Linux/docs/HOWTO

                tsx-11.mit.edu:/pub/linux/docs/HOWTO

        The Index, printed below, lists the currently available HOWTOs.

        HOWTOs are also posted regularly to the newsgroups comp.os.linux
        and comp.os.linux.announce. In addition, a number of the HOWTOs
        will be crossposted to news.answers. Therefore, you can find the
        Linux HOWTOs on the news.answers archive site rtfm.mit.edu.


2. HOWTO Index
        
        The following Linux HOWTOs are currently available. The list
        is small, because this is a relatively new project. 

        * INSTALLATION HOWTO. How to obtain and install Linux. This is the
          first document which a Linux newcomer should read. It discusses
          how to obtain Linux, both from the Internet and via Snail-mail,
          and how to install it. Focuses primarily on the SLS distribution
          of Linux, which is the current de facto standard.

        * Linux INFO-SHEET. A general technical introduction to Linux,
          listing its features, supported hardware, and other general
          information. 

        * Linux META-FAQ. A list of sources of information about Linux,
          such as documentation, newsgroups, FTP sites, and so on.

        * NET-2 HOWTO. Describes how to install and configure the Linux NET-2 
          TCP/IP code, in kernels 0.99.pl10 and above. (This has nothing 
          to do with the so-called BSD NET-2 distribution.) Discusses various
          aspects of TCP/IP networking under Linux, including the use of SLIP.
          The complete instruction manual for TCP/IP under Linux.
        
        * Ethernet HOWTO. A HOWTO about the various Ethernet device drivers
          which are available for Linux. Should be read along with the NET-2
          HOWTO by anyone using Ethernet for TCP/IP on Linux.

        * XFree86 HOWTO. This HOWTO describes how to install and configure
          XFree86-2.0 for Linux. Most of this is Linux-specific, and expects
          you to read the documentation included in the XFree86-2.0 package.

        * Mail HOWTO. All about configuration of electronic mail with Linux,
          including UUCP and TCP/IP mailers such as Smail and sendmail.

        * UUCP HOWTO. How to configure UUCP to transfer files, mail, and
          news to other UNIX machines on a UUCP-based connection. Includes
          discussion of Taylor UUCP for Linux.
        
        * News HOWTO. Setup and configuration of news software, such as 
          C News, INN, and newsreaders (such as rn and tin) under Linux.

        * Printing HOWTO. How to configure and use printing software under
          Linux, such as lp, lpr, etc. including remote printing.

        * SCSI HOWTO. All about SCSI tapes, drives, and CD-ROMs under Linux.

        * Hardware Compatibility HOWTO. An extensive list of hardware 
          supported by Linux.


        WANTED. I would be very happy if someone would write the following 
        HOWTO documents, and submit them to me (see the instructions in
        the next section below). Most of these are modifications of existing
        FAQ documents, and should be easy to put into HOWTO format. Keep in
        mind that HOWTOs generally aren't in FAQ format, but can contain an
        FAQ section at the end.

        Some of these are under construction; however, if you're interested
        in working on one of them, please let me know.

        * GCC/LIBRARY HOWTO. Discussing installation/upgrading of the GCC 
          and shared libraries under Linux. How to build shared libraries.
          Most of the material would come from Mitchum DeSouza's GCC FAQ. 

        * KERNEL HOWTO. How to upgrade and compile the kernel. Basic kernel
          tweaking, including how to turn on debugging output. How to decrypt
          panic messages. Basic introduction to kernel structure and hacking.
          (Under constructions, mdw@sunsite.unc.edu).
        
        * SERIAL HOWTO. All of the ins and outs about serial communications
          under Linux, including use of getty for dialins. Perhaps a section
          on FAX software.


3. Writing and submitting a HOWTO

        If you would like to write a Linux HOWTO document, there are a few
        guidelines that you should follow. 

        * Format the document neatly. HOWTOs must be available in plain 
          ASCII format, but you are free to use a formatting tool (texinfo,
          LameTeX, nroff) to format the document. Try to use meaningful
          structure and organization, and write clearly. Remember that
          many of the people reading HOWTOs do not speak English as their
          first language.

        * Make sure that all of the information is correct. I can't stress
          this enough. When in doubt, speculate, but make it clear that
          you're only guessing. 

        * Make sure that you are covering the most recent version of the
          available software. Also, be sure to include full instructions
          on where software can be downloaded from (FTP site name, full
          pathname). 

        * Include an FAQ section at the end, if appropriate. Many HOWTO
          documents need an "FAQ" or "Common Problems" section to cover
          information which can't be covered in the regular text.

        * Use other HOWTOs as a model. It is nice to have a common look and
          feel to HOWTO documents--- this document being an example. The
          easier the HOWTO is to browse, the more useful it will be to
          readers.


        After you have written the HOWTO, mail it to me (Matt Welsh) at
        mdw@sunsite.unc.edu. I am the HOWTO coordinator---I will look 
        over the HOWTO, and make any editorial remarks. I will also take
        care of approving and posting the HOWTO to the various newsgroups
        and uploading the HOWTO to the FTP archive sites. Of course,
        all credit for the HOWTO will go to the author.

        It is important that you go through me when submitting a HOWTO. I
        maintain the HOWTO archives and need to keep track of what HOWTOs
        are being written and who is doing what. If you don't submit a
        HOWTO to me, I can't include it in the archive or add it to the
        HOWTO INDEX. 

        I can also help to reformat the HOWTO if needed to make it look
        nicer. :) Once I have approved the HOWTO, I will post it and
        upload it to the FTP sites. I will also send you (the author) 
        the "final" version of the HOWTO with any changes. All you have
        to do is send me periodic updates (every month or so, as needed)
        and I will take care of posting the HOWTO regularly. 


3. Miscellaneous and Legalese

        If you have questions, please feel free to mail mdw@sunsite.unc.edu.
        The Linux FAQ rewrite is being coordinated by Ian Jackson, 
        ijackson@nyx.cs.du.edu, with help from others.

        Linux HOWTOs are copyrighted by their authors. You are free to
        distribute verbatim copies of HOWTOs in any medium, provided that
        the copyright notice and authorship remains intact.

------------------------------

From: csk@lm.dth.dk (Claus S. Kristensen)
Subject: Corel SCSI LS2000 card [Q]
Date: Sun, 31 Oct 1993 19:00:29 GMT

Hi Linuxers!

(I appologize if this is the wrong newsgroup for this question - I'm
new to this hierachy and don't know which is where...)

I have just obtained the Linux (Yggdrasil) CD and have tried to run
the system by booting on the Bootdisk. However, I can't get linux to 
recognize the Corel LS2000 SCSI card I have for my Toshiba CD-drive.

The chip on the card is a NCR53C400. I have tried to disable the
BIOS but it didn't help. Any (ANY) suggestions are wellcome.
(Yes, I know it's not on the list of approved adaptor cards, but if 
someone knows how to make it work anyway, i'd be very glad)

Sincerely,

Claus Kristensen

==================================================================
*  Claus Sternberg Kristensen, PhD                               *
*  Department of Microbiology   Technical University of Denmark  *
*  Building 221                 DK 2800 Lyngby Denmark           *
*  Phone (Den:) 45 93 12 22     ext. 2522 or 2515                *
*  Phone (Int:) +45 45 93 34 22 FAX +45 45 93 28 09              *
*  E-mail: csk@lm.dth.dk                                         *
==================================================================


------------------------------

From: jacobsd@solar.cor2.epa.gov
Subject: Re: BIG Security Hole in SLACKWARE
Date: 31 Oct 1993 18:16:28 GMT

In <2b0fgh$2ik@knobel.knirsch.de> andreas@knobel.knirsch.de (Andreas Klemm) writes:
>pott@asterix.nt.ruhr-uni-bochum.de (Ruediger Pott) writes:
>>I just experienced a big security-hole in the current
>>Slackware-Distribution:

>What do you call current ? In Slackware 1.0.4
>ls -ld / shows:

>drwxr-xr-x  16 root     root         1024 Oct 24 16:31 /

>>The root-directory is writable for everyone!!!

>Is this bug perhaps in 1.0.5 ???!!!

  I have Slackware 1.02 and / was world writable.  I suspect that it was
a bug in the earlier versions.  I believe it used to be around in SLS
where Slackware sort of came from, and got fixed.  I'm glad it got fixed
(if it did) because there are a _lot_ of holes in 1.02.  Some other fun
tricks for Slackware:  tftp is enabled on /, root's .profile has the line
umask 000 (which causes all new directories made to be world writable!),
and a number of other directories are world writable, as are devices.

  I strongly suggest running COPS once to see what it shows.  If you have
users on your system, they might run it, and I'm sure you want to do it
before they do!

BTW, this should not be entailed as a flame against Slackware -- I first
decided to install SLS, then after getting about 20 pages of "bugs to fix
after installing but before running" tips from people (all of which was
available to Peter MacDonald but he seems to have ignored), I went with
Slackware instead.  I'm glad I did, and Patrick Volkerding has actually
answered my mail very promptly.
--
Dana Jacobsen        jacobsd@solar.cor2.epa.gov        Computer Sciences Corp.

"In legislative bodies, it is customary to mention all members as honorable;
 as, `the honorable gentleman is a scurvy cur.'"
  -- Ambrose Bierce, "The Devil's Dictionary"

------------------------------

From: jliddle@rs6000.cmp.ilstu.edu (Jean Liddle)
Subject: Re: BIG Security Hole in SLACKWARE
Date: Sun, 31 Oct 1993 17:34:23 GMT

In article <2b0fgh$2ik@knobel.knirsch.de> andreas@knobel.knirsch.de (Andreas Klemm) writes:
>pott@asterix.nt.ruhr-uni-bochum.de (Ruediger Pott) writes:
>
>What do you call current ? In Slackware 1.0.4
>ls -ld / shows:
>
>drwxr-xr-x  16 root     root         1024 Oct 24 16:31 /
>
>>The root-directory is writable for everyone!!!
>
>Is this bug perhaps in 1.0.5 ???!!!
>

in my version of 1.0.5 ls -ld / shows:

drwxr-xr-x  17 root     root         1024 Oct 31 01:40 /

as well.  Perhaps this has been fixed since you downoaded 1.05?

Jean.
-- 
Jean Liddle                                 
Computer Science, Illinois State University  
e-mail:  jliddle@ilstu.edu                  
============================================

------------------------------

Crossposted-To: comp.os.linux.misc,comp.unix.questions,comp.unix.misc
From: rlm@helen.surfcty.com (Robert L. McMillin)
Subject: Re: Introduction into Unix
Date: Sun, 31 Oct 1993 17:12:06 GMT

On 30 Oct 1993 04:22:44 GMT, muenx@heike.informatik.uni-dortmund.de (Holger Muenx) said:

> Due to the fact that some of my users are no Unix wizards I am looking for
> some introduction paper for them to learn the basics.

> It's for a Linux system but needs not to be special written for this OS.

> It would be fine if it is available as plain ascii file. However, dvi or
> postscript will do it too. Even references to printed books/papers will
> be interesting for me.

> Please tell me the exact locations and names of mentioned files!

Not an e-text, but how about the O'Reilly & Associates book on Unix?
-- 

Robert L. McMillin | Surf City Software | rlm@helen.surfcty.com | Dude!
  "It's okay to stare at my ear.  I know you can't help it." -- Bongo


------------------------------

From: ddd42961@uxa.cso.uiuc.edu (Daniel D Deavours)
Subject: Re: Is PLIP possible form a LAN?
Date: 31 Oct 1993 21:23:33 GMT

>> Just want to ask, if every of my computer have 2 or more parallel ports,
>> can (theorically, dispite the bugs) PLIP forms a LAN which is connected 
>> like this :-
>> 
>>       +-----> Computer A <----+
>>       |                       |
>>       \/                      \/         SLIP 
>>     Computer B            Computer C  <--------> SLIP server (Internet gate)
>>       /\                      /\
>>       |                       |
>>       +----> Computer D <-----+

>The answer is surely yes, although the routing tables would have to
>reflect this.  (In thinking carefully about my suggestion below, I
>realized that in the configuration above if A is talking to D via B, B
>will have to take 2 interrupts (one in, one out) for every character
>passed along, which will limit your throughput.)

Pretty close, however, the way the driver is implimented is that there
is only 1 interrupt per a plip packet, and that is when a machine gets
a request to send message.  The rest is done by polling!  The reason is
simple.  Performance.  There is no way a PC could handle 25000 interrupts
a second.  The 25k/sec is realized over really fast machines that have
good connections running in a tight polling loop.  I know, I've experimented
with it.

There are several problems with the PLIP idea, mainly reliability of
transmissoin.  The transmission is asyncronous connected to dumb hardware
and driving a very capacitive line.  This means you have to wait until the
line settles for each byte sent, and for maximum performance, this has to
be done while polling.  So basically your machine sits there waiting for
bytes to come in.  So in this case, on a high traffic connection, machine
B would grind to a crawl.

>What I've been thinking of is:

>        +-----------+-----------+-----------+---- pullup resistors
>        |           |           |           |
>        \/          \/          \/          \/
>     Computer A  Computer B  Computer C  Computer D <---SLIP to Internet

>by connecting all the parallel ports via open-collector driver chips.
>You would have to do an ethernet like ``check busy before talking''
>protocol, but that wouldn't be too hard to do.  The advantages: only 1
>parallel port required per computer, fewer interrupts on intermediate
>computers (they'll get the interrupts but can ignore them unless the
>message is for them), you can plug/unplug computers at will (handy for
>laptops) and the throughput should be the same (which is to say you're
>not losing anything without the second parallel port, as somebody
>quoted 25Kbytes/sec which is clearly interrupt-handling limited, as
>the hardware is capable of 400Kbytes/sec).

>Any comments from any people who know more about hardware than I do?

I've experimented with some different hardware ideas, mainly the full
width bidirectional parallel port, sending a full byte at a time (as
opposed to half a byte in the current implimentation.)  Also, on the
software end, using a different protocol that doesn't send ACKs for
each byte.  I was able to get performance throughput substantially
higher, like around 80k/sec.  But on a *real* system, I would have to
either disable interrupts for a long time or expect to drop packets like
crazy, neither which are attractive.

A better idea comes from IBM.  In their high end PS/2s, they have DMA's
on their bidirectional parallel ports, which is the really ideal solution.
However, when you're looking at that in terms of cost, a 10mb eithernet
card is very little more $$, and performance is better in an order of
magnitude!

So in short, PLIP is a dead end solution.  Eithernet is MUCH faster and
MUCH more effecient.  And to impliment something better than the standard
PLIP driver would probably cost just as much.  That, and the burdens
of school work is what motivated me to give up on the faster PLIP solutions.

Your idea for a PLIP network would work well.  It's fairly similar to
the SCSI-1 bus.  But to put together the cards, cable, connectors, write
the software, and realize that the parallel port was not designed to read
data at high speeds... you're looking at a non-trivial cost.

In short, eithernet is very cheep and performance is awesome.  For the
cost for performance, it can't be beat.

Dan
zeos@uiuc.edu

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Admin-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.admin) via:

    Internet: Linux-Admin@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Admin Digest
******************************
