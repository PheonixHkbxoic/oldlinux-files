From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Wed, 29 Sep 93 03:24:24 EDT
Subject:  Linux-Development Digest #134

Linux-Development Digest #134, Volume #1         Wed, 29 Sep 93 03:24:24 EDT

Contents:
  Re: Whence 1.0? (Matthew Donadio)
  Re: /proc/self/fd/0 and << in bash 1.12 (Matthias Urlichs)
  Tandy CDR-1000 CD-ROM (Spanky Sautins)
  Re: term between AIX-Linux (ms@mlc-ratingen.de)
  [Q]: nfs and executables (Rainer Kirsch)
  port IO from user level (John Paul Morrison)
  Re: No smart serial boards??? (Bill Broadley)
  Re: Linux, Notebooks, XFree86, and LCDs (Hank Dietz)
  Re: ASM I/O (Mark Lord)
  Re: Multi-port serial driver question (Theodore Ts'o)
  linux 0.99pl13 crash (Bill Mitchell)
  Re: No smart serial boards??? (S. Joel Katz)
  Size of WINE (Jaime Mantel)

----------------------------------------------------------------------------

From: donadio@mxd120.rh.psu.edu (Matthew Donadio)
Subject: Re: Whence 1.0?
Date: 28 Sep 1993 19:46:05 GMT

I think the question that needs to be asked before Linux is called 
version 1.0 is what does everyone what out of the first official
non-beta release?  From what I have seen from the kernel mailing
list, there are still some issues that need to be addressed for
some new improvements.  For example, correct me if I am wrong, but
streams have not yet been implmented and the mmap() facility is
not complete.  Personally, I would like to see POSIX 4 and 4.a
extensions added.

As for the stability issue, I have not had any real problems since
0.98.5 or so.  I remember the days when I was running 0.12 and 
reinstalled my system a few times a day because of crashes.  I 
think the problems now fall under four categories in order:
        1.  S. F. Operator
        2.  S. F. Code
        3.  S. F. Hardware
        4.  Kernel problems
(Use you imagiation for what SF means).

I think the biggest problem is that a lot of people do not know what
they are doing.  A lot of problems can be attributed to poor 
configurations doing stupid things like forgetting to sync the
system before a shutdown, or just plain lack of knoledge about unix
in general.  This is not meant as criticism towards
people who put the packages together, but I also think that installing
the _entire_ SLS or whathaveyou pacgage at once is bad.  I think not
enough people take instalations one step at a time and make sure
everything is working before installing non-escential stuff.

We cannot rule out bad programs for the cause of problems.  SunOS 4.1.1
is generaly regarded as stable, but I can't count the number of times
I've had to L1-A a machine becuase I did something stupid like hammering
the network or eating up all the memory.  Too many people blame 
application problems on Linux and not the application.

Though it shouldn't happen as often, hardware isn't perfect, and should
never be ruled out as a possible problem.

Based on the above problems, what can actually be attributed to kernel
problems?  I don't know what to say here, because I don't remember the
last problem, other then net code, that was due to the kernel.

This brings us to whether the current kernel can be release as version
1.0.  I'm not sure here.  I think the following _possibly_ could be:
        The 0.99pl13 kernel
        All of Rick Faiths ports of GNU goodies
        GCC w/ the normal shared libs
        The net-2 binaries
Everything else is really non-escential to a _working_ linux system.    

All, in all does it really matter what the kernel is called?  At one
time the versions went from 0.14 to 0.95 or something similar.  I
sorta liked version number like 0.95c+...

--
Beaker aka Matt Donadio   | Life is short,     ---   __ o    __~o    __ o
donadio@mxd120.rh.psu.edu |    ride like    ----    _`\<,   _`\<,   _`\<,
mxd120@cac.psu.edu        |      the wind.    ---  ( )/( ) ( )/( ) ( )/( )

------------------------------

From: urlichs@smurf.sub.org (Matthias Urlichs)
Crossposted-To: comp.os.linux.misc
Subject: Re: /proc/self/fd/0 and << in bash 1.12
Date: 28 Sep 1993 09:31:59 +0100

In comp.os.linux.misc, article <1993Sep12.162123.7386.chiark.ijackson@nyx.cs.du.edu>,
  iwj10@cus.cam.ac.uk (Ian Jackson) writes:
> 
> The files in /proc/.../fd inherit the permissions of the file being
> referred to, rather than the mode of the open file descriptor.
> 
Hmm... 

>   User `fred' runs a setuid-`wizard' program, which opens a read-only
>   file descriptor (5, say) onto a file bar/foo, like this:
>     drwx------  wizard  magic     bar/
>     -rw-rw-rw-  wizard  magic     bar/foo
>   The setuid program then does setuid(getuid()) a couple of times and
>   execs a shell, or a program of fred's choosing.  This is usually OK
>   as the access to the file is limited by the mode of the open file,
>   which can't be changed.  However fred can now go into /proc/self/fd
>   and open `5' for writing, thus obliterating the contents of foo.
> 
You don't even have to open a shell; just grab the file from another window.

> The solution is to make the access of /proc/*/fd/* depend on the open
> mode of the file descriptor.  I'm not quite sure how to implement
> this, though - it seems to violate the VFS layering somewhat.
> 
No. The process could be setuid to wizard while entering the directory, then 
revert back to stupiduser before opening the file.

A general solution would have to use ACLs (access control lists).
You'd have to attach an intersection of X's file permissions and all ACLs of 
directories you traverse to get to file X, to /proc/fd/.../X.

Meanwhile, I've thought about this for an hour or so now and there indeed 
doesn't seem to be a clean and secure solution. :-(  The best I've come up
with is to disable access by other processes to any file descriptor which was 
opened when uid != suid (saved effective UID).
If that check is disabled when accessing your own file descriptors, i.e. 
/proc/self, then any use by shells etc. would not be affected.

I'll implement some patches.

-- 
In 1933 the first drum major was used in a parade. He had
a large following.
                                -- "On This Day in History"
-- 
Matthias Urlichs        \ XLink-POP Nürnberg   | EMail: urlichs@smurf.sub.org
Schleiermacherstraße 12  \  Unix+Linux+Mac     | Phone: ...please use email.
90491 Nürnberg (Germany)  \   Consulting+Networking+Programming+etc'ing      42

------------------------------

From: sautins@rintintin.Colorado.EDU (Spanky Sautins)
Subject: Tandy CDR-1000 CD-ROM
Date: Tue, 28 Sep 1993 20:28:36 GMT


        Has anyone had any luck developing a driver, or using and existing
driver for the Tandy CDR-1000 CD-ROM???


        -drew

------------------------------

From: ms@mlc-ratingen.de
Subject: Re: term between AIX-Linux
Date: 28 Sep 93 23:05:36 GMT


It (term 1.07, AIX 3.2.<lot_of_patches>) works also fine (nearly, see
below) for me.

There was a similar discussion some month ago in comp.os.linux. 
For me term worked when I used  bsdcc for  compiling. There was also a
posting for a modified lib.c. Sorry, I throw away these articles, but
using bsdcc worked for me. I think the problem is the RS/6000, so get
the newest TTY-PTF und use test for a local test.

There are still some problems remaining for me with trsh:
        - can't su to another user (command hangs, rlogin localhost work!)
        - more, pg hangs
        - control keys ^C, ^D, ^Z do not work (stty looks good).

I think the reason for these errors also also some problems in the aix
tty subsystem, but I personally can live with these errors.

------------------------------

From: kirsch@ps1.iaee.tuwien.ac.at (Rainer Kirsch)
Subject: [Q]: nfs and executables
Date: Tue, 28 Sep 1993 22:01:50 GMT

Hello Linux Fans!

Is it still true, that executables cannot be activated, if they are placed 
on a nfs mounted partition.
If yes, can someone estimate how long the problem fixing will take?
Can someone tell me the technical reason for this?

I would like to get answers by email to kirsch@ps1.iaee.tuwien.ac.at !
Many thanks in advance!
Rainer Kirsch

+--------------------------------------------------------+
|                    Rainer Kirsch                       |
|             kirsch@ps1.iaee.tuwien.ac.at               |
+--------------------------------------------------------+
| Institut fuer Allgemeine Elektrotechnik und Elektronik | 
|          TU-Wien (Vienna / Austria / Europe)           |
+--------------------------------------------------------+

------------------------------

From: jmorriso@rflab.ee.ubc.ca (John Paul Morrison)
Subject: port IO from user level
Date: 28 Sep 1993 22:26:43 GMT


How can I do port IO from a user level program?
Can I just use the ioperm(2) call, and then use inb and outb instructions?

what are the values for turn_on in the call:
  ioperm (from, num, turn_on);

turn_on isnt documnented in ioperm(2)

thanks

-- 
___________________________________________________________________________
 John Paul Morrison                     | 
 University of British Columbia, Canada | Hey hey!! Ho ho!!
 Electrical Engineering                 | Tax & spend liberals
 jmorriso@rflab.ee.ubc.ca        VE7JPM | have got to go!! 
________________________________________|__________________________________

------------------------------

From: broadley@neurocog.lrdc.pitt.edu (Bill Broadley)
Subject: Re: No smart serial boards???
Date: 28 Sep 93 12:59:52 GMT

> *ONE* line at 38400 ( modem on V.32bis TUUCP 1.04 g(7,1024) )
> uses 3.x % CPU on my noname 486DX33 with 8 MB and a 16555 uart.

I would suspect that 4 lines at 38,400 would be less then 4 * this,
during a single overhead of an interupt, all 4 ports can have their
buffers emptied.

Even 8 ports at 38,400 would probably be reasonable, if all 8 transfered at
full speed they probably would lose some bandwidth, but normally that
wouldn't be a problem, unless it's basically a file server.

--
Bill                                    1st>    Broadley@neurocog.lrdc.pitt.edu
Broadley@schneider3.lrdc.pitt.edu <2nd  3rd>                 Broadley+@pitt.edu
Linux is great.         Bike to live, live to bike.                      PGP-ok


------------------------------

Crossposted-To: comp.os.linux.help,comp.windows.x.i386unix
From: hankd@dynamo.ecn.purdue.edu (Hank Dietz)
Subject: Re: Linux, Notebooks, XFree86, and LCDs
Date: Tue, 28 Sep 1993 23:29:00 GMT

In article <RFRANKEL.93Sep22032534@obelix.obelix.us.oracle.com> rfrankel@obelix.obelix.us.oracle.com (Rick Frankel) writes:
>In article <vera.748572623@fanaraaken.Stanford.EDU> vera@fanaraaken.Stanford.EDU (James S. Vera) writes:
>   >I'm looking for anyone who has ever successfully installed Linux and
>   >XFree86 on an LCD laptop.  I have a laptop that I carry for school and
>   >Reserves and I have been told that getting XFree to run on an LCD will
>   >be non-trivial.  
>   I run the mono server of XFree version 1.2 on my Compaq LTE386s/20
>   notebook.  It installed with no problems.  I tried Xega but its font
>...etc.
>I am running (now) XFree 1.3 in (grayscale) color on Compaq LTE line
>4/25e (active matrix b&w). X installed and ran fine first time. it is
>configured to use the cpq_avga (i think that'w what it's called, it
>scrolled off my vir. console) driver. It found this by default.
>
>Though you'd be interested...

Yup.  Here at Purdue we've been running Linux on a variety of laptops
for a couple of years.  It wasn't much fun to get it onto my old 386SX
notebook, but that was just because it had less than 2M of RAM (memory
mapping problems).  In general, it also seems that a fair number of
laptops need a slightly non-standard boot disk...  but then, so does a
desktop IBM ValuePoint.  ;-)

X mono seems to run fine on anything with enough main memory.

Just in the past few days, I've gotten X running in color on a VLB 10"
active color LCD display -- a Sager 8200.  It's VERY NICE!

The LCD display is 8 pixels left and 1 down from where it should be,
but everything else is perfect.  This includes the VGA CRT output,
which I've even tested with a Willow LaptopTV VGA->NTSC converter
feeding either a Sony XBR25 TV or a Sharp XV-120ZU video projector.
We use the Sager's configuration program at boot time to select the
LCD only, VGA only, or simultaneous LCD and VGA displays.  We'll be
forwarding our driver to the X powers that be as soon as the LCD
display offset problem is fixed....

Anybody else have X running in color on a notebook?

                                                -hankd

------------------------------

From: mlord@bnr.ca (Mark Lord)
Subject: Re: ASM I/O
Date: Tue, 28 Sep 93 20:37:17 GMT

In article <1993Sep28.161911.27630@ugle.unit.no> hugogu@slagg.met.sintef.no writes:
>
>SO it anybody know how to read/write a word (16b) from/to a
>I/O port, pleas tell me.

Look in /linux/kernel/blk_device/hd.c for an example.
-- 
mlord@bnr.ca    Mark Lord       BNR Ottawa,Canada       613-763-7482

------------------------------

From: tytso@athena.mit.edu (Theodore Ts'o)
Subject: Re: Multi-port serial driver question
Date: 28 Sep 1993 23:53:20 -0400
Reply-To: tytso@athena.mit.edu (Theodore Ts'o)

   From: wd6cmu@netcom.com (Eric Williams)
   Date: Tue, 28 Sep 1993 01:21:50 GMT

   I'm developing a driver for a Star Gate ACL, a "smart" 8-port serial
   board.  Currently I'm doing this as a completely un-integrated driver
   with its own major device number, but I'm reaching the point where I
   can see the advantages of making it more intimate with serial.c and
   tty_io.c.  The advantage is that the code for character echoing, cooked
   mode, ioctl, etc., would largely already be there.  The disadvantage is
   that this board is *not* an assembly of 8250-descended chips, and it
   might involve adding multiple hooks into the existing code to break out
   the hardware-dependant parts.  Any comments on the wisdom of doing this
   versus continuing on the path I'm on?  Are these modules Holy Writ that
   thou must not desecrate?

If you need some minor number space, the quick and dirty hack is to
steal some space from the console ports --- no one's going to need 64
console tty's.  :-)  Say, for example, the upper 32 consoles.  

Ultimately, the linux kernel is going to need to be reworked to allow
more than one major device number of tty's (and the hack we use for
major 4 and 5 doesn't count); but this is going to require a fairly
large number of changes all over the kernel.  For example, the
assumption that we only have one major number for tty's is embedded into
the task structure, since current->tty is currently a minor device
number....

                                                        - Ted

------------------------------

From: mitchell@mdd.comm.mot.com (Bill Mitchell)
Subject: linux 0.99pl13 crash
Reply-To: mitchell@mdd.comm.mot.com (Bill Mitchell)
Date: Wed, 29 Sep 1993 03:27:01 GMT

I just had my system crash.  Here's the details if they're of any use:

VC1 was doing a "make zImage"
VC2 was at the root prompt
VC3 was logged in as a normal user and running a kermit terminal
    session with a repote system.

System crashed.  It seemed to happen as I switched consoles with
ALT-F1.

VC1 said:  Internal compiler error - cc1 got fatal Signal 11
           3c509.o - segmentation fault
           (I've seen this a couple of times before, without a
            system crash.  I hadn't noticed before what file was
            being compiled.  I've noticed that I'll have to restart
            a failed kernel build several times to get it to complete.
            rebooting the system between failed builds seems to help.

VC2 said:  Unable to handle kernel paging request at address c0000015
           Oops:0000
           EIP: 0010:0011b617 (?) (can't read my notes)
           EFLAGS: 00010246
           eax:00000003  ebx:000045c2  ecx:00000302  edx:1be00018 (?)
           esi:00000000  edi:00000001  ebp:0bef0000 (?)
           ds:0018       es:0018       fs:002b       gs:002b
           pid:0001, process nr 1
           80 78 12 00 74 22 83 7c 24 20
           this was repeated a second time with the following differences:
                         ebx:fffffea8  ecx:000025e4
           Note:  I've seen this "unable to handle kernel paging request"
                  before without a system crash.

VC3 said:  General Protection: 0000
           EIP: 0010:0011b9e8
           EFLAGS: 00010296
           eax:00019295  ebx:000003e5  ecx:00010302  edx:ffffff00
           esi:00019295  edi:00000400  ebp:00000002
           ds:0018       es:0018       fs:002b       gs:002b
           pid:0560, process nr 22
           66 39 4a 0c 75 32 39 72 08 75
           this was repeated a second time with the following differences:
                                       ecx:11300302

I may have reversed VC1 and VC2 in the above.
System is a 486-33 with 17 MB of ram.  Root is on /dev/hda2 (an IDE disk),
and the kernel compile was in this partition.  Three partitions on a
SCSI disks contained mounted filesystems, and the user in the kermit
terminal session was logged into a directory on one of these.  /dev/hda4
is an 8+ mb swap partition.

I booted with a maintenance disk and ran fsck on /dev/hda2.  Several
minor problems were reported and repaired.

I rebooted on /dev/hda2 and restarted the kernel build, which has completed
successfully as I was typing this via a kermit terminal session on a remote
system.

-- 
mitchell@mdd.comm.mot.com (Bill Mitchell)


------------------------------

From: stimpson@panix.com (S. Joel Katz)
Subject: Re: No smart serial boards???
Date: 29 Sep 1993 02:07:17 -0400

In <2731@blue.cis.pitt.edu> broadley@neurocog.lrdc.pitt.edu (Bill Broadley) writes:

>> *ONE* line at 38400 ( modem on V.32bis TUUCP 1.04 g(7,1024) )
>> uses 3.x % CPU on my noname 486DX33 with 8 MB and a 16555 uart.

>I would suspect that 4 lines at 38,400 would be less then 4 * this,
>during a single overhead of an interupt, all 4 ports can have their
>buffers emptied.

>Even 8 ports at 38,400 would probably be reasonable, if all 8 transfered at
>full speed they probably would lose some bandwidth, but normally that
>wouldn't be a problem, unless it's basically a file server.

>--
>Bill                                   1st>    Broadley@neurocog.lrdc.pitt.edu
>Broadley@schneider3.lrdc.pitt.edu <2nd         3rd>                 Broadley+@pitt.edu
>Linux is great.         Bike to live, live to bike.                      PGP-ok

        One trick that we have used and found cost-effective for 16 or
more ports is to take a 386sx system booting Linux from floppy and using
it as a serial port server. Just set up the system to automatically telnet
each line to your host system and connect it by ethernet.

SJK


------------------------------

From: mantel@zippy,fnal.gov (Jaime Mantel)
Subject: Size of WINE
Date: 29 Sep 1993 07:02:32 GMT

I was wondering how much disk space WINE will take up when released?  

Jaime
-- 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Jaime Mantel                                        +  Sorry, no COOL 
e-mail:   internet :  mantel@zippy.fnal.gov  (Unix) +     LOOKING    ,,,,, 
                      mantel@adcalc.fnal.gov (VAX)  +      ASCII      ^ ^
                                                    +      IMAGE    ( O O )
          bitnet   :  mantel@fnalad                 +   just this->    >   
                                                    +                `---'
Phone:    (708) 840-3721, 3194, 4977                ++++++++++++++++++++++++++
Place:    Fermilab, P.O. Box 500, MS 306, Batavia, IL 60510
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++






------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
