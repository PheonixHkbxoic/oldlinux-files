From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Tue, 9 Nov 93 19:13:32 EST
Subject:  Linux-Development Digest #217

Linux-Development Digest #217, Volume #1          Tue, 9 Nov 93 19:13:32 EST

Contents:
  Re: WANTED: COBOL compiler (Andres Kruse)
  Re: WANTED: COBOL compiler (Harald Koenig)
  Re: new Berkeley DB - anyone? (Daniel Quinlan)
  Re: porting linux to other hardware (Donald J. Becker)
  Re: Yet another core dumps name suggestion (Bruce Thompson 295-5967(w or 229-3370(h)))
  Suggestion for /usr/include/lastlog.h (Michael Haardt)
  Re: Yet another core dumps name suggestion (Stephen Riehm)
  Re: What's wrong with a DOS to Linux disk access? (Bernd Meyer)
  Kernel bug ? or g++ bug (Wai Ho)
  [Q] Big modem installation for Linux? (Jesper Bach Larsen)
  Compressed ROM device (Urban Koistinen)

----------------------------------------------------------------------------

From: kruse@zow.desy.de (Andres Kruse)
Subject: Re: WANTED: COBOL compiler
Reply-To: kruse@zappa.zof
Date: Mon, 8 Nov 1993 18:05:00 GMT

In article ap5@access.digex.net, dlc@access.digex.net (David L. Craig) writes:
> In article <1993Nov6.132311.5549@penrij.uucp>,
> John R. Campbell <soup@penrij.UUCP> wrote:
> >While COBOL is good at what it's good at :-) I don't see a long future.
> >Unfortunately, COBOL is _really_ designed for mainframe use and BATCH
> >mentality.  The "terminal" specific stuff has used what, on a mainframe,
> >is the "operator's console" (i.e. ACCEPT xxx FROM CONSOLE).  This makes
> >COBOL programs rather environment specific.
> 
> Actually, X/Open standard COBOL uses cursor addressing on the user's
> terminal.  Micro Focus supplies terminfo-based mapping.  COBOL has
> evolved from what you're used to.

And AccuCobol provides extensions to cobol which allow easy programming of
ASCII windows on any platform, i.e. lots of Unixes, MS-DOSes, VMS, etc.
AccuCobol also 'guarantees' that the application 'binaries' (p-code)
run without any modification on any of the supported computers.
(As far as I understand, you can do the same with MicroFocus and RM but
 they dont guarantee anything...)
So you could use your Linux box to develop code and run it on many
different machines, all you need is a runtime.
Weren't they planning to port their Cobol to LINUX ?

       Andres

================================================================================
Andres Kruse | A.Kruse@nikhef.nl



------------------------------

From: koenig@ceres.tat.physik.uni-tuebingen.de (Harald Koenig)
Subject: Re: WANTED: COBOL compiler
Date: 8 Nov 93 19:43:08 GMT

In <CG6q8D.60B@dscomsa.desy.de> kruse@zow.desy.de (Andres Kruse) writes:

>And AccuCobol provides extensions to cobol which allow easy programming of
>ASCII windows on any platform, i.e. lots of Unixes, MS-DOSes, VMS, etc.
>AccuCobol also 'guarantees' that the application 'binaries' (p-code)
>run without any modification on any of the supported computers.
>(As far as I understand, you can do the same with MicroFocus and RM but
> they dont guarantee anything...)
>So you could use your Linux box to develop code and run it on many
>different machines, all you need is a runtime.
>Weren't they planning to port their Cobol to LINUX ?

I talked to an AccuCobol sales droid and a programmer at the GUUG'93 
(german UNIX users group meeting) end of September because a friend 
is looking for COBOL on Linux for some commercial applications
(moving from a DG-NOVA to finally shut down the good old nova).

This guy told me that there would be no support on those free UNIX versions
which is important for them when they hit bugs while porting their apps
and there won't be a real market (any interesst at all, free UNIX
only a toy for students etc.).

In about half an hour I could convince him (at least I think so) that
just support is one of the strengths of Linux if he can afford the cost
for a modem and ~$2 per day for news and mailing.

maybe if more people show interesst in running AccuCobol this could be one
of the first real commercial apps (since porting won't be that difficult
if the system does conform to POSIX and ANSI-C as I was told).


Harald
-- 
Harald Koenig, Inst.f.Theoret.Astrophysik  (koenig@tat.physik.uni-tuebingen.de)

    All SCSI disks will from now on be required to send an email
         notice 24 hours prior to complete hardware failure!

------------------------------

From: quinlan@spectrum.cs.bucknell.edu (Daniel Quinlan)
Subject: Re: new Berkeley DB - anyone?
Date: 08 Nov 1993 22:46:43 GMT
Reply-To: quinlan@spectrum.cs.bucknell.edu


tthorn@daimi.aau.dk (Tommy Thorn) said:

> Just untar this after the db1.72.tar.gz file.

> begin 644 db.1.72-linux.tar.gz
> [...]

Please do not post source to non-source newsgroups.  This newsgroup is
intended to be used for discussion of the development of the Linux OS,
not anything else.

--
Daniel Quinlan  <quinlan@spectrum.cs.bucknell.edu>

------------------------------

From: becker@super.org (Donald J. Becker)
Subject: Re: porting linux to other hardware
Date: Mon, 8 Nov 1993 21:48:50 GMT

In article <1993Nov8.160903.12306@news.eng.convex.com>,
Jason L. Eckhardt <jason@convex.com> wrote:
>A group of people (including myself), are interested in porting linux to our
>i860 based workstations. Are there any linux developers who can give me some

This sounds like a really neat project.

>1) Is linux split into machine-independent code and machine-dependent code? (we
>   understand device drivers will probably have to be implemented from scratch
>   for these machines, but that's okay).

There isn't an explicit mi/ and md/ split, but I don't think that's a real
barrier.

>Possibly helpful information about us and our machines:
>1) Our machines are based on the i860 RISC microprocessor. It has architectural
>   support for protection, multitasking, virtual memory, etc. The i860's paging
>   mechanism is compatible with the [34]86, which may ease the kernel port. 

Yes, this is a major advantage.  You'll be able to directly use much of memory
mapping and management code.

>2) Our peripherals are: SCSI hard disk and tape, floppy disk, 16-bit dumb frame
>   buffer, serial & parallel ports. Most of us have 16mb-64mb of ram.

What about ethernet?  What kind of controller (which chip) do the workstations
have?

-- 

Donald Becker                                          becker@super.org
IDA Supercomputing Research Center
17100 Science Drive, Bowie MD 20715                        301-805-7482

------------------------------

From: thompson@sun.cuug.ab.ca (Bruce Thompson 295-5967(w) or 229-3370(h))
Subject: Re: Yet another core dumps name suggestion
Date: Sat, 6 Nov 1993 06:30:05 GMT

Just to muddy the waters a bit and to add another issue to the fire, I thought I'd throw my two cents worth in.

As far as the names of core files go, I've generally found just 'core'
to be adequate, but I can see the advantages of other names. What I'd
suggest is to make the core filename a kernel configurable item. I
suspect it wouldn't be too big a deal to do so.

Now to the other issue, core file sizes. I've got a couple of ideas,
both with pros and cons. The first idea is to make the core file a
link into the swapped image of the process. This would consume swap
space, but not file-system space. It should also speed core file
generation (I'm not sure that's an issue). The big disadvantage would
be the space used in the swap space. This could be mitigated by using
some sort of aging algorithm which would overwrite the dumped image
eventually. I'm becoming less convinced that this is a viable option.

The second option would be to dump only the data segment, and provide
linkage information to the various pieces of the text segment. Since
the text segment should never be modified, a simple pathname and
modification time should suffice for each item that is part of the
text segment (main program, shared libs, etc.). If any of the text
segment components change, the core becomes invalid. Admittedly, this
may require changes to debuggers, etc; I'm not really sure though. 

        Cheers,
        Bruce.

--
Bruce Thompson,               |I do not speak for CUUG, ACTC Technologies,
Software Development Engineer,|Renegade Legion nor NAPRA, just myself.
ACTC Technologies Inc.        |"So this is it, we're going to die!"
Renegade Legion, NAPRA #473   |         -- Dent Arthur Dent
--
Bruce Thompson,               |I do not speak for CUUG, ACTC Technologies,
Software Development Engineer,|Renegade Legion nor NAPRA, just myself.
ACTC Technologies Inc.        |"So this is it, we're going to die!"
Renegade Legion, NAPRA #473   |         -- Dent Arthur Dent

------------------------------

From: Michael Haardt <(michael)u31b3hs@pool.informatik.rwth-aachen.de>
Subject: Suggestion for /usr/include/lastlog.h
Date: Sun,  7 Nov 93 14:18:06 MET

As it seems, about two or three lastlogin file formats are currently
in use at the same time.  I know that /usr/include/lastlog.h is not a
standard, but it is certainly better than the current way!  Here is my
suggestion:

======================================================================
#ifndef _LASTLOG_H
#define _LASTLOG_H

#include <sys/types.h>

struct lastlog
{
  time_t  ll_time;      /* time of last login    */
  char    ll_line[16];  /* terminal of the login */
  char    ll_host[64];  /* host, or empty string */
};

#endif
======================================================================

Comments?

Michael
--
Twiggs and root are a wonderful tree (tm) Twiggs & root 1992 :-)

------------------------------

From: Stephen Riehm <ln_smr@pki-nbg.philips.de>
Subject: Re: Yet another core dumps name suggestion
Date: 4 Nov 93 08:14:32 GMT
Reply-To: ln_smr@pki-nbg.philips.de

uknf@rzstud1.rz.uni-karlsruhe.de (Olaf Titz) writes:

>In article <1993Oct28.124410.15292@nenuphar.saclay.cea.fr>,
>Basile STARYNKEVITCH <basile@soleil.serma.cea.fr> wrote:
>> Also, my opinion is that the whole idea of core files (a good idea in
>> the PDP-8 unix days) is wrong today, since more and more programs are
>> huge and buggy (todays core file can easily much bigger than the
>> executable file whose execution produced them). Perhaps each process

>Just a story about what can go wrong with core files. The situation:
>take an HP/UX system with an ancient elm and buggy emacs, configure
>elm to use emacs for text editing, when the second call of emacs by
>elm dumps core (so far nobody knows why) have the core file fill up
>your quota. Now elm tries to exit and re-write the mailbox file, but
>since the quota is already exceeded by the emacs core, this write
>fails and the mailbox is lost.

>At least a system should ensure that core files don't fill the quota
>of innocent users.

I am not sure if this exists in HP-UX (can't find any mention of it on
this Hp box), but I recall using something like
'set limitcoredumpsize=1000' or limitcoresize or something like that
(it was an encore system, and I don't know if it was limited to the
csh or not).

Just found it, in tcsh at least. (This is unreal, here I have a
completely undocumented command which looks MOST useful - never mind)
Anyway, in tcsh there is a command called limit, which without
arguments shows you what your current limitations are. Setting a limit
to the size of a coredump is a simple matter of running:
        % limit coredumpsize 1000       # 1 Mb
        % limit
        cputime         unlimited
        filesize        unlimited
        datasize        131072 kbytes
        stacksize       8192 kbytes
        coredumpsize    1000 kbytes
        memoryuse       unlimited
        descriptors     60 

How you do this in any other shell I have no idea, but the mechanism
is there somewhere!

Hope this is of some help to someone :-)

Steve

------------------------------

From: root@umibox.hanse.de (Bernd Meyer)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: Sun, 7 Nov 1993 14:54:22 GMT

ig25@fg70.rz.uni-karlsruhe.de (Thomas Koenig) writes:

>soup@penrij.UUCP (John R. Campbell) writes:

>>I'm curious to see what justification he could have for running MS-LOSS at
>>all!

>Does Lemmings run under Dosemu yet?  Just curious ;-)

Yes, it does :-) But it's no fun, because the mousedriver is slowed down and
therefor the pointer is delayed one third of a second sometimes....

Bernie

P.S.: This was lemmings two, though
-- 
We both know that the earth is round         | Bernd Meyer, EE-student
So we can't see the way before us to its end | "Nobody is a failure who has
We walk on this way, hand in hand,           |  friends" (from: "It's a   
And I hope you are still with me behind the horizon| wonderful life")

------------------------------

Crossposted-To: comp.os.linux.help
From: tauq7@syma.sussex.ac.uk (Wai Ho)
Subject: Kernel bug ? or g++ bug
Date: Tue, 9 Nov 1993 09:55:06 GMT

Hi there,
        Has anyone successfully compiled the desktop calculator program
form Bjarne Stroustrup's C++ book ?  I have tried to use the version
that handles command line (requiring the inclusion of strstream.h) and
cc1plus just gobbles up all memory in my system.
        I'm currently running linux 0.99pl12, 486dx2 50, 4M + 8M swap,
gcc 2.4.5 (486 version).  I've had the same problems with gcc 2.3? (386
version) running older linux kernels (pl9) on a 386sx-20 + 387, same
memory config.
        I've checked that strstream.h has ifndef to prevent recursive
inclusion.  The cpp phase went ok but it is cc1plus which is eating up
all memory (and eventually stalls the system, though recoverable by
killing it).  I tracked down cc1plus using top.  I'm not running X when
compiling.

        Any comments/pointers/suggestions ?

TIA,
Wai-Ming Ho
tauq7@central.sussex.ac.uk

-- 

##############################################################################
#     Wai-Ming Ho                                                            #
#       tauq7@central.susx.ac.uk                                             #

------------------------------

From: jbl@daimi.aau.dk (Jesper Bach Larsen)
Subject: [Q] Big modem installation for Linux?
Date: 9 Nov 1993 14:24:51 GMT


As headline says, I wan't to run a Unix installation, preferable Linux, as it
is free, with multiple modem lines. By multiple I mean in the amount of
30-50 modems. I suppose I will have to purchase somekind of hardware support
for this project. My question is: what would be the most effective (measured
in system-resources) installation? What kind of system-resource is required
for this (particular RAM recomendations, special I/O interfaces etc.)

Answer preferable via Email: jbl@daimi.aau.dk



-- 

===============================================================================
| Jesper Bach Larsen [jbl@daimi.aau.dk] |                                     |
| Computer Science Department           |                                     |
| University of Aarhus, Denmark         |                                     |
===============================================================================
|                                                                             |
|          When you're one of the few to land on your feet                    |
|          What do you do to make ends meet?                                  |
|          Teach                                                              |
|          Make them mad, make them sad, make them add two and two            |
|          Make them me, make them you, make them do what you want them to    |
|          Make them laugh, make them cry, make them lie down and die?        |
|                                                                             |
|                                       - Roger Waters                        |
===============================================================================
--

===============================================================================
| Jesper Bach Larsen [jbl@daimi.aau.dk] |                                     |
| Computer Science Department           |                                     |

------------------------------

From: md85-epi@hemul.nada.kth.se (Urban Koistinen)
Subject: Compressed ROM device
Date: Tue, 9 Nov 1993 14:07:35 GMT

I have read about a compressed file system for linux.
It seem to not be ready yet.
I think it is not ready because it is complicated.

A simpler solution is to use a compressed read only device.
Then use IFS to get a writable file system.

Here is how to do it:

* Start with an uncompressed device.

* logically, split the device into blocks of size BLOCK_SIZE

* create an array of ints, one for each block

* sequentially, for each block
    compress it
    append it to the new device
    store its new offset in the array

* store the array

When using the compressed device:

* load the array

* When asked to read a block,
   get the logical block using the array
   uncompress it
   return uncompressed block
(possibly a device with smaller block size need be simulated)

I ran a test on the Yggdrasil Fall LGX CD-rom with BLOCK_SIZE=64K
and got a compressed size of 30% of the original size.
(I only did this for about half the device as it took 12 hours and
I had to kill all demons I could find as my CD-rom device (mitsumi)
seemed to get locked whenever it was accessed both from a file
system (mounted) and directly.)

Conclusions:

By using a compressed read only device the coding can be simplified
compared with a full compressed file system (or RW device).

On a system like mine (25 MHz 486SX) compression of 2 Gbytes
would take maybe 100 hours. As gzip has been ported a lot you
can likely find a faster machine to run this on. The task can
be split.

The benifits are:
3 times more can be stored.
Speed is improved for CD-rom users. (decompression is fast)
Simplicity.

Question:
Can part of the cdrom be used for compatibility (for rawrite.exe etc)
while part of it is used as a compressed device? (I think so.)
-- 
Urban Koistinen - md85-epi@nada.kth.se
Stop software patents, interface copyrights:  contact lpf@uunet.uu.net

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
