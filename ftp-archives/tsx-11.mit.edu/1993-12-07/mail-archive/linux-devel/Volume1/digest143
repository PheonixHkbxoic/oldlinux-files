From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Tue, 5 Oct 93 16:13:22 EDT
Subject:  Linux-Development Digest #143

Linux-Development Digest #143, Volume #1          Tue, 5 Oct 93 16:13:22 EDT

Contents:
  Re: CFC/CFI: XSysadmin (Markus Storm)
  HELP: Crisp 2.2 Key Translations (Kerry Hu)
  Re: NASTY G++ bug in 2.4.3... (Fergus James HENDERSON)
  deals on motif? (Vin Locke)
  Re: linux scheduler alternatives??? - MY IDEA (Matthew Dillon)
  Re: linux scheduler alternatives??? - MY IDEA (Kenneth J. Hoover)
  Needed: ld's /usr/lib/crt0.o (Mark R. Lindsey)
  [PATCH] BogoBoost speedup for Linux (Thomas McWilliams)
  gprof broken in 2.4.5 ? (Arlindo Oliveira)
  TO WHOEVER IS WORKING ON THE XIRCOM III ETHERNET DRIVER?  (Russell Nelson)
  Re: CFC/CFI: XSysadmin (David Kraus)
  VOGL library for Linux? (Teddy Winstead)

----------------------------------------------------------------------------

From: storm@uni-paderborn.de (Markus Storm)
Subject: Re: CFC/CFI: XSysadmin
Date: 5 Oct 1993 10:44:36 GMT
Reply-To: storm@uni-paderborn.de

In article <zmbenhalCEE7L4.6Ku@netcom.com>, zmbenhal@netcom.com (Zeyd M. Ben-Halim) writes:
|> Subject: OI (was: Re: CFC/CFI: XSysadmin)
|> Message-ID: <zmbenhalCEE7L4.6Ku@netcom.com>
|> Keywords: X, linux, sysadmin, OI, ParcPlace
|> Organization: Netcom - Online Communication Services (408 241-9760 guest)
|> References: <28ptvm$b93@peanuts.informatik.uni-tuebingen.de>
|> Date: Mon, 4 Oct 93 22:55:51 MET DST
|> Lines: 23
|> 
|> In article <28ptvm$b93@peanuts.informatik.uni-tuebingen.de> will@peanuts.informatik.uni-tuebingen.de writes:
|> >
|> >The tool I would like to use for this task is the ObjectInterface/ObjectBuilder
|> >of ParcPlace (tsx-11.mit.edu:/pub/linux/packages/OI) since it has good
|> >documentation in paperform :-) and seems to be good c++.

You mean "Learninguib.ps" ?? Or did you order the written manual ?
As soon as you start something creative (including derived classes), you need
the help system. And especially the "Subclassing" chapter contains lots of hints
"See OI Programmer's guide ...", and the main work is scanning the OI man pages for
the appropraite call name.

|> 
|> The problem with OI is speed (or the lack thereof) even with 8MB.
|> 

I think OI/uib is great tool stuff.
Unfortunately, by default, all OI-generated files include <OI/oi.H> which
includes _all_ OI header files.
So try replacing #include <OI/oi.H> with just the .H-files you need (you don't
need to include the "parent" .H-Files if you use a derived class).
On my 8MB machine, it causes g++ not to start swapping, so compilation is quite
fast.

Moreover: If you are familiar with uib, you rarely need to recompile OI-related
src, so the compilation-testing cycle restricts to self-written code.

Regards, Markus.

------------------------------

From: hu@HEPSG1.physics.fsu.edu (Kerry Hu)
Subject: HELP: Crisp 2.2 Key Translations
Date: Tue, 5 Oct 1993 13:23:05 GMT

Hello,

I downloaded the Crisp 2.2 (Brief like editor) binaries from sunsite.

It runs but ALT key and keypad are not working.

There is no help file there to tell how to set it up in Linux environment.

Anybody knows how to setup this please help.

Thanks

Kerry Hu

------------------------------

From: fjh@munta.cs.mu.OZ.AU (Fergus James HENDERSON)
Subject: Re: NASTY G++ bug in 2.4.3...
Date: Tue, 5 Oct 1993 14:32:09 GMT

gareth@gblinux.demon.co.uk (Gareth Bult) writes:

>I just came across a really nasty bug in g++ while writing my news/mail     
>program. If it's not been fixedi in 2.4.5 .. it's a killer..                
>
>   etc....                                                                  
>                                                                            
>Results in a 6 being inserted into the logfile.                             
>This when run from inside my application....                                
>...'Course the 10 line test program works file!                            
>                                                                            
>If I replace the fprintf statement with keywords[1].id=1, all is file..!    
>                                                                            
>Anyone know if this is fixed?                                               

You didn't post a complete program, so it's very hard to tell whether
there really is a bug or not.  I suspect that if there is a bug, it's
just as likely to be in your program as in g++.

-- 
Fergus Henderson                     fjh@munta.cs.mu.OZ.AU

------------------------------

From: vin@crl.com (Vin Locke)
Subject: deals on motif?
Date: 5 Oct 1993 10:35:57 -0700


I've been checking out deals on Motif for Linux.
Metro wants ~$200 US, and I found another place in Unix Review
(can't recall the name offhand) that wants ~$175 US.

Can anyone come up with a better deal?  I'm looking for the
development libraries.

vin@crl.com


------------------------------

From: dillon@moonshot.west.oic.com (Matthew Dillon)
Subject: Re: linux scheduler alternatives??? - MY IDEA
Date: 4 Oct 1993 20:45:25 -0700

In article <1993Oct1.152829.28914@bmerh85.bnr.ca> mlord@bnr.ca (Mark Lord) writes:
>In article <28gron$f27@moonshot.west.oic.com> dillon@moonshot.west.oic.com writes:
>>
>What happens on voluntary pre-emption?  Where a task does not use all of
>its timeslice before voluntarily performing a wait of some kind?
>
>Inquiring minds want to know!
>
>I suppose this breaks down into two possibilities:
>       (a) the process is waiting, so is moved off of the run queue,
>           and it's timeslice is reset as normal when it eventually
>           becomes ready again.
>       (b) the process just wants to run the scheduler, without waiting
>           for anything, for the sake of doing some kind of internal
>           polling in the style of a FAST wait as you described.. 
>           so handling is just as per fast wait.
>
>By now I've probably answered my own question, in an incomprehensible manner.
>-- 
>mlord@bnr.ca   Mark Lord       BNR Ottawa,Canada       613-763-7482

    I think you pretty much answered your own question :-)

    The answer is that you can do it either or both ways.  For one, you do
    NOT need to reset task->counter ... in fact, you should leave it alone
    to prevent high speed synchronous I/O from giving the task more CPU then
    it should have.

    If you just want to give up your timeslice it would be a simple system
    call to force a task switch (though one should probably do the 
    task->counter subtraction anyway again to prevent misuse).

    If you block on I/O, i.e. a normal blocked I/O operation, the task is
    simply moved from the run queue to the wait queue.

    --

    On another note, a good friend of mine tore into my scheme over the 
    weekend, rightly pointing out that although the scheme was wonderful
    for most single-user applications, dynamic priority management was
    still required for a UNIX environment... for example, to lower the
    priority of a highly CPU bound process.

    This type of management basically consists of changing the priority of
    the task in a dynamic fashion.  You do NOT want to do this in the task
    switch interrupt itself because it adds unnecessary overhead to the
    system... rightly, such dynamic modification only needs to be done
    (A) when the process is running and (B) only every once in a while...
    about once a second.

    It sounds like the job of a one-second kernel timer / interrupt or
    something similar, managing a second priority field separate from the
    'static' priority of the task.  This would achieve the necessary results
    without compromising switching overhead, and you could have a selective
    disable of the mechanism for pseudo real time processes.

                                        -Matt


    Matthew Dillon              dillon@moonshot.west.oic.com
    1005 Apollo Way             dillon@overload.berkeley.ca.us
    Incline Village, NV. 89451  ham: KC6LVW (no mail drop)
    USA                         Sandel-Avery Engineering (702)831-8000
    [always include a portion of the original email in any response!]


------------------------------

From: ken@PSUEDVAX.PSU.EDU (Kenneth J. Hoover)
Subject: Re: linux scheduler alternatives??? - MY IDEA
Date: 5 Oct 1993 18:17:59 GMT
Reply-To: ken@PSUEDVAX.PSU.EDU

In article <28qqkl$ps8@moonshot.west.oic.com>, 
   dillon@moonshot.west.oic.com (Matthew Dillon) writes:
>    This type of management basically consists of changing the priority of
>    the task in a dynamic fashion.  You do NOT want to do this in the task
>    switch interrupt itself because it adds unnecessary overhead to the
>    system... rightly, such dynamic modification only needs to be done
>    (A) when the process is running and (B) only every once in a while...
>    about once a second.

  I feel, being a VMS sysadmin, that I should point out that OpenVMS (formerly
VAX/VMS) uses a dynamic priority adjustment in its management of system load,
based on a starting "base" priority assigned to the user's process, and I
wouldn't be surprised if Windows NT does this as well.  I will hand pointers to
a VMS internals book to anyone who wants to know more about how this is done.

  Can anyone who knows about/uses Windoze NoT send me email to let me know if
WNT does this?  NT uses a *lot* of VMSisms.
                                                - Ken Hoover
-- 
Kenneth J. Hoover                 |  "Not one shred of evidence exists that
ITSS Supervisor of Systems & Ops  |   life is serious."  - Joseph Campbell
Penn State College of Education   |  ken@psuedvax.psu.edu * ken@psuedvax.bitnet

------------------------------

Crossposted-To: comp.os.linux.admin,comp.os.linux.help
From: mlindsey@nyx.cs.du.edu (Mark R. Lindsey)
Subject: Needed: ld's /usr/lib/crt0.o
Date: Tue, 5 Oct 93 18:32:57 GMT

I installed the 'REQ' packages for the SLS GNU C/C++, but I get the following
error when attempting to compile. Note the test program.

/> cat tst.c
#include <stdio.h>
main() {
;
}
/> gcc tst.c
ld: No such file or directory for crt0.o

I'm not very experienced with ld or even C, but I don't have /usr/lib/crt0.o,
as the man pages for gcc and this error imply I should.

I've installed the following packages:

base      devs      gxx245    joe       man2      quota     term107
bc        efs2      gxxinc24  keytbls   modules   select14  usrbin4
bin       elfabi    gzip101   lilo      mount     shadow    uucp104
bin4      etc       gzip123   lxpatch   mt        shlibs    vgalib
binutils  faq       image     mailx     national  smail     zafix
comms     gcc245    inc442    make      perl      sysadm    zcfix
cpio22a   getty     ipcdelta  man       ps        syslogd   zoneinfo

If you have crt0.o, or know what package it's in or should have been in,
please mail me details or the file, uuencoded.

Thanks.

 - Mark R. Lindsey

------------------------------

From: tmcwill@iat.holonet.net (Thomas McWilliams)
Subject: [PATCH] BogoBoost speedup for Linux
Date: Tue, 5 Oct 1993 19:02:35 GMT

BogoBoost (tm) is a patch to the Linux kernel setup code that will
boost your system performance. Generally speed increases on the
order of 2 percent to 5 percent are typical. It is based on the time
tested technique of resetting the DRAM refresh timer to an optimal
rate. When used within its guidelines it is perfectly safe. This
technique is in well documented, and has been in widespread use for
many years (see PC Magazine July 1988). Be that as it may I still
must offer the following caveat:

WARNING: There are no guarantees that this patch won't cause your
system harm. It may cause parity errors which will cause your system
to halt, possibly leaving your file system in an indeterminate
state. If you have any doubts, turn back now. If your system is
flaky, don't complicate matters by using this patch. I take no
responsibility for any harm this patch may cause you. Use at your
own risk. MAKE SURE THAT YOU HAVE A GOOD IMAGE TO BOOT FROM IN
CASE OF TROUBLE. You have been warned.

 HOW IT WORKS
 ------------

The greater part of your system memory is composed of DRAM. DRAM
memory is composed of rows upon rows of tiny capacitors that can
store an electrical charge. But these capacitors are not perfect.
They will slowly lose their charge over the time period of a few
hundreds of microseconds. Because of this, your computer must stop
whatever it is doing every few microseconds in order to re-charge
these tiny capacitors. If this memory "refresh" occurs more than
necessary, your computer performance suffers. But if the time
between refresh cycles is too long, you will have corrupted memory.

When the original IBM PC was designed 12 years ago, memory
technology was much cruder. The very earliest IBM PCs shipped with
only 16K bytes of relatively slow DRAM. A very, very conservative
refresh rate was chosen for the IBM PC, about 15 microseconds.
Although DRAM technology is now highly refined, with higher density,
greater yield, and consistency of product, we are still constrained
by a the de facto standard refresh rate of 15 microseconds.

With fast, modern SIMM and SIPP DRAM memory systems a more
reasonable refresh rate is in order. This is accomplished by
changing the time constant that controls the refresh timer. The
refresh timer determines how often your system will be interrupted
to perform memory refresh. The BogoBoost patch changes the refresh
rate during Linux startup to something more reasonable.

What is the optimal refresh constant to feed the timer? The nature
of the refresh system is such that after a certain point, further
increases in the refresh constant cease to yield increases in system
speed. The performance curve becomes asymptotic at this point. The
real beauty is that the constant converges to its optimal value
several orders of magnitude before any danger point is reached. For
most systems this new timer constant is between 200 and 400. Note
that stock refresh constants are set to 18 or 19. On my system,
instability does not occur until the refresh constant is set above
5000. But because the performance curve reaches asymptote at between
200 and 400, further increases offer no benefit. The optimal setting
offers a better than ten-fold margin of safety.
 
The BogoBoost patch sets this constant to 400. But if you are timid
you might want to try lower values. The code works as follows:

1) The timer port is given a control byte to set its operational mode.
   (This byte is fixed and never should be changed).
2) Next, the low-order byte of the constant is output to the timer.
3) Then the high-order byte of the constant is output to the timer.

Although the value 400 seems to give good, safe performance, here is
a table of hexadecimal byte values that you might want to try:

       constant     low-byte   high-byte 
         600          0x58       0x02 
         400          0x90       0x01 
         300          0x2c       0x01 
         200          0xc8       0x00
         100          0x64       0x00
          50          0x32       0x00

Slower machines will generally show the more dramatic boost in
speed. Actual real-world performance as exhibited by compile
times on large, long builds may actually be slightly better
percentage-wise than the BogoMips improvement would suggest. While a
few percent boost in performance may not seem significant, when used
in conjunction with other system tweaks, the total performance boost
will be the compounded product of each tweak multiplied together.

  OTHER TWEAKS
  ------------

Your CMOS setup is another good place to examine when searching for
performance improvements. Pay particular attention to the options
provided for memory wait states, interleave, and refresh width.
Systematically explore each option, measuring the performance each
time you vary a selection. If your plug-in cards can handle it, you
may be able to change your system bus to run at a higher speed.
Also verify that your turbo switch is working and that its cable is
firmly connected to the motherboard.

  THE PATCH
  ---------

The file to be patched is setup.S. This file is located in the kernel
directory /usr/src/linux/boot. After successfully applying the
patch, recompile your kernel. Make sure that you have an emergency
image for booting your system in case there is trouble. Boot with
your old image and note the BogoMips. Now boot with the your new
faster kernel and compare the BogoMips to your old value. You should
see a speed increase of between 2 and 5 percent. Some systems may
actually show more dramatic improvement.

enjoy,

Thomas McWilliams
tmcwill@holonet.net
thomas.mcwilliams@f615.n109.z1.fidonet.org

*** boot/setup.S~       Thu May 13 12:19:57 1993
--- boot/setup.S        Tue Oct  5 14:18:17 1993
***************
*** 91,96 ****
--- 91,105 ----
        mov     [4],bx          ! bh = display page
        mov     [6],ax          ! al = video mode, ah = window width
  
+ ! Set optimal DRAM refresh rate 
+               
+       mov al,#0x74            ! control byte
+       out #0x43,al
+       mov al,#0x90            ! low-order data byte 
+       out #0x41,al    
+       mov al,#0x01            ! high-order data byte 
+       out #0x41,al
+ 
  ! Get hd0 data
  
        xor     ax,ax           ! clear ax




------------------------------

From: aml@surf.Berkeley.EDU (Arlindo Oliveira)
Subject: gprof broken in 2.4.5 ?
Date: 5 Oct 1993 19:23:40 GMT


 Is it my installation, or is gprof broken in gcc 2.4.5 ?
Whenever I run it, I get bogus results like 65% of the time
spent in _entry and so on.

 If anyone has it working properly, can you please let me know ?
It may be something as simple as a library file not up to date but I
sure cannot fix it.

 Thank's for any help

=:=:=:=:=:==:=:=:=:=:==:=:=:=:=:==:=:=:=:=:==:=:=:=:=:==:=:=:=:=:==:=:=:=:=:=
Arlindo Oliveira                 
207-194 Cory Hall         UC Berkeley,     BERKELEY CA 94720         
Office: (510) 642-1462       Fax: (510) 643-5052


------------------------------

From: nelson@crynwr.com (Russell Nelson)
Subject: TO WHOEVER IS WORKING ON THE XIRCOM III ETHERNET DRIVER? 
Date: Tue, 05 Oct 93 17:36:10 GMT

In article <MORGAN.93Oct4152747@dl5000.bc.edu> morgan@dl5000.bc.edu writes:

     I spoke with Xircom today and they said someone in Texas was working
   a driver for Linux.  Whoever you are, could you let me know how it's
   goin'?
   
     If anyone thinks Xircom's yanking my chain, let me know that too :-)

Hmmm...  Well, I spoke to Dirk Gates at Interop, and he mentioned
that they'd probably gotten most of the proprietary value out of
keeping their source code secret.  So maybe this is how they're going
to make their source code public?  Then again, I think that one of the
BSDI people is in Texas, and maybe the tech support person thought
you were talking about BSDI's product?

-russ <nelson@crynwr.com> What canst *thou* say?
Crynwr Software           Crynwr Software sells packet driver support.
11 Grant St.              315-268-1925 Voice  |  LPF member - ask me about
Potsdam, NY 13676         315-268-9201 FAX    |  the harm software patents do.

------------------------------

From: kraus@rtsg.mot.com (David Kraus)
Crossposted-To: comp.lang.perl,comp.lang.tcl
Subject: Re: CFC/CFI: XSysadmin
Date: 5 Oct 93 13:02:45

In article <GWR.93Oct4205642@walnut.mc.com>, gwr@mc.com (Gordon W. Ross) writes:
> There are two languages I can think of that one might use as a
> basis for designing the screen description language (SDL):  

> Lisp:   Has several advantages, but is unfamiliar to most people.
>       It is easily interpreted, and can easily be used for
>       either declarative or procedural forms of expression.

The problem with Lisp is that it generally has a high overhead.

> Tcl/Tk: I am not very familiar with Tcl or Tk though I gather they
>       are interpreted procedural languages.  I have doubts about
>       how effectively these could be used for declarative form.

Tcl is the interpreted language, and can be used from within C programs
through the TCL library.

Tk is a widget set that resembles the Motif widgets, written in Tcl.

The problem with using these two packages is whether you're running in an X
environment or not.  Tcl might be a good choice for the tool, however.  The
big drawback is that it isn't as widely available as Lisp or Perl.  And it
tends to change wildly between releases, which are still coming rather
often, as the language is still very much under development.

> Perl:   Same problems as Tcl, I guess.

Perl at least has a forms library available for it.  I looked it over a
couple of times, but haven't actually used it.  This might be a good start
at such a tool, however.  Perl is becoming a standard part of most UNIX
systems, is VERY portable, and has the ability to run setuid scripts,
warning (or refusing to run) where security might be an issue.

But, you don't get the nice X interface that you would with tcl/tk.  You
do, however, get termcap support.
--
Dave Kraus                                         Internet: kraus@rtsg.mot.com
Motorola Cellular Infrastructure Group             FidoNet : 1:115/439.8
Disclaimer: My employer's views and my views may necessarily differ.
"Sun to burn out in 1.5 billion years!  Clinton has a plan." - Outland

------------------------------

From: winstead@cs.tulane.edu (Teddy Winstead)
Subject: VOGL library for Linux?
Date: 5 Oct 1993 20:00:24 GMT


Has anyone compiled the VOGL graphics library under Linux? I'm 
just about to try to do it, but I have one little question:

There's any entry in the Makefile for "FLOATING_POINT". What do I put
in this field? The samples have "/usr/lib/libm.il" and some of them
have "-f" options after them. Should I use any of these "-f" options?

I have an i486.  Thanks in advance, and please please reply via e-mail
if it'll save bandwidth.

Thanks again...
ted


------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
