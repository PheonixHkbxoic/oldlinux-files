From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Thu, 2 Dec 93 19:13:08 EST
Subject:  Linux-Development Digest #285

Linux-Development Digest #285, Volume #1          Thu, 2 Dec 93 19:13:08 EST

Contents:
  Xconfig (Andrew PRUSEK)
  Re: Xconfig (Darren J Moffat)
  Re: * DANGER 0.99pl14 + ext2fs-0.4 * (Matthew J. Ryan)
  Xconfig (Ruediger Berlich)
  Is the a bug in pl14's setting of st_atime? (Dave Thomas)
  Re: Comments from the "TAMU Crap" author (Eric Youngdale)
  Re: Comments from the "TAMU Crap" author (David E. Wexelblat)
  Re: Free Software and Motif (was: Re: Don't use Motif for free sw: ...) (John Franks)
  Re: Creeping featuritis (post --rant --flame) (Rajappa Iyer)
  Re: Shared Memory (INN NEWS)
  How to use the kernel profiler? (Michael Griffith)
  SCSI problem (Dr. Raimund K. Ege)
  telnetd bug messes up emacs! (was Re: telnetd, CRMOD, and stty : bug somewhere ("John E. Davis")

----------------------------------------------------------------------------

From: andrewp@itwhy.bhp.com.au (Andrew PRUSEK)
Subject: Xconfig
Date: 2 Dec 1993 12:55:09 GMT

Recently there has been a LOT of "discussion" about the merits/defects of
various ways to config XConfig.

Cant we get together and build a database/FAQ of monitor/graphics cards and
allowable modes.

Surely there are enough of us out there to be able to say that Card X works
with Monitor Y when you use mode Z.

If such a database/FAQ was built then a user could look up this info and
setup up XConfig to work right the first time.

Also super-gurus could verify the suggested mode settings and correct them.

Lets all work together.

thanks
Andrew

------------------------------

From: moffatd@dcs.glasgow.ac.uk (Darren J Moffat)
Subject: Re: Xconfig
Date: Thu, 2 Dec 1993 14:53:39 GMT

andrewp@itwhy.bhp.com.au (Andrew PRUSEK) writes:

>Recently there has been a LOT of "discussion" about the merits/defects of
>various ways to config XConfig.

>Cant we get together and build a database/FAQ of monitor/graphics cards and
>allowable modes.

>Surely there are enough of us out there to be able to say that Card X works
>with Monitor Y when you use mode Z.

>If such a database/FAQ was built then a user could look up this info and
>setup up XConfig to work right the first time.

Hasn't this already been done : /usr/lib/X11/etc/modeDB.txt ??

If you think more info than this should be supplied then okay but it's
probably the best place to start from.
-- 
Darren J Moffat                        20 Southpark Ave
email: moffatd@dcs.glasgow.ac.uk       Glasgow

------------------------------

From: ryanm4@hall101.its.rpi.edu (Matthew J. Ryan)
Subject: Re: * DANGER 0.99pl14 + ext2fs-0.4 *
Date: 2 Dec 1993 15:05:51 GMT

In article <GEROAHDE.93Dec2010714@w250zrz.tu-berlin.de>,
Gero Guenther <geroahde@w250zrz.tu-berlin.de> wrote:
>
>Hi folks,
>
>I just runned  0.99pl14 + ext2fs-0.4 and lost the contens of at leat
>one ext2fs filesystem directory. 
>
>Here my history:
>cd pov
>ls
>cd sources 
>ls
>emacs Makefile
>CTRL-Z
>man gcc
>fg
>(in emacs make -k with unspez. errors)
>("  "     exit emacs with CTRL-x CTRL-c) 
>ls
>(and the dir sources was empty)
>
>running e2fsck could not get any wiped out files back.
>
>Because I have a lot too lose, I synced and booted the more stable 0.99pl13r.
>
>Happy fixing ----- Gero.
  Did you bother trying the make without emacs?  If not, go back and do it.
Don't lay blame without testing various situations.   

- Matt
-- 
"Still looking for a funky quote..."
Matthew Ryan
ryanm4@rpi.edu

------------------------------

From: ruediger@tau.ep1.ruhr-uni-bochum.de (Ruediger Berlich)
Subject: Xconfig
Date: 2 Dec 1993 16:03:34 GMT

On several FTP-sites there is in the msdos/xwindows subdirectory
a commercial X-server lying around, which is for testing.
It works without any database and seems to autodetect
the timings.
To me this seems to be somekind of port of XFree, as they also have a Xconfig,
but without timings. How did they do it ?
Ruediger
[ruediger@tau.ep1.ruhr-uni-bochum.de]


------------------------------

From: dave@devteq.co.uk (Dave Thomas)
Subject: Is the a bug in pl14's setting of st_atime?
Date: Thu, 2 Dec 1993 15:58:52 GMT


Under pl11 on the ext2 filesystem, ftruncate updated an inode's
atime:

 Just opened: mtime=754846756, atime=754846659
 After write: mtime=754846836, atime=754846659
 After read:  mtime=754846836, atime=754846659
 After trunc: mtime=754846840, atime=754846840
 After close: mtime=754846840, atime=754846840

In pl14 it doesn't:

 Just opened: mtime=754846707, atime=754846659
 After write: mtime=754846752, atime=754846659
 After read:  mtime=754846752, atime=754846659
 After trunc: mtime=754846756, atime=754846659
 After close: mtime=754846756, atime=754846659

This means that (for example) rclock is now not noticing that
I've read my mail (using emacs/vm, which truncates $MAIL). To
make things even stranger, on a Dell SVR4, its the READ that
updates atime, which is what I'd expect:

 Just opened: mtime=754847536, atime=754847534
 After write: mtime=754847633, atime=754847534
 After read:  mtime=754847633, atime=754847635
 After trunc: mtime=754847637, atime=754847635
 After close: mtime=754847637, atime=754847635


Q: which is right? (High tech test program below)

============= Program to generate the numbers ===================

#include <stdio.h>
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>

const char *fn = "./wombat";

int main()
{ int fNo = open(fn, O_RDWR);
  struct stat sb;
  char buff[10];

  stat(fn, &sb);  
  printf("Just opened: mtime=%ld, atime=%ld\n", sb.st_mtime, sb.st_atime); 
  sleep(2); 
  write(fNo, "hi", 2); 
  stat(fn, &sb);  
  printf("After write: mtime=%ld, atime=%ld\n", sb.st_mtime, sb.st_atime);
  sleep(2);
  read(fNo, buff, 2); 
  stat(fn, &sb);  
  printf("After read:  mtime=%ld, atime=%ld\n", sb.st_mtime, sb.st_atime);
  sleep(2);
  ftruncate(fNo,0); 
  stat(fn, &sb);  
  printf("After trunc: mtime=%ld, atime=%ld\n", sb.st_mtime, sb.st_atime);
  sleep(2);
  close(fNo); 
  stat(fn, &sb);  
  printf("After close: mtime=%ld, atime=%ld\n", sb.st_mtime, sb.st_atime);
}

--
--
From_____________________________________________________________________
| Dave Thomas - Devteq Ltd - 18 Thames St - Windsor - Berks SL4 1PL - UK |
| Tel: +44 753 830333  - Fax: +44 753 831645  - email: dave@devteq.co.uk |
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 

------------------------------

From: eric@tantalus.nrl.navy.mil (Eric Youngdale)
Subject: Re: Comments from the "TAMU Crap" author
Date: Thu, 2 Dec 1993 17:22:45 GMT

In article <CH8JBo.2v4@aib.com> dwex@aib.com (David E. Wexelblat) writes:
>In article <CH2Lss.E6A@eurom.fsag.rhein-main.de> misch@eurom.fsag.rhein-main.de (Michaela Merz) writes:
>>I'm a system- and networkprogrammer. I'm not to deep in graphics - so my 
>>question would be: Where is the problem to start  X and use cursor up 
>>or cursor down until there is a usable picture? 
>>
>
>Because it can damage or destroy your hardware.  Since you don't know
>this stuff, accept the answer from those who have been immersed in it
>for almost two years now.  It is relatively rare.  But it DOES happen.

        Try the following analogy.  Think of it like a gear shift knob on a
car.  Most cars do not let you shift into reverse while you are at highway
speeds, but there are a few that will (do not try this at home, kids :-).  Just
trying all of the video modes to see which one works the best is like shifting
a car into all of the positions to see which one works the best.  If your
transmission prevents you from shifting into reverse while you are driving, you
may be spared serious damage.  If not and you happen to hit reverse....

-Eric


>>Like tuning in a tv channel ... ?
>>
>
>You're trying to equate a receiver with a generator.  Or are you referring
>to the fact that X and TV both make video images?  There is only ONE
>set of video parameters in a TV, 100% independent of channel.

-- 
"The woods are lovely, dark and deep.  But I have promises to keep,
And lines to code before I sleep, And lines to code before I sleep."

------------------------------

Crossposted-To: comp.windows.x.i386unix
From: dwex@aib.com (David E. Wexelblat)
Subject: Re: Comments from the "TAMU Crap" author
Date: Thu, 2 Dec 1993 17:24:08 GMT

In article <2dj9nl$jsv@snake.CS.Berkeley.EDU> curtis@snake.CS.Berkeley.EDU (Curtis Yarvin) writes:
>In article <2dh2nh$tk@rand.org>, Ed Hall <edhall@nntp.rand.org> wrote:
>|
>|In other words, there is a balancing act which the XFree86 team has to
>|perform, between effort, resources, and utility.  Rating each of these
>|factors involves considerable judgement, so there is bound to be some
>|controversy.  But in the XFree86 team's work I've seen so far there has
>|been a common thread: expand the number of platforms where XFree86 works
>|while keeping the OS- and hardware-specific variations to the minimum
>|consonant with reasonable performance.
>
>Yes, and I agree with this approach.  It is the only sensible
>way to do things; when adding any new feature you have to
>consider the cost of coding it versus the benefit (number of
>users * what each gains).
>
>All I'd like to see is the XFree86 team dealing with OS
>variations the same way they deal with hardware variations.

The problem is that doing this requires massive changes to the overall
structure of the server(s).  That's hard.  You'll notice that to deal
with the hardware variations, we implemented new servers - we didn't
radically hack the existing servers.  In fact, the changes made to
XF86_SVGA to support the Cirrus and WD accelerators (not including
the actual acceleration routines) was only about about 100 lines, 
perhaps not even that much.  And adding BDM2 to XF86_Mono was done
by duplicating a lot of code, and having parallel structures.

The only major surgery that was done for 2.0 (which is, of course,
completely invisible to the end users) was to remove all of the
spagetti-#ifdef code in the servers and implement an OS-support
API.  But again, that was done the same way for ALL of the OSs.

>
>|As to the question at hand, I'm surprised that Curtis hasn't suggested a
>|middle course, one which doesn't hinder the Linux folks from making good
>|use of their systems' capabilities: develop a utility which uses dosemu
>|to set up BIOS video modes, probe them, and output corresponding modeDB
>|entries.  That way, XFree86 won't have to carry a lot of Linux-specific
>|code.  Furthermore, it doesn't tie Linux users to the video modes
>|implemented in their BIOS (assuming they know what they are doing in
>|tweaking their timings).
>
>Yes, I think this is the right way to do things.
>

Well, I've tried about a dozen times to get someone to develop such
a program.  It requires a DOS development environment - something that
XFree86 developers don't generally have.  I finally have a copy of 
DOS/Merge, so I may tackle this at some point.  I did do a bit of
this stuff (I have programs for ET4000 and S3).  This (along with the
VESA specifications) is where the generic video modes in README.Config
came from (a lot of BIOS analysis and hand calculations).

BTW - inverting video modes from register values is a difficult, chipset
specific problem.  It is actually an impossible problem for boards with
programmable clocks.

>c


--
David Wexelblat <dwex@aib.com>  (703) 430-9247  Fax: (703) 450-4560
AIB Software, Inc., 46030 Manekin Plaza, Suite 160, Dulles, VA  20166
  Formerly Virtual Technologies, Inc.

Mail regarding XFree86 should be sent to <xfree86@physics.su.oz.au>

"...Laughing as they danced, highest colours touching others.
   Did her eyes at the turn of the century tell me plainly
     How we'll meet, how we'll love?  Oh, let life so transform me."
        -- Yes, "Turn of the Century"

------------------------------

From: john@math.nwu.edu (John Franks)
Crossposted-To: comp.infosystems.www,comp.windows.x,comp.windows.x.i386unix,comp.windows.x.motif,gnu.misc.discuss,comp.sources.d
Subject: Re: Free Software and Motif (was: Re: Don't use Motif for free sw: ...)
Date: 2 Dec 1993 17:53:49 GMT
Reply-To: john@math.nwu.edu

In article <MARCA.93Dec2014703@wintermute.ncsa.uiuc.edu>, marca@ncsa.uiuc.edu (Marc Andreessen) writes:
> In article <PCG.93Nov29182724@frontb.aber.ac.uk> pcg@aber.ac.uk
> (Piercarlo Grandi) writes:
> 
>    A good argument has been raised that NCSA are infringing on their
>    educational OSF license by not advising or requiring their users to pay
>    OSF a runtime library royalty, if they haven't already, before _running_
>    NCSA Mosaic. 
> 
> Not in the LEAST bit accurate.
> 
> Marc
> 
> --
> Marc Andreessen
> Software Development Group
> National Center for Supercomputing Applications
> marca@ncsa.uiuc.edu (MIME welcomed here)

I suspect that I am like most of the readers of this group in hoping that
this thread is dying out.  Certainly the relative merits of windowing
toolkits is a subject which is not appropriate to this group.  But the
licensing status of Mosaic is appropriate and is of vital concern to
many people.

I think much of the uproar could have been avoided if there was some
kind of definitive statement and explanation from NCSA.  For example,
about half way through this long discussion Eric Bina posted that
Mosaic binaries are made with Motif 1.1.4 which has a different license
than 1.2 and following.   As a binary only user I had no (easy) way of
knowing what version of Motif was linked with my binary.  This was 
very helpful.  Of course it raises the question of whether there is 
a committment or intent to continue supporting binaries using version
1.1.4 indefinitely.

This licenseing issue is a potentially difficult one for many people
and a definitive statement, perhaps including the licensing terms
imposed by NCSA for their binaries, would be much appreciated.

-- 

John Franks     Dept of Math. Northwestern University
                john@math.nwu.edu


------------------------------

Crossposted-To: gnu.misc.discuss
From: rsi@netcom.com (Rajappa Iyer)
Subject: Re: Creeping featuritis (post --rant --flame)
Date: Thu, 2 Dec 1993 17:58:33 GMT

In <2dkn60$b4s@news.u.washington.edu> tzs@stein3.u.washington.edu (Tim Smith) writes:

>Michael I Bushnell <mib@geech.gnu.ai.mit.edu> wrote:
>>You apparently haven't thought about it at all.  The reason that
>>multi-volume support needs to be in tar is so that later volumes can
>>be complete archives, and (except for the file split between volumes)
>>can be read without needing context from a previous volume.

>The reason that multi-volume support may need to be in tar is so that
>a file can be bigger than a volume.  If each file are smaller than a volume,
>then you can make each volume a complete archive by simply using tar
>multiple times.  A script/program could partition the files that are
>to be archived into sets that would fit on single volumes, and then
>invoke tar for each set.

That was precisely what I had in mind when I posted the article that
Mike Bushnell was responding to. However, on reflection, I must admit
that the problem of archiving files larger than backup media volume
capacity is common enough to warrant adding that feature to tar.
Solutions likes splitting the file transparently before archiving and
reassembling them later with scripts will work, but they may not
address the problem of slack space left on each volume.

That said, however, I am not convinced that tar can ever be enhanced
without altering its basic functionality to perform as an industrial
strength backup utility. It is unacceptably expensive on space and
time in the update mode (does anybody use the update mode often?)
There is no way to restore a particular instance of a file which
makes it almost impossible to "roll back" to an earlier version of the
file. I am not clear how adding multi-volume capability to tar can
help in resolving these problems.
-- 
Rajappa Iyer <rsi@netcom.com> La Jolla, CA. (619) 457-7509
        They also surf who only stand on waves.

------------------------------

From: news@apollo.west.oic.com (INN NEWS)
Crossposted-To: comp.os.linux.help
Subject: Re: Shared Memory
Date: 2 Dec 1993 10:16:00 -0800

In article <2di4fm$j4e@mailgzrz.TU-Berlin.DE> wpp@marie.physik.tu-berlin.de (Kai Petzke) writes:
:In <1993Dec1.101117.7043@Informatik.TU-Muenchen.DE> fotter@Informatik.TU-Muenchen.DE (Sebastian C. Fotter) writes:
:
:>We want to program two independent processess, one for drawing a world model
:..
:>We think that it would be best to put the map into some memory shared by both
:>processess. Does anyone have any suggestions/documents or some sample code using
:>shared memory with Linux?
:
:Linux has shared memory support.  Answer "yes" to the question, whether you
:want IPC support, when configuring your kernel.  As far as I know, both
:DOSEMU and POSTGRES use it.  (Well, I know it for sure for the latter).
:Get either source, and have a look at it.
:
:--
:Kai
:wpp@marie.physik.tu-berlin.de

    You want to use the shmget() series of calls, try 'man shmget'.  If you
    do not have the manual page then you should get updated manual pages
    from tsx-11.mit.edu

    Linux also has a mmap() call but does NOT yet support shared segments
    through it.

                                                -Matt


    Matthew Dillon              dillon@apollo.west.oic.com
    1005 Apollo Way
    Incline Village, NV. 89451  ham: KC6LVW (no mail drop)
    USA                         Sandel-Avery Engineering (702)831-8000
    [always include a portion of the original email in any response!]


------------------------------

From: grif@ucrengr.ucr.edu (Michael Griffith)
Subject: How to use the kernel profiler?
Date: 2 Dec 1993 19:13:30 GMT

I want to use the kernel profiler.  Besides compiling a kernel with it
enabled, what else do I have to do to use it?  I looked in the KHG,
but it wasn't explained within.

--
                                                Michael A. Griffith
                                                grif@cs.ucr.edu

-- 
                                                Michael A. Griffith
                                                grif@cs.ucr.edu

------------------------------

Crossposted-To: comp.os.linux.admin
From: ege@cerl.fiu.edu (Dr. Raimund K. Ege)
Subject: SCSI problem
Date: Thu, 2 Dec 1993 20:04:43 GMT

after installing a UltraStor 34F SCSI card and a SEAGATE 1.05GB disk
I get the following warning upon reboot:

        Uhhuh. NMI received. dazed and confused, but trying to continue
        You probably have a hardware problem with you RAM chips

Linux continues to boot, recognizes the disk, and runs fine as usual.
I am running .99pl14. At first the SCSI card did not work: it
used IRQ 14, which I changed to IRQ 11. (all other setting are
still the factory default: BIOS c8000, IO base 330H).

What does the warning indicate ? Should I change some other settings ?
Do I have to worry ? Should I remove the card ?

-- 
Raimund K. Ege                             School of Computer Science
                                             Florida Int'l University
ege@scs.fiu.edu           (305) 348-3381              University Park
ege@servax.bitnet     FAX (305) 348-3549              Miami, FL 33199

------------------------------

Crossposted-To: comp.os.linux.help
From: davis@pacific.mps.ohio-state.edu ("John E. Davis")
Subject: telnetd bug messes up emacs! (was Re: telnetd, CRMOD, and stty : bug somewhere
Reply-To: davis@pacific.mps.ohio-state.edu  (John E. Davis)
Date: Thu, 2 Dec 1993 20:36:28 GMT

Hi,

    I found a bug in telnetd where \n ALWAYS gets mapped to \r\n.  I noticed
this when using Emacs because it uses \n to position the cursor.  You will
only see this bug if you telnet in to the Linux machine.

    ANyway, here is the fix.  I am hoping someone can explain to me why
telnetd was modified to create this bug.  In telnetd.c, line 1129, you will
see:
               .
               .
        *nfrontp++ = c;
     if ((c == '\n') && (my_state_is_wont(TELOPT_BINARY))) {
     /*
         if (pcc > 0 && ((*ptyip & 0377) == '\n')) {    *  THIS BLOCK
             *nfrontp++ = *ptyip++ & 0377;              *  IS COMMENTED
              pcc--;                                    *  OUT!  WHY!
            } else                                      *
                *nfrontp++ = '\0';  */                  *

                          *(nfrontp - 1) = '\r';
                          *nfrontp++ = '\n';
      }


The bug is gone when I remove the above comments and remove the last two
lines above, that is, it should read:

     *nfrontp++ = c;
     if ((c == '\n') && (my_state_is_wont(TELOPT_BINARY))) {
         if (pcc > 0 && ((*ptyip & 0377) == '\n')) { 
             *nfrontp++ = *ptyip++ & 0377;           
              pcc--;                                 
            } else                                   
                *nfrontp++ = '\0';
     }

The question that I have, is why was this done?   Is another bug lurking in
the above code?

--
     _____________
#___/John E. Davis\_________________________________________________________
#
# internet: davis@amy.tch.harvard.edu
#   bitnet: davis@ohstpy
#   office: 617-735-6746
#

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
