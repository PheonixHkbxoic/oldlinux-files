From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Sat, 30 Oct 93 16:13:17 EDT
Subject:  Linux-Development Digest #199

Linux-Development Digest #199, Volume #1         Sat, 30 Oct 93 16:13:17 EDT

Contents:
  Re: What's wrong with a DOS to Linux disk access? (Just a fellow traveller...)
  comm programs for linux (Mark R. Lindsey)
  Re: Andrew File System (Charles T Wilson -- Personal Account)
  Re: ugly name for core dumps (core.imagename) -> patch for "img.core" (Frank Lofaro)
  Re: comm programs for linux (Denise Tree)
  Re: What's wrong with a DOS to Linux disk access? (Bill C. Riemers)
  Re: What's wrong with a DOS to Linux disk access? (Arnt Gulbrandsen)
  Is there an implementation of tsearch... (James Moss)
  Re: term / trsh problem? (Bill C. Riemers)
  Re: Slowness in scsi disk access (Wolfgang Schelongowski)
  Re: What's wrong with a DOS to Linux disk access? (Vinod G Kulkarni)
  Re: Yet another core dumps name suggestion (Olaf Titz)
  Re: What's wrong with a DOS to Linux disk access? (Derek Fawcus)

----------------------------------------------------------------------------

From: jedubins@unix.amherst.edu (Just a fellow traveller...)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: 29 Oct 1993 19:45:40 -0400

David Barr (barr@pop.psu.edu) wrote:
: In article <trucken.751924223@giga>,
: Dave Truckenmiller <trucken@giga.cs.umn.edu> wrote:
: >>Yes.  I created a text file in emacs on the Linux disk, and now, when
: >>I'm running Quark under Windows, I want to import it.  How do I get it?
: >
: >Yes, this is EASY.  Mount your DOS partition in Linux.

: It's hard to believe so many people responding to this thread can be
: this thick, and even after it being re-explained.

: What he's asking is how to access the Linux filesystem FROM DOS!

: I don't know of a way, you'd have to write a Linux filesystem driver
: that runs under DOS, and I don't know that one exists.


I don't think he necessarily wanted anything as grandiose as a filesystem
driver.  I think he, as well as the other people who would like this
capability would be willing to settle for a menu driven program which would
aloow you to copy files from the current Linux filesystem to DOS, and perform
any conversions necessary, cr/lf, etc.  I've never used mtools, but I have the 
impression that is what mtools where used for on the Linux side before the
dos filesystem existed for Linux.
        To tell you the truth, I would like this too.  The inability to do this
annoys me as much as the programs I have under DOS which make me run without 
QEMM, because then I have to reboot to make use of anything that needs QEMM or
EMS.  Rebooting is annoying when I only need one or two things.
        It would be fine only to implement a copy program like this which would
only handle one of the filesystems Linux uses, say ext2fs, and maybe expand to 
other filesystems like xiafs and minix later.

        Explicitly what you would do is run a menu driven program under DOS,
maybe called 'LTOOLS.EXE'.  You would get into this program and copy stuff
from the Linux partition in a menu driven manner like you might copy files
in the DOS shell.

        I think it would be slick to implement this so that the configuration
information for reading each type of Linux Filesystem existed in separate
configuration files, like EXT2FS.FMT, XIAFS.FMT.  Although, of course in
the first release you might only have one FMT file that is usable.

        There is one distinct advantage to this, in the spirit of the FSF,
you could make the layout of the *.FMT files public, so that other people would
be able to write other programs under DOS that would use the same information,
and in the long run provide other front-end options than the original
LTOOLS.EXE, or programs that work in different ways, but need the same
information.

Personally, I don't think anyone will do it, even if they can. :)
It would be nice though.

                                Jim Dubinsky


------------------------------

Crossposted-To: comp.os.linux.admin
From: mlindsey@nyx10.cs.du.edu (Mark R. Lindsey)
Subject: comm programs for linux
Date: Sat, 30 Oct 93 02:21:30 GMT


I'm looking for some decent comm programs that'll compile under linux; my
main problem is a lack of vt100 function key support. I'd also like to see if I
could find something that'd make zmodem work.

Minicom does neither, plus it screws up as text hits the bottom. I tried to get
Pcomm, but I think I got a really old release that only seems to want to work
on BSD systems. I don't know enough about programming to make it work for
POSIX/linux. :(

Thanks for any and all help.

 - Mark



------------------------------

From: ctwilson@rock.concert.net (Charles T Wilson -- Personal Account)
Subject: Re: Andrew File System
Date: 30 Oct 1993 03:49:57 GMT

In article <2anvou$6if@senator-bedfellow.MIT.EDU>,
Salvatore Valente <svalente@ATHENA.MIT.EDU> wrote:
>Lots of random people have written:
>
>> AFS is the intellectual property of Transarc corp.  A clone *might* be
>> possible, but lacking source, it might be hard to write without being
>> plagaristic; it's pretty sophisticated.

for the record, this was me :)
>
>AFS specs exist.  The code would have to be written from scratch,
>based just on the specs.  Sounds kind of like the kernel of a certain
>operating system kernel we all know and love.  That is, it can be done.
>
>> AFS sucks anyways.  Use NFS :-)

Personal experience?
>
>Theoretically, AFS is more powerful than NFS.  AFS has lots of cool
>design features.  I would talk about the implementation, but I'm not
>really in a Transarc flaming mood right now.  Maybe later.
>
>> AFS would be better than NFS, but I don't see what is the point of trying
>> to be compatible with AFS which isn't used anywhere
>
>AFS _is_ used.  At my little college, almost all files are in AFSland.
>I want to be able to access those files from my Linux box.  (Many of
>the public workstations are Solaris, so you can see how important my
>Linux box is to me.  :-)
>
>> You can probably get by with the AFS to NFS translator.
>
>Now I'm in a Transarc flaming mood.  The translator sucks!  It erases
>random files, it crashes often, it's slow, it's truncated my RMAIL
>file to zero bytes several times...  It's really quite bad.
>
>> And why are they locked out?  AFS is available for a variety of 
>> platforms.
>
>They are locked out because some people (like us nutty Linux users)
>want to put non-AFS supported systems on networks containing mostly
>AFS-supported systems (like my schools campus network).

All that's required is access that's granted.  We have all kinds of
NFS mounted workstations, from HPs to RS6000s to Suns to SGIs, etc.
They all have some level of access, and are all NFS-mounted.
>
>> a) AFS filesystems are not Unix filesystems

true enough....the functionality is quite similar, however.

>> b) the implementation quality of AFS is poor"

I would question this..my employer has dozens of HP servers running it,
servers which are used by more than 1000 HPUX and other workstations.  I 
build millions of lines of code *nightly* using these servers and HP's
Taskbroker (tm), as do many others.  We still have NFS-mounted workstations,
but have migrated to AFS for general access servers.  If the implementation 
were poor, I think we would have stayed with an all-NFS network.  We test
our tools *severely* before turning them loose on the general population.
 
>> Most users tend to be happy about all the features AFS promises when they
>> start using AFS, but a significant number of people are seriously hacked off
>> after some months of adminstering or using AFS.

We've had problems, but Transarc has fixed many of them, and continues to
do so.  There's also no doubt that administration is different from NFS,
but there are many more features.
 
>The point of this message is: I'd really like to see a freely
>distributable AFS client, and if anyone out there is working on one,
>I'd be more than happy to help test and (in my copious spare time)
>develop it.

Maybe someone will clean up the translator.  Some seem to be quick to
blame AFS for its problems, when AFS serves quite well for me at work,
admittedly, though, on hardware far more robust than PCs.

-- 
/-----------------------------------------------------------------------\
|  Tom Wilson                      |  "I can't complain, but sometimes  |
|  ctwilson@rock.concert.net       |   I still do."                     |
|                                  |                -Joe Walsh          |

------------------------------

From: ftlofaro@luther.CS.UNLV.EDU (Frank Lofaro)
Subject: Re: ugly name for core dumps (core.imagename) -> patch for "img.core"
Date: 30 Oct 1993 07:01:14 GMT

In article <JEM.93Oct29175457@delta.hut.fi> jem@snakemail.hut.fi (Johan Myreen) writes:

   In article <2aiqvd$1n1@smurf.sub.org> urlichs@smurf.sub.org (Matthias Urlichs) writes:

   >True. I haven't seen any objection to naming the corefile of "foo" 
   >"foo.core".

   Quite a lot of people are still using the Minix file system, with a
   maximum file name length of 14.

   -- 
   Johan Myreen
   jem@cs.hut.fi
   60 11'55" N, 24 53'30" E

Well if you are that concerned with backwards compatibility, we could
all switch back to DOS! It runs more apps, and is the ultimate in
backwards compatibility. Only 1/2 ;) (since I'd hate to see linux in
any way crippled by an archaic brain-dead 14 char limit. Thats more
like Coherent than modern Linux! ;)


------------------------------

From: tree@whatever.cs.jhu.edu (Denise Tree)
Crossposted-To: comp.os.linux.admin
Subject: Re: comm programs for linux
Date: 30 Oct 1993 09:40:23 GMT

In article <1993Oct30.022130.20487@mnemosyne.cs.du.edu>,
Mark R. Lindsey <mlindsey@nyx10.cs.du.edu> wrote:

|I'm looking for some decent comm programs that'll compile under linux; my
|main problem is a lack of vt100 function key support. I'd also like to see if I
|could find something that'd make zmodem work.
|
|Minicom does neither, plus it screws up as text hits the bottom. I tried to get
|Pcomm, but I think I got a really old release that only seems to want to work
|on BSD systems. I don't know enough about programming to make it work for
|POSIX/linux. :(
+------

Try xc ... derived from xcomm. It compiles effortlessly as ported and
has auto z-download in the version called, I believe, xc+rz.tgz at
tsx-11.

It has a good script capability, supprts rtscts, etc. - pretty nice
and better than pcomm or minicom IMHO. If you don't like xc then
kermit is good too of course. Kermit is available in powdered form at
Safeway stores... diet too I think. 

Get Seyon if you use X. 
______________________________________________________________________
_______________ Denise Tree
________________________________tree@cs.jhu.edu
_________________________________________.... . . .   .   .    .     .
                                                                     .
                                                                     .
                                                                     *     



------------------------------

From: bcr@bohr.physics.purdue.edu (Bill C. Riemers)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: 29 Oct 93 20:27:40 GMT

In article <2aqjf1$b35@tigern.nvg.unit.no> agulbra@nvg.unit.no (Arnt Gulbrandsen) writes:
>In article <2appca$4uj@vixen.cso.uiuc.edu>,
>Christian Holtje <choltje@ux1.cso.uiuc.edu> wrote:
>I don't have code, but I know it will be a small job if anyone wants
>to do it.
>
>I wrote one last last summer ('92).  This was before LILO and I
>forgot to download shoelace when I first installed linux, so I wrote
>my own boot loader rather than boot from floppy all the time :-)

Thats the problem, there is no reasonable example available.  All 
the linux related drivers for DOS are always uploaded in a binary
format, but not a source format.   So if I want to make something
to do this I have to start from scratch.  Then when the next person
wants to make something, they have to start from scratch.  Even
worse, there are alot of nice linux related dos utilities that 
nolonger work because the author hadn't bothered to update them
as linux evolved.

Admittedly someone could comeup with an ALPHA version of a driver
for minix from dos in about 1 or 2 days, but how long does it take
to get something stable enough for it not to be too risky for
both your dos and linux file systems?

                                 Bill


------------------------------

From: agulbra@nvg.unit.no (Arnt Gulbrandsen)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: 30 Oct 1993 13:57:54 +0100

In article <13374@dirac.physics.purdue.edu>,
Bill C. Riemers <bcr@bohr.physics.purdue.edu> wrote:
>Thats the problem, there is no reasonable example available.

Does the linux kernel count as an example?  And emufs from the DOS
emulator?  The kernel shows you how to read the linux file systems,
and emufs shows you how to fool DOS into using your own routines
rather than the stupid 8.3 DOS stuff.

If anyone really cares, it can be done.  Me, I don't even want to run
DOS.

--Arnt

------------------------------

From: moss@usceast.cs.scarolina.edu (James Moss)
Subject: Is there an implementation of tsearch...
Date: 30 Oct 1993 09:57:26 -0400

I am looking fot an implementation of the tsearch programs for linux.
This includes tsearch, twalk, tdelete, an another or two.  It is not
required by posix, but by xpg(I think that is the right acronym).  If
anybody has created one I'd love to know.

thanks jim


------------------------------

From: bcr@bohr.physics.purdue.edu (Bill C. Riemers)
Crossposted-To: comp.os.linux.help
Subject: Re: term / trsh problem?
Date: 30 Oct 93 16:12:10 GMT

In article <2as8j9$hub@optima.cs.arizona.edu> chen@cs.arizona.edu (Joseph Y Chen) writes:
>Hi,
>I have prolem using term and trsh.  My procedure is :
>startx
>dial to rlogin remote
>term (in remote)
>term </dev/modem >/dev/modem 2>/dev/null &  (in local)
>trsh  (in local, but it just hangs, no promopt jumps out)
>
>I have tried all the ways descreibed in README and FAQ coming with term package.
>OS in remote is SunOS Release 4.1.1, term version is 1.06.
>term was compiled by using Makefile.sun (this is only one works).
>Anybody there who e-mail me the reply would be very much appreciated.  I'll post
>a summary about this later on.

Obcourse this is just another one of the term bug problem posts, but it 
reminds me of a very serious problem we could at least correct in Linux.

I'm sure many of you have heard the joke that the world will have to shut
down for the year 2000 while everyone reprograms there computers to handle
the year 00 being greater than the year 99.  But seriously, anyone who has
had to use a date-time value in a program has had to face the problem
that eventually this will cause thier program to work incorrectly.  Normally
the only trick is to try to make it a date far enough in the future that
your program will no-longer be in use.  (My programs crash in 2021.)
However, what is really needed is a standard zero-time reference that
can be dynamically updated.

Forexample, one solution would be to have a zero reference variable that
is automatically updated each leap-year.  So each 29th of Febuary your
computer would subtract 4 years from all dates and update the zero-time
reference by 4 years.  Any file older than the zero reference could just
be marked as ancient with a time of 0.

I like this idea enough that I will start writting my zero time reference
patch that will let me use all my programs (such as term107) as long as
my computer is still running a compatable operating system.  If you have
some very strong oppinions on this topic, please e-mail me your thoughts.

                            Bill


------------------------------

From: ws@xivic.bo.open.de (Wolfgang Schelongowski)
Subject: Re: Slowness in scsi disk access
Date: Sat, 30 Oct 93 12:37:05 MEST

keith@ksmith.com (Keith Smith) writes:

...
> IDE will generally _always_ beat scsi in a raw thruput test, at the
> expense of about 4 times the CPU overhead.

Make that
  "IDE will generally _always_ beat 8-bit / 5MHz SCSI ..."
                                    ^^^^^^^^^^^^
and I'll agree. Wide and/or Fast SCSI is different.

--
Wolfgang Schelongowski  ws@xivic.bo.open.de

Not responsible for advice not taken. (Niven's law #18)
  -- Larry Niven, Niven's Laws

------------------------------

From: vinod@cse.iitb.ernet.in (Vinod G Kulkarni)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: Sat, 30 Oct 1993 17:09:38 GMT

David Barr (barr@pop.psu.edu) wrote:
: In article <trucken.751924223@giga>,
: Dave Truckenmiller <trucken@giga.cs.umn.edu> wrote:
: >>Yes.  I created a text file in emacs on the Linux disk, and now, when
: >>I'm running Quark under Windows, I want to import it.  How do I get it?
: >
: >Yes, this is EASY.  Mount your DOS partition in Linux.

: It's hard to believe so many people responding to this thread can be
: this thick, and even after it being re-explained.

: What he's asking is how to access the Linux filesystem FROM DOS!
: I don't know of a way, you'd have to write a Linux filesystem driver
: that runs under DOS, and I don't know that one exists.A

I can think of slightly different type of implementation:

DOSEMU allows access to linux filesystems from DOS. I think this is done
by running a server on linux and using interprocedural calls. (Please
inform if I am wrong!) This feature is pretty useful while in DOSEMU
mainly because I can use NFS mounted directories also. 

If I can run a kind of server of linux machine, and a 'client' TSR from
DOS, tuned for high performance between DOS and remote linux, then we
effectively have a NFS kind of service from PC.  (Currently there is no
PC NFS client in public domain.)

Main advantages: -- Most of the code is already there as part of DOSEMU. 
               Only network communication and emulation of interprocess
               communication using the network needs to be done.
               And could be faster too!

Basically most of the load is taken by server machine.

When such a client is developed, a stand alone server _running on dos_
as a TSR, can also  be developed. Running both server and client on same
machine will give access to the linux file systems on same machine.

As a part of this implementation, the LOGIN and PASSWORD also can be
implemented, so you could have your home directory protected when in
DOS.  (and frees from virus attacks I suppose.) I feel this facility is
definitely welcome in DOS community!


Sorry, I have long stopped working in DOS!

-Vinod.

------------------------------

From: uknf@rzstud1.rz.uni-karlsruhe.de (Olaf Titz)
Crossposted-To: comp.sys.hp.misc,comp.mail.elm
Subject: Re: Yet another core dumps name suggestion
Date: 30 Oct 1993 19:15:21 GMT

In article <1993Oct28.124410.15292@nenuphar.saclay.cea.fr>,
Basile STARYNKEVITCH <basile@soleil.serma.cea.fr> wrote:
> Also, my opinion is that the whole idea of core files (a good idea in
> the PDP-8 unix days) is wrong today, since more and more programs are
> huge and buggy (todays core file can easily much bigger than the
> executable file whose execution produced them). Perhaps each process

Just a story about what can go wrong with core files. The situation:
take an HP/UX system with an ancient elm and buggy emacs, configure
elm to use emacs for text editing, when the second call of emacs by
elm dumps core (so far nobody knows why) have the core file fill up
your quota. Now elm tries to exit and re-write the mailbox file, but
since the quota is already exceeded by the emacs core, this write
fails and the mailbox is lost.

At least a system should ensure that core files don't fill the quota
of innocent users.

Olaf
-- 
        olaf titz     o       olaf@bigred.ka.sub.org          praetorius@irc
  comp.sc.student    _>\ _         s_titz@ira.uka.de      LINUX - the choice
karlsruhe germany   (_)<(_)      uknf@dkauni2.bitnet     of a GNU generation
what good is a photograph of you? everytime i look at it it makes me feel blue

------------------------------

From: df@eyrie.demon.co.uk (Derek Fawcus)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: Sat, 30 Oct 1993 15:50:00 +0000

In article <2aqjf1$b35@tigern.nvg.unit.no> agulbra@nvg.unit.no (Arnt Gulbrandsen) writes:
>In article <2appca$4uj@vixen.cso.uiuc.edu>,
>Christian Holtje <choltje@ux1.cso.uiuc.edu> wrote:
>>Everytime I've seen someone ask about accessing Linux disks from DOS, they're
>>smashed down, with few reasonable responses, even though this is a reasonable
>>question.
>
>Sorry about that, I think it's reasonable too, but I'm not about to
>actually work to be able to do it.
>
>>SO lets write a simple program to let them read the linux
>>partition. It can't be too hard, it doesn't have to be super hi-tech.

>I wrote one last last summer ('92).  This was before LILO and I
>forgot to download shoelace when I first installed linux, so I wrote
>my own boot loader rather than boot from floppy all the time :-)

I also wrote a similar program in around April '92 (before I got net
access).  It's in C and is (given the date) for the minix fs.  It has
some arbitrary limits, (like max 1M file size) and is fairly ugly. But
if anyone want's to look at it they can.

DF
-- 
Derek Fawcus (G7FVS)                                df@eyrie.demon.co.uk

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
