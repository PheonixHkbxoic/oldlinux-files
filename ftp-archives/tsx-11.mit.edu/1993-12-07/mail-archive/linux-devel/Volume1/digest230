From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Wed, 17 Nov 93 01:14:16 EST
Subject:  Linux-Development Digest #230

Linux-Development Digest #230, Volume #1         Wed, 17 Nov 93 01:14:16 EST

Contents:
  Re: Help with s|gtty() (Bodo Moeller)
  Re: compiling 0.99.13 w gcc 2.5.2 (David Fox)
  Re: BusLogic SCSI under Linux...compatible with AHA 1740 or not? (Mike Horwath)
  Re: BusLogic SCSI under Linux...compatible with AHA 1740 or not? (Eric Youngdale)
  Re: WANTED: COBOL compiler (Nick Hilliard)
  Why Pascal is not... (was: WANTED: COBOL compiler) (Thomas Koenig)
  Re: compiling 0.99.13 w gcc 2.5.2 (Zhuo Er Lin)
  Re: compiling 0.99.13 w gcc 2.5.2 (David Kastrup)
  How do YOU have "term" set up? (Scott Barker)
  Latest include files? (Phil Perucci)
  Re: Motif - Pay? BAH! (wpwood@darkwing.austin.ibm.com)

----------------------------------------------------------------------------

From: 3moeller@rzdspc27.informatik.uni-hamburg.de (Bodo Moeller)
Subject: Re: Help with s|gtty()
Date: Tue, 16 Nov 1993 12:22:58 GMT

garrett@haas.berkeley.edu (Garrett D'Amore) writes:

>I am working on a simple project, and I need to turn the terminal in raw
>mode for a few lines of code.  I'd like to do this from inside my code,
>rather than from a system(stty raw) call.

In POSIX, you need the tc[gs]etattr() functions.

------------------------------

From: fox@graphics.cs.nyu.edu (David Fox)
Subject: Re: compiling 0.99.13 w gcc 2.5.2
Date: 16 Nov 1993 13:05:32 GMT

In article <1993Nov15.162533.6673@msus1.msus.edu> volkerdi@mhd1.moorhead.msus.edu (Patrick J. Volkerding) writes:

   Nope. It's because the GCC 2.5.x compilers have become more strict about
   the use of "volatile". For a couple of reasons (including this one), I've
   decided to drop back to gcc/g++/objc 2.4.5 as the standard compilers for
   Slackware.

This is a good decision.   Unfortunately, lots of things broke between
2.4.5 and  2.5.2, such as the InterViews library.  I missed the
discussion, but it seems that the new behavior in 2.5.2 and 2.5.3 is
closer to Strousrup's spec.  It seems pretty dumb to me though.  The
main problem is demonstrated by the code below, which used to compile
fine, now gives a compile error:

#include <stdio.h>

class A {
public:
  print(int n) {printf("A::print(%d)\n", n);}
};

class B : public A {
public:
  print() {printf("B::print()\n");}
};

main()
{
  B x;
  x.print();      /* Ok. */
  x.print(2);     /* Error: too many arguments to method print. */
  x.A::print(2);  /* What you have to use now. */
}

------------------------------

From: root@jacobs.mn.org (Mike Horwath)
Crossposted-To: comp.os.linux.misc
Subject: Re: BusLogic SCSI under Linux...compatible with AHA 1740 or not?
Date: 16 Nov 1993 14:04:41 GMT

Bruce (chengb@logic.camp.clarkson.edu) wrote:
:       Hi, I just received my BusLogic BT-747S.  So far, I have only
: gotten it to work under the AHA-1542 driver in the kernel, and it
: doesn't seem to work when I have only AHA-1740 support compiled in.  As
: far as I know, the driver for 1542 probably isn't taking full advantage
: of the EISA speed (10-33 Mbits/sec!!!), so is there a possibility to
: hack the existing driver for one that takes full advantage of BusLogic
: card?

: thanks,
: Bruce
: chengb@craft.camp.clarkson.edu

YOu aren't going to believe this, but I tested one of those babies out for
a week and a half for one of the bosses so he could determine if it was a
good card for a unix like system.

All I ever got it working in was 1542 mode, so I called them, asked them
about 174x mode, they said no, it only has a 1542 mode.  I asked if there
were native drivers, they said no, it just emulates the 1542.

Now about performance, it was alot faster on my system than a 1542.  Don't
really know why, except for it maybe emulates the 1542 command and register
set, but operates in an EISA like way dmaing around the world at high speed.

--
Mike Horwath    IRC: Drechsau   BBS: Drechsau   LIFE: lover
root@jacobs.mn.org  drechsau@jacobs.mn.org
Jacob's Ladder  612-588-0201  UUCP, UseNet, Linux files, BBS

------------------------------

Crossposted-To: comp.os.linux.misc
From: eric@tantalus.nrl.navy.mil (Eric Youngdale)
Subject: Re: BusLogic SCSI under Linux...compatible with AHA 1740 or not?
Date: Tue, 16 Nov 1993 16:45:46 GMT

In article <2camlp$93@jacobs.jacobs.mn.org> root@jacobs.mn.org (Mike Horwath) writes:
>Bruce (chengb@logic.camp.clarkson.edu) wrote:
>:      Hi, I just received my BusLogic BT-747S.  So far, I have only
>: gotten it to work under the AHA-1542 driver in the kernel, and it
>: doesn't seem to work when I have only AHA-1740 support compiled in.  As
>: far as I know, the driver for 1542 probably isn't taking full advantage
>: of the EISA speed (10-33 Mbits/sec!!!), so is there a possibility to
>: hack the existing driver for one that takes full advantage of BusLogic
>: card?
>
>YOu aren't going to believe this, but I tested one of those babies out for
>a week and a half for one of the bosses so he could determine if it was a
>good card for a unix like system.
>
>All I ever got it working in was 1542 mode, so I called them, asked them
>about 174x mode, they said no, it only has a 1542 mode.  I asked if there
>were native drivers, they said no, it just emulates the 1542.
>
>Now about performance, it was alot faster on my system than a 1542.  Don't
>really know why, except for it maybe emulates the 1542 command and register
>set, but operates in an EISA like way dmaing around the world at high speed.

        This is basically the result that I would have expected.  The 1542
driver does not really know what kind of bus the card is attached to.  It could
be ISA, EISA, VLB or S100 for all it cares.  All that it wants is a register
compatible card that uses a compatible mailbox message system.  The 1542
basically uses DMA, so the driver is merely telling the card where to dump the
data.  The card obviously knows the details of the bus that it is connected to,
and it handles the details of getting the data across.  Therefore a 1542 clone
card that is EISA should get EISA performance, not ISA performance.

-Eric
-- 
"The woods are lovely, dark and deep.  But I have promises to keep,
And lines to code before I sleep, And lines to code before I sleep."

------------------------------

Crossposted-To: comp.os.linux.help
From: nick@quay.ie (Nick Hilliard)
Subject: Re: WANTED: COBOL compiler
Date: Tue, 16 Nov 1993 16:23:28 GMT

John R. Campbell (soup@penrij.UUCP) wrote:
[...]
: Surely you remember that old saying:

:       C combines the Power of Assembler Language
:       with the Ease of Use of Assembler Language.

Don't you just love it!

: Actually, even Pascal (or Modula-2) would be a better commercial
: language than C.  Also, never discount Business BASIC interpreters.
: For instance, a Business BASIC (for example Thoroughbred's) supports
: a 4GL (IDOL-IV) with a procedural language that looks an _awful_
: lot like COBOL.  If SCRIPT-IV won't do the job, you can always
: downshift to BASIC.

Forgive me for adding wood to the fire, but Pascal is *not* suitable as a
language for commercial use.  It suffers from the same problems as Basic in
that to be able to do anything at all, it is necessary to use non-standard
extensions, which means that portability is sacrificed.

If you can get your hands on it, have a look at "Why Pascal is not my
Favourite Programming language", written by Brian Kernighan (or was it
Ritchie?)  It's a devastating (and justified, IMHO) attack on the
deficiencies of Pascal, and why it should not be used.

Nick
-- 
| Nick Hilliard              | e-mail:   nick@quay.ie                    |
| Quay Financial Software,   | Phone:    [+353] 1 6612377                |
| 48-53, Lower Mount St,     |    The opinions expressed above do not    |
| Dublin 2, Ireland          | necessarily reflect those of my employers |

------------------------------

From: ig25@fg70.rz.uni-karlsruhe.de (Thomas Koenig)
Crossposted-To: comp.os.linux.help,comp.os.linux.misc,comp.lang.misc
Subject: Why Pascal is not... (was: WANTED: COBOL compiler)
Date: 16 Nov 1993 17:33:08 GMT

nick@quay.ie (Nick Hilliard) writes:

[Followup to comp.lang.misc]

>If you can get your hands on it, have a look at "Why Pascal is not my
>Favourite Programming language", written by Brian Kernighan (or was it
>Ritchie?)  It's a devastating (and justified, IMHO) attack on the
>deficiencies of Pascal, and why it should not be used.

You're quite right there.  It also would seem that Nikolaus Wirth
agreed, as well; the deficiencies pointed out by Kernighan are all fixed
in Modula-2, especially the "There is no escape" clause.  Using the
SYSTEM.ADDRESS type, you can convert from and to pointers as freely as
in C; it just takes more verbiage, and effort.

Which reminds me...  has anybody checked out the Mocka Modula-2 for
Linux?  How good is it?
-- 
Thomas Koenig, ig25@rz.uni-karlsruhe.de, ig25@dkauni2.bitnet
The joy of engineering is to find a straight line on a double
logarithmic diagram.

------------------------------

From: umlin000@ccu.umanitoba.ca (Zhuo Er Lin)
Subject: Re: compiling 0.99.13 w gcc 2.5.2
Date: Tue, 16 Nov 1993 16:53:54 GMT

In <FOX.93Nov16080532@graphics.cs.nyu.edu> fox@graphics.cs.nyu.edu (David Fox) writes:

>In article <1993Nov15.162533.6673@msus1.msus.edu> volkerdi@mhd1.moorhead.msus.edu (Patrick J. Volkerding) writes:

>   Nope. It's because the GCC 2.5.x compilers have become more strict about
>   the use of "volatile". For a couple of reasons (including this one), I've
>   decided to drop back to gcc/g++/objc 2.4.5 as the standard compilers for
>   Slackware.

GCC 2.5.3 is out. From gnu.gcc.help I heard it fixes most bugs in GCC 2.5.2
The author urges everyone upgrade to it if he uses 2.5.2
-- 
========================================================================
|  Eric Lin                        Voice:   (204) 783-2884             |
|    Computer Engineering      FAX Modem:   (204) 783-2884             |
|    University of Manitoba     Internet:   Umlin000@cc.Umanitoba.CA   |

------------------------------

From: dak@messua.informatik.rwth-aachen.de (David Kastrup)
Subject: Re: compiling 0.99.13 w gcc 2.5.2
Date: 16 Nov 1993 17:40:43 GMT

fox@graphics.cs.nyu.edu (David Fox) writes:

>In article <1993Nov15.162533.6673@msus1.msus.edu> volkerdi@mhd1.moorhead.msus.edu (Patrick J. Volkerding) writes:

>   Nope. It's because the GCC 2.5.x compilers have become more strict about
>   the use of "volatile". For a couple of reasons (including this one), I've
>   decided to drop back to gcc/g++/objc 2.4.5 as the standard compilers for
>   Slackware.

>This is a good decision.   Unfortunately, lots of things broke between
>2.4.5 and  2.5.2, such as the InterViews library.  I missed the
>discussion, but it seems that the new behavior in 2.5.2 and 2.5.3 is
>closer to Strousrup's spec.  It seems pretty dumb to me though.  The
If you are talking about the problem mentioned below, the rationale
goes as follows: if a user redefines a function in an inheritence
calss, he is likely to want to change the behaviour of this function.

He might be surprised, if he redefined a function, if the compiler
decided to call a different function far up in the inheritance tree
because it might have a better argument match.

If you have an original def for int and char argument, and you
redefine for int, it might throw you for a loop that instead
of using integral promotion and getting your definition, the
compiler takes the old one. With lots of conversions around, it
might be a nuisance to correctly find out all variants of function
definitions already defined in order to replace them.
>main problem is demonstrated by the code below, which used to compile
>fine, now gives a compile error:

>#include <stdio.h>

>class A {
>public:
>  print(int n) {printf("A::print(%d)\n", n);}
>};

>class B : public A {
>public:
>  print() {printf("B::print()\n");}
If you really *want* to use the old behaviour, try
print(int n) { return A::print(n); }
>};

>main()
>{
>  B x;
>  x.print();     /* Ok. */
>  x.print(2);    /* Error: too many arguments to method print. */
>  x.A::print(2);  /* What you have to use now. */
>}

Here there would be no ambiguity, but guess what happens with char, int,
const char &...

-- 
 David Kastrup        dak@pool.informatik.rwth-aachen.de          
 Tel: +49-241-72419 Fax: +49-241-79502
 Goethestr. 20, D-52064 Aachen

------------------------------

Crossposted-To: comp.os.linux.help,comp.os.linux.misc,comp.os.linux
From: barker@enel.ucalgary.ca (Scott Barker)
Subject: How do YOU have "term" set up?
Date: Tue, 16 Nov 1993 18:11:37 GMT

Whoops! My previous post referred to TERM, which is of course the environment
variable used to set your terminal type. Stupid mistake. Maybe this posting
will be more clear.

I finally got Linux working on my machine. Now, I'd like to set up term.  I
played around with it a bit, and was reading the man pages, and realized how
easy it seems to be for people to clobber your personal machine if you allow
logins from the world at large. So, I was wondering how other people have set
term up to work for themselves. If I get enough information, I'll see if I can
set up a TERM-HOWTO to go with the other HOWTO's. To that end, I would ask if
people tell me not only how they set term up on their machines, but why they
chose their setup, and what benefits/problems they've noticed with it.

Also, I'd like to know if anybody has managed to set up term so that it is
virtually transparent on their machine (ie - you can ftp, telnet, e-mail, read
news, etc through the term link).

I am hoping to be able to put together a package, or set of documentation, to
make this procedure easier for everyone. If such a package already exists, I
have not found it yet. And I apologize if it does exist, and I'm wasting
everyone's time.

Please keep in mind that I'm interested in knowing _why_ you chose your setup.
What security risks there are, etc.

Anyway, let's go to it! E-mail responses to the address in my .Sig.

--
Scott Barker
barker@enel.ucalgary.ca

"I don't know about all this sex on television, I keep falling off."
   - Monty Python

------------------------------

From: philp@universe.digex.net (Phil Perucci)
Subject: Latest include files?
Date: 16 Nov 1993 13:12:02 -0500

Where are the latest include files?  I just got Slackware 1.1.0 and
tried to compile CLISP.  The compile failed due, according to the
CLISP author, to the include files.  While he sent me diffs, he said
they are currently in the 4.4.4b include files.  I downloaded the
inc files from tsx-11 in the GCC directory, to no avail.  The compile
still fails on _exit, I believe.

help...


-- 
==============================================================================
 Phil Perucci             | "All postings are my own opinion - all comments
 Systems Programmer       |  are intended for research/educational purposes"
==============================================================================

------------------------------

From: wpwood@darkwing.austin.ibm.com
Subject: Re: Motif - Pay? BAH!
Date: Tue, 16 Nov 1993 18:15:18 GMT
Reply-To: wpwood@austin.ibm.com (Bill Woodward)

In article <753286129snz@thoday.demon.co.uk> chris@thoday.demon.co.uk (EurIng Chris Thoday) writes:
>
>In article <2bv87oINNpd@junk.cis.ohio-state.edu>
>           dohm@cis.ohio-state.edu "peter j dohm" writes:
>
>>I don't have Motif. I refuse to purchase a binary-only distribution,
>>and a source distribution is too pricey.  Therefore, I'd like to throw
>>out a project idea if the legalities allow for such...
>>
>>I'd like to begin programming a Motif clone that we can pass around
>>under GPL to whomever would like it, assuming that we can legally
>>get around the naming conventions, etc. (by this I mean, can we call
>>the cloned functions the same names as the Motif ones, etc... ?)
>>
>>Ideally it would be a drop-in replacement for Motif, allowing the end
>>user to simply create a soft-link to the "clone" library with a name
>>libXm.a and they would (in a nutshell) have a transparent replacement.
>
>I don't think this is possible because much X programming consists of
>using standard functions (such as XtSetValues) on non-standard data
>structures (i.e widgets). You will need to supply the `include' files
>which define the widgets and the application programs will need to be
>recompiled.
>

But no one needs to care about the internal representation that
OSF/Motif uses for its widgets.  The whole idea of a widgets is that
it isn abstracted datum.  If we can create a widget that has the sameme
interface as, say, a Motif XmText widget, reacts correctly when an 
action is called from a translation table, redraws correctly when it
gets an expose event, basically acts, looks, and feels like an XmText
widget, who cares what OSF did internally to implement theirs.  A rose
by any other name and all that good stuff.

>
>In order to get application software to work you do not need to copy
>the appearance of Motif -- only the functionality. Making this distinction
>might help to reduce the effort involved. I read that there are 75 pages
>of reference information in the "OSF/Motif Programmer's Reference" for
>the XmList widget alone. You clearly need all the simplifications you
>can get.
>

First of all, the XmText widget is probably the most complicated
widget you are going to encounter from the OSF/Motif widget set.
Those 75 pages that you reference describe the behavior of the XmText
widget as well as a slew of convebience functions that make
programming *with* this widget easier.  True, it makes it a little bit
harder to program the widget library, it doesn't make it harder to
program the *widget*.

>
>Perhaps the solution is to persuade people who are writing software for
>Free distribution (in the GNU sense) to avoid using Motif in the first
>place.
>

Fine, but the fact is that OSF/Motif is becoming (arguably, I'll
admit), a de facto standard for application programming under X.  Part
of this is because it is a fairly robust useful widget set, and part
of it is (admittedly) flash (managers are always impressed by things
that look good :-).  But a lot of software is being written to use
Motif, and a Motif-compatible/compliant free toolkit would be an
extremely useful item.

>
>This thread started with a desire to be able to use software written
>for Motif without having access to the Motif libraries. I would like
>to suggest an alternative project: how about producing a widget set
>that would allow developers to produce applications consistent with
>the look-and-feel of Motif so that such applications could co-exist with
>commercial applications? Do we really need software that requires 75
>pages of reference documentation to describe a simple operation?
>

We do.  If it was that easy to switch over to another widget set,
Peter could have just shut up and switched over to the Athena widget
set and called it even.  But there is a growing amount of Motif-based
free X software which we need to have free suppport for.

<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
Bill Woodward        | wpwood@austin.ibm.com   <-- Try this first
AIX Software Support | billw@aixwiz.austin.ibm.com  
Graphics Group       | 512-838-2834
My other computer is a 386 running Linux !!!

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
