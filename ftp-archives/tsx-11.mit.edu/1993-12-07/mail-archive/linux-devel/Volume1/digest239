From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Sat, 20 Nov 93 02:13:11 EST
Subject:  Linux-Development Digest #239

Linux-Development Digest #239, Volume #1         Sat, 20 Nov 93 02:13:11 EST

Contents:
  Serial boards on Linux (Michel Lesoinne)
  Re: corewar (Roland Kwee)
  Inherited File System only on SLS? (Roland Kwee)
  naive console/tty related question (temp acct to clean dir)
  write() system call w/sockets problem (Neal Symms)
  Re: Don't use Motif for free sw: it now requires runtime royalties! (Chris Flatters)
  DECnet for linux for money!!! (Barak Pearlmutter)
  Re: Don't use Motif for free sw: it now requires runtime royalties! (Piercarlo Grandi)
  Motif binaries and Linux (Antoine Sabot-Durand SYSECA AG06A)
  ObjectBuilder/OI discussion group? (James H. Smith)
  Re: Don't use Motif for free sw: it now requires runtime royalties! (Bernhard Strassl)
  Re: Don't use Motif for free sw: it now requires runtime royalties! (Richard Lloyd)

----------------------------------------------------------------------------

From: michel@Janus.Colorado.EDU (Michel Lesoinne)
Subject: Serial boards on Linux
Reply-To: michel@Janus.Colorado.EDU (Michel Lesoinne)
Date: Fri, 19 Nov 1993 03:07:24 GMT


Has anybody written a driver for 'inteligent' serial boards like DigiBoard's ?
How much would it require to modify the kernel ? Is it fairly
easy to make a serial driver ?
Thanks for any help,

Michel (Michel@janus.colorado.edu)

------------------------------

From: rkwee@ursula.ee.pdx.edu (Roland Kwee)
Subject: Re: corewar
Date: 18 Nov 1993 23:37:06 -0800

>bonne@cs.utwente.nl (Bonne van Dijk) writes:
>Christophe Dorchies (christophe.dorchies@cld9.com) wrote:
>>salut
>>     je m'interesse de tres pres au COREWAR ces prg qui luttent . . .
>Ek groetnis fan dizze kant, kinne jo ek frysk skruiwe, dat kin ik better
>l\^eze as dit taaltsje. No kin ik wol ingelsk, do ek??
>Free translation:
>Greetings from this side, can you write Frisian (Language from the
>NorthWest part of the Netherlands). It's easier to read that (for me that is
>:) ). Now I know some english, U2?

It looks like Bonne doesn't like messages posted in French. Does it say 
somewhere that everybody has to use English on the Internet?

Please let the Internet be for EVERYBODY and let people write in the
language they prefer without making fun out of them if it isn't English.
In real life most agree (at least with their mouth) that we should not
discriminate on race, gender, etc. Let us in the Hi-Tech world be ahead
of real life and also abolish non-productive discrimination
on language.

Although many poke fun out of ``veteran'' computer languages like
Cobol and Fortran, they have their place among the ``modern''
languages like C. And nobody really tries to force all the others
to use the ``best'' language, whether Lisp, C++ or ...(?).

The circumstance that Bonne reads Frisian easier than French is fine.
I am also from Holland (living in the US), but find French easier. 
More to the point is that somebody posting in French should not expect 
many replies from the United States. 

Okay, with my blood pressure back to normal, I wish the many
French-speaking Linux-fellows happy computing.

--Roland Kwee                   RolandKwee@ACM.org 

------------------------------

From: rkwee@ursula.ee.pdx.edu (Roland Kwee)
Subject: Inherited File System only on SLS?
Date: 18 Nov 1993 23:46:00 -0800

I noticed on the SLS FAQ the Inherited File System feature, allowing
to modify files on a (read-only) CD with the help of the hard disk.
On the Yggdrasil docs it is never mentioned. It even uses lots of
symbolic links, which I find hard to puzzle out.

Is this feature only on SLS? Wouldn't it be nice to have it standard in
Linux? Can I add this feature to regular Linux versions?

--Roland Kwee                  RolandKwee@ACM.org

------------------------------

From: cchen@cs.sunysb.edu (temp acct to clean dir)
Subject: naive console/tty related question
Date: 19 Nov 1993 07:31:15 GMT

Howdy,

Some naive questions on console/tty:

1. when a process is created, its file descriptors are automatically
    initialized so that 0 is standard-input 1 is stdout, etc.
   The question, which device are these descriptors bound to?
    Who does the binding?
2. Can you open /dev/console? What's its use?
3. What the use of /dev/tty?  Can you open it?  
   How's this implemented in Linux?

Thanks for any help.

 

------------------------------

From: neal@inviso.com (Neal Symms)
Subject: write() system call w/sockets problem
Date: Thu, 18 Nov 1993 22:54:58 GMT


I seem to recall seeing posts on this before, but don't recall their
substance.

I'm in the process of porting xinetd to Linux and have hit a snag with the
write() system call not flushing its buffers before it closes.  At least that's
what it seems like.  I'm using kernel pl12 with NET 2e/beta2.

I've worked with the xinetd package on other Unix systems and not had this
problem.  The symptoms are that when I telnet in and start a simple session,
like xinetd's "services" list, I don't get all the output.  Usually only about
50% of the output makes it through (3-4 lines) and then the connection gets
disconnected.  This happens with other "test" services I've set up like having
a connection to port 2525 run /bin/netstat and then disconnect.  It seems that
the socket disconnects before all the output is flushed.

Is this a NET problem or a kernel write() problem?

Thanks for any help.

P.S. I'm also porting ntp/ntpd in case anyone's interested.  The snag there is
that there's no adjtick() system call to be found in Linux, so ntpd might be
on hold awhile.
-- 
Neal Symms  ***  neal@inviso.com  ***  Moronic quote of the year:
"I'm grateful to Mr. Phoenix for only one thing; his death serves as one more
 example to my kids of the fate that liberal ideas and thinking ultimately
 leads to."  - Paul S Galvanek (psg+@pitt.edu)

------------------------------

Crossposted-To: comp.windows.x,comp.windows.x.i386unix,comp.windows.x.motif,gnu.misc.discuss,comp.sources.d
From: cflatter@laphroaig.nrao.edu (Chris Flatters)
Subject: Re: Don't use Motif for free sw: it now requires runtime royalties!
Date: 19 Nov 1993 18:58:51 GMT

In article <PRESTAT.93Nov18153836@uicsl.csl.uiuc.edu> prestat@uicsl.csl.uiuc.edu (Scott Preece) writes:
   In article <WARSAW.93Nov18141444@anthem.nlm.nih.gov> warsaw@nlm.nih.gov (Barry A. Warsaw) writes:

   |   I would sincerely hope that COSE did *not* adopt OSF's MotifAPI
   |   because this would be an incredibly Bad Thing.  If you want to ship
   |   COSE compliant software, free or not, that's fine.  Make it comply
   |   with the MotifLAF specification and protocols.  But I would be very
   |   upset if to do this I had to somehow link my application with a
   |   specific vendor's API written in C.
   ---

   COSE does specify the Motif API.  On the other hand, though, there's
   nothing to stop someone else from implementing that API, so it's not
   bound to OSF except to the extent that OSF has the only implementation
   of the API today and the vendors, being cost-sensitive, are satisfied to
   buy that implementation rather than building their own.

The principle effect of specifying OSF/Motif as part of the CDE is
that libXm is guaranteed to be available on any machine running the
CDE.  Another way to look at this is that if you have a license for
the CDE you automatically have a license for the OSF/Motif library.
[Aside: the CDE functional specification can be interpreted as
requiring the OSF/Motif widget library but not the UIL/MRM support]

        Chris Flatters
        cflatter@nrao.edu


------------------------------

From: bap@gull.siemens.com (Barak Pearlmutter)
Subject: DECnet for linux for money!!!
Reply-To: Barak Pearlmutter <bap@learning.scr.siemens.com>
Date: Fri, 19 Nov 1993 06:12:40 GMT

This might be the oddest networking question to be posted to this
forum in some time.

I am making this post for a friend.  A friend responsible for a very
large very heterogenious network within a very very large company, and
who is interested in using PCs running linux as X terminals, and also
as workstations.

So far, that might not seem very odd.

What is odd?  Their X terminals must speak both TCP/IP and DECnet!!!

The *constructive* questions that come to mind are thus:

 - Has anyone implemented a DECnet transport layer in linux?

 - If not, is there anyone out there with both the competence and the
   desire to do so?

 - Is there any simpler technical solution?  Eg some sort of
   user-level linux process that would deal with a raw or promiscuous
   ethernet, do faux DECnet, and forward stuff to a local X server
   socket?  (A forwarding process running on a VMS Alpha with both
   DECnet and TCP/IP would obviously work, and would be trivial to
   write.  But it would impact performance and reliability, and would
   drive up costs as well.  Also, DECnet is thought more robust than
   TCP/IP.  So maybe flocks of X Terminals could be on private chunks
   of cable with their Alpha, which would have two ethernet
   interfaces, the other on the outside world.  But that is starting
   to get pretty Rube Goldberg and expensive.)

Appropriate renumeration would be arranged.  But don't worry, the very
very large company is not in the computer industry, and any code would
be publicly released under the GPL, whether legally required or not.

Please send replies to me, bap@learning.siemens.com, and I will
forward them along.

                         IMPORTANT DISCLAIMER

This really is for a friend.  The very very large company isn't
Siemens.  My role here is purely posting something to the net for a
friend, and forwarding replies.  Do not think that Siemens has
anything whatsoever to do with this, because it doesn't.

------------------------------

Crossposted-To: comp.windows.x,comp.windows.x.i386unix,comp.windows.x.motif,gnu.misc.discuss,comp.sources.d
From: pcg@aber.ac.uk (Piercarlo Grandi)
Subject: Re: Don't use Motif for free sw: it now requires runtime royalties!
Reply-To: pcg@aber.ac.uk (Piercarlo Grandi)
Date: Fri, 19 Nov 1993 19:19:35 GMT

>>> On Fri, 19 Nov 1993 16:03:43 GMT, pcg@aber.ac.uk (Piercarlo Grandi) said:

>>> On Thu, 18 Nov 1993 21:56:50 GMT, pcg@aber.ac.uk (Piercarlo Grandi)
>>> said:

pcg> What I understand is that up until 1.1.x the OSF implementation of
pcg> Motif did not require runtime royalties; [ ... ] since 1.2.x a
pcg> royalty is due for each copy of a program containing OSF Motif
pcg> object code; static linking no longer exempts from the royalty.

Piercarlo> As of 1.2.x statically or dynamically linked binaries using
Piercarlo> the OSF/Motif libraries involve the payment of a royalty to
Piercarlo> OSF, in all cases, without exception.

Piercarlo> There are two ways to pay such royalty: the end user pays it
Piercarlo> by purchasing his/her own copy of the OSF/Motif runtime
Piercarlo> package, or the developer distributing the binary pays it for
Piercarlo> each copy included in the binaries distributed.

Just to make this subtle point absolutely clear: OSF does not require
the repeated payment of the runtime library feee: if it is _proven_ that
the end user has already paid the royalty for a copy of the OSF Motif
runtime library, either standalone or not, the supplier of the software
need not pay the royalty again.

Thus there are really, in theory, three cases:

1) the end user obtains a first binary containing the OSF Motif library
   version 1.2 or later, and then the developer has to pay a royalty on
   the copy of the OSF Motif runtime library.

2) the end user obtains any further binaries containing the OSF Motif
   library version 1.2 or later, and then the developer need not pay
   the runtime library again.

3) the end user buys a runtime license for the target machine, either by
   buying an OS with which it is bundled, or by buying a separate OSF
   Motif runtime product.

Note that in cases 2) and 3) the developer must be able to _prove_ that
the the royalty on a copy of the runtime library, either standalone or
incorporated in another binary, has already been paid, either by the end
user, or by another developer.

There is a fourth important case, and it is for developers that have an
educational institution licence from OSF like NCSA/UIUC; in this case
the developer need not pay any royalty for binaries distributed, even if
the end user hasn't got a royalty-paid copy of the libraries already.

  I don't know whether having a copy of the libraries incorporated in a
  binary released by an educational licensee confers the end user's
  machine a (free) license to those libraries (most unlikely), or if
  receiving a further binary from a non educational licensee will
  require the payment of the royalty. If getting a binary from an
  educational licensee confers a valid, free license to the OSF Motif
  libraries for a given machine, one could always avoid paying any
  royalty by first installating a Mosaic binary :-).

In practice any free sw developed by anybody who is not an educational
licensee of OSF, and using libraries version 1.2 or later, cannot be
distributed in binary form without formalities, because the distributor
cannot know beforehand whether the recipient already has a royalty paid
copy of the OSF Motif libraries or not.

The distributor (if they are not educational license holders, and are
using release 1.2 or later of the libraries) must either pay a royalty
(a few dozen dollars) on each copy they give away, just to make sure
(and they must *count* such copies, unless they purchase a flat-fee
license, which I understand to be available for only a few million
dollars), or request and obtain proof that the royalty has already been
paid for the given machine by the recipient, machine by machine; this
applies whether the binary is statically or dynamically linked.

  As the reader can imagine no developer of free sw will ever bother
  relasing a binary for each copy of which it must either pay a royalty
  or obtain proof that the royalty has already been paid, for each copy
  of the software that is every made. Commercial developers will just
  pay the royalty on every copy they sell, just in case, as its cost is
  probably lower than checking every time if it has already been paid.

I seem to understand that the essential requirement is that _at least_
one royalty be paid, by the developer or the end user, for every machine
with one or more copies of OSF Motif libraries version 1.2 or greater,
whether standalone or incorporated in an application, whether
dynamically or statically linked.

Runtime library royalties -- gosh!

------------------------------

From: sabot@stna.dgac.fr (Antoine Sabot-Durand SYSECA AG06A)
Subject: Motif binaries and Linux
Date: 17 Nov 93 12:58:13 GMT

Hi !

I have a Motif package for ESIX (a commercial Unix) and I would like to use it
with Linux and XFree86 2.0. I put it on my system, but when I launch mwm I get a
message like this one :

Use ELF translator library /usr/lib/libc.so.1
unable to solve symbol XmMessageBoxWidgetrClass
unable to solve symbol XmMessageBoxWidgetrClass

It is obvious that my binaries cannot access LibXm.a and the others Motif
Libraries. Is there any solution for my problem ? If there isn't how can I reach
OSF rapidly to get a linux version of Motif ?

Thanks.....

------------------------------

From: jsmith@nova.umd.edu (James H. Smith)
Subject: ObjectBuilder/OI discussion group?
Date: 19 Nov 1993 14:39:42 -0500

I'm loading Linux on my home PC for the specific purpose of learning to
develop software with the ObjectBuilder/OI product from ParcPlace Systems
(I received the linux version about 4 or 5 months ago and I am just know
getting around to installing Linux and Objectbuilder/OI).  Does anyone
know of a mailing list or discussion group anywhere for Objectbuilder/OI
developers? Or is this the place?

The release notes for Objectbuilder/OI reference a mailing list that can
be joined by sending email to "oi-users-request@bbn.com".  However my
email gets returned from bbn.com with an unknown user error message! :-(

Does anyone have any experience with this product?  Is it good or bad?  
Am I wasting my time?

Any help for this Linux, and Objectbuilder/OI, newbie would be greatly 
appreciated!

 ________________________________________________________________
|                                                                |
|email: jsmith@nova.umd.edu     mail:   James H. Smith           |
|phone: (301) 345-8488                  9007 Breezewood Ter #304 |
|                                       Greenbelt, MD  20770     |
|________________________________________________________________|



------------------------------

From: bernhard@trick.ani.univie.ac.at (Bernhard Strassl)
Crossposted-To: comp.windows.x,comp.windows.x.i386unix,comp.windows.x.motif,gnu.misc.discuss,comp.sources.d
Subject: Re: Don't use Motif for free sw: it now requires runtime royalties!
Date: 19 Nov 1993 07:13:46 GMT

In article <PCG.93Nov18215650@frontb.aber.ac.uk>, pcg@aber.ac.uk (Piercarlo Grandi) writes:
|> >>> On Thu, 18 Nov 1993 02:47:38 GMT, jbuck@synopsys.com (Joe Buck) said:
|> 
|> [...]
|> In any case OSF Motif is not the right environment for free sw (and
|> cloning it is a rather boring and long task); any of the alternative
|> libraries mentioned in the discussion is free sw itself.
|> [...]

As it seems that Motif will be the dominating GUI on Un*x/X systems in
the near future, I think that the 'boring and long task' is worth to be
done.

In my opinion it is wrong thinking that commercial SW an free SW are
completely independend from each other!! Today everyone talks about
modularity, object orientation and reusability - all these great ideas
would be void for all people involved in commercial _and_ free SW projects
at the same time (and I think there are many of them out there!).

Consider you have written a nice application or some reuseable parts for
commercial purposes (using the evil Motif). Now you want to use it at home on
your Linux system - if everything is different there you can forget this!
You would have to rewrite everything, even without being able to reuse
your programming expierience.

Is that what you want??

I think that cloning Motif makes much more sense than having to rewrite
everything to be useable in both commercial and free environments!

(Thanks to all people out there working on a Motif clone project...!)

-bernhard

===============================================================
The Xm++ / CommonInteract Project
Vienna User Interface Group
Bernhard Strassl              University of Vienna
xmplus@ani.univie.ac.at       Dpt. for Applied Computer Science
                              and Information Systems
===============================================================

DISCLAIMER: Xm++/CI does NOT require Motif, Xm++ applications run
   without changes with the Xaw(3d) widget set (the way I'm using
   them currently on my Linux box at home :-)

------------------------------

Crossposted-To: comp.windows.x,comp.windows.x.i386unix,comp.windows.x.motif,gnu.misc.discuss,comp.sources.d
From: rkl@csc.liv.ac.uk (Richard Lloyd)
Subject: Re: Don't use Motif for free sw: it now requires runtime royalties!
Date: Fri, 19 Nov 1993 13:00:59 GMT

In article <2ci82dINN96b@cbs.ksu.ksu.edu>, strat@cbs.ksu.ksu.edu (Steve Davis) writes:
> I run a static binary of NCSA's Mosaic on suns.
> 
> strat@cbs:~> size `which Mosaic`
> text    data    bss     dec     hex
> 1826816 172032  167280  2166128 210d70

We do the opposite here with our HP-UX 9.01 machines - mosaic 2.0 is linked
with FIFTEEN shared libraries (an all-time record on our system):

         shared library list:
             static    /usr/local/lib/X11/mosaic/libwww.sl
             static    /usr/local/lib/X11/mosaic/libhtmlw.sl
             static    /usr/local/lib/X11/mosaic/libXmx.sl
             dynamic   /usr/lib/Motif1.2/libXm.sl
             dynamic   /usr/lib/X11R4/libXmu.sl
             dynamic   /usr/lib/X11R5/libXt.sl
             dynamic   /usr/lib/X11R5/libX11.sl
             dynamic   /usr/local/lib/X11/mosaic/libnet.sl
             dynamic   /usr/local/lib/X11/mosaic/libdtm.sl
             dynamic   /usr/local/lib/hdf/libnetcdf.sl
             dynamic   /usr/local/lib/hdf/libdf.sl
             static    /usr/local/lib/wais/inv.sl
             static    /usr/local/lib/wais/wais.sl
             dynamic   /usr/local/lib/wais/libftw.sl
             dynamic   /lib/libc.sl

Means the final binary is only 380928 bytes long, but the start-up time is
longer. I'd hate to think what the final binary would be like if we had to
link the whole lot with archive versions of the libraries...

> And this is with a number of optional packages commented out of the
> makefile.

Our HP-UX mosaic has all the stuff in (DTM, HDF and freeWAIS) and you can get it
from our official archive sites listed below as the package
/hpux9/X11R5/Networking/mosaic-2.0.tar.gz.

Archive Librarian,        Anonymous FTP: ftp.csc.liv.ac.uk (138.253.42.172)
Computer Science Dept.,   E-mail: ftp@csc.liv.ac.uk
Liverpool University,     Mail server: mail-server@csc.liv.ac.uk
Merseyside,               [For info, put "help" or "index" in message body]
England,                  Gopher server: gopher.csc.liv.ac.uk (138.253.42.174)
Great Britain.            Official Anonymous FTP mirror sites:
                          Germany: hpux.ask.uni-karlsruhe.de (129.13.200.57)
The archive has support   US:      ftp.cae.wisc.edu (144.92.4.15)
for HP-UX 8.07 and 9.01   France:  hpux.cict.fr (192.70.79.53)  *NEWEST SITE*

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
