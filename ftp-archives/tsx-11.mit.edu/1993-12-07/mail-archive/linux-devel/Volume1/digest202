From:     Digestifier <Linux-Development-Request@senator-bedfellow.mit.edu>
To:       Linux-Development@senator-bedfellow.mit.edu
Reply-To: Linux-Development@senator-bedfellow.mit.edu
Date:     Mon, 1 Nov 93 10:15:14 EST
Subject:  Linux-Development Digest #202

Linux-Development Digest #202, Volume #1          Mon, 1 Nov 93 10:15:14 EST

Contents:
  compiling Linux ALPHApl13o with IN2000 (Jon Luckey)
  Tcl7.0 / Tk3.3 (Robert J. Willard)
  Re: What's wrong with a DOS to Linux disk access? (Otmar Lendl)
  Re: Tcl7.0 / Tk3.3 (Neal Holtz)
  ISDN Driver (with EDSS1 signalling) for Linux? (Juergen Ziegler)
  Re: Tcl7.0 / Tk3.3 (Michael O'Reilly)
  Re: What's wrong with a DOS to Linux disk access? (Steef S.G. de Bruijn)
  Re: Real-time control from Yggdrasil Linux (Ed Carp)
  Re: A free Plan-9, anyone? (Ed Carp)
  Re: A free Plan-9, anyone? (Ed Carp)
  Re: ugly name for core dumps (core.imagename) -> patch for "img.core" (Arlie Davis)
  Re: What's wrong with a DOS to Linux disk access? (Arlie Davis)
  Re: Andrew File System (John F Carr)
  Re: What's wrong with a DOS to Linux disk access? (Ian Wells)
  Re: LXBoot (Marc ter Horst)
  Re: What's wrong with a DOS to Linux disk access? (Dave Truckenmiller)
  Re: Andrew File System (Rik Faith)

----------------------------------------------------------------------------

From: luckey@rtfm.mlb.fl.us (Jon Luckey)
Subject: compiling Linux ALPHApl13o with IN2000
Date: Sun, 31 Oct 1993 22:15:48 GMT

DISCLAIMER: As I have just started playing with Linux myself, don't
expect me to answer questions about this.  I am neither a Linux nor
an IN2000 guru.  I merely tried some things until I found something
that worked for me, and I'm passing along my results.


It seems like Linus has reorganized the directory tree recently
because when I went to fold in the IN2000 source from tsx-11.mit.edu
( from /pub/linux/ALPHA/in2000/in2000.tar.gz)
into the new Linux code from ftp.funet.fi (pub/OS/Linux/PEOPLE/LINUS, I
think), I found I had to make some changes.  Beyond those I had to do
for earlier versions of Linux .99 ALPHA pl 13.

Having just started, I'm not good at making a patch file with diff, but
here are the changes that work for me.

Change linux/config.in so it has a line for IN2000 in the scsi driver
section

Then in linux/drivers/scsi, you'll need to add lines to hosts.c and
Makefile to use in2000.c and in2000.h.  The diff file from in2000.tar
will provide guidence for doing that.  Don't expect to use patch.

Then in in2000.c, you'll need to change the "#include ../blk.h" to
"#include ../block/blk.h"

Then replace the reset routine with the following version

/*-------------------------------------------------------*/

static inline void delay( unsigned how_long )
{
     unsigned long time = jiffies + how_long;

     while (jiffies < time);
}

int in2000_reset(Scsi_Cmnd * SCpnt)
{
    DEB(printk("in2000_reset called\n"));
    /*
     * Note: this is finished off by an incoming interrupt
     */
    outb(SCSIST,INSTAT);
    inb(INDATA);
    outb(OWNID,INSTAT);
    outb(0x7,INDATA);
    outb(COMMAND,INSTAT);
    outb(0,INDATA);

    delay(2);

    if(SCpnt) SCpnt->flags |= NEEDS_JUMPSTART;
    return 0;
}
/* ----------------------------------- */

The reset routine now takes a argument.  So you'll have to change that
in in2000.h too.

The new stuff is the if statement and the delay.  The delay seems to
be needed to allow the interrupt to finish off the reset.  I tried
a few things, including a waiting on flag that the interrupt would
set when it finished.  That didn't work, this did.  Why?  ask a guru.
It doesn't feel like a clean solution, but it works for me.

------------------------------

From: rjw9917@bcstec.ca.boeing.com (Robert J. Willard)
Subject: Tcl7.0 / Tk3.3
Date: Sun, 31 Oct 1993 19:20:13 GMT

Is anyone currently porting Tcl7.0 and Tk3.3 to Linux?


-- 
Bob Willard
Boeing Commercial Airplanes
rjw9917@bcsaic.boeing.com

------------------------------

From: lendl@cosy.sbg.ac.at (Otmar Lendl)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: Mon, 1 Nov 1993 00:42:54 GMT

In article <13374@dirac.physics.purdue.edu>,
Bill C. Riemers <bcr@bohr.physics.purdue.edu> wrote:
>Admittedly someone could comeup with an ALPHA version of a driver
>for minix from dos in about 1 or 2 days, but how long does it take
>to get something stable enough for it not to be too risky for
>both your dos and linux file systems?
>
I think that the original poster would be quite satisfied if the
tool for accessing the linux filessystem from dos is read-only.
The motive was to get files from the linux partition while running
dos. If you have to copy files from dos to the ext2 disk to be
used under linux, you could as well copy them while you're running
linux.

Besides that, would you _ever_ let a dos-program mess with your linux-
filesystem ? A read-only version is save in this respect, for it's
quite hard to screw up a filesystem with read-accesses only :)

just my 0.02 $.

otmar

-- 
| Otmar Lendl (lendl@cosy.sbg.ac.at)  |  University of Salzburg  /  Austria  |
| http://www.cosy.sbg.ac.at/people/lendl.html | Don't point the finger at me |
| I am only a rat in a maze like you. And only the dead go free. - R. Waters |

------------------------------

From: nholtz@superior.carleton.ca (Neal Holtz)
Subject: Re: Tcl7.0 / Tk3.3
Date: Mon, 1 Nov 1993 02:03:12 GMT

I've installed them -- not much of a porting job really.
More or less just typed 'make'.  I can provide more info,
if you want it, late tomorrow or Tuesday (nov 2).


------------------------------

From: juergen@aldebaran.sub.de (Juergen Ziegler)
Subject: ISDN Driver (with EDSS1 signalling) for Linux?
Date: Mon, 1 Nov 1993 01:40:06 GMT

Is there anybody developing a Linux ISDN driver for passive ISDN cards, 
that uses the new European EDSS1 (aka EURO ISDN) signalling protocol?

Please post and e-mail.

Thanks.

Juergen

|                                                                            |
| Juergen Ziegler * Obervogt-Haefelinstr. 48 * 77815 Buehl (Baden) * Germany |
|  juergen@aldebaran.sub.de * juergen@jojo.sub.de * Phone: N/A * Fax:  soon  |
|                                                                            |


------------------------------

From: oreillym@tartarus.uwa.edu.au (Michael O'Reilly)
Crossposted-To: comp.os.linux.misc
Subject: Re: Tcl7.0 / Tk3.3
Date: 1 Nov 1993 06:10:23 GMT

Robert J. Willard (rjw9917@bcstec.ca.boeing.com) wrote:
: Is anyone currently porting Tcl7.0 and Tk3.3 to Linux?

WHat port? just tgrab sources, and compile...

followups to comp.os.linux.misc
: -- 
: Bob Willard
: Boeing Commercial Airplanes
: rjw9917@bcsaic.boeing.com

------------------------------

From: debruijn@cs.utwente.nl (Steef S.G. de Bruijn)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: Mon, 1 Nov 1993 08:35:04 GMT

Doesn't ANYBODY see a BIG security hole here? If such a DOS
driver existed, I would make SURE it was not present at my box.
If I make directories totally unreadable for normal Linux users,
I would like to keep it that way, also when people were Dozzing
my machine...

regards,
Steef
--
S.G. de Bruijn
Twente University of Technoloy, Dept. of Computer Science 
E-Mail: debruijn@cs.utwente.nl
                                  #####
                                 /     \
                                <  o o  >
                                 |  C  |
Stevie "SpikerJack" de Bruijn  /--\___/--\
                              /     |o    \
                             / /|   |o  |\ \
                            / / |   |o  | \ \
                            --  |   |o  |  --
                                ---------

Planning is a difficult thing... Using Linux is not!


------------------------------

From: erc@khijol.UUCP (Ed Carp)
Subject: Re: Real-time control from Yggdrasil Linux
Date: Mon, 1 Nov 1993 09:08:11 GMT

Susan Fichera (sfl@muttley.ucsd.edu) wrote:
: Greetings - I am contemplating the purchase of the Yggdrasil
: CDROM for a 386 machine. I want to use this system to control
: a drawing machine. In order to have realtime response, I'd like
: to disable kernel time-keeping mechanisms that would preempt my
: control process. Has anyone done this under Linux?
: If so, what is involved, and how far-reaching are the consequences?

Why not just boot in single-user mode and kill the processes you don't
need?  Wouldn't that be good enough?
-- 
Ed Carp, N7EKG                  erc@apple.com                   510/659-9560
                   an38299@anon.penet.fi, anon-1157@twwells.com
If you want magic, let go of your armor.  Magic is so much stronger than
steel!        -- Richard Bach, "The Bridge Across Forever"

------------------------------

From: erc@khijol.UUCP (Ed Carp)
Subject: Re: A free Plan-9, anyone?
Date: Mon, 1 Nov 1993 09:12:46 GMT

Michael K. Johnson (johnsonm@calypso.oit.unc.edu) wrote:

: Unfortunately, I can't find my documentation on VSTa at the moment,
: and the only thing I can find is nick@nsis.cl.nec.co.jp (Gavin Thomas
: Nicol) offering to pass your name along to the author of VSTa if you
: want to volunteer.

...from the README:

This is VSTA, the Valencia Simple TAsker.

Well, with VM, SMP, processes, threads, and messaging it isn't as
simple as I envisioned it when I made up the name, but there you
are.

This software was written from scratch entirely by:

        Andrew Valencia
        815 Maple St.
        San Mateo, CA  94402
        (415)343-6758
        jtk@netcom.com

and is copyright 1993 by Andrew Valencia.  Use of this software
is permitted under the terms listed in the file "license", which
should accompany this file at the top level of the software
distribution.  If it is missing for any reason, you may contact
Andrew Valencia directly to receive a copy.

There are a couple source files which are not original; they are
identified in their headers, and are used and available under the
terms expressed by the original author.  From memory, they are:

        The i386 disassembler
        The random number generator
        The scanf() family of functions
        Several commands/utilities which have been ported:
                GNU C, gas, ld, rc, cat, Microemacs

This list is not necessarily complete; refer to the actual source
files.

In addition to the requirements spelled out in the license, I also
specifically require that any distribution of this software include this
file, and the "license" file.  I have not placed those noisy copyright
headers into each and every file, so I am counting on the Berne (sp?)
Convention and the presence of the "readme" and "license" files.
-- 
Ed Carp, N7EKG                  erc@apple.com                   510/659-9560
                   an38299@anon.penet.fi, anon-1157@twwells.com
If you want magic, let go of your armor.  Magic is so much stronger than
steel!        -- Richard Bach, "The Bridge Across Forever"

------------------------------

From: erc@khijol.UUCP (Ed Carp)
Subject: Re: A free Plan-9, anyone?
Date: Mon, 1 Nov 1993 09:27:36 GMT

Ed Carp (erc@khijol.UUCP) wrote:
: Michael K. Johnson (johnsonm@calypso.oit.unc.edu) wrote:

: : Unfortunately, I can't find my documentation on VSTa at the moment,
: : and the only thing I can find is nick@nsis.cl.nec.co.jp (Gavin Thomas
: : Nicol) offering to pass your name along to the author of VSTa if you
: : want to volunteer.

: ...from the README:

: This is VSTA, the Valencia Simple TAsker.

I forgot to mention that it's available from ftp.cisco.com:/vandys/vsta.
-- 
Ed Carp, N7EKG                  erc@apple.com                   510/659-9560
                   an38299@anon.penet.fi, anon-1157@twwells.com
If you want magic, let go of your armor.  Magic is so much stronger than
steel!        -- Richard Bach, "The Bridge Across Forever"

------------------------------

From: Arlie Davis <aldavi00@mik.uky.edu>
Subject: Re: ugly name for core dumps (core.imagename) -> patch for "img.core"
Date: 1 Nov 1993 10:43:26 GMT
Reply-To: Arlie Davis <aldavi00@mik.uky.edu>

My suggestion is a single syscall to set the core filename for the current  
process.  The first init process would call this "setcorename()" with  
"core" as the argument.  A simple utility could be written which would  
either set the core name to some explicit name or figure it out from  
arguments.  (For example: "/bin/corename foo -bar" would execute foo, and  
foo would dump core with foo.core or core.foo, whatever "corename" decided  
to call it.  Or, "/bin/corename -c /dev/null foo -bar" would run foo, and  
would ignore any core dumps.)  Shells could be modified to make the  
syscall directly.

A single syscall, and it would satisfy nearly everyone.

--
-- Arlie Davis
-- <arlie@madonna.mik.uky.edu>

------------------------------

From: Arlie Davis <aldavi00@mik.uky.edu>
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: 1 Nov 1993 10:48:32 GMT
Reply-To: Arlie Davis <aldavi00@mik.uky.edu>

Christian Holtje writes
>       I'm not very good at programming, but I'd be willing to try  
helping:
> I think some one should write a program in DOS to access the linux  
partitions.

>       It makes sense. Not every one who uses DOS and OS/2 are wizzes at
> setting computers up. Letting them get to DOS partitions from Linux was
> a natural move, especially to help them move (sort of a one-way trap!).
> However, There will be many users who _won't_ move completely over to
> linux. It is important that we help these people make use of Linux to 
> the max. SO lets write a simple program to let them read the linux
> partition. It can't be too hard, it doesn't have to be super hi-tech.

I completely agree.  It would greatly simplify the installation process.   
After the initial (sometimes painful) FDISK, which is necessary, a MS-DOS  
program could initialize (mk[e2]fs) the root-to-be filesystem, and write  
the base installation system, choosing installation packages, etc.  Then,  
a *simple* boot-loader (again, from DOS), writes the boot-sector, or else  
the installation package runs something like BOOTLIN, and brings up the  
system under Linux.  Under Linux, you write out the new bootsector with  
LILO, and everything's a go.

------------------------------

From: jfc@athena.mit.edu (John F Carr)
Subject: Re: Andrew File System
Date: 1 Nov 1993 11:37:01 GMT

In article <peterd.752072677@vogan.dev.cdx.mot.com>
        peterd@vogan.dev.cdx.mot.com (Peter Desnoyers) writes:

>It would be really neat if someone wrote a free AFS implementation.
>However, such an effort might be doomed by:
>
>- bad specs. If Transarc has the only working implementation, and they
>  wrote the specs after the fact, then no one's ever debugged the
>  specs by writing an implementation from them.

The specs are neither accurate nor complete, but they do document
substantial parts of a protocol which is quite similar to the real
RX protocol.


-- 
    John Carr (jfc@mit.edu)

------------------------------

From: ijw@bob.cambustion.co.uk (Ian Wells)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: 01 Nov 1993 12:32:31 GMT

In article <2as9v4$nom@amhux3.amherst.edu> jedubins@unix.amherst.edu
(Just a fellow traveller...) writes:
   Explicitly what you would do is run a menu driven program under

Er, suit yourself.  I would prefer a command-line based one, or
preferably something along the lines of PCNFS, which creates an
apparently DOS file system on an unused drive letter.  Still, each to
his own, I suppose, and this is secondary to actually reading file
systems, anyway.

   DOS, maybe called 'LTOOLS.EXE'.  You would get into this program
   and copy stuff from the Linux partition in a menu driven manner
   like you might copy files in the DOS shell.

People in this thread just seem to be missing the other person's point
of view.  It _would_ be nice to be able to access Linux files from
DOS, and for reasons other than just working with Quark Express.  For
instance, it's possible that someone might be writing a Word document
and decide that they'd like to refer to the manual page.  Currently,
this requires that they kill Word and Windows, reboot into Linux, copy
across the file, reboot, load Windows and Word, and read the manpage
before carrying on (by which time they've probably forgotten what they
were doing).  

And as for the idea of having home partitions on DOS, yuck!  I don't
think I could live with weirdly restricted filenames for all of my
commonly used files anymore, thakyou...

   I think it would be slick to implement this so that the
   configuration information for reading each type of Linux Filesystem
   existed in separate configuration files, like EXT2FS.FMT,
   XIAFS.FMT.  Although, of course in the first release you might only
   have one FMT file that is usable.

This is a little far-fetched.  Basically, filesystems can be
(practically) infinitely variable.  Unless you write what's basically
a programming language (ie something Turing powerful), you're never
going to be able to represent all filesystems like this.

Better would be trying to write a DOS VFS base to take the place of
the one that Linux uses.  I haven't a clue as to whether this is
possible, and I nearly guarantee you'd need to use a compiler which
used 386 protected mode by the time you'd finished to get yourself a
decent memory model (not that this is a problem - if you can run
Linux, you can run a 386-specific DOS program), but it's certainly
more likely to work.

(By the way, I'm relatively unbiased in this argument.  Personally, I
use Linux only, so I only read DOS files when people hand me floppies,
and I don't actually own a copy of MSDOS.)

Ian.

------------------------------

From: mht@nuclint.nl (Marc ter Horst)
Subject: Re: LXBoot
Date: Mon, 1 Nov 1993 14:09:57 GMT

In article <IPMTP.1006@jh4tjwgw.jh4tjw.prug.or.jp> ogochan@jh4tjwgw.jh4tjw.prug.or.jp (Masami Ogoshi) writes:
>From: ogochan@jh4tjwgw.jh4tjw.prug.or.jp (Masami Ogoshi)
>Subject: LXBoot
>Date: 28 Oct 93 09:10:27 GMT


>  We made new version of LXBoot (which is boot loader for Linux).

>It is,

>(1) fs name base seeking
>      LXBoot understands Linux's file system. Then LXBoot seeks kernel by 
>    fs name. And you can select kernel before booting.
>(2) easy to install
>      LXBoot has a installer. It works automatic.
>-- 
>ogochan@jh4tjw.prug.or.jp
>Masami Ogoshi
>109 Okudani-cho Matsue city Shimane pref 690 JAPAN
So where do we find it :-)
Marc

------------------------------

From: trucken@hecto.cs.umn.edu (Dave Truckenmiller)
Subject: Re: What's wrong with a DOS to Linux disk access?
Date: Mon, 1 Nov 1993 14:27:50 GMT

>>>Yes.  I created a text file in emacs on the Linux disk, and now, when
>>>I'm running Quark under Windows, I want to import it.  How do I get it?
>>
>>Yes, this is EASY.  Mount your DOS partition in Linux.

>It's hard to believe so many people responding to this thread can be
>this thick, and even after it being re-explained.

>What he's asking is how to access the Linux filesystem FROM DOS!

Sorry, I was misunderstood.  I was merely suggesting that the problem
can be solved by thinking about what it is you want to do before you
start writing DOS device drivers.  There are a lot of Linux files that
will probably never be shared with DOS, (/etc/passwd is one example).
There are also a group of files that you are likely to share between
Linux and DOS, (Quark files, FrameMaker files, Wordperfect files, etc).
By thinking about what you might use these files for, you can create
them in the DOS mounted directory if it makes sense to do so.  Once
you've done that then the files are available in Linux, and also in DOS
without having to run some program to retrieve them, or reboot to start
Linux just to transfer them.

The little ':-)' I included after the line about making the DOS filesystem
your home directory was a signal that it was a JOKE.

Linux has a wonderful command called 'ln -s'.  With it, you can create
symbolic links to files that are elsewhere.  So, you could create a link
such that your Wordperfect file under Linux had the name: 
'/home/dave/ThisIsMyFirst.Wordperfect%file,ever' and link this to the
file called '/DOS/wp5.0/dave/resume.001'  (Note: filenames are meant to
be funny.)

Now, when in Linux, you edit the file in your home directory, er, you
probably are transferring it to a machine that might have wp for
unix?  And when in DOS, you access the file in C:\WP5.0\DAVE\RESUME.001
Everything is automatic, you just need to reboot.

Now I realize that there will be times when you might forget to properly
place a file or two, but it seems that re-booting the machine in this
infrequent case, will be faster and more robust than mucking around in
filesystem code.

Finally, I only offer this idea for those that might not have seen
how to do it.  It wasn't all that obvious to me, until I thought about
it for a while.  I also promise not to make anymore comments about
this idea to this group.  And, just as a parting shot, since I can't
resist, (and since I've promised never to respond), shouldn't development
of DOS programs be moved to another group?  Like comp.os.dos???

-Dave 

--
---
Dave Truckenmiller   (trucken@cs.umn.edu)     [   ASCII picture   ]
Linux, Linux, Linux, Linux, Linux, Linux.     [ under development ]

------------------------------

From: faith@cs.unc.edu (Rik Faith)
Subject: Re: Andrew File System
Date: 1 Nov 1993 14:44:47 GMT

In article <2aso95$35@inxs.concert.net>, ctwilson@rock.concert.net (Charles T Wilson -- Personal Account) writes:
|> >> AFS sucks anyways.  Use NFS :-)
|> 
|> Personal experience?

The people who wrote this where at MIT.  They have AFS.  I'm at UNC.  We
have AFS.  AFS sucks.  This opinion is based on extensive personal use.

|> >> a) AFS filesystems are not Unix filesystems
|> 
|> true enough....the functionality is quite similar, however.

Similar, yet broken.  AFS doesn't implement things that regular UNIX users
expect, like special files (i.e., fifo's, unix domain pipes and sockets)
and hard links between directories on the same volume.  AFS completely
breaks things like cron.

Running AFS through a translator is a total disaster (yes, I have personal
experience, since my SPARC workstation hasn't had a local disk for a few
months) -- files are not properly updated or are damaged.  I *NEVER* read
mail through an AFS translator.

TransArc doesn't seem to care about fixing the translator.  They don't care
about building AFS kernels for (otherwise supported) front ends to
massively parallel computers.

The only people that appear to like AFS are system management folks, since
AFS makes day-to-day backup and maintenance chores very easy.  In general
(perhaps you are an exception?) users developing non-system code HATE AFS.

-- 
Rik Faith: faith@cs.unc.edu
"They that can give up essential liberty to obtain a little temporary
safety deserve neither liberty nor safety."  -  Benjamin Franklin

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
