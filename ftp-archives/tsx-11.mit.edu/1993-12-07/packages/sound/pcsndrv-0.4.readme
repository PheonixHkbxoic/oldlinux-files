Alternate Sound-driver for Linux. Version 0.4
=============================================
Copyright (C) 1993  Michael Beck

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


Introduction
============
 
The PC-Speaker part of this device-driver based on auplay-0.2 by Rick Miller
and the /dev/audio implementation by Dirk Verworner. The /dev/pcmixer part
based on the mixer-implementation of the 'real' sounddriver distributed by
Hannu Savolainen.

This version supports the following devices :

/dev/pcsp	- the raw data device
/dev/pcaudio	- the SUN-audio device
/dev/pcmixer	- the mixer-device


NEW:
====

It's now louder thru PC-Speaker, so I have integrate volume-control for it.
Volume-Control is given thru /dev/pcmixer (which is compatible to /dev/mixer).

You can 'assign' a output-device to /dev/pcsp. That's why I call it
now the 'Alternative Sound-driver'. Supported output-devices:

Stereo-on-One	(designed by Mark J. Cox), this is autodetect during
		kernel-startup and selected by default	
PC-Speaker	is selected if no Stereo-on-One is found 
Mono DAC 	on one lp-port
Stereo DAC	on two lp-ports

/dev/pcsp support the /dev/dsp ioctl calls (set speed, stereo, samplesize,
getblocksize). You can vary the sample speed, the driver converts it
to its (hardware-fixed) speed and return the right value for the other,
so you can use the .MOD-player (from snd-driv-1.99.7) to play AMIGA .MOD
files by using the -o option (or install a symbolic link).
For instance if PC-Speaker is your output-device

  str32 -o /dev/pcsp popcorn.mod

will play the file thru PC-Speaker. Because the real speed is now fixed to
18356 Hz for PC-Speaker, you should set the highest samplespeed which is
possible on your machine (or set the #define in str.h), test it.
DACs support real samplerate from 4000 Hz up to ???? (Someone has a Pentium ?).
Please get the str-program from the sound-package distributed by Hannu
Savolainen, in the snd-driv-?.?.tar.z archive.
I enclose vplay, a utility to play .VOC, .WAV and raw data files thru /dev/dsp.
Read the Readme in pcsnd-kit directory for features.

If you have a Stereo-on-One or two DACs

  str32 -o /dev/pcsp -S popcorn.mod

will play the file in Stereo thru the printer-port!


The bad news
============

It's more for fun and may or may not satisfy your opinion of a 'SOUND DRIVER'.
It plays samples and AMIGA .MOD-files ok on my machine (if no diskaccess
is done). The quality of playing heavyly depends on your PC-Speaker (and
maybe on the electronic noise produced by your computer equipment). The aim
was to produce something of 'standard audio device', don't expect too much.
Slow machines seems to produce more noise.
Stereo-on-One and DAC's havn't problems with mices, but during diskaccess
they "slow down" (sigh). To solve this problem another way of timer-interrupt
delivery is needed (and a lot of kernel-patches, perhaps the next release).
There is no communications between this driver and other drivers using lp?.
Declaring a printer as a DAC should produce nothing, but I'm not sure about
all parallel devices. So caryfully configure the usage of your lp-ports.
WARNING: This driver do some really bad things (for *nix - systems, DOS-
programs do that during the initialisation :-). It reprogram the timer-
interupt which is the heard of multitasking on every (real) system.
I never had a crash and never heard about one (caused by this driver),
but there is NO WARRANTY! Considerade this version as first BETA!
Ok, let's follow the good things.


Changes from 0.3
================

- the (real) samplerate for PC-Speaker is now 18356; I only eleminate
  the twofold oversampling which was stupid 
- Volume-Control for PC-Speaker: Using another way of playing thru
  PC-Speaker, samples are much louder (like players under DOS), so this
  feature was usefull (for me)
- dev/pcmixer support: Only the Master-Volume is supported, nevertheless
  it works in the suspected manner for Stereo-devices, Mono-devices use
  the left volume, PC-Speaker use the mean of left and right  
- vplay now have the option -o device, and some bugfix
- pcsel bugfix, and support for volume-control if /dev/pcmixer is disabled
  (in that case you can only change the volume of PC-Speaker)

Changes from 0.2a
=================

- Support Mark J. Cox Stereo-on-One DAC which plays Stereo, use only one
  lp-port, can be autodetect and produce better quality than my SB 1.0
  (really if no heavy diskacces :-( 
- Support simple DACs on one or two lp-ports (this allows Stereo)
- Support version 2 /dev/dsp ioctl's (use #ifdef SOUND_VERSION to determine
  between the version, this is choosen for compability with version 2 of
  the sounddriver, look in the vplay-code for a (bad) example) or use
  the new format in the hope it will not be changed in the future
- the pcsp.h file is now sys/pcsp.h like soundcard.h
- Restoring the timer 2 mode to square-wave generator after device release
  (this is needed for dosemu)
- interrupt starts after first data was written / stopped after a 
  SNDCTL_DSP_RESET
- Some speed enhancement by optimizing the interrupt-routine (after I
  look on the assembler-output I think it would be hard to get significant
  more). The next I've got with a simple measurement: a counter increases
  from 0 for 1 sec. 
  Here the results for my 486/33 playing thru PC-Speaker:
  
  no loads, the counter   enterpri.raw played       enterpri.raw played
  process only            by V 0.2a in background   by V 0.3  by V 0.4

  4122821                 1719547                   2079547   2159821
  100 %                    41.7 %                    50.4 %    52.4 %

  same test for 486/12 ("TURBO" pressed)

  1933464                                            445269
  100 %                                              23.0 %

  first test with Stereo-on-One in Mono-mode:

  4122821                                           3232068  
  100 %                                              78.4 %

  It runs better on bigger machines :-(. Sorry, but it'a a cyclehog.


Installation
============

Install the archive and read linux/kernel/chr_drv/pcsp/README.
To install the utilities, run make in the pcsnd-kit subdirectory.


Utilities
=========

This package should work with most utilities written for Hannu Savolainen's
sounddriver using /dev/dsp or /dev/audio (tested with str, mixer, xmix,
xvmixer, someone wrote me it works with xboing, a game which support
-sound option). Simply get them!
If your output-device is the PC-Speaker, you should set the default values
to mono, 8 bit and 18356 Hz for best performance (the first two cannot be
changed, but /dev/pcsp supports samplespeed from 4000 to 22222 Hz, however
this is converted to 18356). DACs may be set to Stereo and they support real
samplerates (more than 22222, but this is only usable on a 'really hot'
machine, so I don't change the limit).

The pcsel program which allows configuring the /dev/pcsp by setting
output-device, Stereo, samplespeed, volume and lp-port.

The vplay-program to play CREATIVE LABS Voice files, Microsoft WAVE files
and raw data files is included. 
Try:
    cat enterpri.raw >/dev/null  (load it in the cache for best performance !!!)
    vplay -s 9321 enterpri.raw

to check the driver (output should be differs from white noise :-).
Read the README in the pcsnd-kit directory.

Using the driver
================

All programs using this driver should include <sys/pcsp.h>. If you
don't have the (SB/PAS) sound-driver the file <sys/soundcard.h> is
created by the pcspinstall script and consists of the line:

#include <sys/pcsp.h>

Use this include if you want write programs which work with both drivers
(because using the same ioctl, your program will run on "right" soundcards
if you use /dev/dsp and install the symbolic links, this method is prefered).

The devices are opened exclusively. When another program tries to open the
driver returns EBUSY. Not more than one of the devices can be open at the
same time (except /dev/pcmixer, you can only open one mixer, because I
could not imagine about using more, write me if you need more mixers).
Note that if your output-device is PC-Speaker :

1.) While a program have opened /dev/pc*, your console cannot 'beep'
    (the 'ressource' is busy).
2.) Some programs running as root may stop the output if they reprogram
    timer 2 (dosemu with speaker = native currently don't and other I don't
    know [auplay of course] :-).


Audio output
============

The /dev/pcsp can be used in digitized voice applications. This device
can be accessed with programs like cat or dd. The default speed is
8000 Hz and can be changed by SNDCTL_DSP_SPEED ioctl() -call.
For example: 

  samplespeed = 11025;
  ioctl(fd, SNDCTL_DSP_SPEED, &samplespeed);

setting the sample speed to 11025 Hz

The device driver has 2 buffers for audio output. When a program makes
a write to the device, all bytes will be copied to a buffer and 
played in the timer-interrupt. While the first buffer is being played,
the process may write to the other buffers. If no buffers are free,
process has to wait.

For optimal performance, you should write full blocks to the device. 
Writing too short blocks can result in a silence gap. Too long writes will
cause unnecessary process switches.
The size of a block can be obtained with a SNDCTL_DSP_GETBLKSIZE.
For example: 
  ioctl(fd, SNDCTL_DSP_GETBLKSIZE, &blksize).

(if you have the "real" /dev/dsp, it's the same procedure)


The HARDWARE
============

Please read Mark J. Cox' file HARDWARE.DOC which is included with his kindly
permissions if you want to know how simple you can built DACs and the famous
Stereo-on-One device! (Oh, it's a DOS-file for those who have problems
looking at it with vi, I simple start DosEmu and use DOS-vi ;-)


TODO
====

Grab a lp-port if it's used by a DAC, so don't have trouble with other
devices.

Is someone interested in playing thru other devices on lp-ports or thru
Soundcards which doesn't support DMA-transfer (someone wrote me, he has
a SoundBlaster-Clone which doesn't have DMA-transfer, I have never heard
about such thing)?

Do something against the noise during mouse-movements and disk-access
(is that possible? Perhaps some real Linux hacker can answer this.
The original mushroom-demo from which I use the 'technology' suffers
from same problem, solving the second by loading the sample first into RAM,
all my MOD-players, which play under DOS in REAL-mode have the same
problem and Micr... Win.. speakerdriver stops all ints for best performance,
huhu multitasking...). 

Some people suggest me ask Linus to include the driver as standard device.
You really want that?

On my 486/33 it plays fine, but on slower machines are some limitatons.
PC-Speaker produce more noise (on one 386dx/16 it was terrific, on a other not
so much but no compare with my machine). The str program working with
5000 Hz produce pauses, so you can only play simple samples. A faster
machine (I think a 386dx/40 should enough) is recommended. Nevertheless
because of it's interrupt-driven nature it work, but slowing down your
machine in a significant way. With Stereo-on-One the str program plays
in Stereo with 16000 Hz ok on my machine, so I think with a DAC you
should be able to use the .MOD-player on slower 386.
(I do my best to optimize the interrupt-code, looking at the assembler gcc
produce I think there is no way to code it significantly better). 

If you have any ideas, please contact me.


Contact address

Michael Beck 				beck@informatik.hu-berlin.de
