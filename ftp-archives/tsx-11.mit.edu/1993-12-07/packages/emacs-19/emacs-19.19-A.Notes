GNU Emacs 19.19
Built under Linux 0.99.11 with gcc 2.4.5 and DLL 4.4.1
Built for Linux by Rik Faith (faith@cs.unc.edu), Sun Aug 15 20:58:41 1993



*** CREDITS and NOTES ***

I'd like to express my thanks to Rick Sladkey (jrs@world.std.com) for all
of his help in patching emacs and making it more stable.  He has uncovered
bugs and created patches for many subtle problems in signal handling and
I/O that I would have otherwise completely missed.  Michael K. Johnson
(johnsonm@stolaf.edu) was on the GNU emacs-19-beta list with me and also
deserves thanks for his work, especially for getting POSIX signals
working.

With GNU Emacs 19.7, temacs would dump core if built with gcc 2.4.0.  This
has been fixed in gcc 2.4.[35].  I am no longer including instructions on
how to build emacs with 2.4.0, since everyone should upgrade.

IF YOU HAVE TROUBLE RUNNING EMACS, please check your .emacs file and make
sure your load-path points to the new lisp files.  Try "emacs -q" to start
emacs without loading any .emacs files.  Make sure that you have not set
any environment variables in your .cshrc file that change the load-path
(i.e., EMACSLOADPATH)!  If you have not changed your load-path, then
"^Hvload-path" should display:

	("/usr/lib/emacs/site-lisp" "/usr/lib/emacs/19.19/lisp")

Also, make sure you have the correct libraries installed correctly in
/lib:

For emacs-19.19-A.bin.tar.gz, use (at least) 0.99.11 and:

	libX11.so.3 (DLL Jump 3.0pl0)
        libc.so.4 (DLL Jump 4.4pl1)
        libm.so.4 (DLL Jump 4.4pl1)

[I have not tried emacs 19.19 with XFree86 1.3, although it should work
fine.  You will *NOT* be able to use DLL 4.4.0, however -- DLL 4.4.1 has
been publically released at this time, and you should use that.  I hope
this emacs will continue to work with the next public release of the DLL
4.4.x libraries, but it might not.]

If you are not running X, you can get a copy of the shared X library from
the current X distribution and put it in /lib -- the new version should
work fine.



*** FOR THE FUTURE ***

    1) A console.el file that automatically enables the use of the keypad
       keys when in a standard Linux VT.
    2) Support (or documentation) for keypad keys when in an xterm using
       "emacs -nw"




*** BINARY INSTALLATION ***

************************************************************ 
* WARNING: /usr/bin/emacs-19.19 is the new emacs binary.   *
* Some of your old emacs installation will be OVERWRITTEN. *
************************************************************

How to install the Linux binary distribution:

0) Get binaries from sunsite.unc.edu:/pub/Linux/apps/editors/emacs-19.19
                     tsx-11.mit.edu:/pub/linux/packages/emacs-19.19
1) cd /
2) gtar zxvpf emacs-19.19-A.tar.gz
3) gtar zxvpf emacs-19.19-A.misc.tar.gz
4) gtar zxvpf emacs-19.19-A.elc.tar.gz
5) gtar zxvpf emacs-19.19-A.el.1of2.tar.gz [ONLY IF YOU WANT *.el FILES]
6) gtar zxvpf emacs-19.19-A.el.2of2.tar.gz [ONLY IF YOU WANT *.el FILES]
7) /usr/bin/emacs-19.19 should be linked to whatever you want to call this
   version of emacs.




*** SOURCE INSTALLATION ***

How to build the source distribution for Linux:

0) Get the source from prep.ai.mit.edu:/pub/gnu
                       sunsite.unc.edu:/pub/gnu
                       tsx-11.mit.edu:/pub/linux/packages/emacs-19.19
1) cd /usr/src/emacs-19.19
2) patch -s -p1 < emacs-19.19-A.Notes
3) (cd lisp; emacs -q; M-x byte-recompile-directory) [done with emacs 19.19]
   [This was done, since some .el files where newer than the .elc files in
   the standard emacs 19.19 distribution.]
4) ./configure --prefix=/usr
5) make 'CFLAGS=-m486 -O6'
6) make 'CFLAGS=-m486 -O6' install

   To make sure that my installation is pristine (for distribution
   purposes), I do the following before the make install:

   rm -rf /usr/info/*
   rm -rf /usr/lib/emacs/*

   If you do this, BE VERY CAREFUL!  BACKUP /usr/lib/emacs/site-lisp FIRST!


For this binary release, you have to strip your own binaries.  Although the
binaries contain no debugging information, you can still get a backtrace in
the event of a core dump.




*** PATCHES ***

The following patches disable the use of IPC calls.  You can enable CLASH
DETECTION if you desire by adding:

    #define CLASH_DETECTION
    #undef HAVE_LONG_FILE_NAMES

to src/s/linux.h.  __CTOR_LIST__ is now patched in emacs.c (apparently due
to a bug in the Linux libraries).  However, you may still have to comment
out __DTOR_LIST__ in emacs.c for some Linux compilers.  You can do this
safely at the end of the build.  If you want to use IPC, just take out the
line with -lipc, and everything should be fine.



*** emacs-19.16/src/s/linux.h.rik	Sat Jul  3 17:17:18 1993
--- emacs-19.16/src/s/linux.h	Sat Jul  3 17:18:43 1993
***************
*** 213,221 ****
  /* Let's try this out, just in case.
     Nah.  Rik Faith <faith@cs.unc.edu> says it doesn't work well.  */
  /* #define SIGNALS_VIA_CHARACTERS */
- 
- /* Rob Malouf <malouf@csli.stanford.edu> says:
-    SYSV IPC is standard a standard part of Linux since version 0.99pl10,
-    and is a very common addition to previous versions.  */
- #define LIBS_MACHINE -lipc
- #define HAVE_SYSVIPC
--- 214,216 ----
