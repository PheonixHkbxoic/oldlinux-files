From: vince@victrola.wa.com (Vince Skahan)
Reply-To: vince@victrola.wa.com (Vince Skahan)
Followup-To: poster
Newsgroups: comp.os.linux.announce,comp.os.linux.admin,comp.answers,news.answers
Subject: Linux UUCP HOWTO
Approved: linux-announce@tc.cornell.edu (Matt Welsh)

Archive-name: linux/howto/uucp
Last modified:  10 September 1993

The Linux UUCP HOWTO
by Vince Skahan, <vince@victrola.wa.com>
v1.2, Last Modified 10 September 1993
---------------------------------------------------------------------------

This document describes the setup and care+feeding of UUCP under Linux.

You need to read this if you plan to connect to remote sites via UUCP
via a modem, via a direct-connection, or via Internet.

You probably do *not* need to read this document if don't talk UUCP.


0.  Introduction

	The intent of this document is to answer some of the questions and
	comments that appear to meet the definition of 'frequently asked
	questions' about UUCP software under Linux in general, and the
	version in the Linux SLS distribution in particular.

	This document and the corresponding Mail and News 'HOWTO' documents
	collectively supersede the UUCP-NEWS-MAIL-FAQ that has previously
	been posted to comp.os.linux.announce.


0.1 New versions of this document

	New versions of this document will be periodically posted to
	comp.os.linux.announce, comp.answers, and news.answers.  They will
	also be added to the various anonymous ftp sites who archive such
	information including sunsite.unc.edu:/pub/Linux/docs/HOWTO.


0.2 Feedback

	I am interested in any feedback, positive or negative, regarding
	the content of this document via e-mail.  Definitely contact me if
	you find errors or obvious omissions.

	I read, but do not necessarily respond to, all e-mail I receive.
	Requests for enhancements will be considered and acted upon based on
	that day's combination of available time, merit of the request, and
	daily blood pressure :-)

	 Flames will quietly go to /dev/null so don't bother.

	Feedback concerning the actual format of the document should go to
	the HOWTO coordinator - Matt Welsh (mdw@sunsite.unc.edu).


0.3 Other sources of information

	USENET:
	=======
		comp.mail.uucp can answer most of your UUCP questions

	Mailing Lists:
	==============

		There is a Taylor UUCP mailing list. 

		To join (or get off) the list, send mail to
		taylor-uucp-request@gnu.ai.mit.edu  

		This request goes to a person, not to a program, so please
		make sure that you include the address at which you want to
		receive mail in the text of the message.

		To send a message to the list, send it to
		taylor-uucp@gnu.ai.mit.edu.

	Books:
	======

	HDB and V2 versions of UUCP are documented in about every vendor's
	documentation as well as in almost all *nix communications books.

	Taylor config files are currently only documented in the info files
	provided with the sources (and in the SLS distribution hopefully).
	To read them, you can grab the nice 'infosrc' program from the 
	SLS 's' disks and compile it.

	The following is a non-inclusive set of books that will help...

	'Managing UUCP and USENET' from O'Reilly and Associates is in my
		opinion the best book out there for figuring out the
		programs and protocols involved in being a USENET site.

	'Unix Communications' from The Waite Group contains a nice
		description of all the pieces (and more) and how they fit
		together.

	'Practical Unix Security' from O'Reilly and Associates has a nice
		discussion of how to secure UUCP in general.


0.4 Where *NOT* to look for help

	There is nothing 'special' about configuring and running UUCP under
	Linux (any more).  Accordingly, you almost certainly do *NOT* want
	to be posting generic UUCP-related questions to the comp.os.linux.*
	newsgroups.

	Unless your posting is truly Linux-specific (ie, "please tell me
	what routers are already compiled into the SLS1.03 version of
	smail3.1.28") you should be asking your questions in comp.mail.uucp
	or on the Taylor UUCP mailing list as indicated above.


1.0 Hardware Requirements

	There are no specific hardware requirements for UUCP under Linux.
	Basically any Hayes-compatible modem works painlessly with UUCP.

	In most cases, you'll want the fastest modem you can afford.  In
	general, you want to have a 16550 UART on your serial board or
	built into your modem to handle speeds of above 9600 baud.

	If you don't know what that last sentence means, please consult the
	comp.dcom.modems group or the various fine modem and serial
	communications FAQs and periodic postings on USENET.


2.0 Getting UUCP 

	Taylor UUCP (current version 1.04) is available on prep.ai.mit.edu
	in source form and in the Linux SLS distribution in binary form.

	The newspak-1.7.tar.z distribution contains config files and readme
	files related to building uucp, news, and mail software under Linux
	from the various freely-available sources.  It can usually be found 
	on sunsite.unc.edu in the directory /pub/Linux/system/Mail.


3.0 Installing the Software

	[...much of this section is taken verbatim from the README file in
		the Taylor UUCP v1.04 sources - it's provided here so I can
		help you 'rtfm' instead of just telling you to do so...]

	Detailed compilation instructions are in uucp.texi in the sources.

	You can grab 'known good' conf.h and policy.h files for Linux 
	from the newspak distribution referred to in the 'other sources of
	information' section above.  In that case, you can probably go right
	to typing 'make'.

	To extract a gzip'd tar archive, I do the following:
		gunzip -c filename.tar.z | tar xvf -


3.1 Edit Makefile.in to set installation directories.
	
	Here, I set 'prefix' to "/usr" rather than the default
	of "/usr/local"


3.2 Run 'configure'

    Type ``sh configure''. 

    The configure script will compile a number of test programs to see
    what is available on your system and will calculate many things.

    The configure script will create conf.h from conf.h.in and
    Makefile from Makefile.in.  It will also create config.status,
    which is a shell script which actually creates the files.


3.2 Configure the future setup of the software

    Examine conf.h and Makefile to make sure they're right.
	- I took the defaults

    Edit policy.h for your local system.
	- set the type of lockfiles you want (HAVE_HDB_LOCKFILES) 
	- set the type of config files you want built in
		(HAVE_TAYLOR_CONFIG, HAVE_V2_CONFIG, HAVE_HDB_CONFIG)
	- set the type of spool directory structure you want
		(SPOOLDIR_HDB)
	- set the type of locking you want (HAVE_HDB_LOGGING)
	- set the default search path for commands
		(I added /usr/local/bin to mine...)

		
3.3 Compile and install the software

    Type "make".

    Use "uuchk | more" to check configuration files.  You can use
    ``uuconv'' to convert between configuration file formats.

    Type "make install" to install.


3.4 Set up the config files

	I'd recommend you start by taking the attached known-good
	config files for HDB mode and installing them.  

	Make sure that the Permissions file indicates exactly where 
	rmail and rnews are to be found if you put them anywhere 
	other than in the path you specified in policy.h

	Make sure that your Devices files matches the actual location
	of your modem (cua1=COM2 in the examples)

	Edit the Systems file to set up the system(s) you talk to
	with their speed, phone number, username, and password.
	*PROTECT THIS FILE AGAINST WORLD READ*

	Set up the Permissions file and add a set of lines for each
	site you talk to.  For security reasons, it's recommended to
	make sure they each have a separate account (if you allow dialin)
	and home directory so you can track things.


3.5 Give it a try

	/usr/lib/uucp/uucico -r 1 -x 9 -s remote_system_name

	The -x 9 will have maximum debugging information written to
	the /usr/spool/uucp/.Admin/audit.local file for help in initial
	setup. I normally run -x 4 here since that level logs details
	that help me with login problems. Obviously, this contains 
	cleartext information from your Systems file (account/password)
	so protect it against world-read. 


3.6 It doesn't work - now what ?

	In general, you can refer to the documentation mentioned above
	if things don't work.  You can also refer to your more experienced
	UUCP neighbors for help.  Usually, it's something like a typo
	anyway.


4.0 Frequently Asked Questions about Linux UUCP


4.1 Why is SLS uucp configured in HDB rather than 'Taylor' mode?

	Because IMHO it's the de-facto standard UUCP implementation at
	this time.  There are thousands of sites with experienced admins
	and there are many places you can get incredibly good information
	concerning the HDB setup.

	The uucp-1.04 that's in SLS 1.02 and later has all three modes of
	config files built in.  While I can't test it, I did 'rtfm' and Ian
	Taylor tells me that it should work.

	The search order for config files is Taylor...then V2 (L.sys)...  then
	HDB.  Use the uuconv utility in /usr/lib/uucp to convert config files
	from one mode to another.

	If you can't wait, grab the sources for uucp and specify
	HAVE_BNU_CONFIG, HAVE_V2_CONFIG *and* HAVE_TAYLOR_CONFIG in the
	policy.h file and type 'make'.
	
	The following workaround is ugly, but it does work, if you want 
	to run Taylor configs from binaries that don't have it built in...

	[... From mbravo@tctube.spb.su (Michael E. Bravo) ...]

	 - add  '-I /usr/local/lib/uucp/config' to _every_ invocation of 
		whatever program in uucp package


4.1 Why do I get 'timeout' on connections when I upgraded to uucp-1.04 ?

	[... from Ed Carp - erc@apple.com ...]

	If you use a 'Direct' device in the Devices file, there's now a
	10 second timeout compiled in.  Make the name of the Device anything
	other than 'Direct'.  If you tweak the example /usr/lib/uucp files
	provided with SLS, you won't have problems with this one.

	[... from Greg Naber - greg@squally.halcyon.com ...]

	If you get chat script timeouts, you can tweak the sources by 
	editing at line 323 in uuconf/syssub.c and changing the default
	timeouts from 10 seconds to something larger.

	[... from Ed Rodda - ed@orca.wimsey.bc.ca ...]
	If you get chat script timeouts, typically connecting to other
	Taylor sites, a pause after login can fix this.

	feed Any ACU,ag 38400 5551212 ogin: \c\d "" yourname word: passwd
                                            ^^^^ 
	[... from Dr. Eberhard W. Lisse - el@lisse.NA ...]
	Some kernels experience modems hanging up after a couple of seconds.
	The following patch sent by Ian Taylor might help...

*** conn.c.orig Mon Feb 22 20:25:24 1993
--- conn.c      Mon Feb 22 20:33:10 1993
***************
*** 204,209 ****
--- 204,212 ----

     /* Make sure any signal reporting has been done before we set
       fLog_sighup back to TRUE.  */
+   /* SMR: it seems to me if we don't care about SIGHUPS, we should clear
+      the flag before we return  */
+   afSignal[INDEXSIG_SIGHUP] = FALSE;
    ulog (LOG_ERROR, (const char *) NULL);
    fLog_sighup = TRUE;

 
4.2 Why doesn't HDB anonymous uucp seem to work ?

	The SLS anonymous uucp only works in Taylor mode because it's
	compiled with HAVE_TAYLOR_CONFIG.  If you want to do anon uucp in HDB
	mode, you'll have to recompile the sources with just HDB defined.
	Ian Taylor is considering which way to deal with this 'feature'...

	Also, Taylor in HDB mode seems to be sensitive to white space and
	blank lines.  To be safe, make sure that there are no blank lines 
	or trailing spaces in the Permissions file.

	Lastly, make sure that you have a file called remote.unknown in
	/usr/lib/uucp and that it's *NOT* executable.  See the O'Reilly+Assoc
	book "Managing UUCP and USENET" for details regarding this file.


4.3 What does 'no matching ports found' mean ?

	In all probability, you are attempting to use a device
	(/usr/lib/uucp/Devices) that doesn't exist, or the device you've
	specified in the /usr/lib/uucp/Systems file doesn't match up with
	any valid devices in the Devices file.

	Following this are *sanitized* versions of my working Taylor 1.04
	HDB config files that you can plug in and use...

	note the 'ACU' in the Systems ?  That tells which 'port' to use in
	Devices

	see the 'scout' word in Systems ?  That tells which dialer to use
	in Dialers.  

	If you had a ACU port, but none that matched the specified dialer
	on the same line in Systems, you'll get that message.


4.4 What are known good config files for HDB mode ?

	The following are 'known-good' config files for Taylor 1.04 under
	Linux in HoneyDanBer mode.  They work on kernels of 0.99-8 or
	later. All files should be in /usr/lib/uucp unless you've tweaked
	the sources to put the uucp library elsewhere.

	If you're running a kernel of 0.99-7 or earlier, change 'cua1' to
	'ttyS1'.

#------------- Devices -------------
# make sure the device (cua1 here) matches your system
# cua1 = COM2 
#
ACU cua1 - 19200 scout
ACU cua1 - 9600 tbfast
ACU cua1 - 1200 tbslow
ACU cua1 - 2400 tbmed

#------------- dialers --------------
# note the setting of the Trailblazer registers 'on the fly'
# 'scout' is a Digicom Scout Plus (Hayes-like) modem
#
scout	=W-,	"" ATM0DT\T CONNECT
tbfast	=W-,	"" A\pA\pA\pT OK ATS50=255DT\T CONNECT\sFAST
tbslow	=W-,	"" A\pA\pA\pT OK ATS50=2DT\T CONNECT\s1200
tbmed	=W-,	"" A\pA\pA\pT OK ATS50=3DT\T CONNECT\s2400

#-------------- Systems -------------
# this is a very generic entry that will work for most systems
fredsys Any;1 ACU 19200 scout5555555 "" \r ogin:--ogin: uanon word: uanon 

#-------------------------------- Permissions -------------------------

# Taylor UUCP in HDB mode appears to be sensitive to blank lines.
# Make sure all Permissions lines are real or commented out.
#	
# this is a anonymous uucp entry
#
LOGNAME=nuucp MACHINE=OTHER \
READ=/usr/spool/uucp/nuucp \
WRITE=/usr/spool/uucp/nuucp \
SENDFILES=yes REQUEST=yes \
COMMANDS=/bin/rmail
#
# this is a normal setup for a remote system that talks to us
# note the absolute path to rnews since this site puts things
# in locations that aren't "standard"
#
LOGNAME=fredsys MACHINE=fredsys \
READ=/usr/spool/uucp/fredsys:/usr/spool/uucp/uucppublic:/files \
WRITE=/usr/spool/uucp/fredsys:/usr/spool/uucppublic \
SENDFILES=yes REQUEST=yes \
COMMANDS=/bin/rmail:/usr/local/lib/news/bin/rnews
#----------------------------------------------------------------------


5.0 Acknowledgements

	The following people have helped in the assembly of the information
	(and experience) that helped make this document possible:

	Ed Carp, Steve Robbins, Ian Taylor, Greg Naber, Matt Welsh 

	If I forgot anybody, my apologies...


