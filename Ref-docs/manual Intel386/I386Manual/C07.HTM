<html><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>

	<head>
		<title>80386 Programmer's Reference Manual -- Chapter 07</title>
	</head>

	<body>
		<p><b>up:</b> <a href="TOC.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/TOC.HTM">Table of Contents</a><br>
		<b>prev:</b> <a href="S06_05.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S06_05.HTM">6.5 Combining Page and Segment Protection</a><br>
		<b>next:</b> <a href="S07_01.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_01.HTM">7.1 Task State Segment</a>
		<p>
		<hr>
		<p>
		<h1>Chapter 7 Multitasking</h1>
		<p>To provide efficient, protected multitasking, the 80386 employs several special data structures. It does not, however, use special instructions to control multitasking; instead, it interprets ordinary control-transfer instructions differently when they refer to the special data structures. The registers and data structures that support multitasking are:
		<ul>
			<li>Task state segment
			<li>Task state segment descriptor
			<li>Task register
			<li>Task gate descriptor
		</ul>
		With these structures the 80386 can rapidly switch execution from one task to another, saving the context of the original task so that the task can be restarted later. In addition to the simple task switch, the 80386 offers two other task-management features:
		<ol>
			<li>Interrupts and exceptions can cause task switches (if needed in the system design). The processor not only switches automatically to the task that handles the interrupt or exception, but it automatically switches back to the interrupted task when the interrupt or exception has been serviced. Interrupt tasks may interrupt lower-priority interrupt tasks to any depth.
			<li>With each switch to another task, the 80386 can also switch to another LDT and to another page directory. Thus each task can have a different logical-to-linear mapping and a different linear-to-physical mapping. This is yet another protection feature, because tasks can be isolated and prevented from interfering with one another.
		</ol>
		<p><a href="S07_01.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_01.HTM">7.1 Task State Segment</a><br>
		<a href="S07_02.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_02.HTM">7.2 TSS Descriptor</a><br>
		<a href="S07_03.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_03.HTM">7.3 Task Register</a><br>
		<a href="S07_04.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_04.HTM">7.4 Task Gate Descriptor</a><br>
		<a href="S07_05.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_05.HTM">7.5 Task Switching</a><br>
		<a href="S07_06.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_06.HTM">7.6 Task Linking</a><br>
		<a href="S07_07.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_07.HTM">7.7 Task Address Space</a>
		<p>
		<hr>
		<p><b>up:</b> <a href="TOC.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/TOC.HTM">Table of Contents</a><br>
		<b>prev:</b> <a href="S06_05.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S06_05.HTM">6.5 Combining Page and Segment Protection</a><br>
		<b>next:</b> <a href="S07_01.HTM" tppabs="http://webster.cs.ucr.edu/Page_TechDocs/Doc386/S07_01.HTM">7.1 Task State Segment</a>
	</body>

