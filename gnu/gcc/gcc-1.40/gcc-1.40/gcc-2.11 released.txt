
From: H.J. Lu (hlu@yoda.eecs.wsu.edu)
Subject: gcc 2.11a is released 
Newsgroups: comp.os.linux
Date: 1992-05-16 10:25:50 PST 
 

Hi,

gcc 2.11a is released. Please read README before doing anything. If you
use 486, you can try

	gcc -m486

to see the difference. I am nou sure about that. I will release the
source code of the libraries next week if everything is fine. The
patches for gcc should be in gcc 2.2. If you need the patches, I can
put it up for ftp.


H.J.
---------------README--------
FEATURES
-------------------
This release is for 0.95c+ above. But to get all the features, you have
to run 0.96. You can compile 0.96 from 0.95c+/pre0.96 with this release.
You may have to have 2 MB ram to run it and have some swap space
(> 4MB) since cc1 and cc1plus are about 1 MB.

All the previous bugs reported to me are fixed. Please send the new bug
report to me along with a short code to show the bug.

The return value of clock ticks of the old sysconf () was wrong. It
returned 60 instread of 100.

Multiple shared libs are supported. They are more transparent than
before. You don't have to know they are there. But you have to relink
the binaries with the new shared libs. Also a bug in crt0.o is fixed.
Now the error during loading the shared images will be reported.

There are 3 shared images, libc_v2_11a, libhard_v2_11a and
libsoft_v2_11a. Now libsoft.a and libhard.a has the same entry point
for the same function. When you build a new shared lib which uses math,
the binary will load /lib/libm_v2_11a, which can be linked to
libsoft_v2_11a or libhard_v2_11a. In this way, one shared binary should
run with/without a 387.

With this release, two testing shared images for X11R5 are included.
They are libX11_v0_1a, which has libX11.a, libXext.a, libXt.a and
libXaw.a, and libXaw_v0_1a, which has libXaw.a only.

From this release, libc.a will be quite compatible with BSD except for
some minor stuffs. If you find something from BSD is missing, please let
me know. I will see if I can add it to the library.

Here is the list of new functions.

New functions for BSD compatibility:

1. bstring
2. ftime
3. getpagesize
4. getwd
5. setenv/unsetenv
6. psignal
7. vfork

New sys calls:

1. fchmod
2. fchown
3. ftruncate
4. ioperm
5. mmap
6. truncate
7. ptrace
8. wait3

Networking functions:

1. ntohs/htons
2. ntohl/htonl
3. socket
4. socketpair
5. bind
6. connect
7. listen
8. accept
9. getsockname
10. getpeername

Misc functions:

1. usleep

Gdbm 1.5 is here for X11R5.

In this release, VFS is supported.

The domain errors in the math libraries are improved.

Malloc and calloc can be fixed by including "stdlib.h".


INSTALLATION
--------------
Get gcc 2.11a from

headrest.woz.colorado.edu under /pub/linux/gcc

and

banjo.concert.net under /pub/Linux/GCC

The filenames are 2.11a[misc|lib|X11].tar.Z and 0.96inc.tar.Z.

To install gcc 2.11a, do

	cd /usr
	/bin/rm -rf include g++-include lib/gcc-lib
	/bin/rm -rf shared/lib/crt.o lib/shared lib/static
	tar xvpfvz xxxx/2.11amisc.tar.Z
	tar xvpfvz xxxx/2.11alib.tar.Z

and run "inst2.x" which is in /usr/install/gcc2. After you install it,
do

	which gcc

It should report

	/usr/bin/gcc

And

	gcc -v

At least it should say

	gcc version 2.1

Please check the file permission for all files you have unpacked. Maybe
I should write a shell script to do that. Try "fixfiles".

Starting from this release, I am trying to let applications and kernel
shared the same set of header files. To get the whole set of the header
files, you have to remove all the header files from 0.96 kernel and
install 0.96inc.tar.Z by

	/bin/rm -rf foo/src/linux/include
	cd /usr
	tar xvvpfz xxxx/0.96inc.tar.Z

And then get rid of the -nostdinc's in kernel Makefiles if necessary.
Now, no header files from 0.96 kernel are needed.


X11R5
------------
To install the shared images for X11R5, get 2.11aX11.tar.Z and do

	cd /usr
	tar xvvpfz 2.11aX11.tar.Z

and run "inst.x11" which is in /usr/install/gcc2.
