*** originals/c-typeck.c	Sun Aug 18 16:59:15 1991
--- c-typeck.c	Sun Aug 18 17:01:14 1991
***************
*** 575,580 ****
--- 575,614 ----
  {
    enum tree_code code = TREE_CODE (type);
  
+ #if (defined(NATIVE_MINIX) || defined(CROSS_MINIX))
+ #ifdef 	m68k	/* Only needed for MINIX-68k - ajm */
+   extern tree cast_to_sizeof_type();
+   tree t;
+ 
+   enum tree_code mincode = TREE_CODE (type);
+ 
+   if (mincode == FUNCTION_TYPE)
+     {
+       if (pedantic || warn_pointer_arith)
+ 	warning ("sizeof applied to a function type");
+       t = build_int (1);
+     }
+   else if (mincode == VOID_TYPE)
+     {
+       if (pedantic || warn_pointer_arith)
+ 	warning ("sizeof applied to a void type");
+       t = build_int (1);
+     }
+   else
+       t=size_in_bytes(type);
+ /*
+  * Up to here, if you return t, nothing is changed.
+  * The following code checks if the size is less than 32767.
+  * In this case, t is cast to 'int' by cast_to_sizeof_type
+  * We cannot expand cast_to_sizeof_type inline here because
+  * it uses forcefit_type, which is local to fold-const.c
+  */
+   if (TREE_INT_CST_HIGH(t)==0 && TREE_INT_CST_LOW(t) <= 32767)
+       t = cast_to_sizeof_type(t);
+ 
+   return convert_units (t, BITS_PER_UNIT,
+                            TYPE_PRECISION(char_type_node));
+ #else /* what follows is the original code */
    if (code == FUNCTION_TYPE)
      {
        if (pedantic || warn_pointer_arith)
***************
*** 591,596 ****
--- 625,632 ----
    /* Convert in case a char is more than one unit.  */
    return convert_units (size_in_bytes (type), BITS_PER_UNIT,
  			TYPE_PRECISION (char_type_node));
+ #endif 	/* m68k */
+ #endif 	/* NATIVE_MINIX || CROSS_MINIX */
  }
  
  tree
