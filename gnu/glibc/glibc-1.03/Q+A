The full manual for the GNU C library is currently under construction.
In the mean time, here are some answers to common questions.

Q: What's it run on?
A: The Fully Supported Systems are currently sun4 and hp9k300 running
   mt xinu 4.3BSD.

Q: What do I need to do to port the library to a new system?
A: For starters, look at sysdep.h.  That defines some macros which are
   used by many .S files which define the system calls.  Most of the
   .S files are in machine-independent directories: unix, unix/bsd,
   etc. sysdep.h in the machine-dependent directories gives the gory
   details (see, for example, unix/bsd/sun/sun4/sysdep.h).  Then email
   roland@prep.ai.mit.edu.

Q: Can I use pieces of this library for ...
A: Yes.  Please read the file COPYING.LIB for details.

Q: Can I use this library as a drop in replacement for /lib/libc.a or
   /usr/include?
A: Not fully.  On Fully Supported Systems, the library should be able
   function in this manner for many programs, but not all.

Q: Is this the long awaited GNU system?
A: No.  But it's a big part of it.  When properly installed, the
   library and header files will provide source level emulation of GNU
   on Fully Supported Systems for many programs.  GNU will have a lot
   of important functionality that the GNU C library on Unix does not
   give you.  The purpose of the GNU C library on Unix is to give you
   a clean, standard-conformant library and set of header files that
   you can use to write POSIX/Unix programs and run them on your
   existing Unix system (which doesn't conform to the standards, or
   give you extra GNU extensions).  Soon, the same programs will run
   under GNU with no source modification necessarily required.

Q: Can I use this library to compile bsd (sysv) code on a sysv (bsd)
   machine?
A: Yes but.  If the question is whether you can compile programs that
   were written for BSD on system V and vice-versa, the answer is yes (to
   some extent).  The C library doesn't go to great pains to simulate
   facilities that the underlying operating system just doesn't provide;
   but it implements both BSD and System V interfaces to whatever system it
   is built for, emulating one flavor with the other where it is not
   difficult (like utime vs utimes, bcopy vs memcpy, strchr vs index,
   etc.).  And you can use the feature test macros (see NOTES) to try to
   make the library appear to programs as whichever flavor of system you
   want.

Q: Can I use this library to cross compile to a foobox from a widgetbox?
A: Yes, if foobox is a Fully Supported System, this should be possible.

