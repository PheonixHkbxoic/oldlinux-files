From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Tue, 7 Apr 92 02:45:14 EDT
Subject:  Linux-Activists Digest #35

Linux-Activists Digest #35, Volume #2             Tue, 7 Apr 92 02:45:14 EDT

Contents:
  Problem with tar (?) (Rob Coleman)
  Linux patches now available from kirk.bu.oz.au (David J. Hughes)
  Linux patches now available from kirk.bu.oz.au (David J. Hughes)
  Help: Straighten Me Out on SCSI Controller Cards (Host Adapter?) (Bob Davis)
  Tcsh 6.01 for Linux (Mika Pekka Liljeberg)
  Tcsh 6.01 for Linux (Mika Pekka Liljeberg)
  Re: Second 0.95a alpha-patch (Linus Benedict Torvalds)
  Re: Second 0.95a alpha-patch (Linus Benedict Torvalds)
  Binaries considered harmful (Paul Allen)
  Has anyone thought about threads? (Nicolai Wadstr|m)
  Re: Help: Straighten Me Out on SCSI Controller Cards (Host Adapter?) (Drew Eckhardt)
  Re: Linux Drivers and Kernel question. (Drew Eckhardt)
  Taylor-uucp 1.03 beta - porting status (Ed Carp)
  Taylor-uucp 1.03 beta - porting status (Ed Carp)

----------------------------------------------------------------------------

From: gt0449a@prism.gatech.edu (Rob Coleman)
Subject: Problem with tar (?)
Reply-To: gt0449a@prism.gatech.edu (Rob Coleman)
Date: Tue, 7 Apr 1992 02:16:47 GMT


I am apparently one of the small number of people who are having trouble
with using tar (any version that I can find) to extract certain files
from their archives uncorrupted.  The latest incarnation of this problem
was with the beta version of GCC v2.1, where after extracting all the
files and trying to compile a "hello world" program, I get the "parse
error before '('" in stdio.h.  When I try to untar the same set of files
with different versions of tar under different versions of the kernel
(.12, stock .95a), I still cannot get working versions of the programs.
Oddly enough, a friend of mine has a similar Linux system set up and
is able to take the same tar files that I tried to extract, and yet can
get working copies of the programs using the distribution version of tar.
I was able to "get around" the problem before by booting .12, untarring
the files, and then booting off the hard drive again, but there does not
seem to be any way that I can get GCC v2.1 untarred correctly.  Any
help would be appreciated!

Oh, my system consists of a 486/33, Linux v.95c (.95a with Linus' patches
and the lp patches), two IDE drives (125meg and 105meg), and I boot
off of floppy disk.

Thanks!

------------------------------

Crossposted-To: aus.archives,alt.os.linux
From: bambi@bu.oz.au (David J. Hughes)
Subject: Linux patches now available from kirk.bu.oz.au
Date: Tue, 7 Apr 1992 02:36:01 GMT

Kirk now mirrors tsx-11's linux patches area on a daily basis.

        Hostname        : kirk.bu.oz.au
        IP Address      : 131.244.1.1
        Path            : /pub/OS/Linux/patches


bambi
   ___                                 David J. Hughes     bambi@bu.oz.au
  /   \                /  /    /        
 /  __/ __   __   ____/  /    / __          Senior Network Programmer
/    \ /  \ /  \ /   /  /    / /  \  /    Comms Development & Operation
\____/ \__//   / \__/   \___/ /   / /       AUSTRALIA  (+61 75 951450)

------------------------------

Crossposted-To: aus.archives,alt.os.linux
From: bambi@bu.oz.au (David J. Hughes)
Subject: Linux patches now available from kirk.bu.oz.au
Date: Tue, 7 Apr 1992 02:36:01 GMT

Kirk now mirrors tsx-11's linux patches area on a daily basis.

        Hostname        : kirk.bu.oz.au
        IP Address      : 131.244.1.1
        Path            : /pub/OS/Linux/patches


bambi
   ___                                 David J. Hughes     bambi@bu.oz.au
  /   \                /  /    /        
 /  __/ __   __   ____/  /    / __          Senior Network Programmer
/    \ /  \ /  \ /   /  /    / /  \  /    Comms Development & Operation
\____/ \__//   / \__/   \___/ /   / /       AUSTRALIA  (+61 75 951450)

------------------------------

Crossposted-To: comp.sys.ibm.pc.hardware
From: sonny@charybdis.harris-atd.com (Bob Davis)
Subject: Help: Straighten Me Out on SCSI Controller Cards (Host Adapter?)
Reply-To: sonny@trantor.harris-atd.com (Bob Davis)
Date: Tue, 7 Apr 1992 02:44:52 GMT

        I am *so* confused about SCSI -- all aspects of it. And I can't
seem to locate answers. First, what do I get for the $250 for an Adaptec 1542
SCSI controller that I don't get with the $150 controllers , or with the $35
Seagate ST02?
        I have an ST02 but I cannot get it to format a drive. Do I need
a special piece of low level formatting software? I've tried using DOS
DEBUG and g=C800:5 to run the BIOS format routine in the ST02 card ROM
but it seems never to recognize that a hard drive is connected. I've
programmed the Drive address to 000 for logical unit 0, but the BIOS
routine keeps insisting that "unit 0 is not connected to this controller"
when I tell it to format unit 0.
        If you can recommend a file on the net, or a book, or any material
for me to read that might make someone who is intimately familiar with
LL formatting, partitioning, and FORMATting MFM and RLL hard drives feel
comfortable with doing the analogous things to a SCSI drive, I'd like
to hear about it. (How do I tell the system about Cylinders, Heads, and
Sectors on a SCSI drive? How do I set up CMOS to tell it what kind of
drive is connected?) I am lost...

        Thanks,

_____________________________________________________________________________
Bob Davis, UofALA alum \\ INTERNET: sonny@trantor.harris-atd.com  |  _   _  |
Harris Corporation, ESS \\    UUCP: ...!uunet!x102a!trantor!sonny |_| |_| | |
Advanced Technology Dept.\\ AETHER: K4VNO          |==============|_/\/\/\|_|
PO Box 37, MS 3A/1912     \\ VOICE: (407) 727-5886 | I SPEAK ONLY | |_| |_| |
Melbourne, FL 32902 USA    \\  FAX: (407) 729-3363 | FOR MYSELF.  |_________|


------------------------------

From: liljeber@klaava.Helsinki.FI (Mika Pekka Liljeberg)
Crossposted-To: alt.os.linux
Subject: Tcsh 6.01 for Linux
Date: 5 Apr 92 21:45:01 GMT

Hi, everyone!

I just uploaded tcsh 6.01 to funic.funet.fi. It should become
available in a few days.

The package contains a runnable binary, some documentation and
cdiffs against the official tcsh 6.01 release.

I compiled tcsh with GCC 2.0 (haven't had the nerve to try 2.1
yet ;-) ) using static libraries. I haven't tested it very
extensively, but I found no glaring bugs either. If you come
across any, be sure to drop me a note.

Have fun!

                Mika
--
Mika Liljeberg                  Email:  liljeber@kruuna.Helsinki.FI
Helsinki University                     Mika.Liljeberg@Helsinki.FI
Dept. of Computer Science
-- 
Mika Liljeberg                  Email:  liljeber@kruuna.Helsinki.FI
Helsinki University                     Mika.Liljeberg@Helsinki.FI
Dept. of Computer Science

------------------------------

From: liljeber@klaava.Helsinki.FI (Mika Pekka Liljeberg)
Crossposted-To: alt.os.linux
Subject: Tcsh 6.01 for Linux
Date: 5 Apr 92 21:45:01 GMT

Hi, everyone!

I just uploaded tcsh 6.01 to funic.funet.fi. It should become
available in a few days.

The package contains a runnable binary, some documentation and
cdiffs against the official tcsh 6.01 release.

I compiled tcsh with GCC 2.0 (haven't had the nerve to try 2.1
yet ;-) ) using static libraries. I haven't tested it very
extensively, but I found no glaring bugs either. If you come
across any, be sure to drop me a note.

Have fun!

                Mika
--
Mika Liljeberg                  Email:  liljeber@kruuna.Helsinki.FI
Helsinki University                     Mika.Liljeberg@Helsinki.FI
Dept. of Computer Science
-- 
Mika Liljeberg                  Email:  liljeber@kruuna.Helsinki.FI
Helsinki University                     Mika.Liljeberg@Helsinki.FI
Dept. of Computer Science

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Crossposted-To: alt.os.linux
Subject: Re: Second 0.95a alpha-patch
Date: 5 Apr 92 17:44:30 GMT

I forgot to mention some of the changes this alpha-patch brings to the
user: the kernel include-files have been slightly changed in a couple of
cases, which can result in unexpected behaviour...

a.out.h is now the latest GNU a.out.h, and it seems to have slightly
different magic-number handling than the original 386-minix version I
used for older versions.  Without recompiling the kernel with the new
a.out.h, programs linked with the new binutils will not run (unable to
execute binary file errors).  This just means that even if you don't use
the patch in any other capacity, you had better upgrade to the new
a.out.h, or newer programs won't necessarily run.  Right now there are
no such binaries available, but when gcc2 gets more used, they will show
up. 

The other change is that limits.h and sys/dirent.h are now part of the
kernel include-files: they were needed for the readdir() system call. 
Normally this wouldn't change anything, but there is also a slight
change in limits.h - NAME_MAX is now defined to be 255 so that linux
will eventually handle filesystems with longer names than 14 chars. 
This means that the old direntry-routines in the library won't compile
correctly, as they depended on NAME_MAX being the size of a directory
name.  I hope the gcc-2 library won't have this problem, and that we can
move over to the more general readdir-function without undue growing
pains. 

The a.out.h change was made just to minimize the differences between the
linux headers and the library headers - but the second change is pretty
fundamental.  If you are porting software with the old libraries, I'd
suggest keeping to the old limits.h in /usr/include - that way nothing
should break until we get non-minix filesystems.  Adventurous people
might want to test out the new kernel functions that will be supported
even with new filesystems. 

In case anyone is wondering why the NAME_MAX change is needed, it's due
to the fact that the old /library/ readdir only handled a 14-char
library entry.  When the VFS code is enhanced to allow different
filesystems, you no longer can depend on this, and the library routine
wouldn't know what type of directory it's supposed to read - so the code
has to be moved into the kernel which knows about these things.  The new
readdir() will work correctly independently of the underlying filesystem
(so that you can freely mix different filesystems without needing to
bother about it). 

I'm sorry all this is certain to cause it's share of confusion (using
the old library with the new NAME_MAX and vice versa), but there wasn't
any graceful way to handle it all - unless I would have anticipated
these problems from the start, which I didn't...  You can console
yourselves with the thought that linux should be able to handle longer
filenames and >64MB partitions within a couple of releases. 

                Linus

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Crossposted-To: alt.os.linux
Subject: Re: Second 0.95a alpha-patch
Date: 5 Apr 92 17:44:30 GMT

I forgot to mention some of the changes this alpha-patch brings to the
user: the kernel include-files have been slightly changed in a couple of
cases, which can result in unexpected behaviour...

a.out.h is now the latest GNU a.out.h, and it seems to have slightly
different magic-number handling than the original 386-minix version I
used for older versions.  Without recompiling the kernel with the new
a.out.h, programs linked with the new binutils will not run (unable to
execute binary file errors).  This just means that even if you don't use
the patch in any other capacity, you had better upgrade to the new
a.out.h, or newer programs won't necessarily run.  Right now there are
no such binaries available, but when gcc2 gets more used, they will show
up. 

The other change is that limits.h and sys/dirent.h are now part of the
kernel include-files: they were needed for the readdir() system call. 
Normally this wouldn't change anything, but there is also a slight
change in limits.h - NAME_MAX is now defined to be 255 so that linux
will eventually handle filesystems with longer names than 14 chars. 
This means that the old direntry-routines in the library won't compile
correctly, as they depended on NAME_MAX being the size of a directory
name.  I hope the gcc-2 library won't have this problem, and that we can
move over to the more general readdir-function without undue growing
pains. 

The a.out.h change was made just to minimize the differences between the
linux headers and the library headers - but the second change is pretty
fundamental.  If you are porting software with the old libraries, I'd
suggest keeping to the old limits.h in /usr/include - that way nothing
should break until we get non-minix filesystems.  Adventurous people
might want to test out the new kernel functions that will be supported
even with new filesystems. 

In case anyone is wondering why the NAME_MAX change is needed, it's due
to the fact that the old /library/ readdir only handled a 14-char
library entry.  When the VFS code is enhanced to allow different
filesystems, you no longer can depend on this, and the library routine
wouldn't know what type of directory it's supposed to read - so the code
has to be moved into the kernel which knows about these things.  The new
readdir() will work correctly independently of the underlying filesystem
(so that you can freely mix different filesystems without needing to
bother about it). 

I'm sorry all this is certain to cause it's share of confusion (using
the old library with the new NAME_MAX and vice versa), but there wasn't
any graceful way to handle it all - unless I would have anticipated
these problems from the start, which I didn't...  You can console
yourselves with the thought that linux should be able to handle longer
filenames and >64MB partitions within a couple of releases. 

                Linus

------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: Binaries considered harmful
Reply-To: paula@atc.boeing.com
Date: Tue, 7 Apr 1992 05:40:01 GMT

(Subject line with appologies to E. Djikstra.  :-))

I have a proposal that I'd like people to consider.

I've been following Linux from the sidelines since last year sometime.
I've noticed that with each release some of the old binaries from the
previous release no longer work.  When people ask why some command or
other no longer works, the answer is often to recompile with the new
library, or with the new include files.  It seems to me that having
lots of old binaries around on the archive sites is causing more 
problems than it's worth.  Clearly, you need to have binaries for the
compiler and enough commands to bootstrap a system.  I think it's
counterproductive in the long run to distribute binaries for commands
that are not essential for bootstrapping.  They'll all eventually
be broken by some new release.

So here's my proposal:

- In addition to the binary boot and root images that currently 
  accompany new releases, a companion tarfile should be released
  containing things like the compiler for that release and other
  stuff that was too large to fit in the root image.

- Software that is not needed for bootstrapping should be placed in the
  archives in source or diff form only.

- Part of the process of installing a new Linux release is to recompile
  everything.

I may be missing something really obvious here, but I just don't see
the need for all these binaries.  I'd rather just have sources.  With
the exception of a few things that simply couldn't be compiled, Minix
has always been a source-only system.  (You got the binaries when you
bought Minix, and sources/diffs from the net kept you current from then
on.) I see no reason that Linux needs to work differently.  

I invite your comments, criticisms, flames, or whatever.

Paul Allen
pallen@atc.boeing.com

------------------------------

From: nicolai@lysator.liu.se (Nicolai Wadstr|m)
Subject: Has anyone thought about threads?
Date: 6 Apr 92 22:29:32 GMT

Has anyone given any thoughts on implementing threads in linux?
I know it's not a standard UNIX feature, but it's were nice to
write programs with threads, it's often possible to gain a lot
of performance in using threads.
(I've done a lot of OS/2 programming and just love the idea of 
threads!)
The shared libraray support (when implemented), will it be like
OS/2 DLL's? I mean a .lib or .dll file that is loaded upon runtime
of the program?

Regards,
                  nicolai, nicolai@lysator.liu.se


--
Nicolai Wadstr|m                   # Internet:      nicolai@lysator.liu.se
                                   #
                                   # BBS:           +46-40-124554 (down)
                                   # Voice:         +46-40-975535

------------------------------

Crossposted-To: comp.sys.ibm.pc.hardware
From: drew@caesar.cs.colorado.edu (Drew Eckhardt)
Subject: Re: Help: Straighten Me Out on SCSI Controller Cards (Host Adapter?)
Date: Tue, 7 Apr 1992 05:58:24 GMT

In article <1992Apr7.024452.10136@trantor.harris-atd.com> sonny@trantor.harris-atd.com (Bob Davis) writes:
>
>       I am *so* confused about SCSI -- all aspects of it. And I can't
>seem to locate answers. First, what do I get for the $250 for an Adaptec 1542
>SCSI controller that I don't get with the $150 controllers , or with the $35
>Seagate ST02?

The 1542 : 

Bus mastering - the controller will take over the bus and handle 
transfers itself.  

Other better SCSI hosts : 

The host has inteligence on it, and may have some amount of buffering,
where as the Seagate is (Trust me on this)... very dumb.  The card 
handles the ACK / REQ handshaking during asyncrhonous transfer, 
but that's about it.  You have to manually check what phase 
of the transfer you're in, weather or not your target is 
still online, etc.  This takes a LOT of time, and degrades 
performance.

The seagate hosts are not very well suited to a multi-tasking
environment :  they need the host CPU's attention 100% of the
time during a scsi command. (They can disconnect and generate interrupts on 
a reconnect, elimanating some overhead, but some braindamaged
drives don't support disconnect / reconnect, and you still have
the actual data transfer) 

This also means that no other 
tasks will be scheduled during an read / write operation from
seek to message out from the target.  On a better host, 
it will get back to you when it's done or time to 
actually transfer data.

>       I have an ST02 but I cannot get it to format a drive. Do I need
>a special piece of low level formatting software? I've tried using DOS
>DEBUG and g=C800:5 to run the BIOS format routine in the ST02 card ROM
>but it seems never to recognize that a hard drive is connected. I've
>programmed the Drive address to 000 for logical unit 0, but the BIOS
>routine keeps insisting that "unit 0 is not connected to this controller"
>when I tell it to format unit 0.

Disk mangler will format the drive, the BIOS calls should do it.

>       If you can recommend a file on the net, or a book, or any material
>for me to read that might make someone who is intimately familiar with
>LL formatting, partitioning, and FORMATting MFM and RLL hard drives feel
>comfortable with doing the analogous things to a SCSI drive, I'd like
>to hear about it. (How do I tell the system about Cylinders, Heads, and
>Sectors on a SCSI drive? How do I set up CMOS to tell it what kind of

You don't.  The SCSI host doesn't know about cylinders and the 
like - the SCSI device appears as an error free block device,
with logical block numbers from 0 to whatever (bad ones
can be mapped out).

In fact, many of the better drives use ZBR, and have zones of 
different densities (say 70 sectors on the outer tracks,
less on the inner tracks), and X sectors per track, Y 
cylinders per drive are reserved for spares.  This means
"normal" disk geometries do not apply.


Note that the SCSI BIOS will make the drive "appear" to have 
a normal BIOS interface, with cylinders, heads, etc.  This 
is just a facade, and can be pure fiction.  

>drive is connected?) I am lost...

You don't tell CMOS a drive is connected.  If the SCSI disk is your only
disk, tell it you don't have a hard disk.  The SCSI BIOS will then 
handle it.


------------------------------

From: drew@caesar.cs.colorado.edu (Drew Eckhardt)
Subject: Re: Linux Drivers and Kernel question.
Date: Tue, 7 Apr 1992 06:02:52 GMT

In article <2208@ariel.its.unimelb.EDU.AU> rab@tauon.ph.unimelb.EDU.AU writes:
>
>What I've been wondering is this: I suspect many of us would love to have X running
>on isolated PCs: is it possible to cut out all the X networking stuff ? Would this
>reduce the size of the server by very much ? Then we could have 2 X binaries to ftp ...
>

Nope.  X clients talk to the server through sockets - it doesn't matter
weather the socket is unix domain or something else, the same code has 
to be there.  

The biggest bloat in 'X' comes from libraries statically linked into 
each X file.

However, we now use shared libraries, which eliminates this problem.



------------------------------

From: erc@Apple.COM (Ed Carp)
Crossposted-To: alt.os.linux
Subject: Taylor-uucp 1.03 beta - porting status
Date: 7 Apr 92 01:59:19 GMT

This is a followup to a previously posted message.

I've fixed the problems with uuxqt and uux "memory fault".
Now all that remains is to fix the debug problem with
uucico.  And test the whole thing, of course! :)

Note:  I've configured the package for a BNU-style (HDB)
uucp, since that's what seems to be prevalent.  Others
will have to reconfigure by hand.

I'll be uploading the (hacked) sources and binaries
to tsx-11 either this evening or tomorrow.  The binaries
(with H. J.'s gcc 2.1 shared library stuff) are about
200K in a tar file - probably a bit less compressed.
The sources are about 600K compressed - this includes
all the docs, as well.

I've also included a sample Systems and Devices file,
for those who just can't wait (like me!) :)

When Ian makes the diffs to the real 1.03 release available,
I'll be releasing the whole thing over again.

A big THANK YOU goes to H. J. for his work in getting
gcc 2.1 to run!  Thanks!!

Stay tuned...
-- 
Ed Carp  N7EKG/6        erc@khijol.UUCP         erc@apple.com
                        Cupertino, CA           408/252-5947

-- Absolutely unabashed Gates McFadden groupie! --

------------------------------

From: erc@Apple.COM (Ed Carp)
Crossposted-To: alt.os.linux
Subject: Taylor-uucp 1.03 beta - porting status
Date: 7 Apr 92 01:59:19 GMT

This is a followup to a previously posted message.

I've fixed the problems with uuxqt and uux "memory fault".
Now all that remains is to fix the debug problem with
uucico.  And test the whole thing, of course! :)

Note:  I've configured the package for a BNU-style (HDB)
uucp, since that's what seems to be prevalent.  Others
will have to reconfigure by hand.

I'll be uploading the (hacked) sources and binaries
to tsx-11 either this evening or tomorrow.  The binaries
(with H. J.'s gcc 2.1 shared library stuff) are about
200K in a tar file - probably a bit less compressed.
The sources are about 600K compressed - this includes
all the docs, as well.

I've also included a sample Systems and Devices file,
for those who just can't wait (like me!) :)

When Ian makes the diffs to the real 1.03 release available,
I'll be releasing the whole thing over again.

A big THANK YOU goes to H. J. for his work in getting
gcc 2.1 to run!  Thanks!!

Stay tuned...
-- 
Ed Carp  N7EKG/6        erc@khijol.UUCP         erc@apple.com
                        Cupertino, CA           408/252-5947

-- Absolutely unabashed Gates McFadden groupie! --

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
