From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Tue, 14 Apr 92 03:30:09 EDT
Subject:  Linux-Activists Digest #63

Linux-Activists Digest #63, Volume #2            Tue, 14 Apr 92 03:30:09 EDT

Contents:
  Tcsh for linux, fixed release (Mika Pekka Liljeberg)
  Tcsh for linux, fixed release (Mika Pekka Liljeberg)
  Re: Thanks.... (Theodore Ts'o)
  Re: Needed: a guide to setting up swap space. (Alex Liu)
  Re: Patch to preset the SVGA mode (Alex Liu)
  gcc2.1 and gnulib? (Mika Matti Jalava)
  Bad blocks (Help Please !) (P Thomson)
  compile 95c kernel: fs.h not found? (Jiansheng Zhao)
  GCC2.1 (Wonderful !) (P Thomson)
  Re: Needed: a guide to setting up swap space. (Brett J. Vickers)
  Re: all kinds of questions (Bernard Joseph Gardner)
  Apology and question (Bernard Joseph Gardner)
  Re: Linux makefile (Jim Winstead Jr.)

----------------------------------------------------------------------------

From: liljeber@kruuna.Helsinki.FI (Mika Pekka Liljeberg)
Crossposted-To: alt.os.linux
Subject: Tcsh for linux, fixed release
Date: 14 Apr 92 01:02:38 GMT


Hi, everyone!

I recently released a tcsh port for Linux. It had several unfortunate
bugs and oversights, which I have (hopefully) now fixed. I just
uploaded the fixed version to nic.funet.fi. It should be available
shortly.

This release has been compiled with GCC 2.1 under Linux 0.95c+.
Therefore, the binary will not work in machines with pre-0.95c
kernel. Sorry about that, but you should be able to recompile
tcsh for older kernels, if you can't upgrade to 0.95c+ for some
reason.

Bombard me with bug reports, if need be! Thanks to everyone, who did.

        Mika


README file follows...
=========================================================================
Hello!

This is the second release of the Linux version of tcsh 6.01. The
package includes a ready-to-go binary of tcsh and some document files
and man pages from the official tcsh 6.01 release. For those, who wish
to compile everything by themselves, I have also included cdiffs to be
applied against the official source and a config.h file to be used
with Linux.

This release includes the following bug fixes:

1)      Several strange problems caused by improper signal handling
        have disappeared. The most noticeable of these were:

        - tcsh could be killed by pressing control-C twice in
          a sequence

        - Command line editor did not update the command line
          correctly in all cases.

2)      Linux specific signals are now displayed correctly in job
        control messages. The builtin `kill' command also accepts
        the full range of signals used in Linux.

3)      Pipes now work reliably with long files.

4)      An unmatched regular expression would cause a segmentation
        fault. Switching to GCC 2.1 and a newer library fixed this.


The binary has not been tested exhaustively and is quite possibly
still buggy. I would appreciate feed-back on that score. Tcsh was
compiled with GCC 2.1 using static libraries.


How to install:

Just copy tcsh into /usr/bin and tcsh.1 and glob.3 into /usr/man/man1
and /usr/man/man3 respectively. Tcsh can also be installed into
some other directory, but it was compiled to report the shell
path as /usr/bin/tcsh, so that is the preferred place.

IMPORTANT! The included binary will only run on Linux 0.95c or newer.
It is, however, possible to recompile tcsh under an older version of
Linux (see below) and the recompiled binary should run just fine.


How to compile:

To compile tcsh 6.01 you need to fetch the official release
tcsh-6.01.tar.Z from the nearest well-stocked archive site.
Unpack it into the same directory with this package and perform
the following steps:

1)      Apply the included patches on the source code:
        $ patch <linux.cdiff

2)      Copy the Linux config file from the config/ directory:
        $ cp config/config.linux config.h

3)      Run make:
        $ make

4)      Go and have some lunch (compilation takes a bit over 30
        minutes on a 25 MHz 386).


Comments and bug reports to:

liljeber@kruuna.Helsinki.FI


Enjoy!

        Mika Liljeberg

--
Mika Liljeberg                  Email:  liljeber@kruuna.Helsinki.FI
Helsinki University                     Mika.Liljeberg@Helsinki.FI
Dept. of Computer Science

------------------------------

From: liljeber@kruuna.Helsinki.FI (Mika Pekka Liljeberg)
Crossposted-To: alt.os.linux
Subject: Tcsh for linux, fixed release
Date: 14 Apr 92 01:02:38 GMT


Hi, everyone!

I recently released a tcsh port for Linux. It had several unfortunate
bugs and oversights, which I have (hopefully) now fixed. I just
uploaded the fixed version to nic.funet.fi. It should be available
shortly.

This release has been compiled with GCC 2.1 under Linux 0.95c+.
Therefore, the binary will not work in machines with pre-0.95c
kernel. Sorry about that, but you should be able to recompile
tcsh for older kernels, if you can't upgrade to 0.95c+ for some
reason.

Bombard me with bug reports, if need be! Thanks to everyone, who did.

        Mika


README file follows...
=========================================================================
Hello!

This is the second release of the Linux version of tcsh 6.01. The
package includes a ready-to-go binary of tcsh and some document files
and man pages from the official tcsh 6.01 release. For those, who wish
to compile everything by themselves, I have also included cdiffs to be
applied against the official source and a config.h file to be used
with Linux.

This release includes the following bug fixes:

1)      Several strange problems caused by improper signal handling
        have disappeared. The most noticeable of these were:

        - tcsh could be killed by pressing control-C twice in
          a sequence

        - Command line editor did not update the command line
          correctly in all cases.

2)      Linux specific signals are now displayed correctly in job
        control messages. The builtin `kill' command also accepts
        the full range of signals used in Linux.

3)      Pipes now work reliably with long files.

4)      An unmatched regular expression would cause a segmentation
        fault. Switching to GCC 2.1 and a newer library fixed this.


The binary has not been tested exhaustively and is quite possibly
still buggy. I would appreciate feed-back on that score. Tcsh was
compiled with GCC 2.1 using static libraries.


How to install:

Just copy tcsh into /usr/bin and tcsh.1 and glob.3 into /usr/man/man1
and /usr/man/man3 respectively. Tcsh can also be installed into
some other directory, but it was compiled to report the shell
path as /usr/bin/tcsh, so that is the preferred place.

IMPORTANT! The included binary will only run on Linux 0.95c or newer.
It is, however, possible to recompile tcsh under an older version of
Linux (see below) and the recompiled binary should run just fine.


How to compile:

To compile tcsh 6.01 you need to fetch the official release
tcsh-6.01.tar.Z from the nearest well-stocked archive site.
Unpack it into the same directory with this package and perform
the following steps:

1)      Apply the included patches on the source code:
        $ patch <linux.cdiff

2)      Copy the Linux config file from the config/ directory:
        $ cp config/config.linux config.h

3)      Run make:
        $ make

4)      Go and have some lunch (compilation takes a bit over 30
        minutes on a 25 MHz 386).


Comments and bug reports to:

liljeber@kruuna.Helsinki.FI


Enjoy!

        Mika Liljeberg

--
Mika Liljeberg                  Email:  liljeber@kruuna.Helsinki.FI
Helsinki University                     Mika.Liljeberg@Helsinki.FI
Dept. of Computer Science

------------------------------

From: tytso@ATHENA.MIT.EDU (Theodore Ts'o)
Subject: Re: Thanks....
Reply-To: tytso@athena.mit.edu
Date: Tue, 14 Apr 1992 05:02:00 GMT

   From: jgifford@attmail.com

   I was wondering, I have only had one digest from the activists list in the
   last 3 days, am I still subscribed?, or has traffic just been slow?

No, actually, there has been so much traffic on comp.os.linux that the
digestifying program I was using couldn't deal --- it was a perl script
that was trying to expand <$Newsdir/*> and it got a "too many arguments"
error; I had to rewrite it to use opendir/readdir/closedir.  The problem
was that people were being too prolific in the newsgroup!  :-)

In any case it's been fixed, as those of you who get the digest will
have noted, since you will have received five or six digests in quick
succession.  Sorry about that!  Thanks to Jim Gifford who called this
problem to my attention.

                                                - Ted

------------------------------

From: aliu@aludra.usc.edu (Alex Liu)
Subject: Re: Needed: a guide to setting up swap space.
Date: 13 Apr 1992 22:02:46 -0700

cummings@hammer.Prime.COM (Kevin Cummings) writes:

>>      * Is there any way to tell how much swap space you are using or
>> have left?

>Under SUNOS I do a "pstst -T".  I haven't seen a LINUX command yet to tell me
>how much is actually in use.  And seeing as gcc-1.4 didn't know when my disk
>was full (other that getting unexpected EOF error messages during compiliation)
>I wouldn't be surprised if LINUX doesn't detect "out of swap space" cleanly eit
>For now, I hope that 4MB of memory and 9MB of swap space is enough to not run o
>until we get something that tells us swap usage.

Actually, there is a program to do that... Along with the PS program, there
is a program called "FREE".  This reports the ammount of memory and the ammount
of swap pages available.  (Among other things).  You need to have a recompiled
kernel to be able to use PS, (and FREE) tho.

BTW, I had run out of swap space a couple of times, and Linux did exit cleanly.

-- 
_____________________________________________________________________________
Alejandro Liu           |EMail: aliu@usc.edu |All mispellings are intentional
3131 Mc Clintock #373F  |Voice: 213-745-2431 |Anything mentioned here is not
Los Angeles, CA 90007   |                    |necessarily true.

------------------------------

From: aliu@aludra.usc.edu (Alex Liu)
Subject: Re: Patch to preset the SVGA mode
Date: 13 Apr 1992 22:06:45 -0700

dennisf@Miles.COM (Dennis Flaherty) writes:

>> >
>> >If you are tired of hitting RETURN and selecting the
>> >same SVGA mode every time you boot Linux, apply this
>> >patch and rebuild the kernel.  It allows you to preset
>> >the mode in the Makefile, so that the setup program
>> >proceeds as if you had hit RETURN and your favorite number.

How about asking the user to press RETURN, but if he/she doesnt press
anything in 5 secs (or 10 or whatever) just choose a compiled default?

This might be trivial, but I am not an assembly programmer and I wouldnt
know where to start.

BTW, it would be even nicer to be able to switch modes any time, is this
possible?

-- 
_____________________________________________________________________________
Alejandro Liu           |EMail: aliu@usc.edu |All mispellings are intentional
3131 Mc Clintock #373F  |Voice: 213-745-2431 |Anything mentioned here is not
Los Angeles, CA 90007   |                    |necessarily true.

------------------------------

From: r36110m@kaira.hut.fi (Mika Matti Jalava)
Subject: gcc2.1 and gnulib?
Date: 13 Apr 92 16:26:12 GMT

What might I be doing wrong now? I've been trying to compile the
kernel and the build utility that comes with it. ld (the one from
binutils.tar.Z and also an old one) complains about not finding
gnulib. That isn't distributed with 2.1misc.tar.Z or 2.1lib.tar.Z.
Where do I find it or is there something else wrong?

        Mika

------------------------------

From: pthoms@castle.ed.ac.uk (P Thomson)
Subject: Bad blocks (Help Please !)
Date: 13 Apr 92 22:13:08 GMT

Hi, Can some one tell me if it is possible to hack/mask out bad blocks
after 15+ Mbytes of Linux is installed, without having to take the system
down and start again


        Thanks in advance Peter.


P.S also a note on tar and /dev/at0.  This might not be worth much to
anyone but it bugged me for a couple of hours today.  If you use rawrite
to write a large file to a floppy.  It is best to reformat the floppy
afterwards for the next time you are going to use it.  I kept getting
tar skipping..  messages in my tar files when I knew there should'nt be any
Formatting the disk cured the problem.

------------------------------

From: zhao@unixg.ubc.ca (Jiansheng Zhao)
Subject: compile 95c kernel: fs.h not found?
Date: Tue, 14 Apr 1992 05:12:52 GMT

When compiling kernel 95c+, I got the following error message:
tools/build.c:28 linux/fs.h:No such file or directory
I remember someone has posted solution for this problem, but can't remember
exactly how. BTW, there was a file fs.h.


------------------------------

From: pthoms@castle.ed.ac.uk (P Thomson)
Subject: GCC2.1 (Wonderful !)
Date: 14 Apr 92 02:20:15 GMT


Hi Again, Thought I'd mail and pitch linux again (not that most of
the subscribers here are not already sold =8^) ).


There seem to be some band width about problems with gcc2.1, I would
like to say that after installing it and getting the swap space 
sorted out I've had no problems. In fact running it on 2M bytes memory
4M swap space I managed to compile the best part of 1M byte of source
code this evening (in about 30 minutes) the amount of disk traffic
was not nearly as bad as I thought it might be. The source code was
the empire type game dominion ( I've stuck a bit on the bottom about
were you can find it) and it compiled with the minimum of effort
(1 tweek the makeworld.c file )


So thanks to all concerned, Linux is just so more sexier than dos.

                Peter.

P.S. thanks to the guys whom mailed me with the answers to my 
problems during installation.

======================================================================
WHAT IS THIS?
=============
 
This is release of Dominion (version 1.06), a world simulation and
conquest game.  Dominion runs on every version of UNIX on which we
have tested it.
 
The dominion source code is available by anonymous ftp on
max.physics.sunysb.edu [129.49.21.100], in the directory
pub/dominion-version.  For example, to get version 1.06 you would
type:
 
        ftp -i max.physics.sunysb.edu           (or ftp -i 129.49.21.100)
        <log in as "anonymous", with any password you want>
        cd pub/dominion-1.06
        ls
        binary
        mget DOM*
 
The files you will retrieve are "shell archives", so after
uncompressing, you un-bundle them with the Bourne shell.
 
Send bug reports to:
        rosalia@max.physics.sunysb.edu
 
Send flames to /dev/tty :-).
 
Don't forget that this is copylefted free software.  Read the file COPYING.
 

------------------------------

From: bvickers@bonnie.ics.uci.edu (Brett J. Vickers)
Subject: Re: Needed: a guide to setting up swap space.
Date: 14 Apr 92 06:33:15 GMT
Reply-To: bvickers@ics.uci.edu (Brett J. Vickers)

cummings@hammer.Prime.COM (Kevin Cummings) writes:
>Step 3)        After the partition is ready for swapping, I turned it on via
>       "swapon /dev/hda4" to see if there would be any problems and ran that
>       way for a while.

Hmmm.  I created a swap file of 1024 blocks as a test, ran mkswap
on it, and then tried to run swapon on it.  What I got was the
following:

Unable to find swap-space signature
Error adding 'swapfile' as swap
swapon: EINVAL

Any ideas on why I can't use it as a swapfile?  mkswap seemed
to work just fine on it.  It's using swapon that's giving me
a problem.

Brett

--
bvickers@ics.uci.edu | "Wherever the real power in a Government lies, there
brett@ucippro.bitnet |  is the danger of oppression." - James Madison

------------------------------

From: 9041592@mango.cs.su.OZ.AU (Bernard Joseph Gardner)
Subject: Re: all kinds of questions
Date: 15 Apr 92 06:30:02 GMT
Reply-To: 9041592@basser.cs.su.OZ.AU (Bernard Joseph Gardner)


In article <45188@mentor.cc.purdue.edu> cheetah@sage.cc.purdue.edu (Bowen Goletz) writes:
 In article <1992Apr13.191537.8035@coe.montana.edu> icsu8268@cs.montana.edu (Greenup) writes:
 >
 >Hello netters!
 >   I just booted up for the first time two days ago, and now I'm a happy
 >Linux user.  Well, almost.  I do have a few questions...

 >2. why doesn't "tar +help | more" work?
 
        The help output is through stderr insted of stdio (why?)  If you
 want to pipe stderr, use the amperstand (&).  For example: tar &> tar.help.
 Then more the tar.help file.  For some reason, stderr pipes aren't supported
 with bash.  You should be able to do a &| to pipe the output directly to
 more in the first place.

Another solution is 'tar +help 2>&1 |more' (This combines stderr with stdout
which is then piped through more)

Bernard.

Newsgroups: alt.os.linux
Subject: 
Summary:
Expires:
Sender:
Reply-To: 9041592@basser.cs.su.OZ.AU (Bernard Joseph Gardner)
Followup-To:
Distribution: 
Organization: Basser Dept of Computer Science, University of Sydney, Australia
Keywords: 


Newsgroups: comp.os.linux
Subject: Re: all kinds of questions
Summary:
Expires:
References: <1992Apr13.191537.8035@coe.montana.edu> <45188@mentor.cc.purdue.edu>
Sender:
Reply-To: 9041592@basser.cs.su.OZ.AU (Bernard Joseph Gardner)
Followup-To:
Distribution: 
Organization: Basser Dept of Computer Science, University of Sydney, Australia
Keywords: 


In article <45188@mentor.cc.purdue.edu> cheetah@sage.cc.purdue.edu (Bowen Goletz) writes:
 In article <1992Apr13.191537.8035@coe.montana.edu> icsu8268@cs.montana.edu (Greenup) writes:
 >
 >Hello netters!
 >   I just booted up for the first time two days ago, and now I'm a happy
 >Linux user.  Well, almost.  I do have a few questions...

 >2. why doesn't "tar +help | more" work?
 
        The help output is through stderr insted of stdio (why?)  If you
 want to pipe stderr, use the amperstand (&).  For example: tar &> tar.help.
 Then more the tar.help file.  For some reason, stderr pipes aren't supported
 with bash.  You should be able to do a &| to pipe the output directly to
 more in the first place.

Another solution is 'tar +help 2>&1 |more' (This combines stderr with stdout
which is then piped through more)

Bernard.

------------------------------

From: 9041592@zeppo.cs.su.OZ.AU (Bernard Joseph Gardner)
Subject: Apology and question
Date: 15 Apr 92 06:54:19 GMT
Reply-To: 9041592@basser.cs.su.OZ.AU (Bernard Gardner)

Well, first, an apology for the multiply included garbage in that previous post,
I really hate the news software here :)

Anyway, my real question is with regard to cut and paste using the mouse. Has
anyone implemented such a beastie? 

If not, I might make it one of my pet projects.

Bernard.

------------------------------

From: jwinstea@jarthur.claremont.edu (Jim Winstead Jr.)
Subject: Re: Linux makefile
Date: 14 Apr 92 07:05:24 GMT

In article <1992Apr14.032052.21137@athena.mit.edu> Epstein@DOCKMASTER.NCSC.MIL writes:
>With mv math_emulate.c to emulate.c got linux-0.95c+ to compile.

That's strange - I didn't have any sort of problems of that sort.
Anybody else seen this?

>Recommend adding sync line at end of disk:  ala Image:  which already
>ends with a sync.

All disk: does is write to floppy using 'dd', which is not buffered a
la the filesystem.  The sync certainly won't hurt, but it really isn't
necessary at all.

>BTW:  CTRL-ALT-DEL using AMI BIOS on 386 no longer works, am I suppose
>to use the re-boot program?

I haven't noticed this problem, either.  Check kernel/sys.c to make
sure C_A_D is set equal to 1 (right near the beginning of the file).

>I find the speeded-up auto-repeat too fast.  This "feature" should be in
>the top level Makefile (I actually haven't looked where its at).

This would be a pretty trivial fix - the code is in boot/setup.S,
which is compiled directly by the top-level Makefile.  A simple #ifdef
wrapper and a define in the Makefile should do it.  Linus?

(I like the auto-repeat fast - it's a patch that I applied manually to
0.11, 0.12 and 0.95 before I convinced Linus to add it to 0.95a, along
with the 80x50 code.  :)

Speaking of the 80x50 code, does anyone know of a simple routine to
tell the difference between VGA and EGA monitors?  Apparently there
are problems with using 80x43 on EGA screens because Linux thinks it's
really 80x50.  (Actually, I know of one quick 'n dirty way to fix
this, but I was hoping for a more elegant answer.)
-- 
Jim Winstead Jr. (CSci '95)    | "Catch a fish!"
Harvey Mudd College            |  -Geddy Lee,
jwinstea@jarthur.Claremont.EDU |   San Diego Sports Arena
Disclaimer: Mine, not theirs!  |   January 20, 1992

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
