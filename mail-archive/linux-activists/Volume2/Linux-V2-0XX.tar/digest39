From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Tue, 7 Apr 92 16:45:23 EDT
Subject:  Linux-Activists Digest #39

Linux-Activists Digest #39, Volume #2             Tue, 7 Apr 92 16:45:23 EDT

Contents:
  Re: IMPORTANT: gcc 2.1, libc.a 2.1a and Linux (Will Clark)
  Re: IMPORTANT: gcc 2.1, libc.a 2.1a and Linux (Will Clark)
  dvilj2p (thomas dunbar)
  Re: vile 3.13 + gcc 2.1 anyone? (Paul Fox)
  Re: vile 3.13 + gcc 2.1 anyone? (Paul Fox)
  Re: problem compiling kernel... (Haohui Wang)
  Re: problem compiling kernel... (Haohui Wang)
  Re: Binaries considered harmful (Will Clark)
  (none) (Paul Allen)
  bash ? (David.L.)
  mtools (mcopy) problems (Michael K. Johnson)
  RE: Linux-Activists Digest #38 (Kevin L. Allred, 615-875-7167)
  Re: Binaries considered harmful (Jim Winstead Jr.)

----------------------------------------------------------------------------

From: harlick@lindy.Stanford.EDU (Will Clark)
Crossposted-To: alt.os.linux
Subject: Re: IMPORTANT: gcc 2.1, libc.a 2.1a and Linux
Date: 7 Apr 92 17:56:40 GMT

In article <1992Apr6.211500.7340@serval.net.wsu.edu> hlu@luke.eecs.wsu.edu (Hongjiu Lu -- Graduate Student) writes:
>Hi,
>
>I heard there were some problems with binaries linked with my new ld.
>That is caused by the new a.out.h introduced with Linus's second patch.
>The new a.out.h is compatible with the old one, But not vice versa.
>
>My new ld (binutils.tar.Z) uses the new a.out.h. The binaries
>linked by it can only run under the kernel with Linus's second patch,
>which has to be built by the old ld.
>
>Any programs using the old a.out.h, e.g., gdb, will not recognize the
>binaries linked by the new ld. You can either use the old ld or use
>the new version compiled with the new a.out.h.
>
>From Linus's second patch, we are moving to VFS. As a result, there
>will be some changes in libc.a. That means next release of gcc 2.x and
>libs will not run under the kernel below Linus's second patch to 0.95a.
>I strongly recommend you move to 0.95a with Linus's second patch if you
>haven't done so.
>
>H.J.


A plea from the C-impaired:  (Am I the only one using Linux?)

Someone please put a 0.95c boot image somewhere for FTP.

I am trying to learn enough about C to feel at least a little
comfortable with kernel patching.  I'd like to use gcc 2.1, but to do
that I have to patch the kernel ...

Will Clark (Baseball season is here!)
will.an@site007.saic.com
========================
SAIC does not share my opinions.
harlick@lindy is a friend's account, but you can send me email here, too.

------------------------------

From: harlick@lindy.Stanford.EDU (Will Clark)
Crossposted-To: alt.os.linux
Subject: Re: IMPORTANT: gcc 2.1, libc.a 2.1a and Linux
Date: 7 Apr 92 17:56:40 GMT

In article <1992Apr6.211500.7340@serval.net.wsu.edu> hlu@luke.eecs.wsu.edu (Hongjiu Lu -- Graduate Student) writes:
>Hi,
>
>I heard there were some problems with binaries linked with my new ld.
>That is caused by the new a.out.h introduced with Linus's second patch.
>The new a.out.h is compatible with the old one, But not vice versa.
>
>My new ld (binutils.tar.Z) uses the new a.out.h. The binaries
>linked by it can only run under the kernel with Linus's second patch,
>which has to be built by the old ld.
>
>Any programs using the old a.out.h, e.g., gdb, will not recognize the
>binaries linked by the new ld. You can either use the old ld or use
>the new version compiled with the new a.out.h.
>
>From Linus's second patch, we are moving to VFS. As a result, there
>will be some changes in libc.a. That means next release of gcc 2.x and
>libs will not run under the kernel below Linus's second patch to 0.95a.
>I strongly recommend you move to 0.95a with Linus's second patch if you
>haven't done so.
>
>H.J.


A plea from the C-impaired:  (Am I the only one using Linux?)

Someone please put a 0.95c boot image somewhere for FTP.

I am trying to learn enough about C to feel at least a little
comfortable with kernel patching.  I'd like to use gcc 2.1, but to do
that I have to patch the kernel ...

Will Clark (Baseball season is here!)
will.an@site007.saic.com
========================
SAIC does not share my opinions.
harlick@lindy is a friend's account, but you can send me email here, too.

------------------------------

From: thomas dunbar <GSTD@VTVM2.CC.VT.EDU>
Subject: dvilj2p
Reply-To: GSTD@VTVM2.CC.VT.EDU
Date: Tue, 7 Apr 1992 18:35:42 GMT

uploaded dvilj2p.tar.Z to tsx-11.mit.edu
  this is a laserjet driver for TeX dvi files. the binary is for IIp,
IIIp, III, & IIIsi. includes info on diffs from the ftp.wu-wien.ac.at
(dir /pub/src/Typeset/dvi2xx) source and fonts needed for printing
the included man-page dvi.
   speaking of source/binaries, it is specifically the binaries (and
diffs) that should be posted at the Linux sites. If i want the source
for gcc, etc., it is easily available elsewhere. besides, not many binaries
break in kernel updates.

------------------------------

From: pgf@cayman.COM (Paul Fox)
Crossposted-To: alt.os.linux
Subject: Re: vile 3.13 + gcc 2.1 anyone?
Date: 7 Apr 92 18:08:53 GMT

hlu@EECS.WSU.EDU (Hongjiu Lu -- Graduate Student) writes:
: How good is vile? 3.13 is out. Is anyone doing the porting? If you are not
: using gcc 2.1, please do.

I'm not doing anything linux-like right now -- but I recommend version 3.14
of vile, due to a (possible) file corruption bug in earlier versions of vile
(3.8 through 3.13).  (It may not show up in linux -- it depends on the
behaviour of realloc(), when asked to shorten a buffer).

paul fox, pgf@cayman.com
(vile is available from ftp.cayman.com, in pub/vile
-- 
                paul fox, pgf@cayman.com, (617)494-1999
                Cayman Systems, 26 Landsdowne St., Cambridge, MA 02139

------------------------------

From: pgf@cayman.COM (Paul Fox)
Crossposted-To: alt.os.linux
Subject: Re: vile 3.13 + gcc 2.1 anyone?
Date: 7 Apr 92 18:08:53 GMT

hlu@EECS.WSU.EDU (Hongjiu Lu -- Graduate Student) writes:
: How good is vile? 3.13 is out. Is anyone doing the porting? If you are not
: using gcc 2.1, please do.

I'm not doing anything linux-like right now -- but I recommend version 3.14
of vile, due to a (possible) file corruption bug in earlier versions of vile
(3.8 through 3.13).  (It may not show up in linux -- it depends on the
behaviour of realloc(), when asked to shorten a buffer).

paul fox, pgf@cayman.com
(vile is available from ftp.cayman.com, in pub/vile
-- 
                paul fox, pgf@cayman.com, (617)494-1999
                Cayman Systems, 26 Landsdowne St., Cambridge, MA 02139

------------------------------

From: wang-i@acsu.buffalo.edu (Haohui Wang)
Crossposted-To: alt.os.linux
Subject: Re: problem compiling kernel...
Date: 7 Apr 92 18:15:41 GMT

In article <5258@pdxgate.UUCP> moyerg@jove.cs.pdx.edu (gary a moyer) writes:
>Has anyone gotten the following error when compiling
>the kernel:
>(compiling fork.c..)
>caught fatal signal 6 (??!!?)
>
>Has anyone else had this happen on the way to a kernel build ?
>
>               Thx.  moyerg@cs.pdx.edu

Same here.  Can anyone who compiled kernel post a summary or something?

thanks 

howie

------------------------------

From: wang-i@acsu.buffalo.edu (Haohui Wang)
Crossposted-To: alt.os.linux
Subject: Re: problem compiling kernel...
Date: 7 Apr 92 18:15:41 GMT

In article <5258@pdxgate.UUCP> moyerg@jove.cs.pdx.edu (gary a moyer) writes:
>Has anyone gotten the following error when compiling
>the kernel:
>(compiling fork.c..)
>caught fatal signal 6 (??!!?)
>
>Has anyone else had this happen on the way to a kernel build ?
>
>               Thx.  moyerg@cs.pdx.edu

Same here.  Can anyone who compiled kernel post a summary or something?

thanks 

howie

------------------------------

From: harlick@lindy.Stanford.EDU (Will Clark)
Subject: Re: Binaries considered harmful
Date: 7 Apr 92 18:23:31 GMT

In article <1992Apr7.054001.3797@athena.mit.edu> paula@atc.boeing.com writes:
>(Subject line with appologies to E. Djikstra.  :-))
>
>I have a proposal that I'd like people to consider.
>

>- In addition to the binary boot and root images that currently 
>  accompany new releases, a companion tarfile should be released
>  containing things like the compiler for that release and other
>  stuff that was too large to fit in the root image.

That's one hell of a tar!  I'm sure plenty of people are eager to
download this via modem.  :-) (The phones is this building can't get
through more than about 100 K before trashing the connection.  We *do*
have ethernet-to-internet too, but not everyone does.)

>- Software that is not needed for bootstrapping should be placed in the
>  archives in source or diff form only.
>
>- Part of the process of installing a new Linux release is to recompile
>  everything.

Aieeee!  Nooooo!  Don't get rid of the binaries.  I'm not good enough
with C, patching, etc. to recompile every time a new version comes
out.  If this happens, I'm really screwed.  Yes this is a hacker's
kernel/system, but there are some people who'd like to learn about
*nix with a good free system, (I am certainly one of those) but are
not necessarily good at programming.  (I'm one of these, too.)

>I may be missing something really obvious here, but I just don't see
>the need for all these binaries.  I'd rather just have sources.  With
>the exception of a few things that simply couldn't be compiled, Minix
>has always been a source-only system.  (You got the binaries when you
>bought Minix, and sources/diffs from the net kept you current from then
>on.) I see no reason that Linux needs to work differently.  

If you're worried about binaries not running under the newest release,
wait a couple of weeks/months before moving over.  The stuff that
needs to be hacked and recompiled will be, and the rest doesn't need
changing.  If you need the new release, and can fix stuff yourself, do
so.  Happily, there are plenty of these people out there who upload
their ports for FTP, which means *I* can play with this great OS!

>I invite your comments, criticisms, flames, or whatever.

Always glad to help!

>Paul Allen
>pallen@atc.boeing.com

Will Clark (Hoping the Giants do a little better this year.)
will.an@site007.saic.com
========================
SAIC does not share my opinions.
harlick@lindy is a friend's account, but you can send me email here, too.

------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: (none)
Reply-To: paula@atc.boeing.com
Date: Tue, 7 Apr 1992 19:42:22 GMT

Drew Eckhardt (drew@caesar.cs.colorado.edu) wrote:

|In article <1992Apr7.054001.3797@athena.mit.edu> paula@atc.boeing.com writes:
|>(Subject line with appologies to E. Djikstra.  :-))
|>
|>I have a proposal that I'd like people to consider.
|>
|>[...some of my text omitted...]
|>
|
|Other than programs which depend on the internal structure of 
|Linux (this would be the ps packages, the file system utilities
|such as fdisk, etc), what programs have broken with new releases of 
|Linux?  

Well, you would know better than I.  If the older binaries are as stable
as you say, my proposal is even more attractive.

|>So here's my proposal:
|>
|>- In addition to the binary boot and root images that currently 
|>  accompany new releases, a companion tarfile should be released
|>  containing things like the compiler for that release and other
|>  stuff that was too large to fit in the root image.
|
|
|The difficulty with one big tar file is in downloading it,
|passing it through your internet site without incuring the wrath
|of the sysadmins and disk quotas,  transfering it on floppy 
|disks, etc.

And that problem doesn't exist now?  I notice that two of the files
comprising the new gcc 2.1 are larger than a 5" HD diskette.  If the
binaries are stable across releases, then any one individual only
needs to get them once.  They don't have to be stored in a single 10Mb
tar file.

|>- Software that is not needed for bootstrapping should be placed in the
|>  archives in source or diff form only.
|
|I'm glad you have the disk space and time to spare.  I don't. 
|The last time I built gcc, it used over 30M of disk space.  The last time
|I built X, it took close to 200M of disk space, and 24 hours to 
|build on a 50Mhz 68030 with 16M of real memory (This is somewhat longer 
|than it had to be, as the 
|disks were NFS mounted).  X is an extreme case, but exemplifies the
|kind of software that people will be running on Linux as it becomes
|more refined, stable, and popular.

Yep.  Gcc, especially 2.x, is right on the edge of being unmanageable
on small systems.  But this is beside the point.  The compiler is
clearly needed for bootstrapping a system, and must be available in
binary form.  X (IMHO) is out of the question.  I would be extremely
unlikely to use a binary-only X distribution for Linux.  I want the
sources.  If I can't have them, for whatever reason, I probably won't
run the software.

|The smaller programs (shell utils, file utils, mtools, elvis / micro
|emacs) can be dealt with, but it is still more convienient for users 
|to have a binary available so they don't have to do it themselves.

I *want* to do it myself.  With the exception of essential bootstrapping
tools, I don't need anyone to make binaries for me.  I'm going to build
things like elvis from sources.  The most convenient thing for me would
be to find Linux diffs for elvis on an archive site, possibly accompanied
by the original sources.  Downloading a huge binary just to get the
diffs that are packaged with it is wasteful and inconvenient.

|>- Part of the process of installing a new Linux release is to recompile
|>  everything.
|>
|
|When I've installed a new linux release, it's 
|consisted of getting the new boot image, getting the new kernel
|source, and performing the following procedure : 
|
|[...simple procedure omitted...]
|
|>I may be missing something really obvious here, but I just don't see
|>the need for all these binaries.  I'd rather just have sources.  With
|>the exception of a few things that simply couldn't be compiled, Minix
|>has always been a source-only system.  (You got the binaries when you
|>bought Minix, and sources/diffs from the net kept you current from then
|>on.) I see no reason that Linux needs to work differently.  
|>
|>I invite your comments, criticisms, flames, or whatever.
|>
|In conclusion : 
|
|1.  Things are not as unstable as you claim they are, and I would 
|        venture to say that most upgrades are in pursuit of 
|        having the latest, neat new features, or bug fixes to
|        the source.

This is welcome news, and doesn't detract from my proposal.

|2.  Binary distributions are significantly smaller than
|        source distributions, take less time to
|        download, less disk space, and less time
|        because they don't need to be compiled.
|

A context diff might be smaller than the binary, depending on the
complexity of the port.  Diffs are more useful than a binary because
they let me regenerate the sources from which the binary was built.
And I *will* have the sources for everything I run on my system.

|3.  Linux is getting real users, not hackers.  These people 
|        want something that works like DOS, they
|        see something they like, grab it from their 
|        favorite BBS, and run it.  Period.      

Eh?  Actual non-programming end-users?  Going through the hassle of
setting up a Linux system because it's so useful???  Wow!  I don't
see this happing anytime soon.  An end-user who wants to run a word-
processor or a spreadsheet will either use DOS or a Mac, IMHO.
  
|        I'm not saying that it's a good thing, 
|        but given the little trouble it takes, 
|        it's not a bad thing to offer a binary 
|        distribution for these people.

|Source should be freely available to anyone who wants it, 
|but a more convienient binary distribution should also
|be available.

What's the most important thing?  The binaries, or the sources?  I
think a convenient source/diff distribution should be available.  It
currently is not.  Once the sources are handled, I've got no problem
with providing binaries for those who choose not to compile their own.

Paul Allen

------------------------------

From: audit036@spacm1.spac.spc.com (David.L.)
Subject: bash ?
Date: 7 Apr 92 19:26:26 GMT

Hi

Where do I get am image or sources for bash ? do I need to get the earlier root
image ? (.12 , .11 ) ? I'm using 0.95a.

--
---->   david@chaos.spc.com     OR      audit036@spacm1.spac.spc.com
David L.

------------------------------

From: johnsonm@stolaf.edu (Michael K. Johnson)
Subject: mtools (mcopy) problems
Reply-To: johnsonm@stolaf.edu (Michael K. Johnson)
Date: Tue, 7 Apr 1992 20:36:13 GMT

Are you using the mtools.n.tar.Z version?  If not, get it, as it works
and is configurable to whatever environment.

michaelkjohnson
johnsonm@stolaf.edu

------------------------------

From: allredkl@choc01.dnet.dupont.com (Kevin L. Allred, 615-875-7167)
Subject: RE: Linux-Activists Digest #38
Reply-To: allredkl@choc01.dnet.dupont.com (Kevin L. Allred, 615-875-7167)
Date: Tue, 7 Apr 1992 20:39:28 GMT

burley@albert.gnu.ai.mit.edu (Craig Burley) writes:

| I suggest you ftp to research.att.com, login as netlib (I think;
| maybe it's anonymous ftp, but I think they changed that), get f2c
| from ~dist/f2c or some such place, and use that to compile your
| Fortran code for use on Linux.

You can also mail a request to netlib with the following syntax:

        mailsize 1000000
        send index from f2c
        send all from f2c/src
        send fc from f2c
        send libf77 from f2c
        send libi77 from f2c

You may need to adjust the mailsize number if your mailer can't
handle such big chunks.

You will probably receive the files within a few minutes if you
are on a fast link to netlib.  Each reply will be a shell archive
that you can extract inside Linux.  The index file will explain
about the rest.

| If nobody seems to have gotten f2c ported to Linux by the time I
| get Linux working on my machine, I'll do it myself and let people
| know what changes, if any, need to be made.  I doubt it'll be
| much; I've gotten f2c running on two 68k machines (HP and NeXT)
| and a Sun4 with a trivial amount of work. (On the other hand, I
| haven't run a whole lot of Fortran code through it anywhere,
| yet.) --

It was almost effortless to build it as delivered, but I did need
to have a complete set of include files from the KERNEL
distribution to do it.  The only problem I had was with
reconciling a couple of the include files (seems there hasn't
been complete continuity retained between the 0.12 set and the
0.95 set).  After a short amount of work (30 min), I had a
working F2C -- sorry I don't have diffs to post.  My only
problem, has been with GCC 1.40, as the -l parameter doesn't seem
to work correctly, and the F2C libraries never get accessed at
link time.  I have to explicitly list the libraries to
successfully link.  For example:

        f2c test.f
        gcc -c test.c
        gcc -o test test.c /usr/lib/libF77.a /usr/lib/libI77.a

works, but:

        f2c test.f
        gcc -o test -lF77 -lI77 test.c

doesn't.  I sure hope the GCC 2.0 release works better.

------------------------------

From: jwinstea@jarthur.claremont.edu (Jim Winstead Jr.)
Subject: Re: Binaries considered harmful
Date: Tue, 7 Apr 1992 20:16:18 GMT

In article <1992Apr7.124221.16198@news.Hawaii.Edu> lee@uhunix.uhcc.Hawaii.Edu (Greg Lee) writes:
>I have never found source code for update.  The source code I have for
>fsck doesn't come close to compiling with the current linux include
>files.

I have the (as I know it) most current source for all of this, and
I'll be uploading them as a package today (hopefully) to tsx-11, etc,
and they should be available soon.  Look for system-0.95a.tar.Z.

Included:
        chsh    -       new to this release (change shell for a user)
        doshell -       start a process on another tty
        fdisk-x -       fdisk that understands extended partitions
        fdisk   -       the old fdisk
        hostname-       set your computer's name!
        mkfs    -       make a filesystem
        mknod   -       make a device
        mkswap  -       make a swap device/file
        mount   -       mount a filesystem
        passwd  -       change a user's password
        pwd     -       print working directory (from BSD)
        rootdev -       display/change root device (rdev.c)
        setterm -       set terminal characteristics
        swapon  -       use a swap file/partition
        sync    -       sync the filesystem (monster source! :)
        umount  -       unmount a filesystem
        update  -       background update thing - syncs filesystem

Like I said, keep an eye out for 'em - they are mostly the versions
from the 0.95a root disk, with some cleanup of the code, the addition
of a couple of minor utilities, and some other minor changes.

Er, now that I look at the list again, I notice I don't have fsck.
If I remember correctly, Linus mentioned having lost this source in a
hard drive disaster - anyone want to rebuild it?
-- 
Jim Winstead Jr. (CSci '95)    | "Catch a fish!"
Harvey Mudd College            |  -Geddy Lee,
jwinstea@jarthur.Claremont.EDU |   San Diego Sports Arena
Disclaimer: Mine, not theirs!  |   January 20, 1992

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
