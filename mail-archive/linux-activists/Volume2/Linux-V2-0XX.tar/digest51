Subject: Linux-Activists Digest #51
From: Digestifier <Linux-Activists-Request@BLOOM-PICAYUNE.MIT.EDU>
To: Linux-Activists@BLOOM-PICAYUNE.MIT.EDU
Reply-To: Linux-Activists@BLOOM-PICAYUNE.MIT.EDU
Date:     Fri, 10 Apr 92 20:15:20 EDT

Linux-Activists Digest #51, Volume #2            Fri, 10 Apr 92 20:15:20 EDT

Contents:
  Compiling 0.95c+ (Dale Ulan)
  Re: Re: kermit5a (Rob Coleman)
  Re: Meta-Question (Drew Eckhardt)
  Re: Has anyone thought about threads? (Drew Eckhardt)
  Re: Linux SCSI support (M. Saggaf)
  Re:  Linux-Activists Digest #41 (Scott Beckstead)
  got root95c+, now need device driver for lp0... (gary a moyer)
  got root95c+, now need device driver for lp0... (gary a moyer)
  Re: Problems with serial port drivers?? (Charles Hedrick)
  Re: Problems with serial port drivers?? (Charles Hedrick)
  Modems and com port access (William A Jones)
  Re: Linux SCSI support (Drew Eckhardt)
  Re: got root95c+, now need device driver for lp0... (Drew Eckhardt)
  Re: got root95c+, now need device driver for lp0... (Drew Eckhardt)

----------------------------------------------------------------------------

From: ulan@ee.ualberta.ca (Dale Ulan)
Subject: Compiling 0.95c+
Reply-To: ulan@ee.ualberta.ca (Dale Ulan)
Date: Fri, 10 Apr 1992 21:04:18 GMT


To Linus: Great job/ great idea!


Now... the problem. 

I am having a (very) hard time getting 0.95c+ to compile.

It compiles with about five or six 'incompatible pointer' warnings,
and gets to disk no problem.

After booting, this is what appears:

8 virtual consoles
4 pty's
lp_init: lp1 exists (0)
stack segment:0000
EIP: 0008:0000D752
EFLAGS: 00010202
fs: 0010
base 00000000  limit  000A0000
pid: 0, process nr: 0
8b 45 d0 66 c7 04 cd e0 a4 00

Kernel panic: Trying to free up swapper memory space
In swapper task- not syncing

Here are the details of compiling:

software emulation flag is still set 'as was' in the .95c+ Makefile.

rootdev  /dev/hda2

-fcombine-regs -fstrength-reduce  uncommented so it will compile under 1.40.

2 megs RAM.  1.2 meg /dev/floppy0
(doesn't seem to complain that there isn't enough memory: it just makes
the disk drive dance a lot).

I've tried figuring out what's wrong, and I know it at least gets to
move_to_user_mode(); in main.c, but I got lost tracing it after that
(using printk("Got here...\n\r");)

The .95c+ binary works, but, of course, ps needs the system alone and not the
image.. to build /etc/psdatabase

=======
Dale Ulan   ulan@ee.ualberta.ca
Computer engineering undergrad

------------------------------

From: gt0449a@prism.gatech.EDU (Rob Coleman)
Subject: Re: Re: kermit5a
Date: 10 Apr 92 21:31:24 GMT

In <1992Apr10.105632.15729@cunixf.cc.columbia.edu> fhg2@cunixb.cc.columbia.edu (Farhan H Garib) writes:

>I downloaded kermit5a from tsx-11.mit.edu today.  when I tried
>to run it I got a segmentation fault.  

>Did the file get corrupted in transfer or is there a problem 
>with the file?

>-Greg

I had the same problem with the kermit that was uploaded to tsx, so I got
the sources from somewhere else, and it compiled fine (using the sysvr3
option).  I used archie to find the ftp site, so I don't remember where I
got it from; just search for "kermit5a".  If there are enough requests,
I'll put up a good binary..
-- 
        Rob Coleman              ][   Science, like nature, must also be tamed. 
  gt0449a@prism.gatech.edu       ][     With a view towards its presevation..
Georgia Tech, P.O. Box 30449     ][
     Atlanta, GA  30332          ][                  -Rush/Natural Science

------------------------------

From: drew@romeo.cs.colorado.edu (Drew Eckhardt)
Subject: Re: Meta-Question
Date: Fri, 10 Apr 1992 21:22:10 GMT

In article <1992Apr10.175506.16681@cs.cornell.edu> murthy@cs.cornell.edu (Chet Murthy) writes:
>Another question that occurred to me was:
>
>Is there any relatoin between this project and the 386 BSD project?
>It seems that their aims are quite similar; hence one might imagine
>that quite a lot of work could be saved by collaboration.

yes  - both run on 386's and both are free for some definition of the word
"free."  Linux falls under the GPL, where as BSD is covered under the 
more liberal Berkeley Regent's copyright for the Net 2 parts,
I'm not sure about the Jolitz contributions.

>But perhaps I'm just not understanding.  I really don't want to start a flame
>war or anything - I think that the freer Unix is, the better.
>But on the other hand, it sure would be a waste to constrct two
>free unixes which are "almost", rather than one, which is "there".
>

There is a completely different design philosophy between the two : 
Linux is designed to be lean and mean, was designed for the 
386 from scratch, to be a useable system and not a research tool,
and is considerably simpler than BSD to hack.

The Jolitz port of BSD is just that : a port.  It is supposed to  
be BSD compatable, and when finished will do a fairly good job 
of that.  However, BSD 386 pays a penalty for its heritage - 
it caries with it the weight of all past BSD unixes, the weight
of portability, etc.  

--- What Linux has that BSD 386 doesn't have ---
We coexist on the SAME disk as DOS.  BSD doesn't.

Virtual consoles that support most SVGA boards in text mode, 
as well as VGA, MGA, CGA, MDA, hercules boards and anything 
compatable with those.  These do full color vt200 emulation,
and are quite workable until we get 'X'.

Enough math emulation is in the kernel so we can use distribution compilers 
set up for hardware floating point, provided that we provide transcendental
functions (ie sin, exp, etc) in a library.  With BSD, buy a 387.

SCSI support is available for Adaptec, Seagate, and Ultrastor host adapters.   

We Support ST506, IDE, and ESDI drives.  

We have shared libaries.  These drastically reduce the memory needed.

We have a working ptrace().  You  do any meaningful debugging without this.

An integrel kernel debugger with hardware break / watch points  is available.

There are other goodies too.

-- The downside --

1.  Networking is rather limited.  It is possible to use ka9q and 
        do slip.  However, we do not have networking in the kernel
        like BSD does.

        We also now have ethernet support, with a port of the BSD ethernet
        driver.

2.  We have no 'X'.  Supposedly someone has compiled 'X' on
        BSD.  

        But, we do have socket emulation libraries, mmap(2) and 
        iopermissions hacks by obz, and obz is working on 
        an X port.  This will take advantage of shared libaries, 
        and consequently will run in significantly less space
        (memory, disk) than the BSD 'X'.

3.  We have the 64M Minix file system  BSD has FFS.

        The downside is the BSD FFS requires an ENTIRE disk to
        itself - kiss DOS goodbye.  The upside is it 
        is FFS, and isn't as restricted.

        We do have VFS, and are fixing this problem.  VFS will
        let you drop in a FFS, LFS, DOS file system, tar filesystem,
        FTP filesystem, whatever.




------------------------------

From: drew@romeo.cs.colorado.edu (Drew Eckhardt)
Subject: Re: Has anyone thought about threads?
Date: Fri, 10 Apr 1992 21:31:23 GMT

In article <1211@lysator.liu.se> nicolai@lysator.liu.se (Nicolai Wadstr|m) writes:
>drew@caesar.cs.colorado.edu (Drew Eckhardt) writes:
>
>>In article <1200@lysator.liu.se> nicolai@lysator.liu.se (Nicolai Wadstr|m) writes:
>>>Has anyone given any thoughts on implementing threads in linux?
>>>I know it's not a standard UNIX feature, but it's were nice to
>>>write programs with threads, it's often possible to gain a lot
>>>of performance in using threads.
>>>(I've done a lot of OS/2 programming and just love the idea of 
>>>threads!)
>
>>fork()ing is the same thing as creating a heavy weight thread.
>>lightweight threads can be implemented with minimal modifications. 
>
>Ok, fork()ing isn't as straight forward to use, but accomplishes roughly
>the same thing, altough that approach has more overhead than if you
>would have an createthread() call (ex. createthread( stack, funcaddr ); ).
>If I'm right (I don't know that much about UNIX) fork makes another copy
>of the program, with a seperate data segment, I'm I right? 

Yes, depending on your definition of "copy".  In a modern Unix such as 
Linux, fork() uses COW (copy on write) pages.  The child gets a 
new task_struct, and has the page tables copied so that they reference
the same pages that are in the parent's address space.  However, the 
pages are not physically copied until the child actually tries to write
to one, and gets its own copy made.

The overhead is pretty close to a createthread() or whatever...

>With threads you still have access all the program data.
>
>>Interprocess communication can be accomplished with pipes,
>>or signals.
>
>>Hopefully, sysV shared memory and semaphores will be 
>>implemented too.
>
>Yeah, that would also be nice! But how about queues? If you
>are transfering bigger chunks between programs queues are much
>better than pipes! 
>(I know shared memory could be used for that, but queues are actually
>only a way to handle shared memory).
>

Agreed.  You generally use a pipe for redirection I/O to chain 
programs together, like within the Unix shell model.  Pipes are not
ideal for interprocess communication.

Other than Unix domain sockets and pipes, I'm not sure that Unix 
has a "queue", although this could be implemented with shared 
memory and semaphores.


------------------------------

From: alsaggaf@ERL.MIT.EDU (M. Saggaf)
Subject: Re: Linux SCSI support
Date: Fri, 10 Apr 1992 22:33:01 GMT

Is there any way Linux can work with a SCSI Future Domain 1670 host
adapter? I'm a new user of Linux. Version .95a could not recognize my
hard drive. I also have an RLL drive connected to an Adaptec 8-bit
(XT) controller (in my 386 computer). Version .95a failed to recognize
that one as well. Is there any way I can get Linux to work with any of
these? Thanks.

-- M. Saggaf (alsaggaf@erl.mit.edu)




------------------------------

From: harvard!ames!amdcad!yarc!scott@EDDIE.MIT.EDU (Scott Beckstead)
Subject: Re:  Linux-Activists Digest #41
Reply-To: harvard!ames!amdcad!yarc!scott@EDDIE.MIT.EDU (Scott Beckstead)
Date: Fri, 10 Apr 1992 22:38:57 GMT

I seem to be getting two copies of many messages (not in the group but in the
mailing) in any case.  I am actualy using linux as t compiler development environment.  I prefer having binaries available.  I have of course had to port a 
couple of things to it but nothing very serious (emacs 3.11 and rz/sz) 
I also compiled but have not tested gnuucp of an unknown version I will test
and report if I have the time.  Nice work Linus (I'm still using 0.95) I 
would love to upgrade but I have been seing so many problems lately that
I will wait untill someone posts the binaries to BIX or CIS.  I have no FTP 
access which most of you so cavalierly assume the world has and it gets 
frustrating when I use an ftp server that delivers a package containing 
133 60 kbyte pieces with a few missing or munged.  I don't want source 
unless it's small.  So please keep up the binary postings that way I get 
themn when someone has time to upload them to something I DO have access to.
Thanks
Scott

------------------------------

From: moyerg@jove.cs.pdx.edu (gary a moyer)
Crossposted-To: alt.os.linux
Subject: got root95c+, now need device driver for lp0...
Date: 10 Apr 92 22:00:50 GMT

Well, I got the .95c+ release of the boot image (kudos to those
responsible).  When I boot I get an 'lp0 recognized'.  Anyhow,
I still have _no_ device driver for the printer at lp0.  Is this
a question of which root image I'm using (am using .95 root image)?
If not, can the driver be created using mknode and if so could someone
please post the necessary info to do this?

              thanks.  moyerg@cs.pdx.edu

------------------------------

From: moyerg@jove.cs.pdx.edu (gary a moyer)
Crossposted-To: alt.os.linux
Subject: got root95c+, now need device driver for lp0...
Date: 10 Apr 92 22:00:50 GMT

Well, I got the .95c+ release of the boot image (kudos to those
responsible).  When I boot I get an 'lp0 recognized'.  Anyhow,
I still have _no_ device driver for the printer at lp0.  Is this
a question of which root image I'm using (am using .95 root image)?
If not, can the driver be created using mknode and if so could someone
please post the necessary info to do this?

              thanks.  moyerg@cs.pdx.edu

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Crossposted-To: alt.os.linux
Subject: Re: Problems with serial port drivers??
Date: 10 Apr 92 22:54:54 GMT

erc@Apple.COM (Ed Carp) writes:

>Has anyone seen any problems with the serial port drivers under
>linux?  I'm running 0.95a and am having a hard time making uucp fly
>at 9600 baud and above, either straight through or with a modem.

I have had a number of problems with KA9Q.  As of 0.95b or c, I
know of three possible problems:

 1) There's a tendency for the controller not to bother giving a
transmit done interrupt.  Linus added various timeout code that was
supposed to fix this, but I'm not convinced it does. I'm using my own
code. If remembers the time when the last transmit was started.  If a
new transmit is done more than 1/2 sec or so after that, it assumes
the done was missed and does the transmit immediately.

 2) Someone I know who is an expert in these things claims that
the read routine must loop until there's nothing more to read. He
claims that there is a small buffer even in the dumb controllers,
and if you don't empty the buffer each time, you'll lose.

 3) There's a problem in select.  If you are in emacs (which
waits for tty input at a select), and other program that uses
select will fail to activate.

I believe Linus is working on problem 3, but has declined my patches
related to the first two.  So far I haven't done careful enough tests
to be sure that all three of these problems actually exist.  I'm
waiting for him to fix select.  Once he does, if problems remain, I'll
try to verify exactly what they are.

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Crossposted-To: alt.os.linux
Subject: Re: Problems with serial port drivers??
Date: 10 Apr 92 22:54:54 GMT

erc@Apple.COM (Ed Carp) writes:

>Has anyone seen any problems with the serial port drivers under
>linux?  I'm running 0.95a and am having a hard time making uucp fly
>at 9600 baud and above, either straight through or with a modem.

I have had a number of problems with KA9Q.  As of 0.95b or c, I
know of three possible problems:

 1) There's a tendency for the controller not to bother giving a
transmit done interrupt.  Linus added various timeout code that was
supposed to fix this, but I'm not convinced it does. I'm using my own
code. If remembers the time when the last transmit was started.  If a
new transmit is done more than 1/2 sec or so after that, it assumes
the done was missed and does the transmit immediately.

 2) Someone I know who is an expert in these things claims that
the read routine must loop until there's nothing more to read. He
claims that there is a small buffer even in the dumb controllers,
and if you don't empty the buffer each time, you'll lose.

 3) There's a problem in select.  If you are in emacs (which
waits for tty input at a select), and other program that uses
select will fail to activate.

I believe Linus is working on problem 3, but has declined my patches
related to the first two.  So far I haven't done careful enough tests
to be sure that all three of these problems actually exist.  I'm
waiting for him to fix select.  Once he does, if problems remain, I'll
try to verify exactly what they are.

------------------------------

From: bjones@magnus.acs.ohio-state.edu (William A Jones)
Subject: Modems and com port access
Date: Fri, 10 Apr 1992 23:35:41 GMT

Now that I have a copy of UUCP for linux, I decided that it was time to
see if my modem worked properly.  So, I scanned all of the digest entries
that had anything to do with the modem and decided that, under version
0.95c+, COM2 was assigned to /dev/ttys2.

Following the FAQ, I put the following line in /etc/inittab

ttys2:console:/bin/getty -m 1200 ttys2

and rebooted.  So far, so good.

Now, kermit, uucico, pcomm, and everything else will not recognize that
a modem exists.  What have I done wrong?

If someone who has a working kermit, uucp, etc., would send detailed(!!)
instructions on how to get set up I would be very grateful.

Bill

===================================================================
bjones@cambria.UUCP             ..!osu-mps!cambria!bjones
bjones@magnus.acs.ohio-state.edu
===================================================================


------------------------------

From: drew@romeo.cs.colorado.edu (Drew Eckhardt)
Subject: Re: Linux SCSI support
Date: Fri, 10 Apr 1992 23:25:38 GMT

In article <1992Apr10.223301.24673@athena.mit.edu> alsaggaf@ERL.MIT.EDU (M. Saggaf) writes:
>Is there any way Linux can work with a SCSI Future Domain 1670 host
>adapter? I'm a new user of Linux. Version .95a could not recognize my
>hard drive. I also have an RLL drive connected to an Adaptec 8-bit

People are working on a lowlevel driver for the 16 bit Future domain
boards. However, I'm not sure what the timeframe is on this, mail 
out on the SCSI mailing list to find out who and the details.

>(XT) controller (in my 386 computer). Version .95a failed to recognize
>that one as well. Is there any way I can get Linux to work with any of
>these? Thanks.
>

The XT disk controllers are physically different from the AT disk 
controllers.  This doesn't matter when you're going through BIOS
and it looks all the same, but under a real operating system,
each piece of hardware must be dealt with individually at the 
register level.

Either controller could be supported with an appropriate driver - 
but since you can find an AT disk controller for ~$20, pulled
from equipment for upgrades, a driver for the XT controller 
wouldn't be  worth your time and effort.

As far as the SCSI host -  the generic SCSI package sticks most of 
the common code in one place, leaving relatively little for you 
to implement in your driver at the lowest level.  Basically, you're
concerned with getting data to/from the SCSI host- translation from
block device commands to SCSI, timeouts, error handling, etc are all handled 
higher up the driver stack.  You also have to provide an abort function,
SCSI bus reset function, probe, and info function.

Like I said, people are working on this, but if you have anything 
to contribute, feel free to join the SCSI mailing list at 

linux-scsi-request@headrest.woz.colorado.edu

Adaptec, Seagate, and Ultrstor lowlevel drivers have been
incorporated into the generic package, which is available from

headrest.woz.colorado.edu 

under 

/pub/linux/scsi.95c+.tar.Z



------------------------------

Crossposted-To: alt.os.linux
From: drew@romeo.cs.colorado.edu (Drew Eckhardt)
Subject: Re: got root95c+, now need device driver for lp0...
Date: Fri, 10 Apr 1992 23:31:08 GMT

In article <5301@pdxgate.UUCP> moyerg@jove.cs.pdx.edu (gary a moyer) writes:
>Well, I got the .95c+ release of the boot image (kudos to those
>responsible).  When I boot I get an 'lp0 recognized'.  Anyhow,
>I still have _no_ device driver for the printer at lp0.  Is this

Yes, you have a device driver for line printer devices.  You
just don't have a "special file" that lets programs outside of 
the kernel see it...

>a question of which root image I'm using (am using .95 root image)?
>If not, can the driver be created using mknode and if so could someone
>please post the necessary info to do this?
>

Line printer devices are character devices, major number 6.  

Do a   

mknod /dev/lp0 6 0 




------------------------------

Crossposted-To: alt.os.linux
From: drew@romeo.cs.colorado.edu (Drew Eckhardt)
Subject: Re: got root95c+, now need device driver for lp0...
Date: Fri, 10 Apr 1992 23:31:08 GMT

In article <5301@pdxgate.UUCP> moyerg@jove.cs.pdx.edu (gary a moyer) writes:
>Well, I got the .95c+ release of the boot image (kudos to those
>responsible).  When I boot I get an 'lp0 recognized'.  Anyhow,
>I still have _no_ device driver for the printer at lp0.  Is this

Yes, you have a device driver for line printer devices.  You
just don't have a "special file" that lets programs outside of 
the kernel see it...

>a question of which root image I'm using (am using .95 root image)?
>If not, can the driver be created using mknode and if so could someone
>please post the necessary info to do this?
>

Line printer devices are character devices, major number 6.  

Do a   

mknod /dev/lp0 6 0 




------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
