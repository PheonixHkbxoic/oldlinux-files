From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Mon, 6 Apr 92 03:15:08 EDT
Subject:  Linux-Activists Digest #30

Linux-Activists Digest #30, Volume #2             Mon, 6 Apr 92 03:15:08 EDT

Contents:
  FINAL: (DOS) BEGINNER'S GUIDE...(also on tsx-11.mit.edu) (Chuck Boyer)

----------------------------------------------------------------------------

From: boyer@sumax.seattleu.edu (Chuck Boyer)
Subject: FINAL: (DOS) BEGINNER'S GUIDE...(also on tsx-11.mit.edu)
Date: 6 Apr 92 06:20:53 GMT

(DOS) BEGINNER'S GUIDE TO LINUX v0.95a
======================================
Edited by Chuck Boyer
(boyer@sumax.seattleu.edu)
4/6/92

FOR LINUX v0.95
by Linus Torvalds
=======================
The structure of this GUIDE is basically;

INTRODUCTION
GENERAL SETTING UP
GENERAL USAGE OF LINUX
  LISTING DIRECTORIES/FILES
  CREATING FILES/REMOVING
  DIRECTORIES
COMMANDS AND THEIR USAGE
  (EXTENSIVE LISTING)
APPENDIX A: ERROR CODES AND THEIR MEANINGS
APPENDIX B: COMMANDS SUMMARY (QUICK LISTING)
APPENDIX C: BACKUP
APPENDIX D: MTOOLS
APPENDIX F: EXTRA HINTS
APPENDIX G: COMPLETE LINUX FILES LISTINGS
=======================
(The inclusion of 'APPENDIX G:' may be questionable by some netters 
as to why it has been included into this guide. DOS users' going 
over to Linux/unix 'will' print out all of this guide, and they 
will use it as a 'reference'. It is to this purpose that I have 
included it here. So that they can 'see' what another persons setup 
looks like, so when they make gross errors -erasing their entire 
drive-for instance, they can see what is where, what is what. Also 
it might address the issue, insofar as it is 
unstructured/unaddressed in any other format, 'what do I need to 
get Linux up and running?' type questions.)
========================

I, too, am a 'beginner' unix system user, so much of the 
explanations found here have been 'donated' in time and effort by 
programmers/concerned users of Linux from the 'alt.os.linux' 
newsfeed. (I have listed their names at the end of this 
documentation.)

Anyway, back to installation of Linux on your machine. Basically,
you can run Linux one of two ways; either from your floppy drives 
only, or from your hard disk/drive. If you just want to play around 
with Linux and get the 'look and feel' of using a Unix Operating 
System (as opposed to a DOS operating system) then you might want 
to choose to just run it from the floppy drive. Basically, the 
logic here would be that, you don't want to screw up anything on 
your hard drive (which is loaded with Windows, word processors, 
graphics programs, data-base programs, etc.), and you have either 
spent long and hard learning hours to have it set up that way, or 
you had someone else set it up for you and you wouldn't have a clue 
on how to re-set it up yourself. Running Linux from your floppy 
disk drive will not screw up your hard drive, basically. There 
'are' programs on the Linux disks that you will have access to 
that 'can' ruin your hard drive though. (typing 'mkfs /dev/hda' for 
instance may render your hard drive unreadable by DOS, but then you 
wouldn't know how to do that yet...). Or, you could run Linux from 
booting from the floppy drive and thereafter having it run from the 
hard disk drive. The differences between these two methods are that 
Linux will run a lot (10 times?) slower if you choose to run it 
solely from the floppy disk drive, and you will be limited to the 
commands and utilities that you can run using the floppy drive only 
situation. On the other hand, running from the hard disk drive will 
run Linux much faster/quicker as well as give you space to have 
many more programs and utilities to run/use, but it also entails 
you having to learn to 1) create a Linux partition on your hard 
disk drive, and 2) learning how to maintain this partition with a 
handfull of sub-directories. 
========================================================= 
FTP'ing the Linux files. 
========================

I will use the ftp archive machine site location 'tsx-11.mit.edu'
as the example for getting the Linux files.

When you log onto tsx-11 you will move down the sub-directory tree
to pub first; 'cd pub(ENTER)', then move down one more tree node;
'cd linux(ENTER)', and finally into the INSTALL directory; 
'cd INSTALL(ENTER)'. In mails you will see the location listed like
this;

% /pub/linux/INSTALL
total 28
1 INSTALL-0.11@    1 bootimage-0.95.Z@    3 rawrite.doc
1 RELNOTES-0.95@   1 partition-programs/ 13 rawrite.exe
1 VERSION_IS_0.95  6 rawrite.c            1 rootimage-0.95.Z@

You can grab INSTALL-0.11 for instructions on how to set up your
hard drive for Linux. You want to get 'bootimage-0.95.Z', 
'rootimage-0.95.Z', 'rawrite.exe', 'rawrite.doc'.

Once you 'get bootimage-0.95.Z' (and the others) you will have them
on your host computer which is probably also a unix machine (or a
unix variable). Uncompress the bootimage and rootimage files.
Then transfer the three files to your DOS box. Here you will use
'rawrite.exe' to transfer (directly copy) the 'rootimage' and 
'bootimage' file from your hard drive (DOS) to floppy disks.

rawrite(ENTER)
'rawrite' will ask you for the filename you want to transfer,
give it the name you have called the file, our example assumes;
'bootimage'. 'rawrite' will ask for the destination drive. Give
it 'a:(ENTER)' and the writing/transfer of the bootimage file will
process to drive a: (this will for most cases be a 1.2Mb
high-density
disk in drive a:).
Then follow the same process for 'rootimage'.
'rawrite(ENTER)'
'file to be transfered: rootimage(ENTER)'
'destination drive: a:(ENTER)'

You now have two separate disks; one for bootimage and one for 
rootimage.

You now put the 'bootimage' disk in drive a:, lock the drive
on and reboot your computer. It will churn away for a few moments,
giving you the message; 'Loading...........................'
and then it will ask you to insert the 'rootimage' disk into drive.
Take out the bootimage disk and insert and lock in the 'rootimage'
disk and hit enter (ENTER). Linux will now boot up.

You can now run Linux 0.95a Operating System. You now have a unix
operating system with all of the basic utilities for reading a
file,
setting up the hard disk to receive Linux files, and other things.

You can also set up the 'bootimage' disk, by editing it, to read
your hard-drive partition which is a Linux partition instead of the
floppy drive at boot time. I suggest using the shareware editor
under dos named 'pmk.exe' (Professional Master Keys) which is
available from most ftp sites. Instructions for doing this are
found in the 'INSTALLATION.0.11' document found on Linux ftp sites,
plus the excellent guide 'Beginner's Guide' produced by Iian also
available at most Linux ftp sites.


Okay, you've gotten Linux up and operating. Here I will describe 
the tools and their usage that you will need for getting around, 
looking at things, creating a few useful/helpful things. You will 
first want to know how to turn on the lights, as it's pretty dark 
in here with only a blank screen and a prompt symbol '#' with a 
blinking cursor. I'd like to say now that this is an entirely 
different world for you than you are used to in DOS, with it's 
fancy programs for menuing, fancy batch files, interfaces... though
you can implement all of that in Linux/unix too, to begin with it 
will be a cold, blank screen with a prompt and blinking cursor. 


Once you've been around for awhile you will notice a change in your
attitude about this blank prompt and cursor (the command line) in 
that you will realize that armed with the knowledge of lots of 
commands and utilities to perform them that you have an extreme 
sense of power. Power to do things right and power to do things 
wrong. Your blank command prompt is where you do it all, perform 
all of the functions that do everything that is possible to be
done.

I wanted to mention that because as you go further and further 
along you will at some point know so many commands that you will 
once at least do a command wrong and will have erase everything on 
your Linux partition, so everything is gone, all of the whizzing, 
speeding power is gone. It happens to all of us, it is part of the 
learning process in the learning curve. So, learn now, to make 
backups of everything as you go along. 

Back up everything to floppy diskettes. If all that you have is the
rootimage and bootimage then just 'rawrite' another bootimage and 
another rootimage and you have your backups there. Once you start 
collecting/adding things, though (compiler stuff, pcomm12b 
telecommunications program, extra utilities, kermit, etc...) then 
back those up to floppies. Copy your utilities to a disk, with 
'compress' and 'uncompress' and 'tar' on it. Then tar and compress 
directories full of utilities and copy those over to the floppy 
disks. This process is covered in 'Appendix D: Backup'.

======================
GENERAL USAGE OF LINUX
======================

LISTING FILES AND DIRECTORIES:
=============================
command:  ls

Being at a blank screen and a prompt symbol ("#") is pretty bleak,
you want to turn on the lights and see where you are. Well, you're
in a directory tree structure with directories and files... 
The 'ls' command lists the files and directories. In DOS you would
use the 'dir' command. 'dir' in DOS has some command line switches
to allow you to have different types of lists of the files. 
'dir' presents a listing of the files in a straight vertical
listing.

'dir/w' lists the files in horizontal columns, allowing you to see
all of the files on one screen in a large directory filled with 
files. 'dir/p' allows the vertical listing, but stops the listing 
from scrolling past the screen, by stopping it at each page full.

In Linux/unix systems 'ls' does the same, and more, with different 
types of ways of listing the files to screen. 'ls' gives a vertical
listing with the filenames separated by tabs. 'ls -l' gives the 
horizontal listing. 'ls -a' would give the standard vertical 
listing, plus give you the listing of 'hidden' files, 'dot' files 
as they are called, like; '.login', or '.profile', etc. 'ls -R' 
gives you a 'recursive' listing where you have it list all of the 
files in subsequent directories below the directory that you are 
currently in. 'ls -F' puts '/' after directories, so you can tell 
them apart from the filenames. You can stack the switches in the 
same command line argument also;

'ls -lFR' would give you a long, horizontal listing with 
directories listed with the '/' sign, and a recursive listing of 
subsequent directories/files.  You can also send the output of the 
command 'ls' to a file;

'ls -lFR > files' would not print the listing to screen. Instead it
would be quiet for a moment and return you to your prompt with 
itself placing the results into a file named 'files' which you can 
then read at your leisure. (read the file with 'more files'. 'more 
is a file pager, it lists the contents of the file to screen, 
stopping at each page/screen full waiting for you to hit the 
spacebar before it will continue on to the next page/screen full.)

'root' refers to the beginning of your file system on the physical 
hard drive partition you have created and are booting Linux 
from/to. Directories are like different file drawers, the dividers 
in the file drawer are like sub-directories, and the files are just 
like files in the file drawer. Root is the name of the file cabinet 
itself. It holds the filesystem.

Another way of thinking of directories and sub-directories/files
is to look at a couple of graphic examples;

/(root)|
       | /bin----------------------------|df
       | /binary--------------------|    |fdisk
       | /lib------------------|    |    |compress
       | /mnt-------------     |    |    |mount
       | /tmp--------|         |    |libbin.Z
       | /usr-|                |    |pcomm.tar.Z
              |                |libc.a
              |/bin--|umount
                     |uncompress

In the examples, the '/' (slash mark) signifies a directory is the
listed node, without the '/' it is a file is the listed node.
So, under 'root' are sub-directories; /bin, /binary, /lib,
/mnt, /tmp, and /usr, and /bin is a subdirectory under /usr.

(In DOS your directory indicator would be the '\' symbol. You
should take careful note of the differences in the two Operating
Systems' usage of these symbols.)

When you use some utilities, like cat, mv, ln ... you will be
able to move a file from where you are, in that directory, to
some other directory down from the '/root' by typing in the
complete pathname. So, for instance, in our example you could
move /bin/compress to /usr/bin (and keep the same filename);

'mv compress /usr/bin' (if you are in the directory that has
compress in it, otherwise the shell just complains about not
finding it, nothing harmful...) or;

'mv /bin/compress /usr/bin' from anywhere else in the directory
structure that you may be in.
Here's another way of illustrating it;
                           ------
                   /------| root |  --------\-------\
                /        / ------ \          \       \
       ----- /     --------   -----    ----- \ ----- \ -----
      | bin |     | binary | | lib |  | mnt | | tmp | | usr |
     / -----       --------   -----    -----   -----   -----
   /   |   |        | |         |                       |
 df fdisk  compress | libbin.Z  libc.a                 -----
                    pcomm.tar.Z                       | bin |
                                                     / -----
                                                    |     \
                                                    | uncompress
                                                        umount
                                                              
So, that's an illustration that's like an 'organization structure'
graphic.

To move back up the directory structure you would issue the
command;

'cd ..'
So, if you were in '/binary' subdirectory and issued; 'cd ..'
then you would move up/backwards to '/root'. You can 'cd' from
being in the '/usr/bin' directory to be in the '/bin' directory;

'cd /bin'

'df' gives you a readout of the used and available space on any
mounted drive/partition. So; hard drive 1, 2nd partition;

'df /dev/hda2'

'ls' is the command like 'dir' in DOS, it lists files, directories
to stdout (terminal/screen/monitor).  You can do an 'ls' listing
of any directory in the system, you need not be in the directory
that you are wishing a listing of the files/sub-directories of.

'ls -l /usr/bin' <--- prints to screen all files/directories there.

'ls -l /usr/bin > filelist' <--- prints to filename 'filelist',
        creating it as a textfile with the output of the 'ls'
        command. Read this list with page scrolling on with;

'more filelist'.



While we are at it, now is a good time to explain some terminology 
here. Listing the contents of a file to screen/terminal/monitor has
a proper terminology name for this process in Linux/unix.  One 
would say; 'more lists the contents of the file to stdout (standard
out) and 'stdout' in Linux/unix is the terminal/screen/monitor.
'stdin' is the keyboard. 'From stdin to stdout' means from the 
keyboard to the screen.

Here are the different switches that you can use in the 'ls'
listing
command line;

-C multi-column
-F '/' after directory names
-R recursively list subdirectories/files
-a standard plus hidden files ( '.' and '..')
-l long listing, with owner, size, time, mode.
-r reverse order

(may be others I may have missed, but these should suffice for your
beginning learning curve.)

CREATING and VIEWING FILES
============================
Besides using the 'em' (uemacs) text editor which comes with the 
Linux distribution you can use the 'cat' command to create files.

'cat > list'
one
two
three
ctrl-d

(type in; cat > list, hit ENTER key, type; one(ENTER), two(ENTER),
three(ENTER), hold down the Ctrl key and tap the d key).
Would be using 'cat' to create the file. 

Now issue the 'cat' command to 'read' the file to stdout/screen;

'cat list'
one
two
three

Using cat to list the contents of the file. 'cat' has many helpful
uses.

'cat one >> two'

Would append the filename 'one' onto the end of filename 'two'.
Neat, huh? And this is where 'cat' gets its' name; cancatenate,
which means to append one to another. It must have been neat for
the programmer when he/she created 'cat' to append one file to the
end of another to decide; "Well, if I can use it to write its'
output to another file, why not redirect this output to stdout
(screen) by just calling the command in a different way, without
the 'directory' symbol ( > )!" And so it was created to be a very 
diverse utility command.

You can only use 'cat' to list the contents of text files. It won't
work on 'binary' (executable) files.

There are many executable files which can be called 'command files'
in the Linux distribution, and many more that can be ported for 
usage there. I will only give examples of the basic needed command 
files to save space. One can always buy published books on the 
subject of Unix at any good bookstore. My goal here is only to get 
you off and started confidently on your way.

So, thus far we have listed the contents of a directory, and
created a file, and listed the contents of a file, and added one 
file to the end of another file.  

Now lets create directories and delete them. Remember that you are 
using this guide to learn the basic things in Linux/unix operating 
system environment, so it would make sense for you to actually try 
these examples out while reading about them. It is in the actual 
doing of them that you will see the sense involved in using them. 
It is not theory or philosophy, you must learn to use these tools.

'mkdir one' would create the directory 'one' right where you are in

your directory structure. Do an 'ls -l' and see the directory that 
you've just created. Do a 'cd one' to move into the subdirectory 
'one' that you've just created. 

Do a 'cat > two'
this is a test text file.
ctrl-d

Do an 'ls -l' and see the file 'two' listed. Do a 'cd ..' to 
(c)hange (d)irectory to the previous directory. Do a 'ls -l > 
files'. Do a 'mv files one' and the file will move into the 
subdirectory one that you previously created. 'cd one' to do an 'ls

-l' and you will now see the two files listed (two and files).

'more *' to see the contents of both files. (* is a wildcard 
placemarker and it means to include 'all' in the command). (With 
more you hit the spacebar to continue onto the next page/file, or
a 
carriage return/ENTER to move along line-by-line).

Do a 'rm -i *' and remove the two files. Do a 'cd ..' and do a
'rmdir one' and the directory that you created will be removed.

So, that's creating and removing directories. You cannot remove a 
directory by the way until it is empty of files. Simple enough.

Next we will learn about head, tail, ln, mtools, mkdir, mkfs,
mknod, mkswap, more, mv, rm, rmdir, tar, compress/uncompress.

'head' reads to stdout the first 5 lines of a text file. Perhaps
use this when you don't want to waste the time filling the entire 
screen with text?

'head filename' (where 'filename' is a variable provided by you 
with the actual name of a file).

'tail' reads to stdout the last 10 lines of a text file.

'tail filename'

'ln' is the command to link one file to another. What's that? Well,
in the distribution you were given two command files; compress and 
uncompress. If you check out the file sizes with the 'ls -l' 
command you will see that they are both exactly the same size in 
bytes. They are actually the same file. Just one is copied to the 
other with the 'cp' command. 

One could have linked (ln) compress to uncompress and saved on file 
space because a link doesn't take up as much space as the actual 
file does in this case. Linux keeps a two byte space in a file 
allocation table that is a place-holder for the computer to see 
where a filename or directory actually exists on the physical disk. 
When you use 'ln' to link one file to another that actually exists, 
then the link filename is actually just a director using the 
place-holder address, which tells the system that when this 
filename is typed to go to the actual filename to execute the 
command. A link only takes a few bytes. 

A wild guess is that a 'ln' command for 'uncompress' to 'compress' 
would only take up 19 bytes whereas 'compress' takes up 19000 
bytes. If you just copied compress to uncompress you would have two 
19000 byte files, instead of one 19000 and one 19. (These file 
sizes are probably not actually correct, just examples.) If in 
compiling a program it looks/asks for 'cc' as the compiler and you 
have 'gcc' you can just make a link to 'gcc' for 'cc' and it will 
find it, and you have saved space on your disk too.

There are two kinds of links, regular and symbolic. It is left to 
the reader to research this topic for more information. In fact, 
after reading this guide, one should be ready to go out and 
purchase some text books on the subject of unix, on shell 
programming, or other related topics as well as read other 
newsgroups to find out more information about the subject.

Mtools. Well, you can have your cake and eat it too. With Mtools 
commands you can be in your Linux Operating System and from there 
call up a listing of a directory in DOS, copy files to/from DOS 
from your Linux environment, and do all of your DOS functions 
basically right from within Linux. See 'Appendix E: Mtools' for 
examples of how to use this powerful tool.
=============================================================

================= 
COMMANDS and their USAGE
=================
   (I must admit that I too am a beginner, so I have not included
   the explanation for all of the commands available in Linux.
   You will have fun learning from other books, reading news
   discussions on the net, etc. I have given examples of the 
   utility programs that you will find most helpful and most
   useful during your first stages of learning.)

   In my examples I will give you a listing of the command to
   type and what you will type will be enclosed in single
   quote marks; 'type this'. Then always assume to hit the
   ENTER key. Also, where command affects a file for you
   to use then I will give a generic name to the file
   for the examples' sake of 'filename' where you supply
   the actual name of the file.
=================
basename
        strips path off of filename

bawk
bigram
bison
        part of GNU
        parser generator (yacc replacement). A 'beginner' user 
        won't usually have dealings with this.
        pattern matching language language with C like syntax. 
   
cat
             concatenate files and write them to standard output

             This means that using 'cat' you can list the contents
             of a file to your screen.         

             'cat filename'

             (you can also use the 'more' command as the standard
             file 'browser' utility. 'less' is an enhanced 'more.')

          DOS:  cat is fairly similar to the DOS command 'type'.

        two definitions/uses; 1) lists files to screen that already
        exist, and 2) creates a file. In our examples we will use
        the example of 'text.doc' to designate our filename, when 
        talking about what to do with a command line instruction. 
        In the case of 'cat', for the 1st usage example, as a way
        of writing a text file's contents to screen ('stdout' is
        the proper name of 'writing to screen', by the way) then
        we would type; 
                cat text.doc(ENTER)
        
        and we would get a displaying of the contents of 'text.doc'
        to the screen (stdout). If it is a short text file, say,
        shorter than 25 lines of text, then it just gets written
        to the screen and you are returned to your prompt. But if
        the text file is larger than 25 lines then it will just
        continue on scrolling on the screen until it gets to the
        end of the document, then return you to your prompt. The
        way to scroll it to the screen and stop it it to use the
        key sequence; 'ctrl-s' (hold down the 'ctrl' key and tap
        the 's' key. This stops it. 'ctrl-q' begins the text
        scrolling again. Do this over and over again until it 
        reaches the end. This method is okay, but someone wrote
        a utility for automatically stopping the screen text
        scrolling one page full at a time, and this executable
        program file is named 'more.' 'more' is included in the
        Linux distribution. So, use 'more text.doc' as a better
        method of reading a file. (Someone came up with another
        text browser program called 'less' and this works fine
        also.)
 
        The other usage of 'cat' is as a quick text file editor,
        creator.
 
                'cat > text.doc'
 
        would put you at the first blank line of the file you
        were about to create called 'text.doc'. Anything you
        typed after that would become the text of 'text.doc' 
        file. Use 'ctrl-d' to return to your prompt, and you
        have created a documentation file of text called
        'text.doc'.
 
        Actually, a third usage of the file 'cat' utility would
        be to 'concatenate' (this is where 'cat' comes from)
        two (or more) files together. 'Concatenate' means to
        attach two things to each other. It's kind of like hooking
        up a train car up to another one, both cars become the
        train.
 
                'cat text1.doc text2.doc > text3.doc'
 
        would copy the contents of 'text1.doc' followed by
        the contents of 'text2.doc' into a new file called
        'text3.doc'.
 
        You must actually play around with these examples, 
        typing in your own example text, to really learn
        how to use these utilities. Otherwise it's just
        theory.

   cd
             change working directory

             'cd ..' moves you backup one directory in the directory
             tree. (branches, root).

             'cd /' moves you to the root/beginning.

             'cd /usr/bin' from anywhere that you are moves you to
             that subdirectory.

          
        DOS: Note that the slashes are the reverse of what they are in
        DOS, UNIX path slashes are "/", not the "\" of DOS.  cd must
        also be followed by a space before the path name, unlike
        in DOS. 

chmod
             change access modes for files, directories.

        DOS: somewhat like the 'attr' command in some DOS extensions
        Perhaps "permissions" or "access permissions" would be clearer.

  chgrp
        change group file read/write ownership flags

chmod 
        change file/directory read/write/execute flags

chown
        CHange OWNer
  
 comm
             print lines common to two sorted files

compress
             compress a file

             'compress filename' creates; filename.Z

             'uncompress filename.Z' creates; filename

        DOS: the UNIX alternative to DOS's (or PKWARE's) pkzip, but 
        it only works on one file at a time (unless combined w/ 
        tar).  Reduce the actual size of a file.
        
        'compress text.doc'
 
        Try this, create a 'text.doc', and then compress it.
        If the file was small in the first place it probably
        will be larger after compress. I think that the compress
        program places a translation table in the file first,
        so that adds bytes to the file. If you used this example
        on a larger file, you would see the compress utility
        would actually produce a smaller file. This is what
        people use to reduce the size of a file before they
        send it through mail or news out to the alt.os.linux
        newsgroup, so that it doesn't take up so much space
        and time transfering it. Then when someone gets the
        file they must uncompress it to be able to use it.
 
        When you type;
        'compress text.doc'
 
        compress adds a '.Z' title to it. This designates it
        as a compressed file. So, in our example you would
        end up with;
        'text.doc.Z'
 
        you would then uncompress it;
 
        'uncompress text.doc.Z'
 
        and it would strip off the '.Z' filename designator and
        you would have 'text.doc' again.
 

cp
        copy a file

        'cp filename /usr/bin/filename' copies the file
        to the /usr/bin directory.
        DOS: similar to the DOS command copy

cut
        cut out columns in a file

dd
        disk dumper
        Low-level copying using specified blocksizes (useful for raw
        devices).

        Usage: dd if=infile of=outfile ibs=inputblocksize
        obs=outputblocksize
        count=nblocks skip=nblocks

The order of params doesn't matter; all can be omitted (defaults to 
stdin, stdout, 512, 512, until EOF, 0, respectively). If ibs=obs, 
you can just use bs (but warning, be sure ibs=obs since no 
buffering is done).

df
             report free disk space and i-nodes

             You can use just 'df' to see a report of how much free
             disk space you have.

du
        print disk usage
        print disk usage of the current and all subdirectories
        (recursive)
        Prints a tree of directory space usage. du <filename>, 
        defaults to ".". 

egrep 
        grep but with expanded regular expressions (which is the 
        basis for other regexp-using programs, like awk, sed, 
        emacs, less, etc).

em 
        GNU micro-emacs type of editor
        (this isn't GNU.  Just MicroEMACS.)

expand
        expand tabs to spaces 

fdisk
        in Linux, report hard drive disk partition sizes, in DOS
        and Unix and Minix; and change the partition size, type.
 
        Using fdisk alone;
 
        fdisk(ENTER)
 
        Reports the available hard drive partitons and sizes.
        You would use this information it reports to mount
        that partition to a directory-mounting-point.
 
file
        guess at file's type by contents.

find
        find files meeting a given condition

fiz
        fix zoo archives
flex
        GNU lex, lexical anylyzer
fold
        wrap each input line to fit in a specified width
        wrap long lines
fsck
        file system check, check the partition status

grep
        search a file for lines containing a given pattern

        'grep anything filename' will find each occurance
        of 'anything' in the file 'filename.'
 
        'grep word text.doc'
 
        Would search for the word 'word' in the document
        'text.doc'. If it finds it, it will print the line
        that the searched for word (word) onto the screen
        (stdout).

group
        group identity

head
        print the first few lines of a file.

        'head filename' prints the first 5 lines of the file.

issue
        system identification file

kill
        send a signal to a process

ln
             (link)
             link a file
             using 'link' you can save file space in bytes. You issue
             a command line command to make a link in this directory,
             to a file which resides in another directory. The file
             in the other directory stays there. A 'name-marker' in
             the inode table is given a number and a filename in the 
             current directory that you are in. The new 'name-marker
             filename' link runs the file in the linked from file/
             directory.

             So;
             'ln /usr/lib/gcc cc'

             would give you a link in this current directory called
             'cc' to an actual file in /usr/lib named 'gcc'.

             The benefit of this is that the link filename is only
             the length in bytes as the filename place marker is.
             That's usually about 18 bytes. If /usr/lib/gcc was 180 
             thousand bytes, then this would be a huge savings in 
             disk spaced used/saved. Thus the benefit of 'link' which 
             in Linux is 'ln'.

             As in the example, 'ln' can also be used to make a second
             name for a file that is actually pointing to the first
             filename. (In the root floppy image of Linux distribution
             in /usr/bin directory 'uncompress' is actually linked to
             'compress', in the same directory. They both 'call' the
             same program at run time.

ls
             list the contents of the directory. (Show all files)
             (list contents of directory tree with files to standard
             out), (standard out is another name for the terminal,
             or monitor screen). (standard out in computerese is 
             referred to as 'stdout', so one may find that title
             referred to in a description.)

             'ls(ENTER)'   gives;.....

             file1   file2   file3   file4   readme  file6
             file7   file8   file9   file10  file11  file12
             file13  file14

             output to stdout.

             'ls -l(ENTER)' gives;.....
             f.....rwxr--r--    01234    Mar2 10:00  file1
             f.....rwx------      443    Mar3  1:39  file2
             f.....rw-rw-rw-     8930    ----6:00    file3

             etc. (output on down listed vertically on the screen. 
             (Scrolls).

             'ls -lFR(ENTER)' gives.....

             /bin
                      /docs
                               file1
                               file2
                               file3
                               file4
                               file6
                               file7
                               file8
                               file9
                               file10
                               file11
                               file12
                               file13
                               file14
                               readme

                                    /bin/docs/old
                                                 file1
                                                 orchestrate.1
                                                 moonbeams.txt

             etc.....

             You can fit the output of the directory listing command
             through the use of a director (greater-than symbol key)
             and put it into a file instead of to stdin/stdout 
             (keyboard, screen). 'ls > filenames'
             Would save the output of the 'ls' command to a file
             named 'filenames.' Then you can type the contents of
             'filenames' to screen (stdout).
        DOS: ls is like the 'dir /w' command, while 'ls -l' is more
        like 'dir'

make
         maintain and updated sets of files for compilation purposes 
         a program to run a 'Makefile' which is a script file
         to run a 'compile' process on a group of files to
         compile a program.

man
        the "help" function for any given command; display manual
        display manual pages
        DOS: What the /? command should have been in DOS

mkdir
         make a directory.

         'mkdir dirname' creates a directory called 'dirname.'
         DOS: just like the DOS command 'mkdir'

mkfs
         make a file system

             You use this on a pre-formatted DOS disk to render
             it readable by the Linux Operating System. Or use
             it on a hard drive partition. You have to supply the
             size for mkfs to setup the drive/disk to. On floppies
             it's;

             'mkfs /dev/at0 1200' for 5 1/4" 1.2M disks -and-

             'mkfs /dev/at1 1400' for 3 1/2" 1.4M disks.

             For a hard drive partition you would first issues
             the command 'fdisk' to get a readout of the sizes
             on your partitions that fdisk reports. Then mkfs
             your partition size using that reported information.

             'mkfs /dev/hda2 20000' if it were the 2nd partition
             on your first/only hard drive and fdisk had reported
             the 20000 size.
        DOS: analogous, but not actually like the DOS 'format' 
        command

mknod
        make a special file (/dev/***).

more
        pager; displays any size document a page at a time on the
        screen. More also allows you to skip multiple pages, go 
        backwards, and search for keywords in the document. 

        DOS: like DOS's 'more', but infinitely more useful

mount
         mount a file system

         You mount a file system so that you can access it.

         'mount /dev/at0 /mnt' would mount the disk in 
         the floppy drive to the filesystem name '/mnt'
         (which is provided for you on the distribution as
         an empty filesystem for this purpose.)
         'mount /dev/hda2 /usr' to set up second partition
         on first hard drive mounted to the '/usr' file
         system.

mtab
         mount table

mv
         move or rename a file

         'mv filename newfilename' would rename 'filename'
         to 'newfilename'.
         DOS: somewhat like DOS's 'ren(ame)' command

od
        octal (and other base) dump. Sort of like DOS debug.

paste
        paste a b c d ... Put several files together line-by-line, 
        separated by a tab, making several columns. paste -d" " to 
        use space as a separator. cut does the inverse.

printenv 
        from within BASH command shell, print the
        automatically searched directories, prompt style, aliases, 
        etc. Print all environment variables. (This is a shell 
        thing.)

patch
        patches up a file from the original and a diff

pr
        print a file

printenv
        from within BASH command shell, print the
        automatically searched directories, prompt style, aliases, 
rm
        remove a file

        'rm filename' would erase the file.
        DOS: like 'del(ete)' or 'erase'

rmdir
        remove a directory

        'rm dirname' would erase the directory only if it is
        first empty of any files. (You would have to remove
        all of the files first).
        DOS: like 'rmdir'

sed
        Stream editor.

sort
        sort lines or records. Fields are separated by whitespace; 
        field 0 is the first field. Use the n switch for numeric 
        order rather than ascii string collating; r for reverse; M 
        for monthnames (I think). So sort +2r +3n +4n +5 +7nr +0 
        means sort with precedence on fields (2,3,4,5,7,0), some 
        numeric, some reversed, etc.

sh
        shell

        When you boot up Linux 0.95a you are in the shell.
        The shell in 0.95a is 'ash'. You can get 'bash'.
        Bash is larger but has more features.


stty
        set terminal parameters
        DOS: allows you not to put the information in a CONFIG.SYS
        driver

sync
        flush the cache to disk
        !You must do this every time in LINUX before you turn off 
        the machine!!

tail
        print the last few lines of a file


        'tail filename' would print to stdout/screen the last
        ten lines of 'filename'.

tar
        tape archiver/files w/sub-directories attached into
        a compressed 'tar' file.

        'tar cvf tarnamefile dirname' would compress and
        keep in order all directories and files in the
        directories into the tar file 'tarnamefile' from
        the directory name you supplied 'dirname'.

        ('tar xvf tarname.tar' would uncompress it back
        to its original form.)

tty
        print the device name of this tty

umount
        unmount a mounted file system

        'umount /dev/at0' unmounts the filesystem and
        drive a: (remember the name does 'not' include
        an 'n' in it. It's not 'unmount' but 'umount').

updatedb
        Update the fast-find database (usually run once a day by 
        root's crontab). (Should be in /usr/lib/find, right?)

utmp
        user accounting data



=====================
APPENDIX A: ERROR CODES and their MEANINGS
=====================
You can find these by looking in /usr/include/errno.h and in 
/usr/src/lib/estdio/errlist.h . However this will be a problem if
you can't get you system up and running. (by the way, most programs
report "ENOENT" instead of "error 2", which just depends on how
one compiled the program. 
 
Here comes  /usr/src/lib/estdio/errlist.h:
 
/* EUNKNOWN          0 */ "Unknown error",
/* EPERM             1 */ "Not owner",
/* ENOENT            2 */ "No such file or directory",
/* ESRCH             3 */ "No such process",
/* EINTR             4 */ "Interrupted system call",
/* EIO               5 */ "I/O error",
/* ENXIO             6 */ "No such device or address",
/* E2BIG             7 */ "Arg list too long",
/* ENOEXEC           8 */ "Exec format error",
/* EBADF             9 */ "Bad file number",
/* ECHILD           10 */ "No children",
/* EAGAIN           11 */ "No more processes",
/* ENOMEM           12 */ "Not enough core",
/* EACCES           13 */ "Permission denied",
/* EFAULT           14 */ "Bad address",
/* ENOTBLK          15 */ "Block device required",
/* EBUSY            16 */ "Mount device busy",
/* EEXIST           17 */ "File exists",
/* EXDEV            18 */ "Cross-device link",
/* ENODEV           19 */ "No such device",
/* ENOTDIR          20 */ "Not a directory",
/* EISDIR           21 */ "Is a directory",
/* EINVAL           22 */ "Invalid argument",
/* ENFILE           23 */ "File table overflow",
/* EMFILE           24 */ "Too many open files",
/* ENOTTY           25 */ "Not a typewriter",
/* ETXTBSY          26 */ "Text file busy",
/* EFBIG            27 */ "File too large",
/* ENOSPC           28 */ "No space left on device",
/* ESPIPE           29 */ "Illegal seek",
/* EROFS            30 */ "Read-only file system",
/* EMLINK           31 */ "Too many links",
/* EPIPE            32 */ "Broken pipe",
/* EDOM             33 */ "Math argument",
/* ERANGE           34 */ "Result too large",
/* EDEADLK          35 */ "Resource deadlock avoided",
/* ENAMETOOLONG     36 */ "Filename too long",
/* ENOLCK           37 */ "No locks available",
/* ENOSYS           38 */ "Function not implemented",
/* ENOTEMPTY        39 */ "Directory not empty"
=========================================

=============================
APPENDIX B: COMMANDS/SUMMARY: (QUICK LISTING)
=============================================
bawk
        pattern matching language
cat
        concatenate files and write them to standard output
cd
        change working directory
chmod
        change access permissions for files, directories.
comm
        print lines common to two sorted files
compress
        compress a file using adaptive Lempel-Ziv coding
cp
        copy a file
cut
        cut out columns in a file
dd
        disk dumper
df
        report free disk space and i-nodes
du
        print disk usage of the current and all subdirectories  
file
        guess at file's type by contents
find
        find files meeting a given condition
grep
        search a file for lines containing a given pattern
head
        print the first few lines of a file.
kill
        send a signal to a process
ln
        creates a link to another file
ls
        list the contents of the directory. (Show all files)
make
          maintain and updated sets of files for compilation purposes 
man
        the "help" function for any given command; display manual
pages
          DOS: What the /? command should have been in DOS
mkdir 
        make a directory.
mkfs
        make a file system
mknod
        make a special file (/dev/***).
more
        pager; displays any size document a page at a time on the
        screen
mount
        mount a file system
mv
        move or rename a file
patch
        patches up a file from the original and a diff
pr
        print a file
rm
        remove a file
rmdir
        remove a directory
sh
        shell
stty
        set terminal parameters
sync
        flush the cache to disk
tail
        print the last few lines of a file
tar
        tape archiver/files w/sub-directories attached into
        a compressed 'tar' file.
tty
        print the device name of this tty
umount
        unmount a mounted file system

SPECIAL FILES
=============
group
        group identity
issue
        system identification file
motd
          message of the day; is displayed on login
mtab
        mount table
passwd
          holds passwords and user ids
termcap
          hold information for properly setting terminal type
utmp
        user accounting data
wtmp 
          more user accounting data


APPENDIX C: BACKUP.
========================

You have all kinds of things on your Linux hard-drive partition.
At some time you are going to want to backup everything that is
important to you. It would be important if you lost it due to 
some unforseen accident, and you wouldn't want to download it
again, or some file/program that you have created, or utilities
that you have that have been changed. Also, it is useful to just
backup everything that you have. To backup you would simply copy
the file(s) from the hard-drive partition to a floppy disk.
(I assume, though maybe wrongly, that one would be using 1.2Mb,
5 1/4" HD, high-density, disks. If not, you will just have to
save everything in smaller portions and on more disks.)

Let's use as the example; backing up all utility files in /bin. (I 
only am using a single-user system/machine, so I have put almost 
all of my utilities that would have been broken up between /bin 
and /usr/bin directories into the one /bin directory.)

You would 1st mount a floppy disk. 

'mount /dev/at0 /mnt'

Then you would/could;

'cd /bin'
'mkdir /mnt/bin'
'cp cat /mnt/bin'

That would copy the 'cat' utility file from the hard-disk Linux 
partition directory '/bin' to the '/bin' directory on '/mnt' which 
is the floppy drive/disk mount point.

There are shorter methods of doing this. You have no way of knowing 
how many of the files will fit onto the floppy disk. Concerning 
this insight one could;

'cp [a-m]* /mnt/bin'

This is a neat trick. What it tells the system to do is to copy 
each file that has 'a, b, c, d, .... through m' as the first letter 
of the filename ('*' is a wildcard that means 'all/everything' else 
from the directory that you are presently in (/bin) to the floppy 
disk drive /mnt/bin directory.

Then you would just issue the same type command for letters 'n-z' 
in the alphabet, which would cover all of the files. Perhaps you 
would use two disks for this.

Another method would be to back up one directory from the 
subdirectory /bin ('cd ..') which would be the '/' directory, or 
the root directory. Then from there you could pack the entire 
directory with its' files into a single file using the 'tar' command;

'cd ..'
'tar cvf bin.tar /bin'

That would create a file named 'bin.tar' which would include every 
file in the /bin directory. You can also cut the contents of the 
/bin directory to half in the tar file by issuing the same kind of 
switch in the command line;

'tar cvf bin1.tar /bin/[a-m]*'
and
'tar cvf bin2.tar /bin/[n-z]*'

would give you two, smaller 'bin#.tar' files..... Next we would 
want to shrink the size of each file. This is what 'compress' is 
for. So, issue the command 'compress filename' and get these two 
files (or one, as you choose to do...) down to half their current 
size;

'compress bin1.tar'

creates;

bin1.tar.Z

'compress bin2.tar'

creates;

bin2.tar.Z

Now copy each of these two files to floppy disks. Now you have 
your /bin utility files compressed and collected into one or two 
files and have put a copy of them onto a floppy disk. This disk is 
your backup copies of your files. Put 'tar' and 'uncompress' onto 
separate disks by themselves so that you have these utilities in 
case of a total system crash. You wouldn't want to have everything 
backed up on disks and then not be able to access them because you 
don't have the silly utility that unpacks them for you.

To uncompress a file;

'uncompress bin2.tar.Z'

would uncompress the file and leave you with;

bin2.tar

'tar xvf bin2.tar' would unpack the contents of 'bin2.tar' creating 
a /bin directory and placing all of the packed files into it.

(keep notes handy, that's 'tar xvf' for unpacking, and 'tar cvf'
for packing into the archive.)

===================
APPENDIX D: MTOOLS:
===================

You have with 'mtools' a program that will let you, from within 
your Linux Operating System environment, deal with 
files/directories in the DOS Operating System environment. From 
within Linux you can get a listing of directories and files, copy 
the files to Linux, or to DOS from Linux, make directories, move 
directories, move files, erase/delete files and directories... 
etc., all kinds of useful things.

All that I find at present very useful with 'mtools' is to copy 
files from my DOS hard-drive partition to my Linux hard-drive 
partition.

'mdir c:'

would list the directory of C:.

'mcopy c:/docs/one /usr/docs'

would copy the filename 'one' from the docs directory in drive C: 
to my docs directory in directory /usr/docs as the filename of 
'one.' 

This is useful for copying over 'gcc2.tar.Z' for instance. You have 
gotten the file 'gcc2.tar.Z' onto your DOS drive C: in the 
directory 'C:\DL\GCC2TAR.Z' for instance. Now you want to copy it 
over to the Linux partition into the directory '/usr'. So you would;

'mcopy c:/dl/gcc2tar.z /usr/gcc2.tar.Z'

and you would have it. Don't forget to look closely at the lines to 
type in letter-for-letter.... In DOS the directory separator symbol 
is '\', but in Linux it is '/'. So, take note.

Read the documentation that comes with 'mtools' for more usage 
notes and examples of what other capabilities it has for you to use.

========================
APPENDIX F: EXTRA HINTS:
========================
1)
Reading a compressed tar from a rawrite floppy is quit fast and a 
good way to install the abc-banjo Release:
          cd /
          tar -xZf /dev/floppy0
I also used the -k option, to prevent the abc over-writing the 
existing tsx-11 root files, but I'm quite paranoid, it's probably 
not necessary (and maybe a bad idea).

2)
*** The whole kernel is on the boot floppy.  If you make a new
kernel and you are still booting from floppy, you need to create a 
new floppy, e.g.

   dd if=/usr/src/linux/Image of=/dev/floppy0

*** To build a new kernel, you should setup the Makefiles in
/dev/src/linux for your system.
*** You can rebuild the kernel with 4MB of memory and NO swap
space.

This takes somthing in the order of 15 to 20 minutes on a 20 MHz
386DX with 4MB of memory and no swap space (I didn't actually time 
it, but it seemed about that long).

located in /dev;
PS0 is the device of floppy drive a:, 1.2M in PS/2 systems
PS1 is the device name of floppy drive b:, 1.4M in PS/2 systems.
at0 is the device name of floppy drive a:, 1.2 in at clones.
hd0 is device name of 'all' of 1st hard drive.
hd1 is device name of first partition of 1st hard drive.
hd2 is device name of second partition of 1st hard drive.
hd3 is device name of third partition of 1st hard drive.
hd4 is device name of fourth partition of 1st hard drive.

hd5 is device name of 'all' of 2nd hard drive.
hd6 is device name of 1st partition of 2nd hard drive.
hd7 is device name of 2nd partition of 2nd hard drive.
hd8 is device name of 3rd partition of 2nd hard drive.
hd9 is device name of 4th partition of 2nd hard drive.

this is the usual Unix, Minix, Linux 0.12 operating systems.
Linux 0.95 has differend names;

hda is device name of 'all' of 1st hard drive.
hda1 is device name of 1st partition of 1st hard drive.
hda2
hda3
hda4... etc.

hdb is device name of 'all' of 2nd hard drive.
hdb1 is device name of 1st partition of 2nd hard drive. and etc....

>An explanation of the above files' listing;
>-rwxr-xr-x 
>are the 'permissions' settings for the files/directories.
>1 root 
>is the owner of the file (root in this case.)

The '1' part of the above field is actually a separate field 
standing for the number of links to the file (Or, in the case of a 
directory, the number of subdirectories within that directory + 2 
(The extra two being "." and ".."))

>sys
>        is the kind of file (a system file.)

This is really the "group" to which the file belongs, I believe. 
(You mention groups later in the permissions part.)  Beware saying 
that there are different "kind [types] of files", as a key point of 
UNIX is that there are no file types (like com, exe, bat, etc...)!!!

>29700
>        is the size of the file in bytes.
>Mar 7
>        is the date the file was created (or last modified.)
>23:58
>        is the time the file was created (or last modified.)
>chmod
>        is the filename.
>====================
>EXPLANATIONS:
>====================
>Given the above example again of a directory listing of the
>file 'chmod' in the directory '/usr/bin':
>====================
>-rwxr-xr-x   1 root     sys         29700 Mar  7 23:58 chmod
> 
>        The 'permissions' settings for the files/directories.
>        'r' means 'read' permission (can read the file).
>        'w' means 'write' permission (can write to the file, i.e.
>                edit/change it.)
>        'x' means 'execute' permission (can execute the file,
>                if it is an executable/binary file.)
> 
>-rwxr-xr-x
>0123456789
>        There are nine place holders for settings in 'all' 
>        cases of permission settings on all files.
>        The '0' place is for the type; file, or directory.
>        The '1' place is for 'read' for 'sysadm/root'.
>        The '2' place is for 'write' for 'sysadm/root'.
>        The '3' place is for 'execute' for 'sysadm/root'.

I would phrase this much differently; say "owner" or "user" and 
then mention that on Linux, the "owner" is often sysadmin/root if 
necessary:
  The '1' place is for 'read' for 'owner'. (or 'sysadm/root')

(Hm, "user" might be better, as it will mesh with the term used 
later in chmod (eg, chmod "u"+r).)  I'd hate to see someone misread 
your statement as meaning that the 123 places are used for root's 
priveleges to read the file. Since this is geared towards 
Linux/UNIX users, I wouldn't advise being too Linux-specific about 
always having root priveleges.

>        The '4' place is for 'r' for 'group'.
>        The '5' place is for 'w' for 'group'.
>        The '6' place is for 'x' for 'group'.
>        The '7' place is for 'r' for 'all/anybody'.
>        The '8' place is for 'w' for 'all/anybody'.
>        The '9' place is for 'x' for 'all/anybody'.
> 
>The idea here is that a file can be set for security reasons
>to be readable by some, all, nobody, writeable by some, all, 
>nobody, executable by ..... etc. It is for system security 
>reasons that the system administrator has the ability to set
>file attributes/permissions so that only she/he can run certain
>system routines, as well as other things. Also, any other user
>can open up a directory and its files (or only certain files)
>for others to read, others to write to (group that they all
>belong to, for instance), or others to execute. So everybody
>gets to set/change file attributes in one fashion or another.

You should mention in passing that the sysadmin/root can read any 
file on the system.  People on normal UNIXes forget how un-private 
their stuff really is to the root user (especially unauthorized 
root users!) Although it won't matter on LINUX, where most people 
are root, it might just be handy to remember if they start on LINUX 
and subsequently move to a multi-user non-root environement.



NOT ADDRESSED ISSUES:

1)
... mention how to set up new users (put them in the passwd file, 
make and chown their directory, copy in startup files). I know this 
is a little premature, but soon won't be, and may not be obvious to 
people who haven't been system administrators. Also how to setup to 
accept calls from a modem. I don't know these answers. 

=============================
APPENDIX G: FILES LISTINGS:
=============================
After grabbing the Linux 0.95a rootimage and bootimage and setting 
up my hard drive partitions I then got about everything I felt that 
I needed as a beginner (except for Kermit, as I don't have any 
experience using that, instead I use 'pcomm12b' which is more like 
traditional DOS telecommunications' programs) and here is a 
complete listing of all of my directories and files using the 'ls - 
laFR > files' command. This is the 'files' file (with comments):

This listing is provided, even though it takes up much space in 
this file, for three reasons; 1) to give you a listing so that you 
can check file sizes of the basic setup, 2) to show you 'where' 
everything is supposed to go, and 3) to explain what they are. This 
listing pertains to my system built 3/30/92 with gcc2.1, and Linux 
0.95a.

============================
total 33
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
-rw-r--r--   1 root     root         2964 Mar 29 16:26
.bash_history
-rw-r--r--   1 root     root          220 Mar 29 13:42 .profile
drwxr-xr-x   9 root     root          272 Mar 30 10:14 1/
drwxr-xr-x   3 root     root          960 Mar 30 10:14 bin/
drwxr-xr-x   2 root     root         1232 Mar 29 14:39 dev/
drwxr-xr-x   2 root     root          288 Mar 29 16:25 etc/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 home/
drwxr-xr-x   2 root     root          432 Mar 29 23:03 lib/
drwxr-xr-x   2 root     root           32 Mar 28 09:01 mnt/
drwxr-xr-x   2 root     root           64 Mar 28 18:18 source/
drwxr-xr-x   2 root     root           48 Mar 30 10:12 tmp/
drwxr-xr-x  13 root     root          240 Mar 28 20:00 usr/
-rw-r--r--   1 root     root         5484 Mar 28 18:12 zfiles

(this is the basic 'standard' root directory setup, except for '1/' 
which is where I put all other subdirectories that I create, 
'source/' which is where presently I am keeping any source code 
that I write that I wish to compile, and 'zfiles' which is my 
listing of all files on my system that I can 'more' any time to see 
what is what and where is where...)

('.bash_history' is a 'dot' file that keeps the 'specified in your 
.profile file' listing of previously issued commands by you).

('.profile' this is the 'users' setup file with specifications at 
bootup into the system. You can edit this file to change things. It 
is covered in 'Appendix F: Bash')

1:
total 9
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
drwxr-xr-x   2 root     root           32 Mar 30 10:06 1/
drwxrwxrwx   7 root     root          112 Mar 29 22:46 2/
drwxrwxrwx   2 root     root          144 Mar 29 22:52 docs/
drwxrwxrwx   2 root     root          368 Mar 28 10:15 joe/
drwxrwxrwx   4 root     root          176 Mar 29 16:14 pcomm/
drwxrwxrwx   2 root     root          448 Mar 28 11:13 rzsz/

(joe/ is an editor that I'm trying to compile, it's easier than
'vile' (vi), or 'em' (emacs) to use...)

(pcomm is the telecommunications program I choose to use instead of
Kermit, it is more DOS-like).

(rzsz is a transfer protocol/method which is the fastest, trying to
compile it so that pcomm can use it..)
drwxrwxrwx   2 root     root          128 Mar 29 13:30
selection-1.0/

1/1:
total 2
drwxr-xr-x   2 root     root           32 Mar 30 10:06 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../

1/2:
total 7
drwxrwxrwx   7 root     root          112 Mar 29 22:46 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../
drwxr-xr-x   2 root     root           64 Mar 29 22:50 1/
drwxr-xr-x   2 root     root          160 Mar 29 22:51 2/
drwxr-xr-x   3 root     root           64 Mar 29 22:53 3/
drwxr-xr-x   2 root     root           32 Mar 29 22:46 4/
drwxr-xr-x   2 root     root           32 Mar 29 22:46 5/

(these directories are where I put downloaded stuff and where I
uncompress and un-tar them, so that they don't expand out into the
basic directory structure and become garbage that I've got to
remove, etc. I do it here first, if it needs un-tarring into a
specific directory I move the '.tar' file there and un tar it and
erase all of it here.)
1/2/1:
total 2
drwxr-xr-x   2 root     root           64 Mar 29 22:50 ./
drwxrwxrwx   7 root     root          112 Mar 29 22:46 ../

1/2/2:
total 2
drwxr-xr-x   2 root     root          160 Mar 29 22:51 ./
drwxrwxrwx   7 root     root          112 Mar 29 22:46 ../

1/2/3:
total 4
drwxr-xr-x   3 root     root           64 Mar 29 22:53 ./
drwxrwxrwx   7 root     root          112 Mar 29 22:46 ../
drwxr-xr-x   3 root     root          800 Mar 29 22:53 libcurses/

1/2/3/libcurses:
total 396
drwxr-xr-x   3 root     root          800 Mar 29 22:53 ./
drwxr-xr-x   3 root     root           64 Mar 29 22:53 ../
-r--r--r--   1 root     root          971 Dec 17 23:50 Makefile
drwxr-xr-x   2 root     root          144 Mar 29 22:53 RCS/
-r--r--r--   1 root     root         4192 Apr 20  1991 addbytes.c
-r--r--r--   1 root     root         2085 Apr 20  1991 addch.c
-r--r--r--   1 root     root         2168 Apr 20  1991 addstr.c
-r--r--r--   1 root     root         2524 Apr 20  1991 box.c
-r--r--r--   1 root     root         2067 Apr 20  1991 clear.c
-r--r--r--   1 root     root         2480 Apr 20  1991 clrtobot.c
-r--r--r--   1 root     root         2616 Apr 20  1991 clrtoeol.c
-r--r--r--   1 root     root         9790 Apr 20  1991 cr_put.c
-r--r--r--   1 root     root         6982 Dec 17 23:50 cr_tty.c
-r--r--r--   1 root     root         6001 Apr 20  1991 curses.3
-r--r--r--   1 root     root         3242 Dec 17 23:50 curses.c
-r--r--r--   1 root     root         2251 Dec 20 14:00 curses.ext
-r--r--r--   1 root     root         9093 Dec 20 14:00 curses.h
-r--r--r--   1 root     root         2368 Apr 20  1991 delch.c
-r--r--r--   1 root     root         2677 Dec 20 13:51 deleteln.c
-r--r--r--   1 root     root         2818 Apr 20  1991 delwin.c
-r--r--r--   1 root     root         2159 Dec 17 23:49 endwin.c
-r--r--r--   1 root     root         2515 Apr 20  1991 erase.c
-r--r--r--   1 root     root         2458 Apr 20  1991 fullname.c
-r--r--r--   1 root     root         2630 Dec 17 23:49 getch.c
-r--r--r--   1 root     root         2203 Apr 20  1991 getstr.c
-r--r--r--   1 root     root         2512 Apr 20  1991 id_subwins.c
-r--r--r--   1 root     root         2156 Apr 20  1991 idlok.c
-r--r--r--   1 root     root         2922 Apr 20  1991 initscr.c
-r--r--r--   1 root     root         2527 Apr 20  1991 insch.c
-r--r--r--   1 root     root         2689 Apr 20  1991 insertln.c
-rw-r--r--   1 root     root        38584 Dec 20 13:58 libcurses.a
-r--r--r--   1 root     root         2261 Apr 20  1991 longname.c
-r--r--r--   1 root     root         2258 Apr 20  1991 move.c
-r--r--r--   1 root     root         2839 Jun 19  1991 mvprintw.c
-r--r--r--   1 root     root         2833 Apr 20  1991 mvscanw.c
-r--r--r--   1 root     root         2658 Apr 20  1991 mvwin.c
-r--r--r--   1 root     root         6313 Apr 20  1991 newwin.c
-r--r--r--   1 root     root         2986 Apr 20  1991 overlay.c
-r--r--r--   1 root     root         2905 Dec 20 13:55 overwrite.c
-r--r--r--   1 root     root         3546 Dec 17 23:49 printw.c
-r--r--r--   1 root     root         2055 Apr 20  1991 putchar.c
-r--r--r--   1 root     root         7913 Apr 20  1991 refresh.c
-r--r--r--   1 root     root         2992 Apr 20  1991 scanw.c
-r--r--r--   1 root     root         2378 Apr 20  1991 scroll.c
-r--r--r--   1 root     root         2332 Apr 20  1991 standout.c
-r--r--r--   1 root     root         2667 Jul  1  1991 tags
-r--r--r--   1 root     root         3079 Apr 20  1991 toucholap.c
-r--r--r--   1 root     root         2869 Apr 20  1991 touchwin.c
-r--r--r--   1 root     root         2824 Dec 20 14:00 tstp.c
-r--r--r--   1 root     root         2738 Apr 20  1991 unctrl.c

1/2/3/libcurses/RCS:
total 69
drwxr-xr-x   2 root     root          144 Mar 29 22:53 ./
drwxr-xr-x   3 root     root          800 Mar 29 22:53 ../
-r--r--r--   1 root     root         1328 Dec 17 23:50 Makefile,v
-r--r--r--   1 root     root         7314 Dec 17 23:50 cr_tty.c,v
-r--r--r--   1 root     root         3660 Dec 17 23:50 curses.c,v
-r--r--r--   1 root     root         2557 Dec 20 14:00 curses.ext,v
-r--r--r--   1 root     root        10051 Dec 20 14:00 curses.h,v
-r--r--r--   1 root     root         3850 Dec 17 23:49 printw.c,v
-r--r--r--   1 root     root         3282 Dec 20 14:00 tstp.c,v

(I don't know how to implement libcurses or curses yet, but here it
is for when a program calls for it and I can then move it to where
it is supposed to go.)

1/2/4:
total 2
drwxr-xr-x   2 root     root           32 Mar 29 22:46 ./
drwxrwxrwx   7 root     root          112 Mar 29 22:46 ../

1/2/5:
total 2
drwxr-xr-x   2 root     root           32 Mar 29 22:46 ./
drwxrwxrwx   7 root     root          112 Mar 29 22:46 ../

1/docs:
total 257
drwxrwxrwx   2 root     root          144 Mar 29 22:52 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../
-rwxrwxrwx   1 root     root        51036 Mar 29 13:28 095a.faq*
-r-xr-xr-x   1 bin      bin         47004 Dec 19 18:54 less.man*
-r-xr-xr-x   1 bin      bin           774 Dec 19 19:12 less.txt*
-r-xr-xr-x   1 bin      bin          6842 Dec 19 18:54 lesskey.man*
-rwxrwxrwx   1 root     root            0 Mar 29 15:15 pcomm.dump*
-rwxrwxrwx   1 root     root          220 Mar 29 13:42 profile*
-rw-r--r--   1 root     root        23500 Oct  3 18:02 zip.doc

1/joe:
total 316
drwxrwxrwx   2 root     root          368 Mar 28 10:15 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../
-rw-------   1 424      101         12488 Aug 27  1991 COPYING
-rw-------   1 424      101          1220 Feb 11 06:54 Makefile
-rw-------   1 424      101          5312 Aug 27  1991 NEWS
-rw-------   1 424      101           648 Aug 27  1991 README
-rw-------   1 424      101          2602 Aug 27  1991 async.h
-rw-------   1 424      101          4438 Aug 27  1991 asyncbsd.c
-rw-------   1 424      101          3758 Aug 27  1991 asynchpux.c
-rw-------   1 424      101          3146 Aug 27  1991 asyncxenix.c
-rw-------   1 424      101          3086 Aug 27  1991 blocks.c
-rw-------   1 424      101          1005 Aug 27  1991 blocks.h
-rw-------   1 424      101          1931 Aug 27  1991 cruddy.c
-rw-------   1 424      101          2671 Aug 27  1991 j.1
-rw-------   1 424      101         58525 Aug 27  1991 j.c
-rw-------   1 424      101         17736 Aug 27  1991 j.h
-rwx------   1 424      101          1018 Feb 11 05:05
joe.editor.hel*
-rwxr-xr-x   1 424      101           262 Feb 10 17:13
joe.instructio*
-rwxr-xr-x   1 424      101          7738 Feb 11 06:34 joerc*
-rw-------   1 424      101          8899 Feb 11 06:56 keymap.j
-rw-------   1 424      101          8899 Aug 27  1991 keymapbsd
-rw-------   1 424      101          8949 Aug 27  1991 keymapxenix
-rw-------   1 424      101           101 Aug 27  1991 patch0.0.1

(These are the sources for the editor 'joe'. One would look at the
'Makefile' and edit changes if necessary to compile on your system.
Then just type 'make joe' and if it will compile it will. The
'Makefile' takes care of telling the compiler where to find certain
things that 'joe' needs while compiling the program.)


1/pcomm:
total 512
drwxrwxrwx   4 root     root          176 Mar 29 16:14 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../
drwxr-xr-x   2 root     root          112 Mar 28 18:10 Config/
drwxr-xr-x   2 root     root          144 Mar 28 18:10 Doc/
-rw-r--r--   1 root     root         5784 Mar  1 13:38 Makefile
-rw-r--r--   1 root     root         2363 Mar  1 12:46 Readme.linux
-rwxr-xr-x   1 root     root        20152 Mar  1 13:10 matches*
-rwxr-xr-x   1 root     root        15612 Mar  1 13:10 modem_break*
-rwxr-xr-x   1 root     root       149091 Mar  1 13:10 pcomm*
-rwxr-xr-x   1 root     root        40010 Mar  1 13:10 pcomm_input*
-rwxr-xr-x   1 root     root        24924 Mar  1 13:10 waitfor*

1/pcomm/Config:
total 9
drwxr-xr-x   2 root     root          112 Mar 28 18:10 ./
drwxrwxrwx   4 root     root          176 Mar 29 16:14 ../
-rw-r--r--   1 root     root           81 Mar 29 14:23
pcomm.dial_dir
-rw-r--r--   1 root     root           79 Mar  1 12:15 pcomm.extrnl
-rw-r--r--   1 root     root          232 Mar  1 12:18 pcomm.modem
-rw-r--r--   1 root     root          513 Mar 29 14:27 pcomm.param
-rw-r--r--   1 root     root          994 Feb  8 21:11 sample

1/pcomm/Doc:
total 178
drwxr-xr-x   2 root     root          144 Mar 28 18:10 ./
drwxrwxrwx   4 root     root          176 Mar 29 16:14 ../
-rw-r--r--   1 root     root        61175 Feb  8 21:11 Doc
-rw-r--r--   1 root     root          635 Feb  8 21:11 Matches.1
-rw-r--r--   1 root     root          836 Feb  8 21:11
Modem_break.1
-rw-r--r--   1 root     root         8649 Feb  8 21:11 Pcomm.1
-rw-r--r--   1 root     root         7963 Feb  8 21:11 Readme
-rw-r--r--   1 root     root         8624 Feb  8 21:11
Release.notes
-rw-r--r--   1 root     root          871 Feb  8 21:11 Waitfor.1

1/rzsz:
total 362
drwxrwxrwx   2 root     root          448 Mar 28 11:13 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../
-rw-r--r--   1 240      25           2936 May 17  1989 Makefile
-rw-r--r--   1 240      25           2630 May 19  1989 README
-rw-r--r--   1 240      25            884 Feb 27  1989 crc.1
-rw-r--r--   1 240      25           8566 Apr 26  1988 crc.c
-rw-r--r--   1 240      25           8737 Apr  4  1988 crctab.c
-rw-r--r--   1 240      25           1959 May 25  1989 genie.c
-rw-r--r--   1 240      25             19 Oct 22  1987 gz
-rw-r--r--   1 240      25            167 Apr 22  1988 init.com
-rw-r--r--   1 240      25           1241 Jan  7  1988 minirb.1
-rw-r--r--   1 240      25           4057 May 25  1987 minirb.c
-rw-r--r--   1 240      25            119 May 25  1987 ptest.sh
-rw-r--r--   1 240      25           6924 May 10  1989 rbsb.c
-rw-r--r--   1 240      25           9410 May 25  1989 rz.1
-rw-r--r--   1 240      25          32265 May 25  1989 rz.c
-rw-r--r--   1 240      25          12484 Apr 22  1989 sz.1
-rw-r--r--   1 240      25          44056 May 18  1989 sz.c
-rw-r--r--   1 240      25            882 Apr 17  1988 vmodem.h
-rw-r--r--   1 240      25           4440 May  8  1988 vrzsz.c
-rw-r--r--   1 240      25            618 May 19  1989 vupl.t
-rw-r--r--   1 240      25            274 Apr 30  1988 vuplfile.t
-rw-r--r--   1 240      25           6120 Sep  4  1988 vvmodem.c
-rw-r--r--   1 240      25          17939 May 25  1989 zm.c
-rw-r--r--   1 240      25           6137 May 20  1989 zmodem.h
-rw-r--r--   1 240      25           3942 Apr 24  1989 zmr.c
-rw-r--r--   1 240      25            734 May  5  1989 zupl.t

1/selection-1.0:
total 30
drwxrwxrwx   2 root     root          128 Mar 29 13:30 ./
drwxr-xr-x   9 root     root          272 Mar 30 10:14 ../
-rw-r--r--   1 root     root          155 Mar 25 00:30 Makefile
-rw-r--r--   1 root     root         2950 Mar 27 11:36 README
-rw-r--r--   1 root     root         6131 Mar 26 09:27 kernel.cdif
-rw-r--r--   1 root     root         1939 Mar 25 00:30 mouse.c
-rw-r--r--   1 root     root          287 Mar 25 00:30 mouse.h
-rw-r--r--   1 root     root         1948 Mar 25 23:52 stuff.c

(this, if I would choose to use it, is a program that allows you to
mark and cut with the mouse from one terminal window to another
terminal window. To use it calls for patching a change to the
kernel source with 'kernel.cdif' and I'm not prepared to do that
just yet, so here it sits...)

bin:
total 6193
drwxr-xr-x   3 root     root          960 Mar 30 10:14 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
-rwxr-xr-x   1 root     root        78852 Mar 27 21:51 ash*
-rwxr-xr-x   1 root     root       300036 Mar 28 09:11 bash*
-rw-r--r--   1 root     root         2105 Mar 28 10:41 bash.help
-rwxr-xr-x   1 root     root        29700 Mar 27 21:50 cat*
-rwxr-xr-x   1 root     root        31380 Feb 22 21:56 chgrp*
-rwxr-xr-x   1 root     root        30618 Feb 22 21:56 chmod*
-rwxr-xr-x   1 root     root        36070 Feb 22 21:56 chown*
-rwxr-xr-x   1 root     root        37892 Mar 27 21:50 compress*
-rwxr-xr-x   1 root     root        37892 Mar 27 21:50 cp*
-rwxr-xr-x   1 root     root        30140 Feb 22 21:56 dd*
-rwxr-xr-x   1 root     root        40221 Mar 28 09:11 df*
-rwxr-xr-x   1 root     root        54947 Feb 22 21:56 dir*
-rwxr-xr-x   1 root     root        30878 Feb 22 21:56 du*
drwxr-xr-x   2 root     root          144 Mar 28 18:02 emacs/
-rwxr-xr-x   1 root     root        41988 Mar 27 21:50 fdisk*
-rwxr--r--   1 root     root        98216 Mar 28 21:11 find*
-rwxr-xr-x   1 root     root        37892 Mar 27 21:50 fsck*
-rw-r--r--   1 root     root       103428 Mar 30 10:08 gawk
-rwxr-xr-x   1 root     root        29700 Mar 27 21:50 getty*
-rwxr-xr-x   1 root     root        36535 Feb 22 21:56 install*
-rwxr-xr-x   1 root     root        33796 Mar 27 21:50 ln*
-rwxr-xr-x   1 root     root        46084 Mar 27 21:50 login*
-rwxr-xr-x   1 root     root        50180 Mar 27 21:50 ls*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mattrib*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mcd*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mcopy*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mdel*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mdir*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mformat*
-rwxr-xr-x   1 root     root        29700 Mar 27 21:51 mkdir*
-rwxr-xr-x   1 root     root        37892 Mar 27 21:51 mkfs*
-rwxr-xr-x   1 root     root        21508 Mar 27 21:51 mknod*
-rwxr-xr-x   1 root     root        21508 Mar 27 21:51 mkswap*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mlabel*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mmd*
-rwxr-xr-x   1 root     root        21508 Mar 27 21:51 mount*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mrd*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mread*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mren*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mtools*
-rw-r--r--   1 root     root          116 Mar 28 10:31
mtools.script
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mtype*
-rwxr-xr-x   1 root     root        33796 Mar 27 21:51 mv*
-rwxr-xr-x  14 root     root        70656 Mar 28 10:30 mwrite*
-rwxr-xr-x   1 root     root        50180 Mar 27 21:51 pfdisk*
-rwxr-xr-x   1 root     root        29700 Mar 27 21:51 rm*
-rwxr-xr-x   1 root     root        25604 Mar 27 21:51 rmdir*
-rwxr-xr-x   1 root     root        25604 Mar 27 21:51 rootdev*
-rw-r--r--   1 root     root        66564 Mar 30 10:08 sed
-rwxr-xr-x   1 root     root       300036 Mar 28 09:13 sh*
-rwxr-xr-x   1 root     root        21508 Mar 27 21:51 swapon*
-rwxr-xr-x   1 root     root         9220 Mar 27 21:51 sync*
-rwxr-xr-x   1 root     root       140292 Mar 27 21:51 tar*
-rwxr-xr-x   1 root     root        49062 Feb 22 21:56 touch*
-rwxr-xr-x   1 root     root        21508 Mar 27 21:51 umount*
-rwxr-xr-x   1 root     root        37892 Mar 27 21:51 uncompress*

('ash' came with 0.95a distribution, 'bash' came with 0.12. I got
used to 'bash' right away and here I have copied 'sh' to 'ash'
which is what it is, and then copied 'bash' to 'sh' so that now
'sh' is really 'bash'.
Also, I am running Linux as a single-user only system, in which
I am the user and the system administrator/root id member. So, I
have put just about every command utility program into '/bin'
directory... this 'IS NOT' the suggested 'standard' to be using,
but as it is, it's what I 'am' using.)

bin/emacs:
total 752
drwxr-xr-x   2 root     root          144 Mar 28 18:02 ./
drwxr-xr-x   3 root     root          960 Mar 30 10:14 ../
-rw-------   1 754      root          844 Feb  7 22:18 Readme
-rw-------   1 754      root        11277 Nov 29 11:09 dif311a.zip
-rwx------   1 754      root       167640 Feb  6 20:56 emacs*
-rw-------   1 754      root         4558 Feb  7 06:56
estruct.cdiff
-rw-------   1 754      root         2449 Feb  7 06:55
makegcc.cdiff
-rw-r--r--   1 root     root       194560 Mar 28 17:16 uem.tar
-rw-------   1 754      root          876 Feb  7 06:27 unix.cdiff

(Just wanted to point out a 'usual' directory with files structure 
as you might get with each 'ported' package to Linux. Here you have 
the first most important file in the group, the 'Readme' file. You, 
as a beginner, should 'always' read these files 'FIRST.' Print them 
out if you can/care to, otherwise jot down important notes about 
the program, 'how to install', 'where to install', and 'notes' 
about its' usage... ALWAYS, if you are having trouble with a 
program, read this file FIRST before posting news to the netnews 
groups because more than likely it has been covered in this 
documentation. Nothing is quite as irresponible as posting a news 
article to the 'world' when the readers realize that the answer is 
in the documentation and that you would have gotten it if you just 
would have read it. Perhaps nobody will answer you because of this?

The second file of importance is 'emacs*'. This 'is' the 'emacs'
executable program.)

dev:
total 13
drwxr-xr-x   2 root     root         1232 Mar 29 14:39 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
brw-rw-rw-   1 root     root       2,  28 Mar 27 21:51 PS0
brw-rw-rw-   1 root     root       2,  29 Mar 27 21:51 PS1
brw-rw-rw-   1 root     root       2,   8 Mar 27 21:51 at0
brw-rw-rw-   1 root     root       2,   9 Mar 27 21:51 at1
crw-rw-rw-   1 root     root       4,   1 Mar 27 21:51 console
brw-rw-rw-   1 root     root       3,   0 Mar 27 21:51 hda
brw-rw-rw-   1 root     root       3,   1 Mar 27 21:51 hda1
brw-rw-rw-   1 root     root       3,   2 Mar 27 21:51 hda2
brw-rw-rw-   1 root     root       3,   3 Mar 27 21:51 hda3
brw-rw-rw-   1 root     root       3,   4 Mar 27 21:51 hda4
brw-rw-rw-   1 root     root       3,   5 Mar 27 21:51 hda5
brw-rw-rw-   1 root     root       3,   6 Mar 27 21:51 hda6
brw-rw-rw-   1 root     root       3,   7 Mar 27 21:51 hda7
brw-rw-rw-   1 root     root       3,   8 Mar 27 21:51 hda8
brw-rw-rw-   1 root     root       3,  64 Mar 27 21:51 hdb
brw-rw-rw-   1 root     root       3,  65 Mar 27 21:51 hdb1
brw-rw-rw-   1 root     root       3,  66 Mar 27 21:51 hdb2
brw-rw-rw-   1 root     root       3,  67 Mar 27 21:51 hdb3
brw-rw-rw-   1 root     root       3,  68 Mar 27 21:51 hdb4
brw-rw-rw-   1 root     root       3,  69 Mar 27 21:51 hdb5
brw-rw-rw-   1 root     root       3,  70 Mar 27 21:51 hdb6
brw-rw-rw-   1 root     root       3,  71 Mar 27 21:51 hdb7
brw-rw-rw-   1 root     root       3,  72 Mar 27 21:51 hdb8
crw-rw-rw-   1 root     root       1,   2 Mar 27 21:51 kmem
crw-rw-rw-   1 root     root       1,   1 Mar 27 21:51 mem
crw-rw-rw-   1 root     root       1,   3 Mar 27 21:51 null
crw-rw-rw-   1 root     root       1,   4 Mar 27 21:51 port
crw-rw-rw-   1 root     root       4, 128 Mar 27 21:51 ptyp0
crw-rw-rw-   1 root     root       4, 129 Mar 27 21:51 ptyp1
crw-rw-rw-   1 root     root       4, 130 Mar 27 21:51 ptyp2
crw-rw-rw-   1 root     root       4, 131 Mar 27 21:51 ptyp3
crw-rw-rw-   1 root     root       4, 132 Mar 27 21:51 ptyp4
crw-rw-rw-   1 root     root       4, 133 Mar 27 21:51 ptyp5
crw-rw-rw-   1 root     root       4, 134 Mar 27 21:51 ptyp6
crw-rw-rw-   1 root     root       4, 135 Mar 27 21:51 ptyp7
crw-rw-rw-   1 root     root       4, 136 Mar 27 21:51 ptyp8
crw-rw-rw-   1 root     root       4, 137 Mar 27 21:51 ptyp9
crw-rw-rw-   1 root     root       4, 138 Mar 27 21:51 ptypa
crw-rw-rw-   1 root     root       4, 139 Mar 27 21:51 ptypb
crw-rw-rw-   1 root     root       4, 140 Mar 27 21:51 ptypc
crw-rw-rw-   1 root     root       4, 141 Mar 27 21:51 ptypd
crw-rw-rw-   1 root     root       4, 142 Mar 27 21:51 ptype
crw-rw-rw-   1 root     root       4, 143 Mar 27 21:51 ptypf
brw-rw-rw-   1 root     root       1,   1 Mar 27 21:51 ram
crw-rw-rw-   1 root     root       5,   0 Mar 27 21:51 tty
crw--w--w-   1 root     other      4,   1 Mar 27 21:51 tty1
crw--w--w-   1 root     root       4,   2 Mar 27 21:51 tty2
crw--w--w-   1 root     root       4,   3 Mar 27 21:51 tty3
crw--w--w-   1 root     root       4,   4 Mar 27 21:51 tty4
crw-rw-rw-   1 root     root       4,   5 Mar 27 21:51 tty5
crw-rw-rw-   1 root     root       4,   6 Mar 27 21:51 tty6
crwxrwxrwx   2 root     root       4,  64 Mar 29 14:39 tty64
crw-rw-rw-   1 root     root       4,   7 Mar 27 21:51 tty7
crw-rw-rw-   1 root     root       4,   8 Mar 27 21:51 tty8
crw-rw-rw-   1 root     root       4, 192 Mar 27 21:51 ttyp0
crw-rw-rw-   1 root     root       4, 193 Mar 27 21:51 ttyp1
crw-rw-rw-   1 root     root       4, 194 Mar 27 21:51 ttyp2
crw-rw-rw-   1 root     root       4, 195 Mar 27 21:51 ttyp3
crw-rw-rw-   1 root     root       4, 196 Mar 27 21:51 ttyp4
crw-rw-rw-   1 root     root       4, 197 Mar 27 21:51 ttyp5
crw-rw-rw-   1 root     root       4, 198 Mar 27 21:51 ttyp6
crw-rw-rw-   1 root     root       4, 199 Mar 27 21:51 ttyp7
crw-rw-rw-   1 root     root       4, 200 Mar 27 21:51 ttyp8
crw-rw-rw-   1 root     root       4, 201 Mar 27 21:51 ttyp9
crw-rw-rw-   1 root     root       4, 202 Mar 27 21:51 ttypa
crw-rw-rw-   1 root     root       4, 203 Mar 27 21:51 ttypb
crw-rw-rw-   1 root     root       4, 204 Mar 27 21:51 ttypc
crw-rw-rw-   1 root     root       4, 205 Mar 27 21:51 ttypd
crw-rw-rw-   1 root     root       4, 206 Mar 27 21:51 ttype
crw-rw-rw-   1 root     root       4, 207 Mar 27 21:51 ttypf
crw-rw-rw-   1 root     root       4,  64 Mar 27 21:51 ttys1
crw-rw-rw-   1 root     root       4,  65 Mar 27 21:51 ttys2
crw-rw-rw-   1 root     root       4,  66 Mar 27 21:51 ttys3
crw-rw-rw-   1 root     root       4,  67 Mar 27 21:51 ttys4
-rw-r--r--   1 root     root         4480 Mar 29 14:38 zfiles

(/dev directory files, ugh...: These seem to change with every
major release of Linux. For beginners, all that is important is to
realize/know that;

/dev/at0 is a 5 1/4" high density 1.2Mb floppy disk in drive a:
/dev/at1 is a 3 1/2" high density 1.4Mb floppy disk in drive b:

/dev/tty64 is your usual comm port #1 which you call out from
   to run your telecommunications program.)

etc:
total 127
drwxr-xr-x   2 root     root          288 Mar 29 16:25 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
-rw-r--r--   1 root     root          204 Mar 27 21:52 group
-rwxr-xr-x   1 root     root        29700 Mar 27 21:52 init*
-rw-r--r--   1 root     root          128 Mar 27 21:52 inittab
-rw-r--r--   1 root     root           68 Mar 27 21:52 issue
-rw-r--r--   1 root     root          365 Mar 27 21:52 motd
-rw-r--r--   1 root     root           12 Mar 30 10:06 mtab
-rw-r--r--   1 root     root           34 Mar 28 17:47 mtools
-rw-r--r--   1 root     root          152 Mar 27 21:52 passwd
-rw-r--r--   1 root     root          316 Mar 29 16:25 rc
-rw-r--r--   1 root     root          654 Mar 27 21:52 rc.orig1
-rw-r--r--   1 root     root           51 Mar 27 21:52 securetty
-rw-r--r--   1 root     root        14322 Mar 27 21:52 termcap
-rwxr-xr-x   1 root     root         9220 Mar 27 21:52 update*
-rw-r--r--   1 root     root          224 Mar 30 10:06 utmp
-rw-r--r--   1 root     root         3304 Mar 30 10:06 wtmp

(For beginner's, the 'rc' is about the only file worth noting
here. It is your initialization file at start up, it is a text
file, and you can change anything in here that you want to reflect
things that you want at setup/startup of your Linux system.)


home:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../

lib:
total 293
drwxr-xr-x   2 root     root          432 Mar 29 23:03 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
-rw-r--r--   1 root     root          361 Feb 18 18:07 Makefile
-rw-r--r--   1 root     root         1328 Mar 13 17:49 Readme
-rw-------   1 424      101        116162 Mar 29 01:19 libc.a
-rw-------   1 424      101         30720 Mar 29 01:19 libm.a

mnt:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 09:01 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../

source:
total 3
drwxr-xr-x   2 root     root           64 Mar 28 18:18 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
-rw-r--r--   1 root     root           30 Mar 28 18:20 one.c

tmp:
total 2
drwxr-xr-x   2 root     root           48 Mar 30 10:12 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../

usr:
total 47
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ./
drwxr-xr-x  12 root     root          320 Mar 30 10:16 ../
drwxr-xr-x   2 root     root           32 Mar 28 17:20 adm/
drwxr-xr-x   2 root     root          752 Mar 30 10:11 bin/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 etc/
drwxr-xr-x   7 root     other         112 Mar 28 21:14 gcc2/
drwxr-xr-x   5 root     root          656 Mar 29 22:59 include/
drwxr-xr-x   4 root     root           64 Mar 29 13:46 lib/
drwxr-xr-x   7 root     root          128 Mar 29 13:35 local/
drwxr-xr-x   2 root     root         1504 Mar 30 10:13 man/
drwxr-xr-x   3 root     root           48 Mar 29 14:37 spool/
drwxr-xr-x   7 root     root          176 Mar 29 23:00 src/
drwxr-xr-x   2 root     root           64 Mar 29 13:47 tmp/
-rw-r--r--   1 root     root        15241 Mar 28 19:53 zfiles

usr/adm:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../

usr/bin:
total 5073
drwxr-xr-x   2 root     root          752 Mar 30 10:11 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
-rwxr-xr-x   1 root     root        27180 Dec 16 23:39 basename*
-rwxr-xr-x   1 root     root        29700 Jan 14 19:09 cat*
-rwxr-xr-x   1 root     root        33796 Jan 14 19:09 chgrp*
-rwxr-xr-x   1 root     root        29700 Jan 14 19:09 chmod*
-rwxr-xr-x   1 root     root        33796 Jan 14 19:09 chown*
-rwxr-xr-x   1 root     root        29700 Jan 14 19:09 cmp*
-rwxr-xr-x   1 root     root        37892 Jan 14 19:09 cp*
-rwxr-xr-x   1 root     root        36620 Jan 12 01:08 cut*
-rwxr-xr-x   1 root     root        29700 Jan 14 19:09 dd*
-rwxr-xr-x   1 root     root        57614 Jan 12 01:08 dir*
-rwxr-xr-x   1 root     root        36611 Jan 12 01:08 du*
-rwxr-xr-x   1 root     uucp        72091 Sep  8  1991 egrep*
-rwxr-xr-x   1 root     root       137779 Dec  8 18:13 em*
-rwxr-xr-x   1 root     root        36643 Jan 12 01:10 expand*
-rwxr-xr-x   1 root     uucp        72090 Sep  8  1991 grep*
-rwxr-xr-x   1 root     root        30579 Jan 12 01:08 head*
-rwxr-xr-x   1 root     root       132100 Nov 19 00:52 kermit*
-r-xr-xr-x   1 bin      bin         80505 Dec 19 18:56 less*
-r-xr-xr-x   1 bin      bin         35592 Dec 19 18:56 lesskey*
-rwxr-xr-x   1 root     root        33796 Jan 14 19:09 ln*
-rwxr-xr-x   1 root     root        46084 Jan 14 19:09 ls*
-rwxr-xr-x   1 root     uucp       138114 Aug 30  1991 make*
-rwxr-xr-x   1 root     root        29700 Jan 14 19:09 mkdir*
-rwxr-xr-x   1 root     root        35324 Jan 12 01:10 mkfifo*
-rwxr-xr-x   1 root     root        41988 Mar 27 21:52 more*
-rwxr-xr-x   1 root     root        33796 Jan 14 19:09 mv*
-rwxr-xr-x   1 root     root        36412 Jan 12 01:09 paste*
-rwxr-xr-x   1 root     root       149091 Mar 29 14:35 pcomm*
-rwxr-xr-x   1 root     root        29700 Jan 14 19:09 rm*
-rwxr-xr-x   1 root     root        25604 Jan 14 19:09 rmdir*
-rwxr-xr-x   1 root     root        75573 Oct 27 19:45 sed*
-rwxr-xr-x   1 root     root        33796 Mar 27 21:52 setterm*
-rwxr-xr-x   1 root     root        37888 Dec 17 18:45 ship*
-rwxr-xr-x   1 root     root        36280 Jan 12 01:09 split*
-rwxr-xr-x   1 root     root        65558 Jan 12 01:10 tac*
-rwxr-xr-x   1 root     root        36284 Jan 12 01:09 tail*
-rwxr-xr-x   1 root     root       149127 Jan 15 15:47 tar*
-rwxr-xr-x   1 root     root        46010 Jan 12 01:11 touch*
-rwxr-xr-x   1 root     root        36647 Jan 12 01:10 unexpand*
-rwxr-xr-x   1 root     root        50180 Dec 15 11:05 unzip*
-rwxr-xr-x   1 root     root        57615 Jan 12 01:08 vdir*
-rwxr-xr-x   1 173      10         210335 Mar 18 19:41 vile*
-rwxr-xr-x   1 root     root        74752 Dec 17 18:42 zip*
-rwxr-xr-x   1 root     root        46080 Dec 17 18:44 zipnote*
-rwxr-xr-x   1 root     root        46080 Dec 17 18:45 zipsplit*

usr/etc:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../

usr/gcc2:
total 10
drwxr-xr-x   7 root     other         112 Mar 28 21:14 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
drwxr-xr-x   2 root     other         128 Mar 28 21:13 bin/
drwxr-xr-x   4 root     other        1136 Mar 28 21:14 g++-include/
drwxr-xr-x   3 root     other         624 Mar 28 21:14 include/
drwxr-xr-x   2 root     other          96 Mar 28 21:14 install/
drwxr-xr-x   3 root     other          80 Mar 28 21:15 lib/

usr/gcc2/bin:
total 165
drwxr-xr-x   2 root     other         128 Mar 28 21:13 ./
drwxr-xr-x   7 root     other         112 Mar 28 21:14 ../
-rwxr-xr-x   2 root     other        1371 Feb 23 22:51 c++*
-rwxr-xr-x   2 root     other        1371 Feb 23 22:51 g++*
-rwxr-xr-x   1 root     other       66564 Mar 11 04:59 gcc*
-rwxr-xr-x   1 root     other       10288 Mar  8 05:39 genclass*
-rwxr-xr-x   1 root     other         910 Mar  8 01:28 groups*
-rwxr-xr-x   1 root     other        1344 Mar  8 00:38 nohup*

usr/gcc2/g++-include:
total 606
drwxr-xr-x   4 root     other        1136 Mar 28 21:14 ./
drwxr-xr-x   7 root     other         112 Mar 28 21:14 ../
-rw-r-----   1 root     other        2178 Jan 17 23:03 ACG.h
-rw-r-----   1 root     other        1679 Jan 17 23:03 AllocRing.h
-rw-r-----   1 root     other        1604 Jan 17 23:03 Binomial.h
-rw-r-----   1 root     other        9046 Mar  5 06:59 BitSet.h
-rw-r-----   1 root     other       20236 Jan 17 23:03 BitString.h
-rw-r--r--   1 root     other        2718 Feb 15 23:34 ChangeLog
-rw-r-----   1 root     other        6851 Jan 17 23:03 Complex.h
-rw-r-----   1 root     other        9059 Jan 17 23:03 CursesW.h
-rw-r-----   1 root     other        1918 Jan 17 23:03 DiscUnif.h
-rw-r-----   1 root     other        1950 Jan 17 23:03 Erlang.h
-rw-r-----   1 root     other        9781 Jan 17 23:03 Fix.h
-rw-r-----   1 root     other       12806 Jan 17 23:03 Fix16.h
-rw-r-----   1 root     other       12399 Jan 17 23:03 Fix24.h
-rw-r-----   1 root     other        1476 Jan 17 23:03 Geom.h
-rw-r-----   1 root     other        4879 Jan 17 23:03 GetOpt.h
-rw-r-----   1 root     other        2028 Jan 17 23:03 HypGeom.h
-rw-r-----   1 root     other         372 Jan 17 23:03
Incremental.h
-rw-r-----   1 root     other       26559 Jan 17 23:03 Integer.h
-rw-r-----   1 root     other        2156 Jan 17 23:03 LogNorm.h
-rw-r-----   1 root     other        1897 Jan 17 23:03 MLCG.h
-rw-r-----   1 root     other        1566 Jan 17 23:03 NegExp.h
-rw-r-----   1 root     other        1896 Jan 17 23:04 Normal.h
-rw-r-----   1 root     other        4450 Jan 17 23:04 Obstack.h
-rw-r-----   1 root     other          59 Jan 17 23:04 Pix.h
-r--r--r--   1 root     other        2914 Mar  5 18:54 PlotFile.h
-rw-r-----   1 root     other        1459 Jan 17 23:04 Poisson.h
-rw-r-----   1 root     other        2318 Jan 17 23:04 RNG.h
-rw-r-----   1 root     other        1430 Jan 17 23:04 Random.h
-rw-r-----   1 root     other        7144 Jan 17 23:04 Rational.h
-rw-r-----   1 root     other        2615 Jan 17 23:04 Regex.h
-rw-r-----   1 root     other        4549 Jan 17 23:04 RndInt.h
-r--r--r--   1 root     other        1513 Mar  5 18:54 SFile.h
-rw-r-----   1 root     other        2049 Jan 17 23:04 SmplHist.h
-rw-r-----   1 root     other        2099 Jan 17 23:04 SmplStat.h
-rw-r-----   1 root     other       36273 Jan 17 23:04 String.h
-rw-r-----   1 root     other        1860 Jan 17 23:04 Uniform.h
-rw-r-----   1 root     other        1872 Jan 17 23:04 Weibull.h
-rw-r-----   1 root     other          79 Jan 17 23:04 bool.h
-rw-r-----   1 root     other        4171 Mar  4 07:21 builtin.h
-rw-r-----   1 root     other        2263 Jan 17 23:04 compare.h
-rw-r-----   1 root     other         121 Jan 17 23:04 complex.h
-rw-r-----   1 root     other        8511 Jan 17 23:04 curses.h
-rw-r-----   1 root     other          21 Jan 17 23:03 dir.h
-r--r--r--   1 root     other        6431 Mar  5 18:54 editbuf.h
-r--r--r--   1 root     other        2251 Mar  5 18:54 fstream.h
drwxr-xr-x   2 root     other        1952 Mar 28 21:14 gen/
-rw-r-----   1 root     other        1784 Jan 17 23:04 generic.h
-rw-r-----   1 root     other         471 Jun 28  1991
getpagesize.h
-r--r--r--   1 root     other        2506 Mar  5 18:54 indstream.h
-r--r--r--   1 root     other         124 Mar  5 18:54 iomanip.h
-r--r--r--   1 root     other        8314 Mar  5 18:54 iostream.h
-r--r--r--   1 root     other          20 Mar  5 18:54 istream.h
-rw-r-----   1 root     other          20 Jan 17 23:04 libc.h
-rw-r-----   1 root     other        8450 Jun 28  1991 math-68881.h
-rw-r-----   1 root     other        5170 Mar  8 05:36 math.h
-rw-r-----   1 root     other        3403 Jan 17 23:04 minmax.h
-rw-r-----   1 root     other          39 Feb  7 00:44 netdb.h
-rw-r-----   1 root     other         769 Jan 17 23:04 new.h
-rw-r-----   1 root     other         130 Jan 17 23:04 osfcn.h
-r--r--r--   1 root     other          20 Mar  5 18:54 ostream.h
-r--r--r--   1 root     other        4689 Mar  5 18:54
parsestream.h
-rw-r-----   1 root     other          96 Jan 17 23:04 strclass.h
-r--r--r--   1 root     other         679 Mar  5 18:54 stream.h
-r--r--r--   1 root     other       10235 Mar  5 18:54 streambuf.h
-r--r--r--   1 root     other        2181 Mar  5 18:54 strstream.h
-rw-r-----   1 root     other         133 Jun 28  1991 swap.h
drwxr-xr-x   2 root     other         128 Mar 28 21:14 sys/
-rw-r-----   1 root     other         268 Jan 17 23:03 typemacros.h
-rw-r-----   1 root     other        5849 Jan 17 23:05 values.h

usr/gcc2/g++-include/gen:
total 1029
drwxr-xr-x   2 root     other        1952 Mar 28 21:14 ./
drwxr-xr-x   4 root     other        1136 Mar 28 21:14 ../
-rw-r--r--   1 root     other        6733 Mar  6 22:40 1
-rw-r-----   1 root     other       12921 Jan 14 23:29 AVLMap.ccP
-rw-r-----   1 root     other        3422 Jan 14 23:29 AVLMap.hP
-rw-r-----   1 root     other       17462 Mar 11 04:00 AVLSet.ccP
-rw-r-----   1 root     other        3490 Jan 14 23:29 AVLSet.hP
-rw-r-----   1 root     other        8164 Jan 14 23:29 AVec.ccP
-rw-r-----   1 root     other        3644 Jan 14 23:29 AVec.hP
-rw-r-----   1 root     other        7255 Jan 14 23:29 BSTSet.ccP
-rw-r-----   1 root     other        3465 Jan 14 23:29 BSTSet.hP
-rw-r-----   1 root     other        1678 Jan 14 23:29 Bag.ccP
-rw-r-----   1 root     other        2410 Jan 14 23:29 Bag.hP
-rw-r-----   1 root     other        4353 Jan 14 23:29 CHBag.ccP
-rw-r-----   1 root     other        1918 Feb  1 05:24 CHBag.hP
-rw-r-----   1 root     other        3744 Jan 14 23:29 CHMap.ccP
-rw-r-----   1 root     other        2599 Jan 14 23:29 CHMap.hP
-rw-r-----   1 root     other         902 Feb  1 01:01 CHNode.ccP
-rw-r-----   1 root     other        1414 Feb  1 01:01 CHNode.hP
-rw-r-----   1 root     other        6101 Jan 14 23:29 CHSet.ccP
-rw-r-----   1 root     other        2176 Feb  1 01:01 CHSet.hP
-rw-r-----   1 root     other          71 Jun 28  1991 DLDeque.ccP
-rw-r-----   1 root     other        2596 Jan 14 23:29 DLDeque.hP
-rw-r-----   1 root     other        5680 Jan 14 23:29 DLList.ccP
-rw-r-----   1 root     other        3851 Jan 14 23:29 DLList.hP
-rw-r-----   1 root     other         176 Jun 28  1991 Deque.ccP
-rw-r-----   1 root     other        1832 Jan 14 23:29 Deque.hP
-rw-r-----   1 root     other          71 Jun 28  1991 FPQueue.ccP
-rw-r-----   1 root     other        2435 Jan 14 23:29 FPQueue.hP
-rw-r-----   1 root     other          71 Jun 28  1991 FPStack.ccP
-rw-r-----   1 root     other        2444 Jan 14 23:29 FPStack.hP
-rw-r-----   1 root     other        4207 Jan 14 23:29 FPlex.ccP
-rw-r-----   1 root     other        6263 Jan 14 23:29 FPlex.hP
-rw-r-----   1 root     other       17421 Jan 14 23:29 List.ccP
-rw-r-----   1 root     other        6080 Jan 14 23:29 List.hP
-rw-r-----   1 root     other       16878 Jan 14 23:29 MPlex.ccP
-rw-r-----   1 root     other       10653 Jan 14 23:29 MPlex.hP
-rw-r-----   1 root     other        1475 Jan 14 23:29 Map.ccP
-rw-r-----   1 root     other        2529 Jan 14 23:29 Map.hP
-rw-r-----   1 root     other        3535 Jan 14 23:29 OSLBag.ccP
-rw-r-----   1 root     other        2136 Jan 14 23:29 OSLBag.hP
-rw-r-----   1 root     other        5589 Jan 14 23:30 OSLSet.ccP
-rw-r-----   1 root     other        2400 Jan 14 23:30 OSLSet.hP
-rw-r-----   1 root     other        4743 Jan 14 23:30 OXPBag.ccP
-rw-r-----   1 root     other        1324 Jan 14 23:30 OXPBag.hP
-rw-r-----   1 root     other        5662 Jan 14 23:30 OXPSet.ccP
-rw-r-----   1 root     other        2468 Jan 14 23:30 OXPSet.hP
-rw-r-----   1 root     other        7475 Jan 14 23:30 PHPQ.ccP
-rw-r-----   1 root     other        2538 Jan 14 23:30 PHPQ.hP
-rw-r-----   1 root     other        1478 Jan 14 23:30 PQ.ccP
-rw-r-----   1 root     other        2438 Jan 14 23:30 PQ.hP
-rw-r-----   1 root     other        1110 Jan 14 23:28 PSList.hP
-rw-r-----   1 root     other        2573 Jan 14 23:28 PVec.hP
-rw-r-----   1 root     other        4305 Jan 14 23:30 Plex.ccP
-rw-r-----   1 root     other       13153 Jan 14 23:30 Plex.hP
-rw-r-----   1 root     other         196 Jun 28  1991 Queue.ccP
-rw-r-----   1 root     other        1600 Jan 14 23:30 Queue.hP
-rw-r-----   1 root     other       14355 Jan 14 23:30 RAVLMap.ccP
-rw-r-----   1 root     other        3633 Jan 14 23:30 RAVLMap.hP
-rw-r-----   1 root     other       10411 Jan 14 23:30 RPlex.ccP
-rw-r-----   1 root     other        6691 Jan 14 23:30 RPlex.hP
-rw-r-----   1 root     other        2165 Jan 14 23:30 SLBag.ccP
-rw-r-----   1 root     other        2194 Jan 14 23:30 SLBag.hP
-rw-r-----   1 root     other        5162 Jan 14 23:30 SLList.ccP
-rw-r-----   1 root     other        3400 Jan 14 23:30 SLList.hP
-rw-r-----   1 root     other          71 Jun 28  1991 SLQueue.ccP
-rw-r-----   1 root     other        2270 Jan 14 23:30 SLQueue.hP
-rw-r-----   1 root     other        1685 Jan 14 23:30 SLSet.ccP
-rw-r-----   1 root     other        2039 Jan 14 23:30 SLSet.hP
-rw-r-----   1 root     other          71 Jun 28  1991 SLStack.ccP
-rw-r-----   1 root     other        2278 Jan 14 23:30 SLStack.hP
-rw-r-----   1 root     other        2463 Jan 14 23:30 Set.ccP
-rw-r-----   1 root     other        2534 Jan 14 23:30 Set.hP
-rw-r-----   1 root     other        6569 Jan 14 23:29 SkipBag.ccP
-rw-r-----   1 root     other        3831 Jan 14 23:29 SkipBag.hP
-rw-r-----   1 root     other        6624 Jan 14 23:29 SkipMap.ccP
-rw-r-----   1 root     other        4102 Jan 14 23:29 SkipMap.hP
-rw-r-----   1 root     other        7869 Jan 14 23:29 SkipSet.ccP
-rw-r-----   1 root     other        4180 Jan 14 23:29 SkipSet.hP
-rw-r-----   1 root     other        8399 Jan 14 23:30 SplayBag.ccP
-rw-r-----   1 root     other        3722 Feb  1 01:01 SplayBag.hP
-rw-r-----   1 root     other        7968 Jan 14 23:30 SplayMap.ccP
-rw-r-----   1 root     other        3700 Jan 14 23:30 SplayMap.hP
-rw-r-----   1 root     other         905 Feb  1 01:01
SplayNode.ccP
-rw-r-----   1 root     other        1467 Feb  1 01:01 SplayNode.hP
-rw-r-----   1 root     other        9946 Jan 14 23:30 SplayPQ.ccP
-rw-r-----   1 root     other        2730 Feb  1 01:01 SplayPQ.hP
-rw-r-----   1 root     other        9340 Jan 14 23:30 SplaySet.ccP
-rw-r-----   1 root     other        3036 Feb  1 01:01 SplaySet.hP
-rw-r-----   1 root     other         176 Jun 28  1991 Stack.ccP
-rw-r-----   1 root     other        1610 Jan 14 23:30 Stack.hP
-rw-r-----   1 root     other        6238 Jan 14 23:30 VHBag.ccP
-rw-r-----   1 root     other        2052 Jan 14 23:30 VHBag.hP
-rw-r-----   1 root     other        5049 Jan 14 23:30 VHMap.ccP
-rw-r-----   1 root     other        2160 Jan 14 23:30 VHMap.hP
-rw-r-----   1 root     other        5969 Jan 14 23:30 VHSet.ccP
-rw-r-----   1 root     other        2314 Jan 14 23:31 VHSet.hP
-rw-r-----   1 root     other        7309 Jan 14 23:31 VOHSet.ccP
-rw-r-----   1 root     other        2329 Jan 14 23:31 VOHSet.hP
-rw-r-----   1 root     other        2152 Jan 14 23:31 VQueue.ccP
-rw-r-----   1 root     other        2815 Jan 14 23:31 VQueue.hP
-rw-r-----   1 root     other        1812 Jan 14 23:31 VStack.ccP
-rw-r-----   1 root     other        2591 Jan 14 23:31 VStack.hP
-rw-r-----   1 root     other       12277 Jan 14 23:31 Vec.ccP
-rw-r-----   1 root     other        3469 Jan 14 23:31 Vec.hP
-rw-r-----   1 root     other        1772 Jan 14 23:31 XPBag.ccP
-rw-r-----   1 root     other        2287 Jan 14 23:31 XPBag.hP
-rw-r-----   1 root     other          71 Jun 28  1991 XPDeque.ccP
-rw-r-----   1 root     other        2772 Jan 14 23:31 XPDeque.hP
-rw-r-----   1 root     other        2962 Jan 14 23:31 XPPQ.ccP
-rw-r-----   1 root     other        2359 Jan 14 23:31 XPPQ.hP
-rw-r-----   1 root     other          71 Jun 28  1991 XPQueue.ccP
-rw-r-----   1 root     other        2461 Jan 14 23:31 XPQueue.hP
-rw-r-----   1 root     other        1572 Jan 14 23:31 XPSet.ccP
-rw-r-----   1 root     other        2115 Jan 14 23:31 XPSet.hP
-rw-r-----   1 root     other          71 Jun 28  1991 XPStack.ccP
-rw-r-----   1 root     other        2459 Jan 14 23:31 XPStack.hP
-rw-r-----   1 root     other        8369 Jan 14 23:31 XPlex.ccP
-rw-r-----   1 root     other        6189 Jan 14 23:31 XPlex.hP
-rw-r-----   1 root     other        1491 Jan 14 23:31 defs.hP
-rw-r-----   1 root     other        1095 Jan 14 23:29 intSList.hP
-rw-r-----   1 root     other        2522 Jan 14 23:29 intVec.hP

usr/gcc2/g++-include/sys:
total 10
drwxr-xr-x   2 root     other         128 Mar 28 21:14 ./
drwxr-xr-x   4 root     other        1136 Mar 28 21:14 ../
-rw-r-----   1 root     other         260 Feb  7 07:26 mman.h
-rw-r-----   1 root     other         461 Feb  7 07:26 param.h
-rw-r-----   1 root     other          20 Mar  4 04:29 signal.h
-rw-r-----   1 root     other          69 Mar  4 09:00 socket.h
-rw-r-----   1 root     other         305 Feb 15 22:08 types.h
-rw-r-----   1 root     other         463 Feb  7 07:26 wait.h

usr/gcc2/include:
total 229
drwxr-xr-x   3 root     other         624 Mar 28 21:14 ./
drwxr-xr-x   7 root     other         112 Mar 28 21:14 ../
-rw-r--r--   1 root     other        3001 Feb 27 23:21 ansidecl.h
-rw-r--r--   1 root     other        1377 Feb 28 21:04 assert.h
-rw-r-----   1 root     other          20 Jan 17 23:04 bstring.h
-rw-r--r--   1 root     other        4594 Feb 29 09:29 ctype.h
-rw-r--r--   1 root     other        1069 Mar  2 17:32 dirent.h
-rw-r--r--   1 root     other         106 Mar  7 05:58 endian.h
-rw-r--r--   1 root     other        1560 Mar 11 00:59 errno.h
-rw-r--r--   1 root     other        1450 Mar 11 01:03 fcntl.h
-rw-r--r--   1 root     other        4324 Feb 29 08:06 features.h
-rw-r--r--   1 root     other        2761 Feb 28 21:05 float.h
-rw-r--r--   1 root     other        1577 Mar  5 05:25 fnmatch.h
-rw-r--r--   1 root     other        1005 Feb 27 07:25 getopt.h
-rw-r--r--   1 root     other        2787 Feb 29 09:43 glob.h
-rw-r--r--   1 root     other        2728 Feb 27 21:46 gnu-stabs.h
-rw-r--r--   1 root     other        2970 Mar  2 04:42 grp.h
-rw-r--r--   1 root     other        3463 Mar  6 04:00 limits.h
-rw-r--r--   1 root     other        3773 Feb 29 09:33 locale.h
-rw-r--r--   1 root     other        5172 Feb 29 09:57 localeinfo.h
-rw-r--r--   1 root     other          20 Feb 29 09:44 malloc.h
-rw-r--r--   1 root     other        1335 Feb 29 09:59 math.h
-rw-r--r--   1 root     other        2624 Mar  2 03:00 pwd.h
-rw-r--r--   1 root     other       17472 Mar  2 17:12 regex.h
-rw-r--r--   1 root     other         434 Mar  5 18:44 setjmp.h
-rw-r--r--   1 root     other        2527 Mar 11 01:07 signal.h
-rw-r--r--   1 root     other        1861 Feb 29 09:58 soft.h
-rw-r--r--   1 root     other         271 Mar  5 05:00 std.h
-rw-r--r--   1 root     other        1661 Feb 23 22:56 stdarg.h
-rw-r--r--   1 root     other        2295 Feb 28 21:07 stddef.h
-rw-r--r--   1 root     other        6216 Mar  6 18:38 stdio.h
-rw-r--r--   1 root     other        4370 Mar 11 03:52 stdlib.h
-rw-r--r--   1 root     other        2321 Mar  4 06:24 string.h
drwxr-xr-x   2 root     other         208 Mar 28 21:14 sys/
-rw-r--r--   1 root     other        1434 Mar 11 01:16 time.h
-rw-r--r--   1 root     other       13266 Mar 11 00:06 unistd.h
-rw-r--r--   1 root     other         295 Feb 28 23:20 utime.h
-rw-r--r--   1 root     other        1214 Feb 29 18:03 utmp.h
-rw-r--r--   1 root     other        2500 Feb 18 19:03 varargs.h

usr/gcc2/include/sys:
total 28
drwxr-xr-x   2 root     other         208 Mar 28 21:14 ./
drwxr-xr-x   3 root     other         624 Mar 28 21:14 ../
-rw-r--r--   1 root     other         215 Mar  4 05:31 dir.h
-rw-r--r--   1 root     other          19 Mar  4 04:20 fcntl.h
-rw-r--r--   1 root     other         250 Mar  4 04:21 file.h
-rw-r--r--   1 root     other         270 Feb 26 07:43 param.h
-rw-r--r--   1 root     other        1830 Mar  4 04:27 resource.h
-rw-r--r--   1 root     other        1664 Mar  4 05:26 stat.h
-rw-r--r--   1 root     other        1921 Mar 11 01:20 time.h
-rw-r--r--   1 root     other         272 Feb 27 22:19 times.h
-rw-r--r--   1 root     other        1099 Mar 11 07:48 types.h
-rw-r--r--   1 root     other        1960 Feb 29 09:39 uio.h
-rw-r--r--   1 root     other         341 Feb 29 09:55 utsname.h

usr/gcc2/install:
total 537
drwxr-xr-x   2 root     other          96 Mar 28 21:14 ./
drwxr-xr-x   7 root     other         112 Mar 28 21:14 ../
-rw-r--r--   1 root     other        3496 Mar 11 08:12 FAQ
-rw-r--r--   1 root     other      123141 Mar  2 22:36 gcc.man
-rw-r--r--   1 root     other      145051 Mar  2 22:36 gcc.ps
-rwxr-xr-x   1 root     other        1260 Mar 11 01:43 inst2.0*

usr/gcc2/lib:
total 46
drwxr-xr-x   3 root     other          80 Mar 28 21:15 ./
drwxr-xr-x   7 root     other         112 Mar 28 21:14 ../
-rw-r--r--   1 root     other        6477 Mar  8 00:27 bison.hairy
-rw-r--r--   1 root     other       15280 Mar  8 00:27 bison.simple
drwxr-xr-x   3 root     other          48 Mar 28 20:00 gcc/

usr/gcc2/lib/gcc:
total 3
drwxr-xr-x   3 root     other          48 Mar 28 20:00 ./
drwxr-xr-x   3 root     other          80 Mar 28 21:15 ../
drwxr-xr-x   3 root     other          48 Mar 28 20:00 i386-linux/

usr/gcc2/lib/gcc/i386-linux:
total 3
drwxr-xr-x   3 root     other          48 Mar 28 20:00 ./
drwxr-xr-x   3 root     other          48 Mar 28 20:00 ../
drwxr-xr-x   2 root     other         192 Mar 28 21:15 2.0/

usr/gcc2/lib/gcc/i386-linux/2.0:
total 4849
drwxr-xr-x   2 root     other         192 Mar 28 21:15 ./
drwxr-xr-x   3 root     other          48 Mar 28 20:00 ../
-rw-r--r--   1 root     other         201 Feb 29 18:18 Crt0.o
-rw-r--r--   1 root     other      232186 Mar 11 04:45 Libc.a
-rw-r--r--   1 root     other      228470 Mar 11 02:36 Libg++.a
-rw-r--r--   1 root     other       52798 Feb 29 18:17 Libgcc.a
-rw-r--r--   1 root     other       12482 Mar 11 04:45 Libhard.a
-rw-r--r--   1 root     other       18378 Mar 11 04:45 Libsoft.a
-rw-r--r--   1 root     other        5568 Mar 11 04:45 Libtermcap.a
-rwxr-xr-x   1 root     other      771076 Mar 11 04:59 cc1*
-rwxr-xr-x   1 root     other     1053700 Mar 11 05:00 cc1plus*
-rwxr-xr-x   1 root     other      103428 Mar 11 05:00 cpp*

usr/include:
total 175
drwxr-xr-x   5 root     root          656 Mar 29 22:59 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
-rw-r--r--   1 bin      bin          6047 Jan  4 14:47 a.out.h
-rw-r--r--   1 bin      bin          3001 Nov 19 21:22 ansidecl.h
-rw-r--r--   1 bin      bin           292 Sep 10  1991 ar.h
drwxr-xr-x   2 bin      bin            96 Mar 29 22:58 asm/
-rw-r--r--   1 bin      bin           858 Aug 20  1991 assert.h
-rw-r--r--   1 bin      bin           132 Aug 20  1991 blocksize.h
-rw-r--r--   1 bin      bin           321 Jan  4 14:50 const.h
-rw-r--r--   1 bin      bin          1049 Nov  7 17:31 ctype.h
-rw-r--r--   1 bin      bin           883 Nov 19 22:05 dirent.h
-rw-r--r--   1 bin      bin          1364 Jan  4 14:51 errno.h
-rw-r--r--   1 bin      bin          1374 Jan  4 14:52 fcntl.h
-rw-r--r--   1 bin      bin           664 Aug 20  1991 float.h
-rw-r--r--   1 bin      bin           196 Sep 10  1991 getopt.h
-rw-r--r--   1 bin      bin          2728 Nov 19 22:41 gnu-stabs.h
-rw-r--r--   1 bin      bin          2868 Jan 10 00:01 grp.h
-rw-r--r--   1 bin      bin          1993 Jan  6 21:09 limits.h
drwxr-xr-x   2 bin      bin           208 Mar 29 22:58 linux/
-rw-r--r--   1 bin      bin          5138 Nov 19 22:42 localeinfo.h
-rw-r--r--   1 bin      bin           727 Aug 20  1991 math.h
-rw-r--r--   1 bin      bin            20 Aug 30  1991 memory.h
-rw-r--r--   1 root     root           12 Mar 30 10:16 one
-rw-r--r--   1 bin      bin          2668 Dec 16 16:13 pwd.h
-rw-r--r--   1 bin      bin          9584 Aug 20  1991 regex.h
-rw-r--r--   1 bin      bin           363 Sep 10  1991 setjmp.h
-rw-r--r--   1 bin      bin          1974 Jan  4 14:54 signal.h
-rwxr-xr-x   1 bin      bin           780 Aug 20  1991 stdarg.h*
-rw-r--r--   1 bin      bin           285 Jan  4 14:54 stddef.h
-rw-r--r--   1 bin      bin          7316 Dec 23 18:22 stdio.h
-rw-r--r--   1 bin      bin          1291 Nov 19 22:11 stdlib.h
-rw-r--r--   1 bin      bin          7881 Aug 27  1991 string.h
-rw-r--r--   1 bin      bin            20 Aug 30  1991 strings.h
drwxr-xr-x   2 bin      bin           272 Mar 29 22:58 sys/
-rw-r--r--   1 bin      bin           328 Aug 25  1991 termcap.h
-rw-r--r--   1 bin      bin            21 Aug 26  1991 termio.h
-rw-r--r--   1 bin      bin          5268 Jan 15 14:41 termios.h
-rw-r--r--   1 bin      bin           874 Jan  4 14:58 time.h
-rw-r--r--   1 bin      bin          7300 Jan 13 22:48 unistd.h
-rw-r--r--   1 bin      bin           225 Aug 31  1991 utime.h
-rwxr-xr-x   1 bin      bin           539 Aug 25  1991 varargs.h*
usr/include/asm:
total 12
drwxr-xr-x   2 bin      bin            96 Mar 29 22:58 ./
drwxr-xr-x   5 root     root          656 Mar 29 22:59 ../
-rw-r--r--   1 bin      bin           477 Aug 20  1991 io.h
-rw-r--r--   1 bin      bin           507 Aug 20  1991 memory.h
-rw-r--r--   1 bin      bin          1366 Dec 16 17:24 segment.h
-rw-r--r--   1 bin      bin          1707 Jan 15 14:41 system.h

usr/include/linux:
total 73
drwxr-xr-x   2 bin      bin           208 Mar 29 22:58 ./
drwxr-xr-x   5 root     root          656 Mar 29 22:59 ../
-rw-r--r--   1 bin      bin          1545 Jan 11 00:16 config.h
-rw-r--r--   1 bin      bin          2466 Dec 16 17:24 fdreg.h
-rw-r--r--   1 bin      bin          5754 Jan 15 14:41 fs.h
-rw-r--r--   1 bin      bin          1968 Dec 16 17:24 hdreg.h
-rw-r--r--   1 bin      bin           304 Dec 16 17:24 head.h
-rw-r--r--   1 bin      bin          1036 Jan 15 14:41 kernel.h
-rw-r--r--   1 bin      bin          4924 Jan  4 15:00 math_emu.h
-rw-r--r--   1 bin      bin          1101 Jan 15 14:41 mm.h
-rw-r--r--   1 bin      bin          7351 Jan 15 14:41 sched.h
-rw-r--r--   1 bin      bin          3402 Jan 15 14:41 sys.h
-rw-r--r--   1 bin      bin          2801 Jan  9 00:14 tty.h

usr/include/sys:
total 29
drwxr-xr-x   2 bin      bin           272 Mar 29 22:58 ./
drwxr-xr-x   5 root     root          656 Mar 29 22:59 ../
-rw-r--r--   1 bin      bin           195 Nov 17 17:15 dir.h
-rw-r--r--   1 bin      bin           175 Aug 28  1991 dirent.h
-rw-r--r--   1 bin      bin           250 Sep 10  1991 file.h
-rw-r--r--   1 bin      bin            50 Sep  8  1991 ioctl.h
-rw-r--r--   1 bin      bin           196 Jan  6 21:16 param.h
-rw-r--r--   1 bin      bin          1809 Jan  3 20:33 resource.h
-rw-r--r--   1 bin      bin          1376 Jan 11 19:00 stat.h
-rw-r--r--   1 bin      bin           182 Sep  8  1991 sysmacros.h
-rw-r--r--   1 bin      bin          1799 Jan  9 03:51 time.h
-rw-r--r--   1 bin      bin           192 Sep 10  1991 timeb.h
-rw-r--r--   1 bin      bin           200 Aug 20  1991 times.h
-rw-r--r--   1 bin      bin           928 Jan 15 14:41 types.h
-rw-r--r--   1 bin      bin           272 Jan  4 15:05 utsname.h
-rwxr-xr-x   1 bin      bin           539 Aug 20  1991 varargs.h*
-rw-r--r--   1 bin      bin           593 Dec 22 16:16 wait.h

usr/lib:
total 4
drwxr-xr-x   4 root     root           64 Mar 29 13:46 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
drwxr-xr-x   2 root     root          160 Mar 29 13:46 shared/
drwxr-xr-x   2 root     root          160 Mar 29 13:46 static/

usr/lib/shared:
total 10
drwxr-xr-x   2 root     root          160 Mar 29 13:46 ./
drwxr-xr-x   4 root     root           64 Mar 29 13:46 ../
lrwxrwxrwx   1 root     root           39 Mar 29 13:46 crt0.o ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Crt0.o
lrwxrwxrwx   1 root     root           39 Mar 29 13:46 libc.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libc.a
lrwxrwxrwx   1 root     root           41 Mar 29 13:46 libg++.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libg++.a
lrwxrwxrwx   1 root     root           41 Mar 29 13:46 libgcc.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libgcc.a
lrwxrwxrwx   1 root     root           42 Mar 29 13:46 libhard.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libhard.a
lrwxrwxrwx   1 root     root           42 Mar 29 13:46 libm.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libsoft.a
lrwxrwxrwx   1 root     root           42 Mar 29 13:46 libsoft.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libsoft.a
lrwxrwxrwx   1 root     root           45 Mar 29 13:46 libtermcap.a
-> /usr/gcc2/lib/gcc/i386-linux/2.0/Libtermcap.a

usr/lib/static:
total 10
drwxr-xr-x   2 root     root          160 Mar 29 13:46 ./
drwxr-xr-x   4 root     root           64 Mar 29 13:46 ../
lrwxrwxrwx   1 root     root           39 Mar 29 13:46 crt0.o ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Crt0.o
lrwxrwxrwx   1 root     root           39 Mar 29 13:46 libc.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libc.a
lrwxrwxrwx   1 root     root           41 Mar 29 13:46 libg++.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libg++.a
lrwxrwxrwx   1 root     root           41 Mar 29 13:46 libgcc.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libgcc.a
lrwxrwxrwx   1 root     root           42 Mar 29 13:46 libhard.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libhard.a
lrwxrwxrwx   1 root     root           42 Mar 29 13:46 libm.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libsoft.a
lrwxrwxrwx   1 root     root           42 Mar 29 13:46 libsoft.a ->
/usr/gcc2/lib/gcc/i386-linux/2.0/Libsoft.a
lrwxrwxrwx   1 root     root           45 Mar 29 13:46 libtermcap.a
-> /usr/gcc2/lib/gcc/i386-linux/2.0/Libtermcap.a

usr/local:
total 88
drwxr-xr-x   7 root     root          128 Mar 29 13:35 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
drwxr-xr-x   2 root     root           64 Mar 29 22:49 bin/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 etc/
drwxr-xr-x   3 root     root          128 Mar 29 15:13 lib/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 man/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 src/
-r--r--r--   1 173      10          41236 Mar 17 16:56 vile.hlp

usr/local/bin:
total 13
drwxr-xr-x   2 root     root           64 Mar 29 22:49 ./
drwxr-xr-x   7 root     root          128 Mar 29 13:35 ../
-r-xr-xr-x   1 bin      bin          4745 Dec 19 18:56 less.hlp*
-rw-r--r--   1 root     root           12 Mar 28 21:11 one

usr/local/etc:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          128 Mar 29 13:35 ../

usr/local/lib:
total 3
drwxr-xr-x   3 root     root          128 Mar 29 15:13 ./
drwxr-xr-x   7 root     root          128 Mar 29 13:35 ../
drwxrwxrwx   2 root     root          112 Mar 29 15:18 pcomm/

usr/local/lib/pcomm:
total 9
drwxrwxrwx   2 root     root          112 Mar 29 15:18 ./
drwxr-xr-x   3 root     root          128 Mar 29 15:13 ../
-rwxrwxrwx   1 root     root           79 Mar 29 15:03
pcomm.dial_dir*
-rwxrwxrwx   1 root     root           79 Mar 29 14:35
pcomm.extrnl*
-rwxrwxrwx   1 root     root          208 Mar 29 15:51 pcomm.modem*
-rwxrwxrwx   1 root     root          519 Mar 29 16:41 pcomm.param*
-rwxrwxrwx   1 root     root          994 Mar 29 14:35 sample*

usr/local/man:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          128 Mar 29 13:35 ../

usr/local/src:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          128 Mar 29 13:35 ../

usr/man:
total 179
drwxr-xr-x   2 root     root         1504 Mar 30 10:13 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
-rw-r--r--   1 root     root           16 Mar 30 10:12 _exit.2
-rw-r--r--   1 root     root          739 Mar 30 10:12 access.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 acct.2
-rw-r--r--   1 root     root          624 Mar 30 10:12 alarm.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 break.2
-rw-r--r--   1 root     root          702 Mar 30 10:12 brk.2
-rw-r--r--   1 root     root          811 Mar 30 10:12 chdir.2
-rw-r--r--   1 root     root         1132 Mar 30 10:12 chmod.2
-rw-r--r--   1 root     root           17 Mar 30 10:12 chown.2
-rw-r--r--   1 root     root          736 Mar 30 10:12 chroot.2
-rw-r--r--   1 root     root          649 Mar 30 10:12 close.2
-rw-r--r--   1 root     root           16 Mar 30 10:12 creat.2
-rw-r--r--   1 root     root         1195 Mar 30 10:12 dup.2
-rw-r--r--   1 root     root           15 Mar 30 10:12 dup2.2
-rw-r--r--   1 root     root         1836 Mar 30 10:12 execve.2
-rw-r--r--   1 root     root          809 Mar 30 10:12 exit.2
-rw-r--r--   1 root     root           24 Mar 30 10:12 fcntl.2
-rw-r--r--   1 root     root         1253 Mar 30 10:12 fork.2
-rw-r--r--   1 root     root           16 Mar 30 10:12 fstat.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 ftime.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 getegid.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 geteuid.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 getgid.2
-rw-r--r--   1 root     root         1127 Mar 30 10:12 getgroups.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 getpgrp.2
-rw-r--r--   1 root     root         2855 Mar 30 10:12 getpid.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 getppid.2
-rw-r--r--   1 root     root         2895 Mar 30 10:12 getrlimit.2
-rw-r--r--   1 root     root           21 Mar 30 10:12 getrusage.2
-rw-r--r--   1 root     root           16 Mar 30 10:12
gettimeofday.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 getuid.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 gtty.2
-rw-r--r--   1 root     root           24 Mar 30 10:12 ioctl.2
-rw-r--r--   1 root     root         1502 Mar 30 10:12 kill.2
-rw-r--r--   1 root     root         2001 Mar 30 10:12 link.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 lock.2
-rw-r--r--   1 root     root         1263 Mar 30 10:12 lseek.2
-rw-r--r--   1 root     root            0 Mar 30 10:12 lstat.2
-rw-r--r--   1 root     root           32 Mar 30 10:12 mkdir.2
-rw-r--r--   1 root     root           16 Mar 30 10:12 mknod.2
-rw-r--r--   1 root     root         1782 Mar 30 10:12 mount.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 mpx.2
-rw-r--r--   1 root     root          937 Mar 30 10:12 nice.2
-rw-r--r--   1 root     root         3402 Mar 30 10:12 open.2
-rw-r--r--   1 root     root          578 Mar 30 10:12 pause.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 phys.2
-rw-r--r--   1 root     root          757 Mar 30 10:12 pipe.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 prof.2
-rw-r--r--   1 root     root           24 Mar 30 10:12 ptrace.2
-rw-r--r--   1 root     root         1272 Mar 30 10:12 read.2
-rw-r--r--   1 root     root         1140 Mar 30 10:12 readlink.2
-rw-r--r--   1 root     root         1111 Mar 30 10:12 reboot.2
-rw-r--r--   1 root     root           16 Mar 30 10:12 rename.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 rmdir.2
-rw-r--r--   1 root     root           24 Mar 30 10:12 select.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 setgid.2
-rw-r--r--   1 root     root           21 Mar 30 10:12 setgroups.2
-rw-r--r--   1 root     root          816 Mar 30 10:12
sethostname.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 setregid.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 setreuid.2
-rw-r--r--   1 root     root           21 Mar 30 10:12 setrlimit.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 setsid.2
-rw-r--r--   1 root     root           16 Mar 30 10:12
settimeofday.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 setuid.2
-rw-r--r--   1 root     root         1156 Mar 30 10:12 setup.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 sgetmask.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 sigaction.2
-rw-r--r--   1 root     root         2761 Mar 30 10:12 signal.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 sigpending.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 sigsuspend.2
-rw-r--r--   1 root     root           18 Mar 30 10:12 ssetmask.2
-rw-r--r--   1 root     root         2376 Mar 30 10:12 stat.2
-rw-r--r--   1 root     root           16 Mar 30 10:12 stime.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 stty.2
-rw-r--r--   1 root     root         1146 Mar 30 10:12 swapon.2
-rw-r--r--   1 root     root           16 Mar 30 10:12 symlink.2
-rw-r--r--   1 root     root          517 Mar 30 10:12 sync.2
-rw-r--r--   1 root     root         2887 Mar 30 10:12 time.2
-rw-r--r--   1 root     root          848 Mar 30 10:12 times.2
-rw-r--r--   1 root     root           25 Mar 30 10:12 ulimit.2
-rw-r--r--   1 root     root          594 Mar 30 10:12 umask.2
-rw-r--r--   1 root     root           17 Mar 30 10:12 umount.2
-rw-r--r--   1 root     root         1011 Mar 30 10:12 uname.2
-rw-r--r--   1 root     root          373 Mar 30 10:12
undocumented.2
-rw-r--r--   1 root     root          368 Mar 30 10:13
unimplemented.
-rw-r--r--   1 root     root           16 Mar 30 10:12 unlink.2
-rw-r--r--   1 root     root          854 Mar 30 10:13 uselib.2
-rw-r--r--   1 root     root           25 Mar 30 10:13 ustat.2
-rw-r--r--   1 root     root          813 Mar 30 10:13 utime.2
-rw-r--r--   1 root     root         1543 Mar 30 10:13 waitpid.2
-rw-r--r--   1 root     root         2015 Mar 30 10:13 whatis
-rw-r--r--   1 root     root           16 Mar 30 10:13 write.2

usr/spool:
total 3
drwxr-xr-x   3 root     root           48 Mar 29 14:37 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
drwxr-xr-x   3 root     root           64 Mar 29 14:56 uucp/

usr/spool/uucp:
total 4
drwxr-xr-x   3 root     root           64 Mar 29 14:56 ./
drwxr-xr-x   3 root     root           48 Mar 29 14:37 ../
drwxr-xr-x   2 root     root           48 Mar 29 14:56 LCK/
-rw-rw-rw-   1 root     root            4 Mar 29 16:42 LCK..tty64

usr/spool/uucp/LCK:
total 2
drwxr-xr-x   2 root     root           48 Mar 29 14:56 ./
drwxr-xr-x   3 root     root           64 Mar 29 14:56 ../
crwxrwxrwx   2 root     root       4,  64 Mar 29 14:39 tty64

usr/src:
total 30
drwxr-xr-x   7 root     root          176 Mar 29 23:00 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../
drwxr-xr-x   2 root     root           32 Mar 28 17:20 bin/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 lib/
drwxr-xr-x  10 root     root          176 Mar 28 18:04 linux/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 usr.bin/
drwxr-xr-x   2 root     root           32 Mar 28 17:20 usr.lib/
-rw-r--r--   1 root     root        11448 Mar 29 13:48 zfiles
-rw-r--r--   1 root     root            0 Mar 29 13:49 zfiles.h

usr/src/bin:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          176 Mar 29 23:00 ../

usr/src/lib:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          176 Mar 29 23:00 ../

usr/src/linux:
total 17
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ./
drwxr-xr-x   7 root     root          176 Mar 29 23:00 ../
-rw-r--r--   1 root     root         3197 Mar 16 22:08 Makefile
drwxr-xr-x   2 root     root           80 Mar 28 18:04 boot/
drwxr-xr-x   3 root     root          368 Mar 29 23:01 fs/
drwxr-xr-x   5 root     root          288 Mar 28 18:04 include/
drwxr-xr-x   2 root     root           64 Mar 28 18:04 init/
drwxr-xr-x   5 root     root          304 Mar 29 23:02 kernel/
drwxr-xr-x   2 root     root          240 Mar 28 18:04 lib/
drwxr-xr-x   2 root     root           96 Mar 28 18:04 mm/
drwxr-xr-x   2 root     root           48 Mar 28 18:04 tools/

usr/src/linux/boot:
total 56
drwxr-xr-x   2 root     root           80 Mar 28 18:04 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         7578 Jan 18 17:01 bootsect.S
-rw-r--r--   1 root     root         6909 Mar  5 21:10 head.s
-rw-r--r--   1 root     root        12596 Mar 14 21:13 setup.S

usr/src/linux/fs:
total 179
drwxr-xr-x   3 root     root          368 Mar 29 23:01 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         6244 Mar  5 21:36 Makefile
-rw-r--r--   1 root     root         4007 Jan 11 19:57 bitmap.c
-rw-r--r--   1 root     root         1949 Mar 16 23:32 block_dev.c
-rw-r--r--   1 root     root        10130 Mar 13 17:06 buffer.c
-rw-r--r--   1 root     root         3109 Mar  2 02:16 char_dev.c
-rw-r--r--   1 root     root        10116 Mar  4 04:24 exec.c
-rw-------   1 root     root         5177 Mar 15 23:01
fasterdisk.pat
-rw-r--r--   1 root     root         1502 Feb 20 18:04 fcntl.c
-rw-r--r--   1 root     root         1852 Dec  1 19:02 file_dev.c
-rw-r--r--   1 root     root          122 Oct  2 14:16 file_table.c
-rw-r--r--   1 root     root         4702 Mar 14 17:33 inode.c
-rw-r--r--   1 root     root         1131 Feb 20 15:01 ioctl.c
drwxr-xr-x   2 root     root          144 Mar 29 23:01 minix/
-rw-r--r--   1 root     root         9449 Mar  6 17:04 namei.c
-rw-r--r--   1 root     root         3927 Mar  2 21:52 open.c
-rw-r--r--   1 root     root         2981 Mar  6 13:04 pipe.c
-rw-r--r--   1 root     root         2510 Mar  2 22:16 read_write.c
-rw-r--r--   1 root     root         7076 Mar 15 13:10 select.c
-rw-r--r--   1 root     root         1681 Mar  6 03:22 stat.c
-rw-r--r--   1 root     root         5874 Feb 28 17:01 super.c
-rw-r--r--   1 root     root         1692 Jan 11 19:47 truncate.c

usr/src/linux/fs/minix:
total 74
drwxr-xr-x   2 root     root          144 Mar 29 23:01 ./
drwxr-xr-x   3 root     root          368 Mar 29 23:01 ../
-rw-r--r--   1 root     root         2949 Mar  5 21:36 Makefile
-rw-r--r--   1 root     root         4175 Mar  5 18:36 bitmap.c
-rw-r--r--   1 root     root         2133 Mar 17 01:41 file_dev.c
-rw-r--r--   1 root     root         3786 Mar  1 23:15 inode.c
-rw-r--r--   1 root     root          686 Mar  2 22:18 minix_op.c
-rw-r--r--   1 root     root        17892 Mar  3 17:39 namei.c
-rw-r--r--   1 root     root         3091 Mar 14 17:42 truncate.c

usr/src/linux/include:
total 80
drwxr-xr-x   5 root     root          288 Mar 28 18:04 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         6047 Sep 17  1991 a.out.h
drwxr-xr-x   2 root     root           96 Mar 28 18:04 asm/
-rw-r--r--   1 root     root          321 Sep 17  1991 const.h
-rw-r--r--   1 root     root         1049 Nov  7 17:30 ctype.h
-rw-r--r--   1 root     root         1382 Feb 18 20:36 errno.h
-rw-r--r--   1 root     root         1358 Feb 27 11:28 fcntl.h
drwxr-xr-x   2 root     root          240 Mar 29 23:02 linux/
-rw-r--r--   1 root     root         2248 Mar  1 15:26 signal.h
-rwxr-xr-x   1 root     root          780 Sep 17  1991 stdarg.h*
-rw-r--r--   1 root     root          285 Dec 28 03:19 stddef.h
-rw-r--r--   1 root     root         7973 Mar  5 18:24 string.h
drwxr-xr-x   2 root     root          176 Mar 29 23:02 sys/
-rw-r--r--   1 root     root         5266 Mar 15 00:44 termios.h
-rw-r--r--   1 root     root          873 Jan 31 17:05 time.h
-rw-r--r--   1 root     root         7482 Mar  4 10:56 unistd.h
-rw-r--r--   1 root     root          225 Sep 17  1991 utime.h

usr/src/linux/include/asm:
total 14
drwxr-xr-x   2 root     root           96 Mar 28 18:04 ./
drwxr-xr-x   5 root     root          288 Mar 28 18:04 ../
-rw-r--r--   1 root     root          766 Mar 12 22:44 io.h
-rw-r--r--   1 root     root          507 Mar  8 11:51 memory.h
-rw-r--r--   1 root     root         2068 Mar 16 23:40 segment.h
-rw-r--r--   1 root     root         1717 Mar  5 02:10 system.h
usr/src/linux/include/linux:
total 83
drwxr-xr-x   2 root     root          240 Mar 29 23:02 ./
drwxr-xr-x   5 root     root          288 Mar 28 18:04 ../
-rw-r--r--   1 root     root         1776 Mar 17 09:39 config.h
-rw-r--r--   1 root     root         2466 Nov  2 10:48 fdreg.h
-rw-r--r--   1 root     root         6442 Mar 13 16:55 fs.h
-rw-r--r--   1 root     root         2076 Feb  1 14:04 hdreg.h
-rw-r--r--   1 root     root          304 Jun 19  1991 head.h
-rw-r--r--   1 root     root          812 Jan 27 15:38 kernel.h
-rw-r--r--   1 root     root         4980 Feb 17 20:56 math_emu.h
-rw-r--r--   1 root     root         2808 Mar  2 21:52 minix_fs.h
-rw-r--r--   1 root     root         1210 Mar  6 00:57 mm.h
-rw-r--r--   1 root     root         7749 Mar 14 12:21 sched.h
-rw-r--r--   1 root     root         3476 Feb 27 16:24 sys.h
-rw-r--r--   1 root     root          878 Mar 12 20:22 timer.h
-rw-r--r--   1 root     root         3171 Mar 15 00:43 tty.h

usr/src/linux/include/sys:
total 22
drwxr-xr-x   2 root     root          176 Mar 29 23:02 ./
drwxr-xr-x   5 root     root          288 Mar 28 18:04 ../
-rw-r--r--   1 root     root          196 Jan  6 21:10 param.h
-rw-r--r--   1 root     root          874 Feb 17 19:54 ptrace.h
-rw-r--r--   1 root     root         1809 Jan  3 18:52 resource.h
-rw-r--r--   1 root     root         1376 Feb 20 14:45 stat.h
-rw-r--r--   1 root     root         1838 Feb 20 23:07 time.h
-rw-r--r--   1 root     root          200 Sep 17  1991 times.h
-rw-r--r--   1 root     root          952 Feb 28 21:34 types.h
-rw-r--r--   1 root     root          272 Jan  4 15:05 utsname.h
-rw-r--r--   1 root     root          593 Dec 22 15:08 wait.h

usr/src/linux/init:
total 29
drwxr-xr-x   2 root     root           64 Mar 28 18:04 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         5934 Mar 14 13:34 main.c
-rw-r--r--   1 root     root         7347 Jan 13 12:45 main.s

usr/src/linux/kernel:
total 163
drwxr-xr-x   5 root     root          304 Mar 29 23:02 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         4557 Mar  5 21:36 Makefile
-rw-r--r--   1 root     root         2378 Mar  5 16:15 asm.s
drwxr-xr-x   2 root     root          128 Mar 28 18:04 blk_drv/
drwxr-xr-x   2 root     root          160 Mar 28 18:04 chr_drv/
-rw-r--r--   1 root     root        10984 Mar 17 21:47 exit.c
-rw-r--r--   1 root     root         4255 Mar  4 12:11 fork.c
drwxr-xr-x   2 root     root          192 Mar 28 18:04 math/
-rw-r--r--   1 root     root         1461 Oct  2 14:16 mktime.c
-rw-r--r--   1 root     root          448 Oct 17 14:22 panic.c
-rw-r--r--   1 root     root          537 Jan 10 23:14 printk.c
-rw-r--r--   1 root     root         8249 Mar 17 21:38 ptrace.c
-rw-r--r--   1 root     root         9798 Mar 14 14:55 sched.c
-rw-r--r--   1 root     root         5805 Mar  1 15:27 signal.c
-rw-r--r--   1 root     root        12996 Feb 27 16:42 sys.c
-rw-r--r--   1 root     root         5941 Mar  5 00:56 sys_call.s
-rw-r--r--   1 root     root         4806 Mar  5 20:27 traps.c
-rw-r--r--   1 root     root         4800 Oct  2 14:16 vsprintf.c

usr/src/linux/kernel/blk_drv:
total 80
drwxr-xr-x   2 root     root          128 Mar 28 18:04 ./
drwxr-xr-x   5 root     root          304 Mar 29 23:02 ../
-rw-r--r--   1 root     root         2783 Mar  5 21:37 Makefile
-rw-r--r--   1 root     root         3907 Mar 12 01:42 blk.h
-rw-r--r--   1 root     root        13805 Mar 13 17:03 floppy.c
-rw-r--r--   1 root     root         9510 Mar 15 18:46 hd.c
-rw-r--r--   1 root     root         5694 Mar  6 01:04 ll_rw_blk.c
-rw-r--r--   1 root     root         2782 Feb 20 11:15 ramdisk.c

usr/src/linux/kernel/chr_drv:
total 155
drwxr-xr-x   2 root     root          160 Mar 28 18:04 ./
drwxr-xr-x   5 root     root          304 Mar 29 23:02 ../
-rw-r--r--   1 root     root         3742 Mar  5 21:37 Makefile
-rw-r--r--   1 root     root        26930 Mar 12 22:37 console.c
-rw-r--r--   1 root     root        16852 Mar 15 00:43 keyboard.S
-rw-r--r--   1 root     root         1186 Jan 10 23:56 pty.c
-rw-r--r--   1 root     root         3005 Mar 15 00:43 rs_io.s
-rw-r--r--   1 root     root         3892 Mar 14 18:16 serial.c
-rw-r--r--   1 root     root        12734 Mar 17 20:46 tty_io.c
-rw-r--r--   1 root     root         8700 Mar 12 21:51 tty_ioctl.c

usr/src/linux/kernel/math:
total 76
drwxr-xr-x   2 root     root          192 Mar 28 18:04 ./
drwxr-xr-x   5 root     root          304 Mar 29 23:02 ../
-rw-r--r--   1 root     root         3967 Mar  4 04:14 Makefile
-rw-r--r--   1 root     root         1999 Jan  1 16:42 add.c
-rw-r--r--   1 root     root          904 Jan  1 17:15 compare.c
-rw-r--r--   1 root     root         5936 Feb 17 22:07 convert.c
-rw-r--r--   1 root     root         2099 Jan  1 01:41 div.c
-rw-r--r--   1 root     root         1807 Dec 31 11:57 ea.c
-rw-r--r--   1 root     root          234 Feb 27 14:01 error.c
-rw-r--r--   1 root     root         5145 Mar  4 04:35 get_put.c
-rw-r--r--   1 root     root        11789 Mar  5 20:32
math_emulate.c
-rw-r--r--   1 root     root         1517 Mar  4 04:37 mul.c

usr/src/linux/lib:
total 36
drwxr-xr-x   2 root     root          240 Mar 28 18:04 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         2649 Mar  5 18:23 Makefile
-rw-r--r--   1 root     root          220 Mar  4 12:27 _exit.c
-rw-r--r--   1 root     root          131 Oct  2 14:16 close.c
-rw-r--r--   1 root     root         1202 Oct  2 14:16 ctype.c
-rw-r--r--   1 root     root          127 Oct  2 14:16 dup.c
-rw-r--r--   1 root     root           73 Oct  2 14:16 errno.c
-rw-r--r--   1 root     root          170 Oct  2 14:16 execve.c
-rw-r--r--   1 root     root         7469 Dec  2 03:15 malloc.c
-rw-r--r--   1 root     root          419 Mar  4 12:27 open.c
-rw-r--r--   1 root     root          128 Oct  2 14:16 setsid.c
-rw-r--r--   1 root     root          177 Oct  2 14:16 string.c
-rw-r--r--   1 root     root          253 Oct  2 14:16 wait.c
-rw-r--r--   1 root     root          160 Oct  2 14:16 write.c

usr/src/linux/mm:
total 49
drwxr-xr-x   2 root     root           96 Mar 28 18:04 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         1226 Mar 17 09:57 Makefile
-rw-r--r--   1 root     root        15594 Mar 17 20:35 memory.c
-rw-r--r--   1 root     root          508 Oct  2 14:16 page.s
-rw-r--r--   1 root     root         5913 Mar 16 20:39 swap.c

usr/src/linux/tools:
total 11
drwxr-xr-x   2 root     root           48 Mar 28 18:04 ./
drwxr-xr-x  10 root     root          176 Mar 28 18:04 ../
-rw-r--r--   1 root     root         4522 Mar  6 02:19 build.c

usr/src/usr.bin:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          176 Mar 29 23:00 ../

usr/src/usr.lib:
total 2
drwxr-xr-x   2 root     root           32 Mar 28 17:20 ./
drwxr-xr-x   7 root     root          176 Mar 29 23:00 ../

usr/tmp:
total 2
drwxr-xr-x   2 root     root           64 Mar 29 13:47 ./
drwxr-xr-x  13 root     root          240 Mar 28 20:00 ../

===========================================================
So, there you have it, a basic 'beginner's guide' for Linux.
If you have found errors in this guide and would like me to
implement the changes then please send me the 'corrected text'
section from this guide so that it would be easy for me to drop
that section in to replace the incorrect section.  Comments,
suggestions should be addressed to;
boyer@sumax.seattleu.edu
chuck boyer

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
