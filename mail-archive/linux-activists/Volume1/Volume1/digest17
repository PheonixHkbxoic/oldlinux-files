From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Sun, 26 Jan 92 18:00:11 EST
Subject:  Linux-Activists Digest #17

Linux-Activists Digest #17, Volume #1            Sun, 26 Jan 92 18:00:11 EST

Contents:
  "Funny" bug/feature (Marc CORSINI)
  Micro-Gnu Emacs (mg2a) and nonblocking tty io kernel code available (Charles Hedrick)
  minor oddities with terminal I/O (Charles Hedrick)
  TCP/IP: What is goin' on? (ury segal)
  error numbers (Douglas E. Quale)
  Re: ps? (Theodore Y. Ts'o)
  Re: bug in job control? (Theodore Y. Ts'o)
  bugs in freopen.c and fcntl.c terminated (Douglas E. Quale)
  Re: Weirdness in /dev (Theodore Y. Ts'o)
  malloc(0) returns NULL (Derek Lieber)
  floppy problem solved (Charles Hedrick)
  Re: ARG (hard drive problems) (Ralph Sims)
  Re: COM1 and COM2 serial ports (no, I don't repeat it!)
  Re: COM3,COM4 and "out of memory" during uncompress. (no, I don't repeat it!)
  Linux for a 32-bit bus (The Grand Master)
  Re: How to boot a PC from drive B: (Clint Grimes)

----------------------------------------------------------------------------

From: corsini@geocub.greco-prog.fr (Marc CORSINI)
Subject: "Funny" bug/feature
Reply-To: corsini@labri.greco-prog.fr
Date: Sun, 26 Jan 1992 09:42:46 GMT



I have only 8 vc and 4 pty's (message at boot time). As I am curious
I tried "doshell /dev/tty9 /bin/sh &"
result : REBOOT 
anybody else ?

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: Micro-Gnu Emacs (mg2a) and nonblocking tty io kernel code available
Date: 26 Jan 92 09:04:10 GMT

I've just finished porting mg2a to Linux.  I find the version of
Microemacs supplied with the system (called "em") rather frustrating.
Mg was originally intended as a "small" emacs that acts fairly much
like Gnu Emacs.  I've done additional work to make it even closer.  Of
course it isn't based on Lisp, and doesn't have fancy modes, etc.  But
it has the same basic editing features, including incremental search,
builtin help, completion, etc.  I did this work a few years ago for
Microport SV/AT.  It was designed to meet my minimal criteria for an
Emacs dialect:

  - it must be able to edit its own binary, which means it has
        no line length limits and can handle all characters, including nulls
  - it must do completion and ? on file names and internal function names
  - it must have full builtin help

Unfortunately, mg uses non-blocking I/O, which is not implemented in
the Linux kernel.  I could certainly fix mg so it worked a different
way (probably using VTIME).  However I thought it would be more useful
in the long run to implement nonblocking I/O.  Thus I am supplying
some kernel patches to go along with it.  If you don't want to put
them in, you'll have to find another way to make the function
typeahead, in ttyio.c, work.  This is a very simple implementation of
non-blocking I/O.  It works for mg, but I make no guarantees as to
whether it's a full implementation of the official semantics.

SIGTSTP didn't seem to be working yet, so I've made ^Z work the way I
did on Microport: To suspend it, you hit ^Z twice.  The first time
gets mg out of raw mode.  The second time does a normal suspend.  To
continue it, type an extra CR after the "fg" command.  The suspend
code leaves it waiting for a character.  The extra CR causes it to
proceed and refresh the screen.  This is sort of kludgey, but it's the
best I can do at the moment.  If SIGTSTP etc. are working, take a look
in spawn.c.  The code you really want to use is under #ifdef notdef.

I have tested the Linux port only minimally, but I've checked the
things that are most likely to cause trouble.  The tar file includes
source, an already built binary, and fairly complete documentation.  I
have TeX source to the documentation, but am not including it in order
to keep down the size of the tar file.  I have included both .doc and
.dvi versions.  Similarly, I have not included the files necessary to
support Berkeley Unix, MS/DOS, etc.

There are two tar files on athos.rutgers.edu in pub:

  nonblock.tar.Z - Implementation of non-blocking TTY I/O.
        Four files were changed.  I've included new copies of
        them, and also DIFFS, in case you want to put in the
        changes yourself.

  mg.tar.Z - mg source, binary, and documentation

I'd appreciate it if the masters of the archives would put these files
in the appropriate place and tell me when they have done so.  I'm not
going to be able to leave them on athos forever.

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: minor oddities with terminal I/O
Date: 26 Jan 92 09:41:59 GMT

Some random oddities that I've noticed in getting settled into linux.
None of these are serious problems, but they should be added to the
list of thing to look into:

(1) the ESC [ m command can be used to set colors.  However its idea
of color codes differs slightly from Kermit and other systems.  E.g.
typically a red background is 41 and light blue is 46.  In Linus I
have to use 44 and 43 respectively.  Not a big deal, but it
complicates some scripts.

(2) I find that I have to remove insert and delete line from the
termcap entries for use under Unix.  Otherwise I get garbled screens.
It looks like insert and/or delete take more time than you'd expect.
I haven't been able to find a value for padding that fixes things up.
This isn't too serious because Emacs is able to use the scroll region
to get a similar effect.  Note that I'm using multiple screens, which
may slow down the display code.

(3) When I am simultaneously compiling a program and using kermit, I
lose characters from the serial port (at 9600 bps).  Probably some
additional interrupt-level buffering is needed.

------------------------------

From: ury@mossad.huji.ac.il (ury segal)
Subject: TCP/IP: What is goin' on?
Date: 26 Jan 92 11:41:39 GMT

Hmm.. I assume that someone is workin' on that.. How soon do You 
think U'll finish ?

-- 
*******************************************************************************
*  Ury Segal                            *    Phone: Home: (02) 971187
*  Distributed Computing Project        *           Lab:  (02) 585762
*  Dept. of Computer Science            *    E-mail:
*  Hebrew University, Jerusalem, Israel *           ury@cs.huji.ac.il
*******************************************************************************

------------------------------

From: quale@saavik.cs.wisc.edu (Douglas E. Quale)
Subject: error numbers
Date: 26 Jan 92 13:00:49 GMT

A quick look at the OS source shows that Linux 0.12 sometimes returns
EINVAL instead of the correct error number.  (For instance, close(2)
returns EINVAL for a file descriptor out of range when it should return
EBADF.  Open(2) also returns EINVAL for conditions that should return
EMFILE and ENFILE.  All the error checks seem to be there so fixing this
should be trivial.  (Linus did the really hard parts.)  I'll take a look
at these tomorrow and report what I find.

Is anyone still working on the utilities in BSD Networking Release 2?
The first step would seem to be to get the (non-network) libraries
in order, but my first attempts have met with mixed success at best.
I would love to hear from anyone who has either succeeded in making
useful Bezerkely libraries or even anyone who has tried.

--
Doug Quale
quale@saavik.cs.wisc.edu

------------------------------

From: tytso@athena.mit.edu (Theodore Y. Ts'o)
Subject: Re: ps?
Date: Sun, 26 Jan 1992 17:04:56 GMT

In article <1992Jan26.012512.12321@uniwa.uwa.oz.au> comrade@uniwa.uwa.oz.au (Peter Cooper) writes:
>       As an aside, is the argv[] structure supposed to be write
>protected ? On the UNIX box I am on (not linux) writing to argv[1][0]
>produced a SEGV. Does POSIX say anything about this ? (YES, argv[1] is
>NOT a null pointer. ;)

If POSIX says anything at all, it probably says that writing to the argv
structure will produce "undefined results".  Which is to say, it or
might not work.  On BSD systems, you can do this, and in fact nntpd and
sendmail will muck with this area so that the ps command can show
something intersting about the internal state of the daemon (like who
it's servicing, etc.).  It's a hack, but it works (on BSD systems, at
least).

                                                - Ted


------------------------------

From: tytso@athena.mit.edu (Theodore Y. Ts'o)
Subject: Re: bug in job control?
Date: Sun, 26 Jan 1992 17:12:08 GMT

In article <Jan.25.21.23.42.1992.3543@dumas.rutgers.edu> hedrick@dumas.rutgers.edu (Charles Hedrick) writes:
>I tried to background a make, and failed.  That is
>  make 
>  ^Z
>  bg
>The result was an IOT interrupt, which killed the make.

You probably saw a bug with GCC; it hasn't been recompiled since before
Linux 0.11 or Linux 0.10, and I don't think the libc that it's linked
with does the right thing with signals.  Specifically, try:

gcc -o foo foo.c &
kill -CONT %gcc

and you get another IOT interrupt (which causes a non-zero exit status,
which will kill make).  I suspect GCC was trying to trap SIGCONT (since
by default it should be ignored), and the signal trampoline code in the
version of libc it was linked with is out of date.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Theodore Ts'o                           bloom-beacon!mit-athena!tytso
308 High St., Medford, MA 02155         tytso@athena.mit.edu
   Everybody's playing the game, but nobody's rules are the same!

------------------------------

From: quale@saavik.cs.wisc.edu (Douglas E. Quale)
Subject: bugs in freopen.c and fcntl.c terminated
Date: 26 Jan 92 16:37:51 GMT

I found the bug(s) that kept compress(1) from working properly.
One is in estdio/freopen.c, the other in fs/fcntl.c.  The bugs
are practically identical, and I'm pretty sure I haven't balled
it up this time.  (But if I have, tell me quickly!)

In both cases the dup2 call is the culprit.  When dup2 is called
with identical fds, i.e. dup2(old, new) where old == new, the
code would close the fd -- bad news since they are identical.
Actually fixing estdio alone will fix compress by avoiding calling
dup2 with old==new, but we may as well fix fcntl.c as well.

The fixes are very similar and are only one line each, but I'll
post context diffs anyway.  You'll need to split these apart to
apply them easily, or just do it by hand.


===== estdio fix =====

*** freopen.c   Wed Aug 21 18:19:24 1991
--- freopen.c~  Sun Jan 26 10:22:17 1992
***************
*** 33,39 ****
  
  /* New file opened ok on new file descriptor */
      else {
!       if (ofd >= 0) {
        fp->__file = -1;
        dupstat = dup2(nfd, ofd);
        (void) close(nfd);
--- 33,39 ----
  
  /* New file opened ok on new file descriptor */
      else {
!       if ((ofd >= 0) && (nfd != ofd)) {
        fp->__file = -1;
        dupstat = dup2(nfd, ofd);
        (void) close(nfd);


===== fs/fcntl.c fix =====

*** fcntl.c     Sun Jan 26 09:48:12 1992
--- fcntl.c~    Sun Jan 26 09:47:36 1992
***************
*** 35,40 ****
--- 35,41 ----
  
  int sys_dup2(unsigned int oldfd, unsigned int newfd)
  {
+         if (oldfd == newfd) return newfd;
        sys_close(newfd);
        return dupfd(oldfd,newfd);
  }

--
Doug Quale
quale@saavik.cs.wisc.edu

------------------------------

From: tytso@athena.mit.edu (Theodore Y. Ts'o)
Subject: Re: Weirdness in /dev
Date: Sun, 26 Jan 1992 17:20:48 GMT

In article <BRTMAC.92Jan25213319@maverick.ksu.ksu.edu> brtmac@maverick.ksu.ksu.edu (Brett McCoy) writes:
>In article <john.696392839@csrnxt1.ae.utexas.edu> john@csrnxt1.ae.utexas.edu (John R. Schutz) writes:

>>I've just noticed a strange occurence in my /dev directory...in a 
>>ls -l, I get a 
>>
>>total 4291216119
>> ...
>
>Do an 'ls -ls' in the /dev directory and I think you'll see why du and ls
>report such a high number.

This is a "feature" which was introduced in Linux 0.12; it was
originally present in Minix, and I guess it was decided it was useful
for Linux as well; specifically, when you stat a device file belong to a
block device, it will return the maximum size of the block device in the
st_size member of the stat structure.

It can be useful, but it can also be really confusing; as you have
noted, it screws up "du" and "ls" listings.  If you don't like it, it's
very easy to patch out.  Look in the fs/inode.c, in the subroutine
read_inode(). 

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Theodore Ts'o                           bloom-beacon!mit-athena!tytso
308 High St., Medford, MA 02155         tytso@athena.mit.edu
   Everybody's playing the game, but nobody's rules are the same!


------------------------------

From: derek@gumby.watson.ibm.com (Derek Lieber)
Subject: malloc(0) returns NULL
Date: 26 Jan 92 16:20:35 GMT
Reply-To: derek@watson.ibm.com (Derek Lieber)

After recompiling and trying out some GNU "binutils" I've
encountered various "insufficient virtual storage" errors.
The problem seems to be that malloc() returns NULL for 0 size
requests. Indeed lib/malloc/malloc.c makes an explicit test
for this case. I believe it would make more sense if the line

    if (size == 0)
       return NULL;

were changed to

    if (size == 0)
       size = 1;

(I think this is the way BSD systems work, but I'm not sure. Anyway,
ANSI defines the behaviour of malloc(0) as "undefined", so this change
still gives a legal implementation of malloc).

-- 
Derek Lieber
derek@watson.ibm.com

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: floppy problem solved
Date: 26 Jan 92 18:16:45 GMT

Well, I've solved my problem of not being able to do backups to
floppy.  I still don't know why it was happening.  It may be something
substandard about my hardware.  But what I found is that doing dumps
to /dev/at0 was horrendously inefficient.  Blocks were stuck into the
cache until the next sync, at which point they were written in
whatever order the cache blocks happen to appear, which is essentially
random.  By a one-line patch I've made output to a block device (as
opposed to files on block devices) work a lot more like the raw device
under Unix.  That is, output is scheduled immediately.  (Note that it
still isn't synchronous.  I just put it into the device queue
immediately.  It should only block if the request queue is full.)  The
result should be that the writes happen in order, without waiting for
the sync.  They still go through the cache, so it's still block I/O.
It's certainly possible that there are sideeffects, though I can't see
what they could be.  At any rate, this speeds up the process
enormously, and prevents the errors and hanging that I was seeing
before.

The patch is: in fs/block_dev.c, at the end of block_write, you'll
find a brelse (the only one in that function, and the first in the
file).  After it, insert

    ll_rw_block(WRITE,bh);

------------------------------

From: ralphs@halcyon.com (Ralph Sims)
Crossposted-To: comp.binaries.ibm.pc.d
Subject: Re: ARG (hard drive problems)
Date: 26 Jan 92 16:59:30 GMT
Reply-To: ralphs@halcyon.com

valley@gsbsun.uchicago.edu (Doug Dougherty) writes:

> But seriously, folks, there must be some kind of util that does
> everything except the actual physical low-level formatting, for IDE
> (& perhaps other non-formattable) drives.

Well, we run XENIX or UNIX over it and then re-do the MS-DOS
installation.  The drive initialization scheme in *NIX seem
to do a low-level format of the IDE drive and cleans up problems
that the DOS thingys don't.  Or maybe this is only a perception
and not a reality (although the perceptions have produced many
favorable results).

Also, the IDE manufacturers HAVE made low-level utilities
available.  Caveat emptor.

------------------------------

From: Pauli.Ramo@hut.fi (no, I don't repeat it!)
Subject: Re: COM1 and COM2 serial ports
Date: 26 Jan 92 20:48:37 GMT
Reply-To: Pauli.Ramo@hut.fi

In article <1992Jan19.212339.26824@athena.mit.edu> tytso@ATHENA.MIT.EDU (Theodore Ts'o) writes:
           Instead of using /dev/tty64 and /dev/tty65 for the serial line
   ports, rename them to /dev/ttys1 and /dev/ttys2.  You're much less
   likely to get confused that way.

I second the motion; in fact I did just that today. The change is trivial,
but it should be made "standard". Or maybe /dev/ttys01 etc., we may want
to accommodate some growth...

           Also, would someone be interested in setting up support for COM
   3 and COM 4?  It shouldn't be that difficult a job, and it would be a
   good first project for someone who wants knows a little bit about 80386
   assembler and who wants to get their feet wet doing some basic kernel
   programming.

Yeah, talk about basic. The changes are really trivial (because of the 
original good work ;). A dozen lines of code copied from code for com1&2.
The problem is, that the ports are nonstandard and the parameters probably
vary from installation to installation.

        Pauli
--
Disclaimer fault - lawyers dumped

------------------------------

From: Pauli.Ramo@hut.fi (no, I don't repeat it!)
Subject: Re: COM3,COM4 and "out of memory" during uncompress.
Date: 26 Jan 92 20:51:52 GMT
Reply-To: Pauli.Ramo@hut.fi

In article <1992Jan25.175149.5846@kth.se> usenet@kth.se (Usenet) writes:

   I have 3 serial ports on my computer (internal modem, mouse, and to another
   computer) which I use when I am running MS-DOS on it (bad habit :-).
   I dont't want to reconfiguring the hardware every time I want to use modem
   etc in Linux. Does the driver supports COM3 and COM4 ? Or has one to change
   the kernel ?

Changes to kernel are required, but they are really trivial. About a dozen
of lines, and you can copy them from the definitions for com1 and com2.
In fact the modem I'm using right now is in com3 and it works great.

        Pauli
--
Disclaimer fault - lawyers dumped

------------------------------

From: asg@sage.cc.purdue.edu (The Grand Master)
Subject: Linux for a 32-bit bus
Date: 26 Jan 92 21:45:42 GMT


    Has anyone done (or thought about doing) any work on linux for
and EISA machine?
                        Bruce
-- 
-How long must we fight? How long        Courtesy of Bruce Varney
 until we can live in peace.             asg@sage.cc.purdue.edu 
-Until the madmen are dead my son,      
 Or until they realize that they cannot count on us to do nothing

------------------------------

From: cdg@stable.ecn.purdue.edu (Clint Grimes)
Subject: Re: How to boot a PC from drive B:
Date: 26 Jan 92 22:17:00 GMT

In article <1992Jan25.040014.7295@noose.ecn.purdue.edu> cdg@stable.ecn.purdue.edu (Clint Grimes) writes:
>As there seems to be alot of interest, I'll share one my failures
>with everyone to save all a little time.
>
>Turning around the proceedure for booting to a HD to boot to B: doesn't
>seem to work (IOW - Offset 508=x1D(29 dec.) 509=x02) produces a loop
>that says:  {who knows what the actual order is}
>       0000
>       CX:0006
>       DX:0000.
>       @X:0404
>       AX:020A
>       (repeated adnausium)
>
>If I was on the right track, and made some stupid mistake ... don't be
>surprised, but do tell me where I screwed up.
>

O.K., I found that if I used a 360K in A as boot disk, I got the errors
If I used a 1.2M there was no problem (what a waste!).
BTW, it turns out that when you rawrite the rootimage to a 1.44M it can
only utilize 1.2M.  But, if you make a root for A: then 
        mknod /dev/floppy1 b 2 29
        mkfs -c /dev/floppy1 1440
        mount /dev/floppy1 /user
        cd /user
        for i in bin dev etc usr tmp
        do
        cp +recursive +verbose /$i $i
        done
        sync
        cd /user/usr/bin
        uncompress tar
You now have a working version of tar.
  I know it's easier to put it on a hard drive, but that's not yet an option.
  Linux forever!
  -Clint

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
|Clint Grimes | cdg@ecn.purdue.edu | Voice : (317)873-4045   |
+============================================================+
| For the woman who has everything:|Country Song for the 90's|
|                                  |"Lookin' for work in all |
|       Here I am!                 |  the wrong places..."   |
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

------------------------------


** FOR YOUR REFERENCE **

The service addresse, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
