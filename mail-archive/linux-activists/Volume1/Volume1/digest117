From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Wed, 18 Mar 92 00:15:08 EST
Subject:  Linux-Activists Digest #117

Linux-Activists Digest #117, Volume #1           Wed, 18 Mar 92 00:15:08 EST

Contents:
  0.95a uploaded - soon available (Linus Benedict Torvalds)
  Re: mtools on root image (no, I don't repeat it!)
  Man pages (Michael K. Johnson)
  Re: 386 BSD (FREE!!!! - Jolitz version), ethernet, etc drivers (H.H. Bergman)
  SCSI support in 0.95a? (joseph toman)
  SVGA registers (Paul Allen)
  Re: Floppy device #'s? (Budi Rahardjo)
  Transferring stuff to Linux (Paul Allen)

----------------------------------------------------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: 0.95a uploaded - soon available
Date: 18 Mar 92 00:32:46 GMT


I just uploaded the new kernel source and image to nic.funet.fi into the
incoming-directory under linux.  As usual, they won't show up for a day
or two: wait for arl to announce that it's available.

The new version called 0.95a has no major new features, and is just a
bug-fix release for 0.95 - it hopefully fixes all known bugs, but that's
what I thought about plain 0.95 :(.  There are even less installation
documents than before: (a) they haven't changed since 0.95 and (b) the
rootdisk is no longer made by me (which means that 0.95a will probably
be the first release that actually has all the needed device special
files there.)

Everyone's favourite bug is also fixed: 0.95a actually returns the
correct version number from uname().  (Boy did I get bug reports on this
one :^)

I'm including the release-note at the end of the post.

                Linus

PS: Whoever made the GNU-emacs binary available for linux - the
inability to use the "meta-X shell" command is a bit disturbing.  I
looked into it a bit, and my guess is that the linux config file doesn't
define HAVE_SETSID.  Could somebody with more diskspace than I have try
to recompile gemacs with HAVE_SETSID defined, and tell me if this fixes
the problem?

==========


                RELEASE NOTES FOR LINUX v0.95a
                Linus Torvalds, March 17, 1992


This is file mostly contains info on changed features of Linux, and
using old versions as a help-reference might be a good idea.

                COPYRIGHT

Linux-0.95a is NOT public domain software, but is copyrighted by me.  The
copyright conditions are the same as those imposed by the GNU copyleft:
get a copy of the GNU copyleft at any major ftp-site (if it carries
linux, it probably carries a lot of GNU software anyway, and they all
contain the copyright). 

The copyleft is pretty detailed, but it mostly just means that you may
freely copy linux for your own use, and redistribute all/parts of it, as
long as you make source available (not necessarily in the same
distribution, but you make it clear how people can get it for nothing
more than copying costs).  Any changes you make that you distribute will
also automatically fall under the GNU copyleft.

NOTE! The linux unistd library-functions (the low-level interface to
linux: system calls etc) are excempt from the copyright - you may use
them as you wish, and using those in your binary files won't mean that
your files are automatically under the GNU copyleft.  This concerns
/only/ the unistd-library and those (few) other library functions I have
written: most of the rest of the library has it's own copyrights (or is
public domain).  See the library sources for details of those. 


                NEW FEATURES OF 0.95a


0.95a is mainly a bug-fix release: it didn't even get it's own version
number.  Plain 0.95 fixed a lot of bugs in 0.12, but also introduced
totally new bugs: 0.95a tries to correct these. The bugs corrected
(knock wood) are:

- floppy and harddisk drivers should now once more work with most
  hardware: I'd be interested in reports of "unexpected HD interrupt"
  and "reset-floppy called" with the new kernel. 

- A rather serious tty-bug corrected: this one messed up the screen
  under 0.95, and switched characters over the serial lines.  Under
  extreme circumstances it could even crash the machine.

- ptrace had a bug: hopefully it works now.

- The extended partitions didn't work under 0.95, although most of the
  code was there.  Please somebody tell me it works under 0.95a.

- the 0.95 fdisk was broken: a new one with the new root-floppy should
  clear up the confusion.

- select() and the sleep-wakeup code had fundamental (but relatively
  benign) problems under 0.95 (and all earlier versions).  The sleeping
  code is totally redesigned, and select should work better even under
  load. 

One actual new feature, not just a bug-fix:

- ser3-4 support is there, although I've been unable to test it (as I
  haven't got more than ser2).  NOTE! Due to AT hardware limitations,
  ser1 cannot be active at the same time as ser3, and likewise ser2 and
  ser4 are mutually exclusive.  The interrupt-handlers should have no
  problems with shared interrupts, but the actual hardware probably has,
  so the kernel disables interrupts from one serial line when the other
  one is opened. 

- faster default keyrepeat rate: this is going to need some getting used
  to, but is extremely practical especially with bigger screen sizes.

- VGA cards that aren't recognized at bootup are put into the 80x50
  character mode if <enter> was pressed when asking about SVGA modes. 


                NEW FEATURES OF 0.95

        Init/login

Yeah, thanks to poe (Peter Orbaeck (sp?)), linux now boots up like a
real unix with a login-prompt.  Login as root (no passwd), and change
your /etc/passwd to your hearts delight (and add other logins in
/etc/inittab etc). 

        Virtual consoles on any (?) hardware.

You can select one of several consoles by pressing the left alt-key and
a function key at the same time. Linux should report the number of
virtual consoles available upon bootup. /dev/tty0 is now "the current"
screen, /dev/tty1 is the main console, and /dev/tty2-8 can exist
depending on your text-mode or card.

The virtual consoles also have some new screen-handling commands: they
confirm even better to vt200 control codes than 0.11. Special graphic
characters etc: you can well use them as terminals to VMS (although
that's a shameful waste of resources), and the PF1-4 keys work somewhat
in the application-key mode.

        Extended vt200 emulation

0.95 contains code to handle a vt200 application keymap mode: the cursor
keys send slightly different codes when in application mode, and the
numeric keyboard tries to emulate the vt200 application keys.  This
probably isn't complete yet. 

        Symbolic links.

0.95 now allows symlinks to point to other symlinks etc (the maximum
depth is a rather arbitrary 5 links). 0.12 didn't like more than one
level of indirection.

        Virtual memory.

VM under 0.95 should be better than under 0.12: no more lockups (as far
as I have seen), and you can now swap to the filesystem as well as to a
special partition. There are two programs to handle this: mkswap to set
up a swap-file/partition and swapon to start up swapping.

mkswap needs either a partition or a file that already exists to make a
swap-area. To make a swap-file, do this:

        # dd bs=1024 count=NN if=/dev/hda of=swapfile
        # mkswap swapfile NN

The first command just makes a file that is NN blocks long (initializing
it from /dev/hda, but that could be anything). The second command then
writes the necessary setup-info into the file. To start swapping, write

        # swapon swapfile

NOTE! 'dd' isn't on the rootdisk: you have to install some things onto
the harddisk before you can get up and running. 

NOTE2! When linux runs totally out of virtual memory, things slow down
dramatically. It tries to keep on running as long as it can, but at
least it shouldn't lock up any more. ^C should work, although you might
have to wait a while for it..

        Faster floppies

Ok, you don't notice this much when booting up from a floppy: bash has
grown, so it takes longer to load, and the optimizations work mostly
with sequential accesses.  When you start un-taring floppies to get the
programs onto your harddisk, you'll notice that it's much faster now. 
That should be about the only use for floppies under a unix: nobody in
their right mind uses floppies as filesystems.

        Better FS-independence

Hopefully you'll never even notice this, but the filesystem has been
partly rewritten to make it less minix-fs-specific. I haven't
implemented all the VFS-patches I got, so it's still not ready, but it's
getting there, slowly.


        And that's it, I think.

Happy hacking.

                        Linus (torvalds@kruuna.helsinki.fi)

------------------------------

From: Pauli.Ramo@hut.fi (no, I don't repeat it!)
Subject: Re: mtools on root image
Date: 17 Mar 92 19:20:47 GMT
Reply-To: Pauli.Ramo@hut.fi

In article <1992Mar15.222925.22564@bernina.ethz.ch> almesber@nessie.cs.id.ethz.ch (Werner Almesberger) writes:

   I few questions remain, however:
     a) has anybody *ever* seen a floppy disk with a 16 bit FAT on it ?

Don't know for sure, but maybe the new 2.88 MB diskettes (found currently
only in some IBM PS/2's, but probably coming to other machines soon) use
something like that. If they still use 512-byte sectors, that makes
5760 sectors that simply can't be addressed with a 12-bit FAT.

     b) has anybody *ever* seen a hard disk with a 12 bit FAT on it ?

Yes. I have installed several of them as boot partitions (~2MB) for 
Netware 3.11.

        Pauli
--
Disclaimer fault - lawyers dumped

------------------------------

From: johnsonm@stolaf.edu (Michael K. Johnson)
Subject: Man pages
Reply-To: johnsonm@stolaf.edu (Michael K. Johnson)
Date: Wed, 18 Mar 1992 01:27:58 GMT

OK, here's an update on the recently announced man pages project, and
a call for more help.

Two people have announced that they would like to work on the man
pages, but no one wants to coordinate the project.  So I will start
the thing going, waiting for someone to take charge -- I can't carry
this through.  Therefore, if you think that you would like to get
involved in this project at any level of commitment, please tell me.
I will be willing to co-ordinate this until someone else steps up or
until the end of the school year, whichever comes first.  I will need
volunteers both to do some writing and a little research, and someone
to take my place as co-ordinator.

If you don't feel up to kernel hacking, or if kernel hacking is not
your interest, but you would like to contribute significantly to
linux, this is your chance.  If there are two people who would like to
share the burden of co-ordination, that might work too.

We might as well divide the man pages the way they are divided
already:  It will take different people to work on different sections.
I will list the sections, and ask that someone volunteer to organize
each one.

Section 1: User commands.

        This should involve little more than collecting already
written manpages:  GNU has man pages for most of their programs, and
most of the programs we are using are GNU's.  This will involve
writing man pages for all the linux-only programs that we have.

Section 2: System calls.

        It would be nice if a hacker-type would help with this one.  I
think that this need not be too hard -- Between the linux source,
posix documentation, and man pages already existing for BSD that I
believe are free, this should not be too hard either.  But we need
someone who knows what is going on here.

Section 3: Subroutines.

        These are the man pages for the standard library.  I don't
know if GNU has these, but we can probably use posix and BSD again.  I
don't know these nearly well enough, so I, at least, really would be
depending on whoever picked this up.

Section 4: Devices.

        Ok, this should not be too hard:  we don't have a heck of a
lot of them yet.  Anyone looking for a decently easy task?  First
come, first serve :-).

Section 5: File Formats.

        Again: we don't have a lot yet.  This will definitely be a
continuing effort as we build functionality into linux.  Anyone for a
steady, long-term commitment?  OK, OK, I'll quit the puns...

Section 6: Games.

        Come on, _someone_ has got to have an interest...  Actually,
these should come with the games, so unless games become standard...

Section 7: Miscellaneous.

        Uh, yuk.  who decides what goes here?  Well, here's your
chance.  Seriously, someone please tell me what goes here.  I need to
know even as interim co-ordinator.

Section 8: System administration.

        This is another section which calls for a long-term
commitment, because linux will be evolving administrative commands,
especially as people write programs to make things easier for others.
This will definitely need someone who wants to have a long-term
(though low-intensity) project.

Section l: Local

        Good thing we don't have to deal with this.


If you don't want to co-ordinate a section, but want to help, please
mail me.  If you are not sure, and want to talk about how difficult a
task one of the sections would be, I'm sure that we could talk.  It's
just that I will definitely need volunteers with some time.

If anyone has information on the legal status of any sources of man
pages, or knows of sources that I havn't mentioned, please write me
and tell me.

Thanks for putting up with this long article.

michaelkjohnson
johnsonm@stolaf.edu
no .sig.


------------------------------

From: a0356514@let.rug.nl (H.H. Bergman)
Subject: Re: 386 BSD (FREE!!!! - Jolitz version), ethernet, etc drivers
Date: 18 Mar 92 00:16:07 GMT

In article <joer.20@inca.law.csuohio.edu> joer@inca.law.csuohio.edu (Joe Rosenfeld) writes:
>In article <1992Mar10.185650.17666@sdd.hp.com> dan@hpsanaeo.nsr.hp.com (Dan Lake) writes:
>
>>In article <1992Mar10.155925.4691@colorado.edu>, drew@cs.colorado.edu
>>(Drew Eckhardt) writes:
>>|>William Jolitz's 386 BSD port is out "for experimenters only"
>>|>
>>|>However, this does have ethernet drivers for a number of boards, 
>>|>TCP / IP, and other goodies that are freely redistributable, etc.
>>|>
>>|>We should probably look at this.
>
>>is this ftp'able?  if so, what are the host(s)?
>>      
>
>Yes, it is ftp'able at this site:
>
>agate.berkeley.edu
>[128.32.136.1]
>
>in this directory:  pub/386BSD
>
>this is very interesting stuff.  I like the ethernet board inclusion.  May 
>take some playing and tweaking, but good things usually take time.

As an aside: does 386/BSD have drivers for tape streamers? I'd like to
have tape-support for Linux! An example [source] might make it easier for
me to write that. [I'm not sure I could do all of it though.]

-Hennus Bergman

------------------------------

From: toman@comix.cs.uoregon.edu (joseph toman)
Subject: SCSI support in 0.95a?
Date: 18 Mar 92 01:59:52 GMT

I have an Adapatec 1542B SCSI controller and was wondering whether it would
be possible to include SCSI support in 0.95a.  I am quite a UNIX fan and would
love to be able to run LINUX but without SCSI support (I'm not really much of
a hacker) (;-( I guess, no luck!

                                = Johannes =

===============================================================================

------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: SVGA registers
Reply-To: paula@atc.boeing.com
Date: Wed, 18 Mar 1992 03:41:36 GMT

I took a few days off, and have only caught up through digest
#104!  Would you guys slow down a bit???   :-)

Several people have commented that changing VGA modes via an
ioctl will be hard because SVGA registers are undocumented
and all different.  The mysterious nature of SVGA registers
appears to be mostly myth.  Since the registers on a VGA
can all be read, it is fairly simple to write a program to
discover what to put in the registers for any given video
mode.

For an example of how this can be used to implement VGA mode-
switching in protected mode, take a look at the Minix port of
the MGR window system.  On bellcore.com, in /pub/mgr/minix,
you will find the latest version of the Minix port of MGR.
The vgaregs.zip file contains an MSDOS program that can be
used to read the VGA registers.  The videodef.h file is a 
sample of what's produced by vgaregs.  To switch to a different
mode, one simply blasts the appropriate set of values into the
registers.  (Well, it may not be quite that simple, but you
get the point.)  The number of people actually running MGR
under Minix is probably still fairly small, but I've seen
reports of success from several people and no reports of VGA
incompatibility.  I run MGR in 800x600x2 mode on my no-name
clone SVGA, and have had no problems.

In the Minix VGA implementation, there are four special files
in /dev corresponding to text mode and three graphics modes.
/dev/screen is a link to the graphics device to use for MGR.
Two programs, tmode and gmode, are used to set either text
mode or the graphics mode selected by /dev/screen.  Linux
wouldn't have to limit the choices like this.

So, no further SVGA documentation is needed.  All that's needed
is someone with the time to spend pounding out the code.  That,
unfortunately, lets me out.  :-(

Paul Allen
Paul.Allen@atc.boeing.com

------------------------------

From: rahardj@ccu.umanitoba.ca (Budi Rahardjo)
Subject: Re: Floppy device #'s?
Date: 18 Mar 92 03:14:46 GMT

adam@owlnet.rice.edu (Adam Justin Thornton) writes:
...
>Anyway, I was wondering if someone could please tell me the device numbers I
>need for a 720K 3-1/2" a: drive and a 360K 5-1/4" b: drive (they're really HD
>drives, but I'd like to be able to use my older DD disks with 'em).

From the FAQ:

Major = 2
Minor = drive + 4*type,  drive=0,1,2,3 for A,B,C,D

type:
        1: 360kb in 360kb drive
        2: 1.2M in 1.2M drive
        3: 360k in 720k/1.44M drive
        4: 720k in 720k/1.44M drive
        5: 360k in 1.2M
        6: 720k in 1.2M
        7: 1.44M in 1.44M

-- budi
-- 
Budi Rahardjo <rahardj@ccu.umanitoba.ca>
Unix Support - Computer Services - University of Manitoba

------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: Transferring stuff to Linux
Reply-To: paula@atc.boeing.com
Date: Wed, 18 Mar 1992 05:00:18 GMT

There's been some discussion lately about difficulties some
are having with moving files from the net into Linux.  I've
developed a mechanism for doing this for Minix, and it works
just as well under Linux.

I consider the floppies that I use to move stuff from the net
into Minix or Linux to be my archive backup.  They are formatted
with DOS filesystems and contain one large uncompressed tarfile
each.  When I've got a bunch of stuff to transfer, I tar the whole
mess up in one big tarfile and break it into smaller independent
tarfiles that can fit on a floppy.  An early version of the program
I use to split tarfiles was posted to comp.sources.unix (years
ago when Rich $alz was the moderator).  If there's interest, I
can package it up and post my current version here.  Once I've
got my data in floppy-sized tarfiles, I use one of several means
to write them onto DOS floppies and then carry them home.  To read
stuff off of one of these floppies, I don't need rawrite or mtools.
A simple "tar -x -i -f /dev/fd0" does the trick.  (The -i flag
means "ignore stuff that doesn't look like a tarfile".)  When I've
got what I need off of a floppy, it goes back in a storage box
to await future use or a final determination that its contents
are so old that it can be scratched.  

Note that "tar -i" can handle multiple tarfiles on one floppy.
You need to take care, however, to ensure that they are written
one after the other onto a freshly-formatted diskette.  This
will give DOS no opportunity to scramble the blocks in the tarfiles.

Paul Allen
paul.allen@atc.boeing.com
...!uw-beaver!bcsaic!paul.allen




------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
