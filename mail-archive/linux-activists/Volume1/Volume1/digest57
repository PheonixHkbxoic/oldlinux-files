From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Wed, 19 Feb 92 08:45:16 EST
Subject:  Linux-Activists Digest #57

Linux-Activists Digest #57, Volume #1            Wed, 19 Feb 92 08:45:16 EST

Contents:
  Boot problem (/morgen/sagen)
  CFV comp.os.linux soon? (jeff bell)
  Kernal panic:  trying to free free page (Joel M. Hoffman)
  Re: Kernal panic:  trying to free free page (Joel M. Hoffman)
  Re: MGR, anyone? (Paul Allen)
  Re: Symbolic links to DOS filesystem?? (Manolis Tsangaris)
  CFV:  comp.os.linux (Ari Lemmke)
  Re: More questions about Linux :-) (Douglas E. Quale)
  Re: More questions about Linux :-) (D.Bolla)
  Re: More questions about Linux :-) (Tommy Thorn)
  Re: ptrace (Robert Blum)

----------------------------------------------------------------------------

From: msagen@autobahn.ardfa.calpoly.edu (/morgen/sagen)
Subject: Boot problem
Date: 18 Feb 92 23:48:13 GMT


Ok.

I got the boot-image and root-image (v0.12) on 1.4's using rawrite, then
tried to boot, and I got this far:

  Loading.........................

  Press <RETURN> to see SVGA-modes available or any other key to continue.

Well, no matter which key I hit after that, my machine reboots.  Anyone had
this problem?  (386, 20 Mhz, 2 Meg, Genoa 6400 Video)

Thanks in advance,

Morgen


-- 
===================================================================^^^^==^^^^==
==================================================================^^=^^=^^=^^==
=================================================================^^==^^^^==^^==
================================================================^^===^^^===^^==

------------------------------

From: jeff@sousa.ltn.dec.com (jeff bell)
Subject: CFV comp.os.linux soon?
Date: 19 Feb 92 01:03:01 GMT


It's been almost a month since the RFD.
Who's going to issue a CFV this friday?

We've settled on comp.os.linux as the name of the newsgroup, right?

-- 
-Jeff Bell                    "I guess that's why they call it code."
 jbell@danger.enet.dec.dom

------------------------------

From: joel@wam.umd.edu (Joel M. Hoffman)
Subject: Kernal panic:  trying to free free page
Date: Wed, 19 Feb 1992 03:03:26 GMT


Linux just died on me, with the message:

        Kernal panic:  trying to free free page

I have 2M and 5M of swap space.  I was running GCC, and trying to
login on another TC. (I've installed poe's login stuff.)

-Joel

------------------------------

From: joel@wam.umd.edu (Joel M. Hoffman)
Subject: Re: Kernal panic:  trying to free free page
Date: Wed, 19 Feb 1992 03:04:47 GMT

In article <1992Feb19.030326.23736@wam.umd.edu> joel@wam.umd.edu (Joel M. Hoffman) writes:
>
>Linux just died on me, with the message:
>
>       Kernal panic:  trying to free free page
>
>I have 2M and 5M of swap space.  I was running GCC, and trying to
>login on another TC. (I've installed poe's login stuff.)
                  ^^^<--- VC, that is.  virtual console.
>
>-Joel



------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: Re: MGR, anyone?
Reply-To: paula@atc.boeing.com
Date: Wed, 19 Feb 1992 03:45:23 GMT

In digest #56, badger@cat59.cs.wisc.edu (Jonathan Badger) wrote:

|With all the excitement over planned ports of X11 to Linux, has anyone
|given a thought to porting the excellent MGR windowing system? It's much
|less taxing in disk space and memory than X, and should be much easier to 
|port, too - although not so easy that I could do it, I'm afraid :)

Well, I've given it a thought.  MGR already runs under Minix on
386's, thanks to Thomas Heller and Dan McCracken.  I spent the weekend
installing Dan's latest version on my Minix machine, and it's fairly
nice.  It needs pty's, process groups, non-blocking tty reads, and
a console driver that can be switched into graphics mode.  At the rate
the X go-getters are racing ahead, someone will have a workable graphics
driver soon.  Linux already has the other stuff, I think.  So, it'll
be a simple matter of plugging together the pieces and getting it all
to run, right?  :-)

Although I would really like to have access to the huge amount of X
software that's out there, I really think that MGR is much better suited
to a small machine like a 386/486.  X is OK if you've got 20 MIPs to
burn and hardware graphics accelleration.  On a plain VGA, it's gonna
look pretty sad.

Paul Allen
pallen@atc.boeing.com

------------------------------

From: mt@cleo.cs.wisc.edu (Manolis Tsangaris)
Subject: Re: Symbolic links to DOS filesystem??
Date: 19 Feb 92 03:18:59 GMT

cjeffery@optima.UUCP (Clinton Jeffery) writes:

        >How hard would it be to let symbolic links refer to piped commands, e.g
        >ln -s "|mtype c:/tex/fonts/foo.pk" foo.pk

        >The "|" character is supposed to tell the filesystem what to do with this
        >kind of link when it gets opened, disallow certain file modes, etc.
        >This would give a fairly crude DOS access as a trivial side effect of a
        >more general mechanism.  Of course, I am not offering to implement it...
        >not until I have a Linux system... ;-)

Such a facility exists in experimental OS (like the Sprite OS at Berkeley),
but does not have to be kernel supported.
It can be easily implemented using the fifo program posted in alt.sources.
The idea is that foo.pk is really a FIFO (named pipe a la System V)
that causes the process that opens it to block. A server process monitors
foo.pk and supplies its contents when a reader is present, thereby unblocking
the process.

For example, to cause the current date/time appear in the finger .plan file
you can just say:
        fifo ~/.plan date &

The topic of file naming and semantics is very interesting,
but further discussion probably belongs to comp.unix.internals.


--mt 
+-------------------------------+-------------------------------------------+
|Manolis M. Tsangaris           |Email:  mt@cs.wisc.edu, uunet!uwvax!mt     |
|Computer Sciences Department   |Phone: +608 262 6624,+608 231 1058         |
|University of Wisconsin-Madison|Fax:   +608 262 9777                       |
+-------------------------------+-------------------------------------------+

------------------------------

From: arl@sauna.cs.hut.fi (Ari Lemmke)
Crossposted-To: news.announce.newgroups,news.groups,comp.os.minix,comp.os.misc,comp.unix.sysv386
Subject: CFV:  comp.os.linux
Date: 19 Feb 92 06:20:19 GMT

This is first Call For Votes to create newsgroup comp.os.linux

HOW TO VOTE:
============

        To vote  YES  ,send e-mail to:

                linux-yes@bloom-beacon.mit.edu


        To vote   NO  ,send e-mail to:

                linux-no@bloom-beacon.mit.edu



VOTING PERIOD:
==============

        The voting period starts now and will last
        through 00:00 UTC (7:00pm EST), 19 March 1992.



==============================AND HERE'S COPY OF THE RFD:comp.os.linux===

Request for Discussion
======= === ==========

GROUP:  comp.os.linux

STATUS: unmoderated

PURPOSE:

        Linux-related discussion: Linux kernel hacking, porting utilities
         to Linux, Linux bug-fixes, and implementing new features in Linux.

======================

What's Linux ?

Linux is a UNIX clone, which currently runs only on 386/486 machines.
Linux is freely distributable (within rules in the Linux copyright)
and available with the complete source code.


Why comp.os.linux ?

Our mailing list has now far too much traffic, which has caused some
unsubscribtions, but still we have ~400 subscribers (and ~10 mailing
lists) - which is really too big, because list users activity is
real high.


What happens to Linux-activists mailing list?

There will be a News <-> Mail Digest gateway for people people who do
not have access to Usenet, much like the comp.lang.perl <->
Perl-Users@fuggles.acc.Virginia.edu mailing list.  It is anticipated,
however, that the vast majority of the Linux community will be using
the comp.os.linux newsgroup.


When will voting begin ?

Voting will begin on Februrary 18th, one month after the posting of
this Call for Discussion.  Theodore Ts'o (tytso@athena.mit.edu) will
serve as vote collector; the exact address and voting procedures will
be contained in the Call For Votes when it is issued. The usual
requirements (2/3 of the votes in favor, and at least 100 more YES
votes than NO votes) will apply.


        arl             // arl@hut.fi, Ari Lemmke


==================================================

LINUX INFORMATION SHEET
by Robert Blum (blum@cip-s01.informatik.rwth-aachen.de) et al.
(last updated 13 Jan 1992)

1. WHAT IS LINUX
    LINUX 0.12 is a freely distributable UNIX clone.  It implements a
subset of System V and POSIX functionality.  LINUX has been written
>from scratch, and therefore does not contain any AT&T or MINIX
code--not in the kernel, the compiler, the utilities, or the libraries.
For this reason it can be made available with the complete source code
via anonymous FTP.  LINUX runs only on 386/486 AT-bus machines; porting
to non-Intel architectures is likely to be difficult, as the kernel
makes extensive use of 386 memory management and task primitives.

     Version 0.12 is still a beta release, but it already provides much
of the functionality of a System V.3 kernel.  For example, various
users have been able to port programs such as bison/flex without having
to modify code at all.  Another indication of its maturity is that
it is now possible to do LINUX kernel development using LINUX itself 
and freely-available programming tools.

2. LINUX features
  - System call compatible with a subset of System V and POSIX
  - Full multiprogramming (multiple programs can run at once)
  - Memory paging with copy-on-write
  - Demand loading of executables
  - Page sharing of executables
  - Virtual memory: swapping to disk when out of RAM
  - POSIX job control
  - virtual consoles on EGA/VGA screens
  - pty's
  - some 387-emulation
  - ANSI compliant C compiler (gcc)
  - A complete set of compiler writing tools
    (bison as yacc-replacement, flex as lex replacement)
  - The GNU 'Bourne again' shell (bash)
  - Micro emacs
  - most utilities you need for development
    (cat, cp, kermit, ls, make, etc.)
  - Over 200 library procedures (atoi, fork, malloc, read, stdio, etc.)
  - Currently 4 national keyboards: Finnish/US/German/French
  - Full source code (in C) for the OS is freely distributable
  - Full source code of the tools can be gotten from many anonymous ftp sites
    (Almost the entire suite of GNU programs has been ported to Linux.)
  - Runs in protected mode on 386 and above
  - Support for extended memory up to 16M on 386 and above
  - RS-232 serial line support with terminal emulation, kermit, zmodem, etc.
  - Supports the real time clock


3. HARDWARE REQUIRED
   - A 386 or 486 machine with an AT-bus.  (EISA will probably work, also,
     but you will need an AT-bus hard disk controller.)
     Both DX and SX processors will work.
   - A hard disk implementing the standard AT hard disk interface--
     for example, an IDE drive.  SCSI drives are not supported yet.
   - A high-density disk drive--either 5.25" (1.2MB) or 3.5" (1.44MB).
   - At least 2 megabytes of RAM.  (LINUX will boot in 2 Mb.  To use
     gcc 4 MB is a good idea.)
   - Any video card of the following: Hercules,CGA,EGA,VGA

In addition, LINUX supports
   - Up to two serial lines
   - A real time clock 

4. PARTIAL LIST OF UTILITIES INCLUDED IN OR AVAILABLE FOR LINUX 0.12 
   - The MTOOLS package (reading/writing to DOS filesystems)
   - The complete GNU filetools (ls, cat, cp, mv, ...)
   - The GNU C compiler with GNU assembler, linker, ar, ...
   - bison
   - flex
   - rcs
   - pmake (BSD 4.3 Reno/BSD 4.4  make)
   - kermit
   - Micro emacs
   - less
   - mkfs
   - fsck
   - mount/umount


5. LINUX BINARIES
    The LINUX binaries and sources are available at three
    anonymous FTP sites. These are:

    nic.funet.fi:/pub/OS/Linux
    tsx-11.mit.edu:/pub/linux
    tupac-amaru.informatik.rwth-aachen.de:/pub/msdos/replace


6. LEGAL STATUS OF LINUX
     Although LINUX is  supplied with the  complete source  code, it is
copyrighted software.  Unlike MINIX, however, it is available for free,
provided  you obey  to the  rules specified  in  the  LINUX  copyright.


7. NEWS ABOUT LINUX
     Since LINUX's  introduction to the public there has been a rapidly
growing mailing list, "linux-activists@niksula.hut.fi". To subscribe to 
this  list,  mail to  "linux-activists-request@niksula.hut.fi".  If the
traffic in this lists increases  further, there are  plans to swap ( at 
least partially ) over  to comp.os.misc, so  watch out  for  any  LINUX 
articles in  this group.  For the current status of LINUX, do "finger
torvalds@kruuna.helsinki.fi".


8. FUTURE PLANS
     Work is underway on LINUX version 1.0, which will close some of the
gaps in the present implementation.  Various people are currently working
on:
     - A virtual filesystem layer 
     - STREAMS 
     - init/getty/login
     - Interprocess communication
     - IEEE POSIX P1003.1 / P1003.2 compatibility
     - SCSI support

If you want to help, join the mailing list.

------------------------------

From: quale@saavik.cs.wisc.edu (Douglas E. Quale)
Subject: Re: More questions about Linux :-)
Date: 19 Feb 92 05:38:49 GMT

In article <1992Feb16.201353.27740@ni.umd.edu> louie@sayshell.umd.edu (Louis A. Mamakos) writes:
>
>There is not, almost by definition, any "compatibility" issues with
>/dev/kmem unless the kernel structures are identical.  What use is it
>to open /dev/kmem and suck up the proc structure when its not at all
>what the user program expects?
>
>I agree 100% with Chuck; having written programs that have to grovel
>around in kernel memory, I'd prefer to have a well defined interface
>to return the information that I need.  I certainly don't WANT to use
>/dev/kmem in my programs; I just have no other choice.  That means on


Yes, and exactly what *is* that well defined interface?  I've followed
this discussion for a while now, and noone has mentioned that /dev/kmem
actually has a lot of advantages over added system calls.  If you decide
to collect different stats from the kernel, with /dev/kmem you just
recompile ps to read out different stuff.  Using system calls can require
rewriting the kernel to get what you want, either adding a new system call
or changing an old one in an incompatible way -- and then you still have to
recompile ps.  This is even more work.  And remember, ps isn't the only
program that we're discussing here.  We might want netstat and vmstat and
probably others I'm not familiar with.

As to Charles Hedrick's comment that modern Unices are moving away from
reading special files towards adding more system calls:  Well, that's
debatable.  As a counterexample, consider /dev/proc vs the extremely
bletcherous ptrace system call.

Are there any Unices that actually use a system call to implement ps?
If not then I think that we might want to very carefully consider why.

--
Doug Quale
quale@saavik.cs.wisc.edu

------------------------------

From: db1@ukc.ac.uk (D.Bolla)
Subject: Re: More questions about Linux :-)
Date: 19 Feb 92 09:14:02 GMT
Reply-To: db1@ukc.ac.uk (D.Bolla)

In article <Feb.18.17.00.08.1992.9913@dumas.rutgers.edu> hedrick@dumas.rutgers.edu (Charles Hedrick) writes:
>There's no objection to /dev/kmem per se.  It's useful to be able to
>run a debugger against the running system, for example.  My problem is
The debugger is just one of the useful things... 

>with using it for "ps" and other programs like that.  I object to
>having application programs have to know the internal data structures
>of the kernel.  It's true that this could be implemented in a library.

Yes the library, no code in kernel, no malloc from inside kernel, no
possibility to code kernel bugs....

>You could read /dev/kmem, but have the library know about the data
>structures.  Thus when you change kernels, all you'd have to change
>would be the library, not all the application programs.  In theory I'd
>accept this.  But I have two warnings (1) you're talking about more
>than Sun's libkvm.  Libkvm handles certain data structures, but by no
Yes I agree in full !
The idea is this :

Think what you want from the kernel to do a ps in a "portable" way.

I mean what functions you need and what parameters they need what results
they return. DEFINE THEM and submit the draft. Once most of the people like
them, add bits missing and so on, then you code the library !

-> The point is that you retain flexibility in the sense that if one user has
special needs (Wery special) he can always use /dev/kmem.
-> You have a SAFER kernel since if you make an error in the library the worse
that happens is that ps dies :-)
-> You don't have the problem of allocating user memory from the kernel and
in general allocate memory from kernel (You need memory to return a list of
processes )
-> The average user can safely play with the libary without being worried
to crash the machine !

The most important point to me is that we NEED a STABLE kernel. Less things
that are in the kernel less the probability to have errors.

>means all of those used by common applications.  Thus many kmem
>readers are still dependent upon kernel variable names and data
>structures (2) this would require sharable libraries, which is itself
>a fairly complex facility.  I like sharable libraries conceptually,

As I said earlier.... it all depends of what the library does.
And, do not forget that linux distribute the source code of everything.
There is really no problem in recompiling ps.c with a new library :-)
( Until we have shared libraries )

>and they're useful under SunOS.  But it's by no means clear to me
>that they are necessary for a small system like linux.

Well...... not now maybe, but for shure they are useful with X11 :-)
( To save disk space !!! )

Damiano

------------------------------

From: tthorn@daimi.aau.dk (Tommy Thorn)
Subject: Re: More questions about Linux :-)
Date: 19 Feb 92 07:48:31 GMT

hedrick@dumas.rutgers.edu (Charles Hedrick) writes:

>and they're useful under SunOS.  But it's by no means clear to me
>that they are necessary for a small system like linux.

No only necessary, they are also comming, but nut in 0.13 I'm afraid.

When we get X11R5 (in a few days, I hope:-), you'll be ready be bed for
shared libraries.

Would everybody please stop calling Linux *a small system*. It's small
yes, but already very complete, and I hope see several more things yet, like:

- FFS (ho ho, my baby)
- shared memory
- mmap
- sockets
- semaphore
- X11R5
- UUCP
- GDB (ptrace)
- Networking
  o IP/TCP, NFS

I think most of it will come eventually, just because people need/miss it.

/Tommy

--
/Tommy Thorn, another LPF member. Terminate software patents.
Join The League for Programming Freedom, mail league@prep.ai.mit.edu.
Are *you* sure that *your* program isn't already covered by patents?

------------------------------

From: blum@rama.informatik.rwth-aachen.de (Robert Blum)
Subject: Re: ptrace
Date: 19 Feb 92 12:35:13 GMT

dirkst@balmuff.informatik.rwth-aachen.de (Dirk Steinberg) writes:

>Hi folks,
Hi Dirk!

>I really need a gdb (prerequisite: ptrace) for linux. Do you
>have anything that is usable? If so, please tell me, even if 
>it's not perfect yet and requires some hacking. I have the
>gdb-4.4 sources, but I am lacking ptrace (). Any pointers,
>especially ftp locations are welcome.
ptrace probably will be in 0.13 (aka 0.95? Linus?)
If you are searching for syscalls, always try a
finger torvalds@kruuna.helsinki.fi, this will give you some info
what to expect in the next release. And he did state ptrace will
be there, so the best is probably to wait and see....

Robert Blum
   

-- 
UNIX should not be able to be crashed from user space.
Crashes belong in the kernel! (paul@actrix.gen.nz)

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
