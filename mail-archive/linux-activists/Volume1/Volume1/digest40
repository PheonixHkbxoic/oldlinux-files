From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Thu, 6 Feb 92 23:30:13 EST
Subject:  Linux-Activists Digest #40

Linux-Activists Digest #40, Volume #1             Thu, 6 Feb 92 23:30:13 EST

Contents:
  Re: X11 and gdbm (Hongjiu Lu -- Graduate Student)
  pipes (Lawrence C. Foard)
  Re: References for info on 386 and AT architecture. (Paul Allen)
  Kludge-Omatic-Timers in kernel (Drew Eckhardt)
  gdbm, file lock, gcc -O and alloca () (hlu@eecs.wsu.edu)
  Re: Elm and sprintf again (Hongjiu Lu -- Graduate Student)
  IPC works : ) (Lawrence C. Foard)

----------------------------------------------------------------------------

From: hlu@yoda.eecs.wsu.edu (Hongjiu Lu -- Graduate Student)
Subject: Re: X11 and gdbm
Reply-To: hlu@yoda.eecs.wsu.edu (Hongjiu Lu -- Graduate Student)
Date: Thu, 6 Feb 1992 06:52:55 GMT

| 
| It looks like X386 requires the gnu dbm gdbm.  Someone want to port
| it to linux?
| 

I can take a look at it.

| Also, X386 seems to have code for the ATI 18800/28800.  Turns out
| mine is an 18800 (ATI VGA Wonder).  Is this code working or is
| it just there for show?
| 
| The word seems to be that X11 R5 has most of this same code as X386 (R4)
| but that mit replaced the assembler with 'C' causing a substantial
| loss of performance.  Thus, it looks like R4 may be the way to go,
| 

Depends on what VGA cards. According to the author of SpeedUp for R5,
which is for ET4000 only and has a fixed resolution, it is 30% - 80%
than R4.


H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: pipes
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Thu, 6 Feb 1992 08:18:40 GMT


For one way pipes I think I greatly prefer the old Linux way to the standard,
with one way pipes all you care about is the fact that the data will get from
one end to the other. Completely satisfying reads accomplishs this with the
least overhead, not to mention that it allows you to use read rather than
fread reliably.

NOS: 
 I thought someone said that it was restricted to educational use or something
like that? 

Another problem I have with using NOS, I really think network support has to
go in the kernel, there are just to many things that require TCP/IP to be fast
(X,NFS,etc.). Many other things should run as user processes but I think file
systems (except for specialized ones), device drivers and networking really
need to stay in the kernel. Eventhough Tanenbom (sp?) flamed Linux for the
monolithic kernel the real effect is that people switching from Minix to Linux
have seen large speed ups.  

VFS:
 Will this help to resolve the problems of having to update a number of tables
when adding a new device? The BSD file system code seems to have a somewhat
"object oriented" design where the file table contains function pointers.

------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: Re: References for info on 386 and AT architecture.
Reply-To: paula@atc.boeing.com
Date: Thu, 6 Feb 1992 18:23:23 GMT


gessel@cs.swarthmore.edu (Daniel Mark Gessel) asked:
|Can anybody list some good books on system level programming for the
|386 and AT architecture?

The standard reference for 386 programming is Crawford & Gelsinger's
book "Programming the 80386".  If I remember the story correctly,
Crawford was on the microcode team and has his initials inscribed
on the 386 masks.  Gelsinger was a senior member of the design team.
Chief architect, or something like that.  These guys know what they're
talking about, and (IMHO) do a good job doing it.

Paul Allen


------------------------------

From: drew@hazelrah.Colorado.EDU (Drew Eckhardt)
Subject: Kludge-Omatic-Timers in kernel
Date: Thu, 6 Feb 1992 00:38:38 GMT

There is an add_timer routine in the scheduler sched.c.  Unfortunately,
in the real world this is no good, as you can only get your function called
when the timer EXPIRES.  In reality, you want to be able to abort it 
at any time, or even adjust it.  

So, to work around this, floppy disk, hard disk, console code are alll 
in sched.c.  And now I've got scsi code in there too :-(

This is really a thorn in the side of code isolation, and should be changed.
as is, 
1.  Isolation is becoming poor, and it just looks nasty ;^)
2.  Patch conflicts can arise from the lack of isolation - it's better to 
        just drop the new device driver into place, and change as 
        few files as possible, eventually only a config file.

I propose a slight change in the interface :

The add timer function works basically the same, only 
1.  There is an int * to the REAL counter, so that <I> can adjust it and        
        not have to put my code in the kernel.
2.  Attomic abort/adjust  macros are present 
        ie : 
        #define adjust_timer(timer,newval) cli(); (timer) = (newval); sti()

4.  Existing out of place code is moved from sched.c back to where 
        it belongs, and uses the new interface (exactly what it was 
        kludged to do in the first place) 


------------------------------

From: hlu@eecs.wsu.edu
Subject: gdbm, file lock, gcc -O and alloca ()
Reply-To: hlu@eecs.wsu.edu
Date: Thu, 6 Feb 1992 20:21:46 GMT

Hi,

When I was compiliing gdbm, I noticed that gdbm requires file lock to
use, which I think is missing from Linux 0.12. Is that going to be
added soon?

Another thing about inlines, I couldn't use -O on dbminit.c without
modifying it. It turned out there are two lines in that file

        xxx = alloca (strlen (foo) + 5);
        yyy = alloca (strlen (foo) + 5);

Here alloca is substituted by __builtin_alloca. In Linux, strlen ()
is implemented as inline. That is the problem when -O is used. I have
to change it to

        int bar;

        bar = strlen (foo) + 5;
        xxx = alloca (bar);
        yyy = alloca (bar);

I remembered someone complained about -O, alloca () and regex.c. Are
they the same one?


H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: Hongjiu Lu -- Graduate Student <hlu@coea.wsu.edu>
Subject: Re: Elm and sprintf again
Reply-To: hlu@coea.wsu.edu
Date: Thu, 6 Feb 1992 20:37:50 GMT

| 
| Hai,
| 
| Some time ago someone metioned the sprintf bug in the estdio-lib.
| I didn't really care until I tried to compile elm2.3 under linux, and
| yes elm uses sprintf(me,"%s%s%s", me,me,some) quite often.
| 
| Changing elm was more work then changing estdio, so here is my diff
| to solve the sprintf (and vsprintf) problem. All that is needed, is
| using an extra buffer in vsprintf and voila, the problem has vanished.
| 
| Apply the following diff to vsprintf.c in lib/estdio and it should all
| work out alright. There is only one caveat. The buffer in which all the
| stuff is printed, is only 1k. I couldn't think of any other smart 
| alternative in which one could malloc just wat is needed.
| 
| And after this bug fix, compiling elm is real easy. It runs like heaven.
| 
| Edvard
| --
| Edvard Tuinder                                        v892231@si.hhs.NL

There are many more bugs in estdio. A new gcc and a set of libraries
will come out soon. They are supposed to fix all those problems by
getting rid of estdio. If you are interested in alpha/beta testing,
please let me know.


H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: IPC works : )
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Fri, 7 Feb 1992 01:05:20 GMT


I've got the named "tubes" working. Now I just need to do the listen ioctl
call and make them work with select and they will be ready to use for
communication with servers. Hopefully this will be all set sometime this
weekend, I'm going to try compiling a mud to make sure I haven't missed
any serious bugs, and then put the patch up for ftping. These should be
substantially easier to use than sockets because blocking I/O can be
done with no special stuff (open,read,write).

A cheap and sleazy printer demon:

demon:
tpair /tmp/printer /tmp/myend
chmod go-rwx /tmp/myend
while true
do
cat /tmp/myend >/dev/lp
done

lpr:
cat $0 >/tmp/printer &

The demons cat will block until someone writes to /tmp/printer, other people
attempting to write will block until cat finishes and opens it again. Several
of these scripts could also run at once and printouts would be distributed
amongst the several printers.  

You can also "pin" a file handle to a file so that someone else can get it by
opening the file. For example:

tar -cf - include | pinin /tmp/include.tar
someone else can then do:
tar -xf /tmp/include.tar
and end up having the second tar reading the piped output from the first.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
