From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Fri, 6 Mar 92 12:15:28 EST
Subject:  Linux-Activists Digest #85

Linux-Activists Digest #85, Volume #1             Fri, 6 Mar 92 12:15:28 EST

Contents:
  Re: Running linux in < 500kB (Matthew McDonald)
  Installation troubles with Linux (Erik Talvola)
  Re: tty_io.c (Ian Wells)
  Virtual Consoles (Rob J. Nauta)
  Re: Running linux in < 500kB (Rob J. Nauta)
  Re: Running linux in < 500kB (Rick Kelly)
  Re: Running linux in < 500kB (Drew Eckhardt)
  Re: Running linux in < 500kB (Drew Eckhardt)
  Re: Installation troubles with Linux (Drew Eckhardt)
  Reboot patch (Drew Eckhardt)
  Re: Running linux in < 500kB (Michael Haardt)
  Ethernet drivers (Paul Richards)
  Re: Reboot patch (R. Ramesh)

----------------------------------------------------------------------------

From: matthew@cs.uq.oz.au (Matthew McDonald)
Subject: Re: Running linux in < 500kB
Date: 6 Mar 92 01:33:41 GMT
Reply-To: matthew@cs.uq.oz.au

rmk@rmkhome.UUCP (Rick Kelly) writes:
[...]
>Back in 1981 there was a UNIX clone that ran on the 8088 called Coherent.
>A guy named Andrew Tannenbaum decided that he wanted to develop a UNIX-like
>os for teaching purposes.  The development platform was Coherent.  In 1991
>a guy named Linus Torvald decided he was sick of Minix and wrote Linux using
>Minix as the development platform.  At some point, someone will decide that
>they can write a much better kernel than Linux.  And they will use Linux as
>the development platform.

        I'm pretty sure minix was actually developed using PCIX, which
was IBM's (?) version of unix for the PC. I was under the impression that
Coherent had only come out in the last few years.

Matthew.

------------------------------

From: talvola@qin.Berkeley.EDU (Erik Talvola)
Subject: Installation troubles with Linux
Date: 6 Mar 92 01:34:13 GMT

I am just trying to install Linux.  I have 3 partitions which look like this
with Norton:

System  Boot  Side  Cylinder  Sector  Side  Cylinder  Sector  Sectors  Sectors
==============================================================================
BIGDOS  Yes    1       0         1     15     303       38      38     184794
XENIX   No     0      304        1     15     506       38     184932  123424
?       No     0      507        1     15     681       38     308256  106400

Which seems fine.  Also, Linux was able to mkfs the "XENIX" partition, and
I could mount it.  But, when I tried to patch the boot image and reboot, I
got:

Partition table ok.
Unable to read swap device.
Trying to read nonexistent block-device.
Kernel panic:  Unable to mount root.

Did I patch the wrong bytes?

Here are the bytes I patched:

1f8: 00 00 00 04 03 00 55 AA

I figured the AA was the 512th byte.  /dev/hd4 is the correct device, because
I mounted it as that.  Anyway, any help would be appreciated.

--
+----------------------------+
! Erik Talvola               | "It's just what we need... a colossal negative 
! talvola@qin.berkeley.edu   | space wedgie of great power coming right at us
! ...!ucbvax!qin!talvola     | at warp speed." -- Star Drek

------------------------------

From: ijw11@phx.cam.ac.uk (Ian Wells)
Subject: Re: tty_io.c
Date: 5 Mar 92 23:41:31 GMT

In article <GAMADRID.92Mar5082559@podge.mit.edu> gamadrid@athena.mit.edu (George A Madrid) writes:

   Hi there.

Hello.

   I've made the mistake of sticking my nose somewhere where perhaps it doesn't
   belong.  I want the ALT key to work inside of Emacs.  My fingers have learned
   that the ALT key will work where Linux wants me to press ESC.  Quite
   frustrating.  

I find that (setq meta-flag t) works quite well, personally.

   So Ted suggested to me that I try adding a flag to the tty driver to select
   whether 8-bit characters were sent through unfiltered, or preceded by an ESC.
   This would make Emacs (and me) happy.

One point about this.  This is, I assume, why we English can't get a pound sign
onscreen no matter how we mess about with our keyboards.  Unless anyone comes
up with a better suggestion, I may well try putting in code to map <Shift-3>
onto an escape sequence, such as <ESC-#> or something, that emacs, can then
translate into a pound in the buffer (with some elisp code).

Which reminds me, has an English keyboard driver gone into 0.13?  If not, I
can produce a patch - although it's about half English, half American, with
2 ways to get # and ~ (I find it easier that way, and it saves finding ways to
get the 2 extended-ASCII characters through the keyboard mechanism).

Also with reference to the keyboard driver, I find that if I try and type ahead
as the machine is booting up (after the SVGA choosing, before the prompt) it
tends to lock the keyboard up.  It's mildly annoying, but not particularly
urgent, but any cures are welcome.

------------------------------

From: rob@wzv.win.tue.nl (Rob J. Nauta)
Subject: Virtual Consoles
Date: 5 Mar 92 09:39:42 GMT

Hello
I run Linux 0.12 on a clone 386/33 with an Oak technology VGA card with
256 K, and a multysync-type color monitor. In Windows I can get 800x600
with a driver, and 80x50 lines in DOS, however, Linux doesn't do anything
except 80x25 mode. When booting it says 'hit ENTER to see other video
modes', but whatever I hit, it puts an 'E' top right, and runs 80x25.
What can I do about it ?

Rob

------------------------------

From: rob@wzv.win.tue.nl (Rob J. Nauta)
Subject: Re: Running linux in < 500kB
Date: 5 Mar 92 09:54:42 GMT

In article <1992Mar1.232712.18444@uwm.edu> markh@csd4.csd.uwm.edu (Mark William Hopkins) writes:
|
|   If someone's got the time and inclination, please modify the kernel so that
|it can run in < 500kB RAM.   No UNIX has any business using more than that.
|Maybe better algorithms (that's what Coherent prides itself on, justifiably)
|or something need to be used.  If I have to go out and buy memory extensions,
|then I might as well just save the trip and spend money on a Coherent or the
|like.
|   The idea of free public domain software is to get something that can run on
|most machines without having to spend any money.  Far too many machines are
|being excluded by the 2MB limitation.

Then why do you use Linux then ? it doesn't run on an XT, not even on an
advanced 286 machine... I ran windows 3.0 once on my XT with Hercules, it
works, but is unusable. Systems like Linux really need a fast machine
with lots of RAM, and at $40 per 1-meg simm, it'll be cheap enough for
most people. 
Besides, what are you going to do with Linux with 500 K ? basically you
can only do simple shell-based things. Compiling or running an editor
is out of the question. I once owned Minix 1.5 but after the initial
rush of 'wow, it actually works!' I quickly got very tired of it,
especially since basic 1.5 needs dozens of patches and additional/replacement
programs to really make it useful. that's why I like Linux, because
there's somebody behind it who works on it and makes new versions
available more often than the minix schedule of more than a year (2 years?).

A question: I can't get symlinks to work right. I set up my disk like
a SUN, and recommended like the new BSD 4.3 on uunet in the README:
small / partition, which doesn't contain any executables
large /usr with executables
a /home partition, instead of a /user. 
This way you don't put binaries in /etc, but in /usr/etc.
Also I made /bin a symlink to /usr/bin, but that doesn;'t work.
Apparently symlinks to directories don't work right. Has anyone got
a patch for it ? Will it be fixed in 0.13 ?

Rob

------------------------------

From: rmk@rmkhome.UUCP (Rick Kelly)
Subject: Re: Running linux in < 500kB
Date: 6 Mar 92 03:40:14 GMT
Reply-To: rmk@rmkhome.UUCP (Rick Kelly)

In article <13201@star.cs.vu.nl> kjb@cs.vu.nl (Kees J. Bot) writes:
>rmk@rmkhome.UUCP (Rick Kelly) writes:

>>Back in 1981 there was a UNIX clone that ran on the 8088 called Coherent.
>>A guy named Andrew Tannenbaum decided that he wanted to develop a UNIX-like
>>os for teaching purposes.  The development platform was Coherent.

>Sorry to spoil your fun, Andy used PC-IX.


Could be.  I got my information from somebody at Mark Williams ( developers
of Coherent ).  

The interesting thing about Coherent, is that it is a fairly substantial
package on processors other that 80x86.  There have been versions that run
on 68xxx and Z8001, where it was a full 32 bit OS.  They chose small memory
mode on the 80286 because it is so brain damaged.

Coherent 386 is alive and kicking, and will be here before long.  I will wait
patiently for it, as I use Coherent as a production system.

But I might buy a 386SX system and throw Linux on it.  I just wish that I
didn't have to load MSDROSS first.

-- 

Rick Kelly      rmk@rmkhome.UUCP        unixland!rmkhome!rmk    rmk@frog.UUCP

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Running linux in < 500kB
Date: Fri, 6 Mar 1992 08:02:58 GMT

In article <9203052240.04@rmkhome.UUCP> rmk@rmkhome.UUCP (Rick Kelly) writes:
>
>But I might buy a 386SX system and throw Linux on it.  I just wish that I
>didn't have to load MSDROSS first.
>

You don't have to.  Linux loads the kernel from floppy (Between 150K and 190K
depending on which patches have been applied - so it's not that slow, and 
if you want Shoelace will boot it off a hard disk) and then mounts its       
root file system from wherever.  DOS is no where in the picture.



------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Running linux in < 500kB
Date: 6 Mar 92 08:18:12 GMT

In article <2978@wzv.win.tue.nl> rob@wzv.win.tue.nl (Rob J. Nauta) writes:
>
>A question: I can't get symlinks to work right. I set up my disk like
>a SUN, and recommended like the new BSD 4.3 on uunet in the README:
>small / partition, which doesn't contain any executables
>large /usr with executables
>a /home partition, instead of a /user. 
>This way you don't put binaries in /etc, but in /usr/etc.
>Also I made /bin a symlink to /usr/bin, but that doesn;'t work.
>Apparently symlinks to directories don't work right. Has anyone got
>a patch for it ? Will it be fixed in 0.13 ?
>

symlinks work almost fine.  The only problem with symlinks is that 
they are not followed for the shell interpreter when a #! executable
shell script is exec'd.  Make sure your shells are hard linked to,
or are in the path, specified in #! executable scriptfiles.

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Installation troubles with Linux
Date: Fri, 6 Mar 1992 08:23:05 GMT

In article <TALVOLA.92Mar5203413@qin.Berkeley.EDU> talvola@qin.Berkeley.EDU (Erik Talvola) writes:
>I am just trying to install Linux.  I have 3 partitions which look like this
>with Norton:
>
>System  Boot  Side  Cylinder  Sector  Side  Cylinder  Sector  Sectors  Sectors
>------------------------------------------------------------------------------
>BIGDOS Yes    1       0         1     15     303       38      38     184794
>XENIX   No     0      304        1     15     506       38     184932  123424
>?      No     0      507        1     15     681       38     308256  106400
>
>Which seems fine.  Also, Linux was able to mkfs the "XENIX" partition, and
>I could mount it.  But, when I tried to patch the boot image and reboot, I
>got:
>
>Partition table ok.
>Unable to read swap device.
>Trying to read nonexistent block-device.
>Kernel panic:  Unable to mount root.
>
>Did I patch the wrong bytes?

Yes.

>Here are the bytes I patched:
>
>1f8: 00 00 00 04 03 00 55 AA
>
>I figured the AA was the 512th byte.  /dev/hd4 is the correct device, because
>I mounted it as that.  Anyway, any help would be appreciated.
>

AA is the 512 byte, byt they are numbered from 0 - so it is offset 511.  
You should patch offset 508 - so you would get something like 

1f8: 00 00 00 00 04 03 55 AA


------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Reboot patch
Date: Fri, 6 Mar 1992 08:25:11 GMT

I finally got fed up enough with the reboot code in Linux since day one,
which would never work on my system.  Now, in real mode, or v8086 mode,
a far jump to ffff:0 always worked right, irregardless of A20 or whatever
else was going on, and on every compatable in the world.

This business with the PPI chip, A20, and reset never seemed to work.  So, I 
switched to the real mode method.  What my patch does is disable paging, 
kick it back into real mode, and do a far jump to ffff:0.  

How it works : 

When we switch to real mode, eip may be truncated.  So, _reboot is within
the first 64K (head.s).  reboot in keyboard.S jumps there, while still
in protected mode.  In _reboot,I turn off paging, and protection with a mov to
 CR0, and then now in realmode, I jump to ffff:0 with a real mode far jump.  
That's it.

Here are the cdiffs :

*** head.s      Fri Jan 10 21:50:17 1992
--- head.s+     Fri Mar  6 01:09:04 1992
***************
*** 142,147 ****
--- 142,155 ----
  L6:
        jmp L6                  # main should never return here, but
                                # just in case, we know what happens.
+ .globl _reboot
+ _reboot:
+       cli                     # we don't have a real mode IDT at 0x00000000
+       movl    %cr0, %eax      # get cr0, so we can disable paging and protection
+       andl    $7ffffffe, %eax # disable paging and protection
+       movl    %eax, %cr0
+       .byte   0xea            # real mode far jump
+       .word   0x0000, 0xffff  # to reboot address
  
  /* This is the default interrupt "handler" :-) */
  int_msg:


*** keyboard.S  Fri Mar  6 00:44:03 1992
--- keyboard.S+ Fri Mar  6 00:43:50 1992
***************
*** 659,664 ****
  reboot:
        call kb_wait
        movw $0x1234,0x472      /* don't do memory check */
!       movb $0xfc,%al          /* pulse reset and A20 low */
!       outb %al,$0x64
! die:  jmp die
--- 659,663 ----
  reboot:
        call kb_wait
        movw $0x1234,0x472      /* don't do memory check */
!       jmp _reboot
! 

------------------------------

From: michael@gandalf.informatik.rwth-aachen.de (Michael Haardt)
Subject: Re: Running linux in < 500kB
Date: 5 Mar 92 20:05:30 GMT
Reply-To: u31b3hs@messua.informatik.rwth-aachen.de (Michael Haardt)

From article <9203032238.01@rmkhome.UUCP>, by rmk@rmkhome.UUCP (Rick Kelly):
> Back in 1981 there was a UNIX clone that ran on the 8088 called Coherent.
> A guy named Andrew Tannenbaum decided that he wanted to develop a UNIX-like
> os for teaching purposes.  The development platform was Coherent.  In 1991
> a guy named Linus Torvald decided he was sick of Minix and wrote Linux using
> Minix as the development platform.  At some point, someone will decide that
> they can write a much better kernel than Linux.  And they will use Linux as
> the development platform.
>
> Coherent -> Minix -> Linux -> ?

I am not sure, but I think that PX-IX and (yuk!) MS-DOS were the
development platforms for MINIX.  In earlier times, dos2out was part of
MINIX.  It converted (and still does:) .EXE files in small model to
MINIX a.out format.  The a.out structure is identical to PC-IX.

I will upgrade to Linux next time, when 0.13 is finished and someone
says that swapping on a file works reliable.  I can't afford a new
motherboard and mine has only 2 MB RAM.  My 386 machine was the
successor for my old CP/M machine a few years ago, so don't ask.

Personally, I use MINIX as development platform for transputer stuff,
and I intend to get a much better system with Linux.  I don't need a
small teaching system any longer.  I started playing with my first
transputer a month ago, and I think I will perhaps even write a small OS
for it, based on remote procedure calls ...

Michael

------------------------------

From: spedpr@thor.cf.ac.uk (Paul Richards)
Subject: Ethernet drivers
Date: 6 Mar 92 12:49:23 GMT

I'm looking at implementing an ethernet driver basically because I want
to abandone DOS entirely but I need tcp/ip  connections to my sun.

Now I have a few queries. The simplest way to do this would be to set up
a block driver along the lines of what we have and assign a file name to
the ethernet driver. This wouldn't involve too much work I think. The
only hesitation I have is that this is totally different to the way
things are normally set up. On other systems the ethernet driver is
accessed through the sockets interface and nor the file system (I
think). Do people feel that I should proceed with my first  proposition
or should we go for the second. If we need the second then I need some
info on how what is required. For the moment I will work on the low
level routines to initialise the card etc that will be needed in either
case.

Another alternative would be to use something based on the clarkson
drivers. I'm using those routines to get the low level code in any case.
Maybe we should consider using their interrupt interface and then we can
build whatever stack we wish on top or several as the case may be. This
may be attractive if we want to develop software to talk to novell.
Dunno really, I'm awaiting your thoughts.


-- 
  Paul Richards at Cardiff university, UK.

  spedpr@uk.ac.cf.thor  Internet: spedpr%thor.cf.ac.uk@nsfnet-relay.ac.uk
  UUCP:     spedpr@thor.cf.UUCP or ...!uunet!mcsun!ukc!cf!thor!spedpr
+++

------------------------------

From: ramesh@utdallas.edu (R. Ramesh)
Subject: Re: Reboot patch
Reply-To: ramesh@utdallas.edu
Date: Fri, 6 Mar 1992 16:45:52 GMT

In article <1992Mar6.082511.724@colorado.edu>, drew@cs.colorado.edu (Drew Eckhardt) writes:
|> I finally got fed up enough with the reboot code in Linux since day one,
|> which would never work on my system.  Now, in real mode, or v8086 mode,
|> a far jump to ffff:0 always worked right, irregardless of A20 or whatever
|> else was going on, and on every compatable in the world.
|> 
|> This business with the PPI chip, A20, and reset never seemed to work.  So, I 
|> switched to the real mode method.  What my patch does is disable paging, 
|> kick it back into real mode, and do a far jump to ffff:0.  
|> 
|> How it works : 
|> 
|> When we switch to real mode, eip may be truncated.  So, _reboot is within
|> the first 64K (head.s).  reboot in keyboard.S jumps there, while still
|> in protected mode.  In _reboot,I turn off paging, and protection with a mov to
|>  CR0, and then now in realmode, I jump to ffff:0 with a real mode far jump.  
|> That's it.
|> 
|> Here are the cdiffs :
|> 
|> *** head.s   Fri Jan 10 21:50:17 1992
|> --- head.s+  Fri Mar  6 01:09:04 1992
|> ***************
|> *** 142,147 ****
|> --- 142,155 ----
|>   L6:
|>      jmp L6                  # main should never return here, but
|>                              # just in case, we know what happens.
|> + .globl _reboot
|> + _reboot:
|> +       cli                     # we don't have a real mode IDT at 0x00000000
|> +       movl    %cr0, %eax      # get cr0, so we can disable paging and protection
|> +       andl    $7ffffffe, %eax # disable paging and protection
|> +       movl    %eax, %cr0
|> +       .byte   0xea            # real mode far jump
|> +       .word   0x0000, 0xffff  # to reboot address
|>   
|>   /* This is the default interrupt "handler" :-) */
|>   int_msg:
|> 
|> 
|> *** keyboard.S       Fri Mar  6 00:44:03 1992
|> --- keyboard.S+      Fri Mar  6 00:43:50 1992
|> ***************
|> *** 659,664 ****
|>   reboot:
|>      call kb_wait
|>      movw $0x1234,0x472      /* don't do memory check */
|> !    movb $0xfc,%al          /* pulse reset and A20 low */
|> !    outb %al,$0x64
|> ! die:       jmp die
|> --- 659,663 ----
|>   reboot:
|>      call kb_wait
|>      movw $0x1234,0x472      /* don't do memory check */
|> !    jmp _reboot
|> ! 

Thank much in advance  Drew (I think it should work). I ask all of you who can
to try this code right away. If this works in all cases (I think it should, my
reading of Crawford and Drew's reply to my questions seem to suggest this)
then we can make it a standard in Linux (if not 0.13/0/95 in the next version).

I have a 486/33 from Gateway and I will try this on that machine and report if
there is a problem. I would appreciate if others having different m/c's try
the same. 

Once again thanks Drew.

Ramesh

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
