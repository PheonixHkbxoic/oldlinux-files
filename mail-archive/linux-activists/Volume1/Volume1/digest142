From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Tue, 24 Mar 92 07:45:10 EST
Subject:  Linux-Activists Digest #142

Linux-Activists Digest #142, Volume #1           Tue, 24 Mar 92 07:45:10 EST

Contents:
  Re: Experiences installing 0.95a (Jim Winstead Jr.)
  Re: 386 BSD and linux (Ed Carp)
  Re: GCC 2.0: Features, stability etc ? (Jyrki Kuoppala)
  Re: minor linux 0.95a bugs (Linus Benedict Torvalds)
  bash (GSTD@VTVM2.CC.VT.EDU)
  linux versions of tex, latex and dvips (beta test) available (Peter Williams 8169821)
  Re: making the hard drive root after booting from floppy (Ed Carp)
  Re: Problems with 0.95a (?) (Ian Wells)
  Re: Various Problems.. (Ian Wells)
  Re: making the hard drive root after booting from floppy (Drew Eckhardt)
  Re: /dev names (Ronald S H Khoo)
  Re: Free BSD release: future of Minix/Linux? (Peter Cooper)
  Re: minor linux 0.95a bugs (Mika Matti Jalava)
  Re: Curses library (Zeyd M. Ben-Halim)
  Re: Various Problems.. (Simon Marlow)

----------------------------------------------------------------------------

From: jwinstea@jarthur.claremont.edu (Jim Winstead Jr.)
Subject: Re: Experiences installing 0.95a
Date: Tue, 24 Mar 1992 02:49:34 GMT

In article <kssuptINN7hk@utkcs2.cs.utk.edu> battle@cs.utk.edu (David Battle) writes:
>
>* The installation instructions in /INSTALL on the rootimage disk for 0.95a
>  refers to a file called pfdisk.man.  I was unable to locate this file.

Darn, someone finally caught me on this!  It's not there, so if you
want a copy, either download the pfdisk.tar.Z which I believe can be
found on tsx-11.mit.edu in /pub/linux/sources/sbin, or right around
there.  The man page is included in that.  I also have some directions
that I whipped up explaining 'pfdisk' to someone else - mail me for a
copy, if you'd like to see it.  (This also might make it on the next
root disk, if pfdisk is still around.)

>* The instructions also refer to pboot.exe, which I was unable to locate on
>  any of the FTP servers (it may be there, I just couldn't find it).

It may not be there.  I'll try and upload it to tsx-11.mit.edu - look
for an announcement in alt.os.linux.  (I think you're better off using
something like Norton's Disk Editor, though - pboot is a little
outdated, since it refers to the old /dev/hd* scheme, and is a little
harder to use than it needs to be.)

>* pfdisk prints /dev/hd0 as an example.  This should probably be brought
>  up to date with the /dev/hda style naming.

Good point - I just compiled pfdisk and let it loose, originally - I
didn't look at it much.  I'll see if I can't clean it up a bit (user-
interface wise) a bit before next release.

>* Backspace consistently doesn't work when mounting root on floppy and
>  consistently works when mounting root from hard drive.

That's why it drives me nuts.  I think I may have tracked the bug
down, but I'm not sure.  So, it may or may not be fixed on the next
root-disk release.  :)  Your best bet is to replace 'ash' with bash,
which should be available from tsx-11.mit.edu.

>* Typing ? to more results in a "Can't open help file" error message.
>  I was impressed with the full featured "more" on the root disk, however.

The more help file isn't on the root floppy.  No space, really.  (And
I forgot, 'more' was a last minute addition.)

>* I see Andy Tannenbaum (ast) has an account.

Yeah, that's been there for some time.  I should probably take that
out of /etc/passwd one of these days.  Doesn't hurt anyone, though.

>* What's the "--------dummy line" thing at the end of /etc/passwd?
>  Perhaps the answer is "so dummy's like you will ask"?

Right!  No, seriously, login seems to have some problems reading the
last /etc/passwd entry, so I added those lines.  I don't know what
causes it.

>* I saw an article on comp.unix.bsd telling how to mount a root partition
>  from hard disk over / on a floopy disk.  I tried this on Linux, and it
>  doesn't work.

You're right, it doesn't.  :)  You'd have to ask Linus about this one,
I'm afraid.  (This would be nice, though, although I'm sure it
wouldn't be the most fun to implement.)

>On the whole, an excellent job, though.

We try our best.  :)
-- 
Jim Winstead Jr. (CSci '95)    | "Catch a fish!"
Harvey Mudd College            |  -Geddy Lee,
jwinstea@jarthur.Claremont.EDU |   San Diego Sports Arena
Disclaimer: Mine, not theirs!  |   January 20, 1992

------------------------------

From: erc@Apple.COM (Ed Carp)
Subject: Re: 386 BSD and linux
Date: 24 Mar 92 02:58:09 GMT

In article <zhao.701144787@chilko.ucs.ubc.ca> zhao@unixg.ubc.ca (Jiansheng Zhao) writes:

> I certainly will stay with linux and I am happy with linux 0.95a, thanks
>to Linus and those involved.

I can second that!  I installed 0.95a this afternoon on a 386SX and the
damned thing is so fast it blows me away...damned near as fast as my SPARC
at work... :)

>  I tried 386BSD boot-floppy on three different 386 machines, for two of
>them, drive A: was being read forever, the third one boot and panic
>and automatically re-boot, ...... . 
>  I don't have a math co-processor, and DOS HAS to be on the same dirve.
>  Also, I like bash under linux (alias, history etc.) and virtual console.

I, too, tried the 386BSD route.  I couldn't get it to boot, and I couldn't
get ANY help from the comp.unix.bsd folks, so I just said "screw it" and
ftp'd 0.95a from tsx11.  I only scrogged my HD once :)

I WOULD like to see (1) a way to boot straight from the HD without the floppy
"in the loop", and (2) a kernel in the root directory :)

I'm now in the process of porting Taylor uucp 1.03 beta to 0.95a.
-- 
Ed Carp  N7EKG/6        erc@khijol.UUCP         erc@apple.com
UUWEST Consulting       Cupertino, CA           408/252-5947

-- Absolutely unabashed Gates McFadden groupie! --

------------------------------

From: jkp@cs.HUT.FI (Jyrki Kuoppala)
Subject: Re: GCC 2.0: Features, stability etc ?
Reply-To: jkp@cs.HUT.FI (Jyrki Kuoppala)
Date: Mon, 23 Mar 1992 20:12:34 GMT

In article <19418@castle.ed.ac.uk>, eonu24@castle (I Reid) writes:
>..... what can gcc 2.0 do for me that 1.40 can't

Nested functions and other new extensions, more optimizations, more
helpful error messages, builtins for mem* etc. (not sure if these are
for the 386), better fp support, etc. etc.  Dunno about Linux specifically.

>..... is 2.0 stable (I remeber it being described as barely past alpha)

It's not stable and probably has more bugs than 1.40 which is a
production compiler.  Gcc 2.1 should be coming out RSN, though, with
probably some bugs fixed and some new ones implemented.

>..... anything else you think i should know about it?

It doesn't have linux as a choice in config.sub or configure.  Someone
who is using it for Linux should send the diffs to make ./configure
i386-linux work (or whatever it is) to rms ASAP - minix is a supported
OS in gcc2 and Linux shouldn't be any worse ;-)

//Jyrki

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Re: minor linux 0.95a bugs
Date: 23 Mar 92 20:48:55 GMT

In article <HEIM.92Mar23164350@frieda.informatik.uni-tuebingen.de> heim@frieda.informatik.uni-tuebingen.de (Gerald Heim) writes:
>
> - At boot-time, when I am asked if I wish to select any VGA mode or
>   just press any key to stay at 80x25, I noticed that some keys will
>   keep the system from reading the root-image (i.e. the arrow-down key).

Ok, this is a known bug: it happens with all keys that send 2 keycodes
(the num-pad ENTER, cursor keys etc) and has to do with the fact that
the keyboard controller never gets an accnowledgement for them both, so
it doesn't interrupt when the next keys are pressed - thus linux won't
read the enter (or any other key) when the bootimage has been put in.

I don't know any fast fix: I haven't looked into it. It's probably a
one-line fix, but it's mostly cosmetic..

> - The backspace-problem appears even on a virtual console where backspace
>   worked at first when I log out and try to log in again.

I think this is a problem with ash and the termios interface. ash
probably sets the back-space key to something else than \177. I dunno:
haven't used ash. Get bash, and this (and other problems) will go away
at the cost of some diskspace.

> - One more bug: If I press ScrollLock and stay on the key for a few seconds,
>   I get a few dumps from the process table, then the kernel hangs and
>   prints: [ kernel panic deleted ]

Ok, this is a real bug: the keyboard interrupts happen too fast for all
the information to be printed, and the kernel stack gets overcrowded:
reboot. The easy solution is not to do this, the more complete solution
is to put some kind of lock on the info-key. I'll look into it.

                Linus

------------------------------

From: GSTD@VTVM2.CC.VT.EDU
Subject: bash
Reply-To: GSTD@VTVM2.CC.VT.EDU
Date: Tue, 24 Mar 1992 08:19:01 GMT

|clear screen in bash
   control-l clears screen. one of the reasons i like to use bash as sh
is the compatibility of command-line editing, etc with GNU Emacs..the
bash.1 in man.tar.Z has documentation.

------------------------------

From: peterw@archsci.arch.su.oz.au (Peter Williams 8169821)
Subject: linux versions of tex, latex and dvips (beta test) available
Date: 24 Mar 92 02:03:02 GMT

tex3.14, latex2.09 and dvips5.47 for linux (beta test) are available for ftp in
pub/linux at archsci.arch.su.oz.au (129.78.66.1).

texbin.tar.Z - contains binaries for tex, latex and various utility programs
texlib.tar.Z - contains tfm, fmt, sty etc files
dvips.tar.Z  - contains binaries, support files and documentation for bibtex

The default directories for the various programs are as per the tar files which
should be untarred in the '/' directory. The normal unix environment variables
should enable these defaults to be extended or overridden if required.

There are no pk or fli files included as these should be available from local
tex ftp sites.

dvips has been built with the font library feature enabled (as this is how my
fonts are stored on messy-dos). The undocumented L option for configuration files
is available for telling dvips where to find fli files (see included config.ps for
example). This feature is in ADDITION to normal pk file access.

bibtex is having segmentation fault problems but should be available soon.

mf is also on the way.

-- 
Peter Williams                |e-mail: peterw@archsci.arch.su.oz.au
Key Centre for Design Quality |phone: +61-2-692 2053 or +61-2-660 6156
University of Sydney          |+++++++++++++++++++++++++++++++++++++++

------------------------------

From: erc@Apple.COM (Ed Carp)
Subject: Re: making the hard drive root after booting from floppy
Date: 24 Mar 92 08:52:56 GMT

In article <ksstr4INN736@utkcs2.cs.utk.edu> battle@cs.utk.edu (David Battle) writes:

>Under BSD you can just mount the root partition on the harddisk over /.
>Unfortunately this doesn't work on Linux, I just tried it.  You have to
>edit the boot disk and tell it to get its initial root from the hard drive.
>Instructions are included in the INSTALL directory on the root image for 0.95a.

I have a program called "fixboot" that will patch your boot diskette
with the correct numbers - no more math!  "fixboot /dev/hda3" or whatever
will patch your diskette.  It also has a "-q" option that tells you the major
and minor device numbers of the current root device, and "-r" will reset
them to "0" (ignores the hard disk).

I'll be posting the code tomorrow here -- it's on the other side of a
firewall on a system I can't get to at the moment.  It should work on any
linux implementation.
-- 
Ed Carp  N7EKG/6        erc@khijol.UUCP         erc@apple.com
UUWEST Consulting       Cupertino, CA           408/252-5947

-- Absolutely unabashed Gates McFadden groupie! --

------------------------------

From: ijw11@phx.cam.ac.uk (Ian Wells)
Subject: Re: Problems with 0.95a (?)
Date: 23 Mar 92 19:09:21 GMT

In article <1992Mar20.152105.17003@athena.mit.edu> mvore@fedix.fie.com (Mike Vore - W3CCV) writes:

   I just booted up 0.95a on my 386 - 4mByte - AMI BIOS, and the old 0.12
   loaded on the HD.  I did the /INSTALL/install to upgrade (great idea!!).
   But when it all finished, writing any new file the date/time somehow
   does not write properly in the INode table.  'ls -l' gives a date/time
   of "??? ??? ?? ?? ??:??" (or something close.) But the date/time on old
   files does show correctly.  Is this a feature! ? ( bug ?? ) or do I have
   to rebuild the entire thing.

Simply use 'date' to reset your clock.  It's lost its time, and that causes
the weird question marks.  It happened with me some time ago, with another
linux version, and I only noticed it because 'make' got so upset.
It could be that linux has corrupted the CMOS, but a more likely problem is a
flat backup battery, due to wearing out or something.

Ian.

------------------------------

From: ijw11@phx.cam.ac.uk (Ian Wells)
Subject: Re: Various Problems..
Date: 23 Mar 92 19:12:40 GMT

I have problems with make too.  Mine reports
(null): situid: not owner
or something similar, if I'm not root.  I've tried u+s on the binary to no
effect, so what's the problem?
Ian.

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: making the hard drive root after booting from floppy
Date: Tue, 24 Mar 1992 09:37:11 GMT

In article <dvesely.701393567@alcor> dvesely@alcor.concordia.ca ( DAVID F VESELY ) writes:
>Perhaps this is a question for the FAQ, but I was wondering how to detach
>the floppy after having booted and re-mounted the hard drive with version
>0.95a.  
>
>After booting from a floppy, the root subdirectories are off of the floppy
>(ie /bin /usr /dev /etc, etc.), and the hard drive root directories are 
>subdirectories off of /mnt.  I would like to cut off the floppy drive and
>have the directories on the hard drive as root directories, such that the
>standard un*x utilities can be located in the standard places.
>
>
>Any help in this matter would be greatly appreciated (yes, I am converting
>from DOS, but am eager to get going in Linux).
>

This should be in the FAQ, but :

You must change the root device, which is specified at offset 508 in the
kernel.  It is stored minor byte first, then major byte.  So, to use
partition one on the first hard disk as the root partition, 
you would change the bytes at offset 508 and 509 to 01 03 respectively.

This can be easily accomplished using any sector editor, or using dd 
under Linux.



------------------------------

From: ronald@robobar.co.uk (Ronald S H Khoo)
Subject: Re: /dev names
Date: 24 Mar 92 08:12:28 GMT

hedrick@dartagnan.rutgers.edu (Charles Hedrick) writes:

> I like the idea of having a link from /dev/fd to the
> floppy device I normally use,

Current practice has /dev/fd being a directory or pseudo-directory where
you can open /dev/fd/<number> to get a dup of a filedescriptor, with links
from
        /dev/fd/0       ->      /dev/stdin
        /dev/fd/1       ->      /dev/stdout
        /dev/fd/2       ->      /dev/stderr

It would be nice if you *didn't* use /dev/fd for the floppy disc 
so that Linux might be able to follow this convention as and when someone
implements /dev/fd/* :-)  Can I suggest /dev/floppy or /dev/fpy instead ?

I do agree with the general principle though.  In fact, I do the same thing
myself :-)
-- 
Ronald Khoo <ronald@robobar.co.uk> +44 81 991 1142 (O) +44 71 229 7741 (H)
Symbolic links turn your filesystem from a tree into a bramble bush

------------------------------

From: comrade@uniwa.uwa.oz.au (Peter Cooper)
Subject: Re: Free BSD release: future of Minix/Linux?
Date: Tue, 24 Mar 1992 10:13:03 GMT

lewis@bnrmtl.bnr.ca (Pierre LEWis) writes:

>In article <1992Mar23.034216.1001@usenet.ins.cwru.edu>
>stephen@ziggy.STUDENT.CWRU.Edu (Stephen Trier) writes:
>> I think it's clarification time.  There are two different BSDs for the 386.
>> One is commercial, one isn't.  The commercial one is named BSD386, bsd386,
>> or bsd/386, depending on who you ask.  The just-released free one is named
>> 386bsd.

>Thanks, I was a bit confused.  One question:  is there any relation between
>the two (beyond the flavor)?

Oh yeah.  Both are based on the NET/2 release of BSD4.3 from Berkeley.
(This was an incomplete source-only distribution that consisted of all
teh AT&T-free stuff that Berkeley had at the time, also where the Linux
port of TCP/IP will probably get it's sources).

Most of the work on i386 support for the NET/2 release was done by Bill
Jolitz (see Dr Dobbs Journal, last year+this year).  For various
reasons, Jolitz wasn't very happy with the company he helped to found to
sell BSD for 386's (BSDI, responsible for the $1000 BSD/386), Berekeley
for not distributing 386 binaries, so he set about getting a working
version up.  And it's called 386bsd.

Simple, huh?

Peter
-- 
email:  comrade@uniwa.uwa.oz.au snail:  Peter Cooper, box 22
fax:    +61 9 380 1041                  c/- Guild of Undergraduates
phone:  +61 9 380 3901                  University of Western Australia
"It was the banana that did it!" - Julia Marley

------------------------------

From: r36110m@kaira.hut.fi (Mika Matti Jalava)
Subject: Re: minor linux 0.95a bugs
Date: 24 Mar 92 07:15:34 GMT

In article <HEIM.92Mar23164350@frieda.informatik.uni-tuebingen.de> heim@frieda.informatik.uni-tuebingen.de (Gerald Heim) writes:
>   BTW: We should get a /bin/kill in the root image :-}

Well, this is something I have been thinking before. Is there some
advantage to the program kill versus the shell command kill? I mean,
there is kill built in bash and quite a few other shells. Note that I
am asking because I don't know, not flaming or anything like that.
After all, maybe the shell distributed on the root image doesn't even
have kill. I've never tried that shell anyway.

        Mika

------------------------------

From: zmbenhal@isis.cs.du.edu (Zeyd M. Ben-Halim)
Subject: Re: Curses library
Date: Tue, 24 Mar 92 11:47:10 GMT

michael@gandalf.informatik.rwth-aachen.de (Michael Haardt) writes:

>I currently have two curses libraries, BSD curses which came with Linux
>and a PD curses package, which has its origin in PC curses and ncurses.

>I think BSD curses is awful old and 7 bit characters are a pain.  On the
>other side, it is standard.

>The PD curses has a few minor bugs, but I used it under MINIX for example
>to compile sokoban, rogue and a few other games.  The weak points are the
>print/scan functions (no ANSI way to pass arguments) and such things.  Its
>features are support of ACS characters like SYS V and 8 bit characters with
>standout, underline, bold etc.

>If there is no other curses library, I will work more on this PD curses,
>because I really need a curses lib.  Any comments?

>Michael

How about using the original ncurses? A package ported to unix from a PC port
of a unix package is not exactly the way to go. I'm sure ncurses is floating
on the net somewhere; if not let me know and I'll upload my copy.

Zeyd


------------------------------

From: simonm@dcs.glasgow.ac.uk (Simon Marlow)
Subject: Re: Various Problems..
Date: 24 Mar 92 12:03:32 GMT

ijw11@phx.cam.ac.uk (Ian Wells) writes:

>I have problems with make too.  Mine reports
>(null): situid: not owner
>or something similar, if I'm not root.  I've tried u+s on the binary to no
>effect, so what's the problem?
>Ian.

Here are the diffs I made when I compiled gmake-3.62 (as far as I know
there are none of the common bugs ascociated with these diffs - eg
setuid problems, Ctrl-C not working etc.)

Unfortunately I compiled with gcc2 & shared libs so I can't really
upload the binary, although I could upload the .o file ready for
linking. Mail me if this would be useful.

Simon.

diff -cr gmake-3.62//Makefile gmake-linux//Makefile
*** gmake-3.62//Makefile        Thu Nov 21 15:58:00 1991
--- gmake-linux//Makefile       Mon Mar 23 20:27:39 1992
***************
*** 22,30 ****
  #CC line is new (WDP)
  CC=gcc
  # CFLAGS = $(defines) -g
! CFLAGS = $(defines) -O
  # LDFLAGS = -g
! LDFLAGS =
  
  # Define these for your system as follows:
  #     -DUSG                   System V
--- 22,30 ----
  #CC line is new (WDP)
  CC=gcc
  # CFLAGS = $(defines) -g
! CFLAGS = $(defines) -O2
  # LDFLAGS = -g
! LDFLAGS = -s
  
  # Define these for your system as follows:
  #     -DUSG                   System V
***************
*** 42,48 ****
  #                             without complaint but produce losing code,
  #                             so beware.
  # NeXT 1.0a uses an old version of GCC, which required -D__inline=inline.
! defines =
  
  # Define these for your system as follows:
  #     -DUMAX          Encore UMAX
--- 42,48 ----
  #                             without complaint but produce losing code,
  #                             so beware.
  # NeXT 1.0a uses an old version of GCC, which required -D__inline=inline.
! defines = -DPOSIX -DLINUX -DHAVE_DUP2
  
  # Define these for your system as follows:
  #     -DUMAX          Encore UMAX
***************
*** 56,62 ****
  # Define:
  #     -DNLIST_NAME_UNION      If `struct nlist' has a n_un member.
  #     -DNLIST_NAME_ARRAY      If `n_name' is an array.
! LOAD_AVG =
  
  # If you don't want archive support, comment these out.
  ARCHIVES = arscan.o ar.o
--- 56,62 ----
  # Define:
  #     -DNLIST_NAME_UNION      If `struct nlist' has a n_un member.
  #     -DNLIST_NAME_ARRAY      If `n_name' is an array.
! LOAD_AVG = -DNO_LDAV
  
  # If you don't want archive support, comment these out.
  ARCHIVES = arscan.o ar.o
***************
*** 84,102 ****
  # Comment this out if POSIX.2 glob is installed on your system
  # (it's in the GNU C Library, so if you're using that, this is
  # not needed at all.)
! globdep = glob/libglob.a
  
  # Library containing POSIX.2 `glob' function.
  # Comment this line out if it's in the C library (which is the case if you
  # are using the GNU C Library), or change it to the appropriate file name
  # or -l switch.
! globlib = $(globdep)
  
  # Name under which to install GNU make.
  instname = make
  # WDP:
! prefix = /usr/local/gnu
! ARCH:sh = /bin/arch
  
  # Directory to install `make' in.
  bindir = $(prefix)/bin/$(ARCH)
--- 84,102 ----
  # Comment this out if POSIX.2 glob is installed on your system
  # (it's in the GNU C Library, so if you're using that, this is
  # not needed at all.)
! #globdep = glob/libglob.a
  
  # Library containing POSIX.2 `glob' function.
  # Comment this line out if it's in the C library (which is the case if you
  # are using the GNU C Library), or change it to the appropriate file name
  # or -l switch.
! #globlib = $(globdep)
  
  # Name under which to install GNU make.
  instname = make
  # WDP:
! prefix = /usr/local
! #ARCH:sh = /bin/arch
  
  # Directory to install `make' in.
  bindir = $(prefix)/bin/$(ARCH)
diff -cr gmake-3.62//commands.c gmake-linux//commands.c
*** gmake-3.62//commands.c      Tue Oct  8 20:20:30 1991
--- gmake-linux//commands.c     Mon Mar 23 20:22:12 1992
***************
*** 342,348 ****
       int sig;
  {
    signal (sig, SIG_DFL);
! #ifndef USG
    (void) sigsetmask (0);
  #endif
  
--- 342,348 ----
       int sig;
  {
    signal (sig, SIG_DFL);
! #if !defined(USG) && !defined(LINUX)
    (void) sigsetmask (0);
  #endif
  
diff -cr gmake-3.62//job.c gmake-linux//job.c
*** gmake-3.62//job.c   Thu Oct 24 21:58:34 1991
--- gmake-linux//job.c  Mon Mar 23 20:10:34 1992
***************
*** 117,122 ****
--- 117,123 ----
  extern int setgid (), getgid ();
  #endif        /* GNU C library.  */
  
+ #ifndef LINUX
  #ifndef USG
  extern int getdtablesize ();
  #else
***************
*** 123,128 ****
--- 124,130 ----
  #include <sys/param.h>
  #define getdtablesize() NOFILE
  #endif
+ #endif
  
  extern void wait_to_start_job ();
  extern int start_remote_job_p ();
***************
*** 180,186 ****
  
  extern int fatal_signal_mask;
  
! #ifdef        USG
  /* Set nonzero in the interval when it's possible that we may see a dead
     child that's not in the `children' chain.  */
  static int unknown_children_possible = 0;
--- 182,188 ----
  
  extern int fatal_signal_mask;
  
! #if defined(USG) || defined(LINUX)
  /* Set nonzero in the interval when it's possible that we may see a dead
     child that's not in the `children' chain.  */
  static int unknown_children_possible = 0;
***************
*** 192,198 ****
  static void
  block_signals ()
  {
! #ifdef USG
  
    /* Tell child_handler that it might see children that aren't yet
       in the `children' chain.  */
--- 194,200 ----
  static void
  block_signals ()
  {
! #if defined(USG) || defined(LINUX)
  
    /* Tell child_handler that it might see children that aren't yet
       in the `children' chain.  */
***************
*** 216,222 ****
  static void
  unblock_signals ()
  {
! #ifdef        USG
  
    (void) SIGNAL (SIGCLD, child_handler);
  
--- 218,224 ----
  static void
  unblock_signals ()
  {
! #if defined(USG) || defined(LINUX)
  
    (void) SIGNAL (SIGCLD, child_handler);
  
***************
*** 396,402 ****
        if (c == 0)
        {
          /* An unknown child died.  */
! #ifdef        USG
          if (!unknown_children_possible)
            {
  #endif
--- 398,404 ----
        if (c == 0)
        {
          /* An unknown child died.  */
! #if defined(USG) || defined(LINUX)
          if (!unknown_children_possible)
            {
  #endif
***************
*** 407,413 ****
                             ignore_errors_flag);
              else
                error ("%s finished.", buf);
! #ifdef        USG
            }
  #endif
        }
--- 409,415 ----
                             ignore_errors_flag);
              else
                error ("%s finished.", buf);
! #if defined(USG) || defined(LINUX)
            }
  #endif
        }
diff -cr gmake-3.62//main.c gmake-linux//main.c
*** gmake-3.62//main.c  Mon Sep  9 23:36:15 1991
--- gmake-linux//main.c Mon Mar 23 19:50:35 1992
***************
*** 321,329 ****
--- 321,333 ----
    FATAL_SIG (SIGDANGER);
  #endif
    FATAL_SIG (SIGFPE);
+ #ifdef SIGBUS
    FATAL_SIG (SIGBUS);
+ #endif
    FATAL_SIG (SIGSEGV);
+ #ifdef SIGSYS
    FATAL_SIG (SIGSYS);
+ #endif
    FATAL_SIG (SIGTERM);
  #ifdef SIGXCPU
    FATAL_SIG (SIGXCPU);
diff -cr gmake-3.62//make.h gmake-linux//make.h
*** gmake-3.62//make.h  Sat Oct 26 21:19:59 1991
--- gmake-linux//make.h Mon Mar 23 20:18:30 1992
***************
*** 205,211 ****
  extern void user_access (), make_access (), child_access ();
  
  
! #if   defined(USG) && !defined(HAVE_VFORK)
  #define       vfork   fork
  #define       VFORK_NAME      "fork"
  #else /* Have vfork or not USG.  */
--- 205,211 ----
  extern void user_access (), make_access (), child_access ();
  
  
! #if   (defined(USG) || defined(LINUX)) && !defined(HAVE_VFORK)
  #define       vfork   fork
  #define       VFORK_NAME      "fork"
  #else /* Have vfork or not USG.  */
***************
*** 232,238 ****
  extern char *ctime ();
  #endif        /* GNU C library or POSIX.  */
  
! #if   defined(USG) || defined(POSIX) && !defined(__GNU_LIBRARY__)
  extern char *getcwd ();
  #ifdef        PATH_MAX
  #define       getwd(buf)      getcwd (buf, PATH_MAX - 2)
--- 232,238 ----
  extern char *ctime ();
  #endif        /* GNU C library or POSIX.  */
  
! #if   defined(USG) || defined(LINUX) || defined(POSIX) && !defined(__GNU_LIBRARY__)
  extern char *getcwd ();
  #ifdef        PATH_MAX
  #define       getwd(buf)      getcwd (buf, PATH_MAX - 2)

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
