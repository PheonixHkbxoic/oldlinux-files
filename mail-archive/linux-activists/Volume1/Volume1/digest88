From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Sun, 8 Mar 92 19:15:11 EST
Subject:  Linux-Activists Digest #88

Linux-Activists Digest #88, Volume #1             Sun, 8 Mar 92 19:15:11 EST

Contents:
  NUMLOCK stuck on and affects _reboot (Epstein@DOCKMASTER.NCSC.MIL)
  Re: Running linux in < 500kB (Rick Kelly)
  Re: Rebooting - an observation (Drew Eckhardt)
  NCSA telnet copyright?  (Lawrence C. Foard)
  Re: Running linux in < 500kB (Mika Matti Jalava)
  Re: Rebooting - an observation (Mika Matti Jalava)
  Disk partitioning under Linux (was: Re: Running linux in < 500kB) (Ben Lippolt)
  Re: Rebooting - an observation (KiYun Roe)
  Re: NCSA telnet copyright? (John Plevyak)
  Re: Running linux in < 500kB (Ross Biro)
  Banjo - what is it? (Adam Thompson)
  Re: a simple nlist to be used with /unix :-) (D.Bolla)
  Re: Disk partitioning under Linux (was: Re: Running linux in < 500kB) (David Engel)
  Is linux 0.95 avaialbe? (Jiansheng Zhao)
  Re: Running linux in < 500kB (sweh)
  Re: Running linux in < 500kB (Drew Eckhardt)
  Re: Rebooting - an observation (Drew Eckhardt)
  Re: Rebooting - an observation (Drew Eckhardt)

----------------------------------------------------------------------------

From: Epstein@DOCKMASTER.NCSC.MIL
Subject: NUMLOCK stuck on and affects _reboot
Reply-To: Epstein@DOCKMASTER.NCSC.MIL
Date: Sun, 8 Mar 1992 05:18:25 GMT

I did a head -c bytecount file.Z xxx.Z vice > xxx.Z after ftp resulting
in catting a .Z to a virtual console.  Only apparent effect was NUMLOCK
stuck on --- until did a CTRL-ALT-DEL which painted screen with
repeating garbage and killed linux.  John

------------------------------

Subject: Re: Running linux in < 500kB
From: rmk@rmkhome.UUCP (Rick Kelly)
Date: Sun, 8 Mar 1992 00:37:14 GMT
Reply-To: rmk@rmkhome.UUCP (Rick Kelly)

In article <1992Mar7.113850.6816@nntp.hut.fi> r36110m@kaira.hut.fi (Mika Matti Jalava) writes:
>In article <1992Mar6.080258.29908@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:

>>You don't have to.  Linux loads the kernel from floppy (Between 150K and 190K
>>depending on which patches have been applied - so it's not that slow, and 
>>if you want Shoelace will boot it off a hard disk) and then mounts its       
>>root file system from wherever.  DOS is no where in the picture.

>How do you partition the hard disk without any other OS? DOS is not
>necessary, but if you don't want to use it, you'll need some other,
>even much more expensive OS to prepare the system to take linux on the
>HD. 

Now that I am thinking semi-seriously of buying a cheap 386SX and running
Linux on it, I am also thinking about the installation problems.  My main
goal would be to do it without MSDROSS.

Well, I have my 386/33 Coherent box here that does all my news and mail,
and it has utilities for reading, writing, and formatting MSDOS disks.

I could build a bootable Coherent floppy with the tools that I need to do
the job.  I would then boot the 386SX from the floppy, and do all FDISK
stuff, and write the Coherent master boot onto the hard disk ( this would
take the place of shoelace - it allows booting any of 8 partitions, and
allows choice of kernel on any particular partition ).  Hopefully, I would
be able to use the Coherent debugger to do any binary patching.

I would then be at a point where I could boot Linux on the machine, do a
mkfs, and copy things over.  Once I got the system up and running, I would
use kermit and a null modem cable to get things from rmkhome to the Linux
box.  ( UUCP would be much better! ) 

But I am still just thinking about this.

-- 

Rick Kelly      rmk@rmkhome.UUCP        unixland!rmkhome!rmk    rmk@frog.UUCP

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Rebooting - an observation
Date: 8 Mar 92 07:19:26 GMT

In article <1992Mar8.040249.5742@sbcs.sunysb.edu> kroe@sbwarren.cs.sunysb.edu (KiYun Roe) writes:
>
>(1) A variety of reboot sequences work fine under DOS (using the 8042,
>    jumping to ffff:0000, etc.) whether or not BIOS shadowing is
>    enabled, so Linux must be doing _something_ different.  Perhaps
>    Linux is overwriting the shadow RAM in some way or the way it
>    enables A20 is not proper for a Micronics MB.  I don't know enough
>    about the hardware at this level to make even intelligent guesses.

1.  It should be imposible to overwrite shadow RAM, as this becomes 
        write protected in bootup.

2.  I never deactiviated A20 when I rebooted.  Shouldn't make a difference.

>(2) BIOS shadowing is something I've always taken for granted, but now
>    that I've disabled it I prefer it that way.  When I'm running DOS,
>    I can configure QEMM to shadow only actual ROM to RAM, so I get
>    over 300KB of erstwhile shadow RAM to use for other purposes.  It
>    would be nice to utilize the shadow RAM area for Linux, too.  Does
>    anybody know how?

Linux reads memory size from CMOS.  Disabling shadowing will increase 
the apparant RAM size to CMOS, Linux sees it when it boots, and will
use it when it needs it.

------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: NCSA telnet copyright? 
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Sun, 8 Mar 1992 08:41:06 GMT


I just started looking at the NCSA telnet code from Clarkson since it
seems to be on of the better packages around (but will take some heavy
modification to run in unix (I think)). I ran into a slight problem
though, the files don't have any copyright notices?! What does this mean
as far as the legality of using them when adding TCP/IP to linux?

On an even worse note, the X guy obz@sisd.kodak.com has disappeared, without
X Linux is going to set back substantially. Assuming he doesn't resurface is
anyone willing to do X? I have all the socket emulation libraries working
for tubes, I mailed them to him and they bounced. They are based on his pty
socket emulation libraries which further muddies things (I have no way to
ask his permission to make them public).  

If anyone plans to take over X I'll be happy to help get the IPC/network
part of the code working under Linux.

------------------------------

From: r36110m@kaira.hut.fi (Mika Matti Jalava)
Subject: Re: Running linux in < 500kB
Date: 8 Mar 92 06:47:23 GMT

In article <1992Mar8.025938.618@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:

[my comment about partitioning removed]

>That's nitpicking.  The point I was making was that once Linux is up,
>no other operating system is required.  

Yes, you are right. But I meant that you DO need another system (or a
real hack) to bring it up, and it would be preferable to be able to
buy a PC, get linux diskettes and go without ANY proprietary software
(OK, you need BIOS to boot...). But I suppose it won't take long
before someone writes a working fdisk for linux that does the job
(I've seen someone here post about it).

        Mika

------------------------------

From: r36110m@kaira.hut.fi (Mika Matti Jalava)
Subject: Re: Rebooting - an observation
Date: 8 Mar 92 14:47:13 GMT

In article <1992Mar8.071926.25302@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:

>Linux reads memory size from CMOS.  Disabling shadowing will increase 
>the apparant RAM size to CMOS, Linux sees it when it boots, and will
>use it when it needs it.

At least my machine doesn't give the shadow RAM for other purposes.
The free memory (extended in setup) doesn't change if I disable
shadowing. This may be different in more advanced computers (mine is a
built on a cheap clone motherboard). I suppose the shadow RAM is
always mapped between 640k and 1M. QEMM and similar programs can use
it, but it can't be used as normal extended memory.

So, is there any way to use this kind of memory for linux? As buffer
cache or something like that? Would it be too big an effort for the
comparatively small memory area to be used?

        Mika

------------------------------

From: bjl@pttrnl.nl (Ben Lippolt)
Subject: Disk partitioning under Linux (was: Re: Running linux in < 500kB)
Date: 8 Mar 92 14:19:53 GMT
Reply-To: B.J.Lippolt@research.ptt.nl

r36110m@kaira.hut.fi (Mika Matti Jalava) writes:
>(OK, you need BIOS to boot...). But I suppose it won't take long
>before someone writes a working fdisk for linux that does the job
>(I've seen someone here post about it).

There is such a program, called "pfdisk". Originally for MSDOS and Unix
(ESIX and MINIX). You can compile it under Linux (except for a bug in the
gcc-1.40 libc (sscanf); you will have to do some hacking).
It comes with two programs, bootmenu and bootauto, which it can install in
the boot block of the HD and which let you boot any partition. I use it
in combination which shoelace to boot Linux directly from the HD. 
(I think) I got it from plains.nodak.edu, but I couldn't find it there
anymore. If you're interested let me know and I mail it to you (or upload
it to funet or tsx-11 if a lot of people want it).

Bne Lippolt.

------------------------------

From: kroe@sbwarren.cs.sunysb.edu (KiYun Roe)
Subject: Re: Rebooting - an observation
Date: Sun, 8 Mar 1992 17:07:32 GMT

In article <1992Mar8.071926.25302@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>2.  I never deactiviated A20 when I rebooted.  Shouldn't make a difference.

I didn't say anything about deactivation.  The fact is, Linux doesn't
communicate very much with circuits on the motherboard, but it's doing
something to screw up the reboot protocol when BIOS shadowing is
enabled.  It might be the fault of one of the expansion cards for all I
know.  A variety of reboot sequences work fine under DOS regardless of
the BIOS shadowing setting.  BIOS shadowing is implemented on the
motherboard which is (I have discovered) the most mysterious entity in
a PC.  There aren't too many programmable devices on the motherboard,
but something is going wrong.  Linux writes 0xDF to the 8042 output
port at startup to enable A20.  Is that a universal value for all
machines?  Linux also reprograms the 8259.  That sequence seems
innocuous enough, but I'm no expert.

Look, this issue is obviously not very critical since I'm perfectly
content to run with BIOS shadowing off.  However, it would be nice to
get to the root of the problem.  I've done a myriad of experiments
(including a bunch of things that looked like the code Drew submitted),
and only R. Ramesh's suggestion to disable BIOS shadowing has had any
results.

>Linux reads memory size from CMOS.  Disabling shadowing will increase 
>the apparant RAM size to CMOS, Linux sees it when it boots, and will
>use it when it needs it.

Wishing doesn't make it so, Drew.  I've rebooted Linux with BIOS
shadowing on and off, and it doesn't change the amount of memory Linux
uses or makes available.  I'm going to expand to 8MB in a couple weeks,
but the people with 2MB or 4MB might be interested in using the 384KB
shadow RAM.  (BTW, I have found that increasing buffer memory by 512KB
on my 4MB machine markedly improves performance.  The default setting
is really too small in the case when swapping is available to handle
big programs.)
--
KiYun Roe                                       kroe@sbcs.sunysb.edu
Department of Computer Science
SUNY at Stony Brook
Stony Brook, NY  11794-4400                     (516) 632-7675

------------------------------

From: jplevyak@ncsa.uiuc.edu (John Plevyak)
Subject: Re: NCSA telnet copyright?
Date: 8 Mar 92 17:55:11 GMT


NCSA Telnet source code and documentation are in the public domain.

To quote the README document that should be with any version that you
get:

"NSCA Telnet 2.4 source code and documentation are in the public domain. 
Specifically, we give to the public domain all rights for future licensing of the
source code, all resale rights, and all publishing rights.

We ask, but do not require, that the following message be included in
all derived works:

Portions developed at the National Center for Supercomputing Applications at
the University of Illinois at Urbana-Champaign."


I will simply add: "Do what you will shall be the whole of the law."
                                - Alister Crowley


John Plevyak (plevyak@uiuc.edu, jplevyak@ncsa.uiuc.edu)

------------------------------

From: bir7@leland.Stanford.EDU (Ross Biro)
Subject: Re: Running linux in < 500kB
Date: 8 Mar 92 18:23:52 GMT

In article <1992Mar8.064723.21533@nntp.hut.fi> r36110m@kaira.hut.fi (Mika Matti Jalava) writes:
>
>Yes, you are right. But I meant that you DO need another system (or a
>real hack) to bring it up, and it would be preferable to be able to
>buy a PC, get linux diskettes and go without ANY proprietary software
>(OK, you need BIOS to boot...). But I suppose it won't take long
>before someone writes a working fdisk for linux that does the job
>(I've seen someone here post about it).
>
        On a related note, after we get to version 1.0 and everything
seems ok, has anyone considered distributing linux through some of the
share ware places.  Imagine the adds they could run: Why pay $1200
for Unix when you can get it for $20 and give it to all of your friends.

        Ross Biro bir7@leland.stanford.edu

------------------------------

From: umthom61@ccu.umanitoba.ca (Adam Thompson)
Subject: Banjo - what is it?
Date: 8 Mar 92 19:25:46 GMT

I'm just curious... I've seen a few references to this entity, but nothing ever
describing what it *is* ??
-Adam

-- 
= Adam Thompson   ----   Computer Engineering  ----  University of Manitoba =
= umthom61@ccu.umanitoba.ca    =  "When you have eliminated the improbable, =
= ...!uunet!decwrl!alberta!\   =    whatever is left, however impossible,   =
=    ccu.UManitoba.CA!umthom61 =    must be the answer."                    =
-- 
= Adam Thompson   ----   Computer Engineering  ----  University of Manitoba =
= umthom61@ccu.umanitoba.ca    =  "When you have eliminated the improbable, =
= ...!uunet!decwrl!alberta!\   =    whatever is left, however impossible,   =
=    ccu.UManitoba.CA!umthom61 =    must be the answer."                    =

------------------------------

From: db1@ukc.ac.uk (D.Bolla)
Subject: Re: a simple nlist to be used with /unix :-)
Date: 8 Mar 92 19:59:44 GMT
Reply-To: db1@ukc.ac.uk (Damiano Bolla)

In article <1992Mar08.014259.4746@wimsey.bc.ca> stewart@wimsey.bc.ca (Jim Stewart) writes:
>In article <5539@falcon.ukc.ac.uk> db1@ukc.ac.uk (Damiano Bolla) writes:
>>Hi there. This is an implementation of the nlist function.
>Why not just use the nlist from the BSD kit? ... it works fine for me...
Woops... I must have missed something then....
Sorry for the waste of bandwidth, can you please send me the nlist you
have ?

BTW. When is the new version of linux going to be released ?
Will the new gcc be in there ?

Damiano

------------------------------

From: david@ods.com (David Engel)
Subject: Re: Disk partitioning under Linux (was: Re: Running linux in < 500kB)
Date: 8 Mar 92 20:48:10 GMT

bjl@pttrnl.nl (Ben Lippolt) writes:
: (I think) I got it from plains.nodak.edu, but I couldn't find it there
: anymore. If you're interested let me know and I mail it to you (or upload
: it to funet or tsx-11 if a lot of people want it).

I'm using the bootmenu/shoelace combination also.  I got bottmenu from the
comp.sources.unix (or possibly misc) archive on wuarchive.wustl.edu.

David

------------------------------

From: Jiansheng Zhao <zhao@unixg.ubc.ca>
Subject: Is linux 0.95 avaialbe?
Reply-To: zhao@unixg.ubc.ca
Date: Sun, 8 Mar 1992 22:31:27 GMT

It was said linux 0.95 was released this week. But it has not showed up
at tsx-11.mit.edu. Where can it be found?

------------------------------

From: sweh@spuddy.uucp (sweh)
Subject: Re: Running linux in < 500kB
Date: 8 Mar 92 20:34:31 GMT

In article <1992Mar6.081812.397@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>symlinks work almost fine.  The only problem with symlinks is that 
>they are not followed for the shell interpreter when a #! executable
>shell script is exec'd.  Make sure your shells are hard linked to,
>or are in the path, specified in #! executable scriptfiles.

I have a problem with symlinks - a symlink to a symlink:
eg ln -s /usr/local/bin/gcc
ln -s cc gcc

Then the command "cc" fails, and "tar" moans.

Is this known?  Is there a fix?

Many thanks
-- 
                               Stephen Harris
               sweh@spuddy.uucp    ...!uknet!axion!spuddy!sweh

 * Meeeeow ! Call Spud the Cat on > +44 203 638780 < for free Usenet access *

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Running linux in < 500kB
Date: 8 Mar 92 23:13:26 GMT

In article <3423@spuddy.uucp> sweh@spuddy.uucp (sweh) writes:
>In article <1992Mar6.081812.397@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>>symlinks work almost fine.  The only problem with symlinks is that 
>>they are not followed for the shell interpreter when a #! executable
>>shell script is exec'd.  Make sure your shells are hard linked to,
>>or are in the path, specified in #! executable scriptfiles.
>
>I have a problem with symlinks - a symlink to a symlink:
>eg ln -s /usr/local/bin/gcc
>ln -s cc gcc
>
>Then the command "cc" fails, and "tar" moans.
>
>Is this known?  Is there a fix?
>

Ok, second problem with symlinks, and this is a known problem.  Symlinks
are only followed one deep - so a symlink to a symlink will fail.

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Rebooting - an observation
Date: 8 Mar 92 23:30:13 GMT

In article <1992Mar8.144713.27192@nntp.hut.fi> r36110m@kaira.hut.fi (Mika Matti Jalava) writes:
>In article <1992Mar8.071926.25302@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>
>>Linux reads memory size from CMOS.  Disabling shadowing will increase 
>>the apparant RAM size to CMOS, Linux sees it when it boots, and will
>>use it when it needs it.
>
>At least my machine doesn't give the shadow RAM for other purposes.
>The free memory (extended in setup) doesn't change if I disable
>shadowing. This may be different in more advanced computers (mine is a
>built on a cheap clone motherboard). I suppose the shadow RAM is

Some cheap clone motherboards are worse than others.

>always mapped between 640k and 1M. QEMM and similar programs can use
>it, but it can't be used as normal extended memory.
>
>So, is there any way to use this kind of memory for linux? As buffer
>cache or something like that? Would it be too big an effort for the
>comparatively small memory area to be used?
>
>       Mika

It shouldn't be too hard of a hack.  You would just have to patch the code 
in buffer_init() in buffer.c to put buffers in the space between 
0xa0000 and 0x100000.  

However, you will have the problem of detecting where there is real 
RAM.  Although in the 80x86 family and absent memory location will 
return 0xff, and you can pick up ROM by the signature or attempting 
to write to it, you will possibly have memory mapped devices in the   
C0000 - F0000 address range.  For example, the seagate SCSI hosts 
are memory mapped, as well as hardware EMS boards.

------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Rebooting - an observation
Date: 8 Mar 92 23:39:48 GMT

In article <1992Mar8.170732.8939@sbcs.sunysb.edu> kroe@sbwarren.cs.sunysb.edu (KiYun Roe) writes:
>In article <1992Mar8.071926.25302@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>results.
>
>>Linux reads memory size from CMOS.  Disabling shadowing will increase 
>>the apparant RAM size to CMOS, Linux sees it when it boots, and will
>>use it when it needs it.
>
>Wishing doesn't make it so, Drew.  I've rebooted Linux with BIOS
>shadowing on and off, and it doesn't change the amount of memory Linux

Ok, I should have qualified my statement.  On the better chipsets, 
where shadowing is accomplished by remapping memory from the top 
of extended RAM into the C0000 - FFFFF address range, copying 
in the ROM, making it read only, and decreasing top of extended 
RAM acording to CMOS, etc.  Lesser chipsets take 384K, run the 
same address lines into it, and select either the shadow RAM or 
real memory.

I've got a rice paddy special (actually, a Gigabyte Technologies) 
motherboard using the elite chipset, and it uses the former algorithm

Anyways, along the lines of buffer cache : 

Has anyone looked at the possibility of using a fuzzy boundary 
between user memory and buffer cache (ala SunOS and BSD4.4 ?),
where the balance of buffer cache / user memory shifts dynamically,
with some hard limits?  This would increase the performance of both
memory intensive and disk intensive applications.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
