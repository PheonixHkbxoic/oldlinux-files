From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Mon, 24 Feb 92 16:45:12 EST
Subject:  Linux-Activists Digest #65

Linux-Activists Digest #65, Volume #1            Mon, 24 Feb 92 16:45:12 EST

Contents:
  Re: A couple of problems... (KiYun Roe)
  poe-IGL version 1.1 initial tty settings (Epstein@DOCKMASTER.NCSC.MIL)
  Re: poe-IGL login.c not setting TERM (Epstein@DOCKMASTER.NCSC.MIL)
  Re: Elvis and Linux (A. V. Le Blanc)
  bash 1.12, textutils 1.2, mtools 2.0.5 (A. V. Le Blanc)
  Re: Easy video mode changes, nonstandard disk support, and v86 mode (D.Bolla)
  Re: new icon, math library fixes, libc fix (Hongjiu Lu -- Graduate Student)
  Re: poe-IGL login.c not setting TERM (Peter Orbaek)
  Re: poe-IGL login.c not setting TERM (Peter Orbaek)
  Re: poe-IGL sucks up cycles (Peter Orbaek)
  Re: new libc copyright (Tommy Thorn)
  Re: A couple of problems... (Linus Benedict Torvalds)
  Bye bye symlinks? (I Reid)
  gcc1-40, FAQ (Marc CORSINI)
  Re: Patches to have reboot and /dev/kmem working (Manolis Tsangaris)
  Re: Patches to have reboot and /dev/kmem working (Mike Miller)

----------------------------------------------------------------------------

From: kroe@sbstaff2.cs.sunysb.edu (KiYun Roe)
Subject: Re: A couple of problems...
Date: 24 Feb 92 12:22:25 GMT

>>Trying to create
>> large tar file either on floppies or to a disk file
>>almost inevitably locks up my system.
>
>Linus has been hoping that these hangs (which occur to several people)
>are due to running out of memory, or possibly to coming close to
>running out (a situation which causes special code in the kernel to
>run to free up memory).

I have been experiencing the same sort of hangs, but I can't see how
they have anything to do with running out of memory, unless you mean
buffer memory.  My machine will hang if I try to make a large tar file,
and the times I've checked there was plenty of memory left for the tar
program.  A while ago I wrote a little program that did nothing but
write to a large file.  The program itself required very little memory
but it would hang the system every time.

I've experienced fewer hangs since I implemented two changes:  (1) I
modified the kernel to give me 512KB more buffer memory (on my 4MB
machine the default was really too small, and I have swapping enabled,
so I don't worry about running out of memory); and (2) I revised my
backup script to create separate tars for each directory under / and
/usr, so that none of my tar files is more than about 2.5MB.

I think this hanging is easily the most serious deficiency in Linux,
but I have made zero progress in identifying the cause.  I hope Linus
figures it out before he releases 0.13.

KiYun Roe                                       kroe@sbcs.sunysb.edu
Department of Computer Science
SUNY at Stony Brook
Stony Brook, NY  11794-4400                     (516) 632-7675
--
KiYun Roe                                       kroe@sbcs.sunysb.edu
Department of Computer Science
SUNY at Stony Brook
Stony Brook, NY  11794-4400                     (516) 632-7675

------------------------------

From: Epstein@DOCKMASTER.NCSC.MIL
Subject: poe-IGL version 1.1 initial tty settings
Reply-To: Epstein@DOCKMASTER.NCSC.MIL
Date: Mon, 24 Feb 1992 15:36:08 GMT

SOrry about previous messge BTW:  BS works okay if put stty sane in
.profile poe-IGL initializes ERASE to CTRL-@

BTW:  termcap without :am:  did NOT help elvis with getting off by 1
line number (at least on small test samples).

------------------------------

From: Epstein@DOCKMASTER.NCSC.MIL
Subject: Re: poe-IGL login.c not setting TERM
Reply-To: Epstein@DOCKMASTER.NCSC.MIL
Date: Mon, 24 Feb 1992 16:33:09 GMT

Brian Mcbee's suggestion to grab it out of /etc/inittab not very good
idae if working with virtual consoles.  The user has no choice, must use
SVGA mode selected at boot time.  My Tseng VGA has modes <any key> 0 1 2
3 4 so that a real kludge is to append 0 thru 4 to end of login name
when login .  Would be nice to capture boot time stuff and place in
file.  tty1 has stuff as does doshell --- I guess I should get source
for doshell and fix .profile

------------------------------

From: zlsiial@uts.mcc.ac.uk (A. V. Le Blanc)
Subject: Re: Elvis and Linux
Date: 23 Feb 92 10:47:10 GMT

In article <1992Feb19.220750.17388@sbcs.sunysb.edu> kroe@sbcs.sunysb.edu (KiYun Roe) writes:
>I experienced a few minor problems using Elvis for a vi-replacement
>under Linux.  First, screen refresh didn't work quite right.  I didn't
>look at the problem closely, but it seemed that autowrap wasn't handled
>properly by Elvis or Linux.  I took out the :am: setting from the
>termcap entry, and screen refresh now works properly.

I find that there are two irritating 'features' of elvis:

1)  Long lines are not wrapped.  On all systems on which I have
    used elvis, this has meant that the display is unreliable
    whenever long lines occur.

2)  There is no buffer which saves the last :s command.  On Unix,
    in vi, I can type, for example, ':s/^........................//',
    and then if I want to do this on another line or in another file,
    I type ':s'.  This does not work in elvis.

I seem to recall that my problem (1) was described by the designer
of elvis as a feature: he does not approve of the default behaviour
of vi.  I would very much like an option which would change this.

     A. V. Le Blanc
     University of Manchester
     LeBlanc@mcc.ac.uk

------------------------------

From: zlsiial@uts.mcc.ac.uk (A. V. Le Blanc)
Subject: bash 1.12, textutils 1.2, mtools 2.0.5
Date: 23 Feb 92 16:48:37 GMT

The following files are now available by anonymous ftp from
hpb.mcc.ac.uk [130.88.200.7]:

167596 Feb 23 16:25 pub/linux/mcc-bin/bash-1.12.tar.Z
271270 Feb 23 11:20 pub/linux/mcc-bin/textutils-1.2.tar.Z
  1422 Feb 23 16:41 pub/linux/mcc-diffs/mtools-2.0.5.diffs.Z

The mtools diffs shows how to create a Linux entry in devices.c
for 3.5 and 5.25 inch drives, and for a C drive which has
12-bit fat's.  Many thanks to all who helped with this.

bash-1.12.tar.Z contains a binary for this, plus the patches
I applied to create it.  It has one known bug: the jobs command
does not print correctly the name of the command being executed
in each job.

textutils-1.2.tar.Z contains the patches applied to the GNU source,
plus binaries for the commands cat, cmp, comm, csplit, cut, expand,
fold, head, join, nl, paste, pr, sort, split, sum, tac, tail, tr,
unexpand, uniq, and wc.

Comments and suggestions about these files should be sent to
me at the address below:

     A. V. Le Blanc
     LeBlanc@mcc.ac.uk

------------------------------

From: db1@ukc.ac.uk (D.Bolla)
Subject: Re: Easy video mode changes, nonstandard disk support, and v86 mode
Date: 24 Feb 92 15:04:19 GMT
Reply-To: db1@ukc.ac.uk (D.Bolla)

In article <1992Feb24.054444.28874@cs.brown.edu> cgy@cs.brown.edu (Curtis Yarvin) writes:
>In article <1992Feb24.051750.25625@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>>Also, I suggested that this was a stopgap meassure until real 
>>support could be provided for everything.
>I don't like stopgap measures; they have a way of becoming permanent.  It
>seems to me that stopgap measures are how Unix got as bloated as it is.
I agree. Stopgat measures are BAD.
It is more reasonable to design a clear system ( that may require a bit
more programming ) than a cludge.

Again.. Let's leave the BIOS out. !

BTW My vga is indeed a supervga.....

Damiano

------------------------------

From: Hongjiu Lu -- Graduate Student <hlu@eecs.wsu.edu>
Subject: Re: new icon, math library fixes, libc fix
Reply-To: hlu@eecs.wsu.edu
Date: Mon, 24 Feb 1992 17:06:45 GMT

| In order to get things to this point, I had to fix several things.
| The floating point fixes are in math.fixes:
|   - fix crt0.s to initialize the 387 to truncate towards
|       zero.  The coode produced by GCC seems to assume
|       this.  Without it, assigning a floating point
|       number to an integer uses rounding instead of
|       truncation.  This caused disasters to the icon
|       validation tests.
| 

Please DO NOT change crt0.s. This is a bug in gnulib. I will try to put
a correct one on tsx-11.mit.edu later today.


H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: poe@daimi.aau.dk (Peter Orbaek)
Subject: Re: poe-IGL login.c not setting TERM
Date: 24 Feb 92 15:26:50 GMT

bboston@engws8.ic.sunysb.edu (Boston) writes:

>Ouch you seem to be ahead of me.  I just got it to compile, and I do not have a
>tty5, so I removed it from inittab, when I boot up, it just sits there.  So I
>reload it, and make a symbolic link between tty5 and tty1, the problem is now
>that when I do login, I'm on as a dumbterminal with funky key settings, any
>idea how to get it to work right?

What do you mean? If you remove the tty5 line from inittab and reboot, there
should be no dependencies on tty5 at all.

For now you should set your TERM variable in your .profile. I'll try to
fix the TERM problem in the next release. It should be set to the value given
in /etc/inittab

  - Peter.
--
Peter Orbaek ----------------- poe@daimi.aau.dk  |      ///
Hasle Ringvej 122, DK-8200 Aarhus N, DENMARK     |     ///
                                                 | \\\///
"Strong typing is for people with weak memories" |  \XX/

------------------------------

From: poe@daimi.aau.dk (Peter Orbaek)
Subject: Re: poe-IGL login.c not setting TERM
Date: 24 Feb 92 15:29:59 GMT

mcbeeb@jacobs.CS.ORST.EDU (Brian Mcbee) writes:

>I don't know if this is maybe fixed in the latest release of poe-IGL, but
>I hacked my login so that it grabbed TERM from /etc/inittab.  Seemed like
>the logical thing to do.

Not login.c ?!

If you run login from the commandline, it shouldn't take TERM from /etc/inittab

Login should simply enherit the TERM variable from it's parent. (It doesn't
now and that's a bug, admitted!)

   - Peter.

--
Peter Orbaek ----------------- poe@daimi.aau.dk  |      ///
Hasle Ringvej 122, DK-8200 Aarhus N, DENMARK     |     ///
                                                 | \\\///
"Strong typing is for people with weak memories" |  \XX/

------------------------------

From: poe@daimi.aau.dk (Peter Orbaek)
Subject: Re: poe-IGL sucks up cycles
Date: 24 Feb 92 15:34:00 GMT

drew@hazelrah.Colorado.EDU (Drew Eckhardt) writes:

>The infinite loop in simpleinit eats up cycles.  Under a load, you can 
>notice a difference in performance (386-33).  A simple fix that works 
>is to put a sleep(1) at the end of the loop.

init should sleep most of the time, as it sits in a wait() 99% of the time.

Besides, ps tells me that it IS sleeping almost always.

Maybe something's wrong with your inittab?

  - Peter.
--
Peter Orbaek ----------------- poe@daimi.aau.dk  |      ///
Hasle Ringvej 122, DK-8200 Aarhus N, DENMARK     |     ///
                                                 | \\\///
"Strong typing is for people with weak memories" |  \XX/

------------------------------

From: tthorn@daimi.aau.dk (Tommy Thorn)
Subject: Re: new libc copyright
Date: 24 Feb 92 11:24:50 GMT

I couldn't agree more. While I prefer Berkley type copyright
Gnu Public Library Licence is acceptable too. Any thing stronger
would make Linux useless for lots of different purposes
including commercial usage.


--
/Tommy Thorn, another LPF member. Terminate software patents.
Join The League for Programming Freedom, mail league@prep.ai.mit.edu.
Are *you* sure that *your* program isn't already covered by patents?

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Re: A couple of problems...
Date: 24 Feb 92 16:06:53 GMT

In article <1992Feb24.122225.2924@sbcs.sunysb.edu> kroe@sbstaff2.cs.sunysb.edu (KiYun Roe) writes:
>
>I think this hanging is easily the most serious deficiency in Linux,
>but I have made zero progress in identifying the cause.  I hope Linus
>figures it out before he releases 0.13.

Yes, I think I've got it licked: it was /both/ a memory problem and a
filesystem problem.  No wonder people have had hangups.  Due to the
bugs, 0.13 might be a bit late, but I still expect it to be out about
March 5th or so.. 

The filesystem problem gets much worse when writing out the buffer-cache
to disk (several requests in the request-queue), and is especially
noticeable on slow devices (floppies and old drives).  Writing big files
out to floppy is one of the ways you /might/ hang linux currently, but
it depends on a lot of factors.  0.13 will definitely have these bugs
corrected, I just hope there aren't other ones...  Other than that 0.13
will be a relatively simple release: not very much new features, mostly
bug-fixes and kernel enhancements. 

Re: system call overlapping - yes some of the system calls overlap, and
could be removed, but it's a real pain to recompile everything: I did
that when I implemented sigactions, and removed the old signal() system
call, and it wasn't fun. Not for the faint-of-hearted.

                Linus

------------------------------

From: eonu24@castle.ed.ac.uk (I Reid)
Subject: Bye bye symlinks?
Date: 24 Feb 92 10:25:47 GMT

Quick question..... I had symlinks but now ln says it can only manage hard
links. All my sources are latest releases and I don't think I've done anything
odd to the kernel..... any ideas anyone?

Iain

------------------------------

From: corsini@geocub.UUCP (Marc CORSINI)
Subject: gcc1-40, FAQ
Date: 24 Feb 92 00:42:28 GMT

Hi Linuxers,
The next release of FAQ will come out in one day or two, in advance this
is a short Q/A samples about gcc-1.4 of hlu@eecs.wsu.edu 
Any comment appreciated

==============
QUESTION: What are the contents of the files newggc.tar.Z newlib.tar.Z ?

ANSWER: newgcc.tar.Z contains all the binaries/libraries needed to use 
gcc-1.40 whilst newlib.tar.Z contains the library sources.

QUESTION: Is the installation identical to the previous gcc stuff ?

ANSWER: No, after uncompressing the newgcc.tar.Z you have to untar it
below /usr cause the libraries /must/ go to /usr/lib (I've tried under
/usr/local and the compiler complains "ld: no file crt0.o").
Moreover the distrib contains cc1, cpp in the directory lib and
gcc ar as ld strip size ranlib under bin.
So you have to link cc1 and cpp under bin, and link
gar/ar gas/as gld/ld to prevent a lot off /stupid/ problems

QUESTION: What are the main differencies with the old release?

ANSWER: There were some bugs in the old port that have been corrected, 
moreover this package contains 387 support (that I have not yet tested)
there is libm.a (for those with 387)
         libsoft.a (for those without, I for example)
         libtermcap.a (from tput 1.10)

The -mstring-insns option is no longuer needed nor supported :( [As
an example to recompile (successfully) linux you have to thraw 
away this flag in all the Makefile]

BTW for those who want to recompile the lib sources you have to change all
the paths in Makefile(s) to fit with your organization. Notice also that
include files have changed (stdio.h which is no more ansi complient)

==========


                                Marc <corsini@labri.greco-prog.fr>

------------------------------

From: mt@cleo.cs.wisc.edu (Manolis Tsangaris)
Subject: Re: Patches to have reboot and /dev/kmem working
Date: 24 Feb 92 19:35:08 GMT

I hate to point out that even though the problem of /dev/kmem is
interesting to many of us, it seems that the discussion shifts
from providing kernel data access, to operating system concepts on
``kernel-user interfaces''. Although it would be undemocratic to deny
discussions on issues like ``kernel-user interfaces'',
I think that alt.os.linux postings should be more oriented towards
implementation choices. There are many other groups to argue about concepts,
and after all, Linux is not a new operating system but a free implementation
of Unix on the 386/486 architectures.

Yes, the "/dev/kmem"/nlist interface has problems (security being one of them)
but nevertheless it has been proposed and used by other Unix implementations.
It is SIMPLE and consistent  to the ``everything is a file'' philosophy.
Remember Unix started as simple and understandable operating system.

Many thanks to db1@ukc.ac.uk (D.Bolla) for his patches.
Let us use them and settle the issue for now.
There certainly many more features to be added to Linux
to get a usable free Unix.

--mt 
+-------------------------------+-------------------------------------------+
|Manolis M. Tsangaris           |Email:  mt@cs.wisc.edu, uunet!uwvax!mt     |
|Computer Sciences Department   |Phone: +608 262 6624,+608 231 1058         |
|University of Wisconsin-Madison|Fax:   +608 262 9777                       |
+-------------------------------+-------------------------------------------+
P.S. Flames to my account please :-)

------------------------------

From: mke@redsun.pps.rain.com (Mike Miller)
Subject: Re: Patches to have reboot and /dev/kmem working
Date: 24 Feb 92 19:40:14 GMT

db1@ukc.ac.uk (D.Bolla) writes:


(Stuff deleted)

>Anyway.... under Sun there are three programs that "look" into /dev/kmem
>ps, w, pstats. The amount of information you can get out of them is very 
>big. The point that I am tryng to make here is:
>To obtain the same amount of information from syscalls you need a 
>GREAT number of variations and parameters. Is this worth the work ?
>( Considering the small amount of programs that need that information )
>Again.....

Maybe there are so few programs because so few people have access to this
information...

>Negative points of kernel implementation.
>1) Extra (Unnecessary) code in the kernel -> Kernel bigger.
            ^^^^^^^^^
Depends on who you talk to.

>2) Possible introduction of ERRORS       -> Kernel panic.

Thats what alpha and beta testing are for.  If your messing with your own 
system, then you should expect this from time to time.  Its not that 
big a deal ussually.  You don't do production work on a OS hacking 
machine anyway if you are sane.  

>3) Increased number of syscall and paramentrs  -> Complexity

Not if done properly.  Its not the number of calls, its the way they
are implamented, and how well they are documented.

>4) Problems on returning lists of data in user space

>To me point 2 is already enough NOT to use this method. If you can live
>with possible kernel panics.......

I live with them on my Sun 3/75.  I don't like it, but it happens.  I sure
hope the serial port code in linux is better then suns.

>Positive points of a library implementation.
>1) NO extra code in the kernel.                -> Save memory
>2) Impossibility to add ERRORS to the kernel code.     -> NO panic

As somebody pointed out here, it is still possible to panic the kernal
if you read stuff from the wrong place.  Not to mention writting.

>3) Easy to update, modify even by average user.

Really?  Do you really want an average user messing around with the system
libraries?  (Or am I misunderstanding you?)  

And somebody has to write the code to give them access either way.

>4) No problems in allcating memory for the result.

>What it is important is to DEFINE what information we want to 
>extract from /dev/kmem and who can use them. After that is defined it 
>is possible to discuss about implementaion. 

No argument from me on this part.  I sort of like the /proc idea myself.
But I think its a bit limited.  What would be ideal is to be able to 
have unix like file protections of portions of a running program.  Hmm,
you could /dev/kmem as /proc/1... or /dev/proc/1...

That would probably be a pain to do, but VERY powerfull since users could
get access to all sorts of interesting data on their program(s).  Shared
libraries would kind of cause a problem though...

-- 
*       Insert your favorite funny/witty saying here, but make it small.       *
* mke@cs.pdx.edu or mke@redsun.pps.rain.com or mke@kaberd.rain.com             *
* Michael J. Miller Jr.                                  Stand. disc. applies. *
*   Please Reply if the content of this message implies that one is expected.  *

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
