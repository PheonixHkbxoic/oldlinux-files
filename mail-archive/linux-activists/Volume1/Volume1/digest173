From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Mon, 30 Mar 92 12:45:22 EST
Subject:  Linux-Activists Digest #173

Linux-Activists Digest #173, Volume #1           Mon, 30 Mar 92 12:45:22 EST

Contents:
  X (minimun config)? / dos partition/ MacLinux someday??? (Michael Orr)
  Re: WANTED: exe of SWI-Prolog for IBM-PC (R. Kym Horsell)
  help for lp (also) (Denise Tree)
  Re: WANTED: exe of SWI-Prolog for IBM-PC (R. Kym Horsell)
  Re: VAX cross-compiler for Linux (Mark Garrett)
  Re: formatting + rawrite (was Re: INSTALLATION (FILETRANSFER)) (Joseph Dougherty)
  Version numbers, gcc (Julien Maisonneuve)
  Improved Mtools on nic.funet.fi (Werner Almesberger)
  Re: Questions - mtools, 0.95a Alpha Patches, Extended Partitions ("Brian E. Gallew")
  Re: VAX cross-compiler for Linux From: rad@merlin.think.com (Bob Doolittle) Date: 25 Mar 92 17:39:24 GMT  (Bob Doolittle)
  Re: tape drivers (H.H. Bergman)
  Re: No more kernel messages flying off the screen - pause patches (Bob Doolittle)
  Compiling Fileutils (Mike Roberts)

----------------------------------------------------------------------------

From: orrman@milton.u.washington.edu (Michael Orr)
Subject: X (minimun config)? / dos partition/ MacLinux someday???
Date: Mon, 30 Mar 1992 10:43:24 GMT


I have been reading alt.os.linux with avid interest since January,
however without being able to try Linux out for myself, since I do not
(yet) have a 386.  So I am trying to get an idea of what configuration
I will need.  Two programs seem to stand out as especially
memory-intensive: gcc, which prefers 4 megs, and xwindows, which I
have heard might require 8 or more.

My question is in regards to xwindows.  I understand that a few people
are experimenting with x on Linux but don't have a finalized port yet.
Does it look so far like it really will require 8 megs?  What other
special hardware (e.g. math processor) will it need?  And is this just
to get it running at all, or to get it running comfortably?  I have
heard of but not seen a DOS xwindows program; perhaps it could give a
clue to my question.

If x is going to require a substantial amount of extra (expensive)
hardware above and beyond the requirements of Linux itself, are there
any fruitful alternative avenues developers might look so that those
of us without x will have at least some ability to run graphics
programs?  Perhaps as a stopgap measure somebody might like to write a
driver that can interpret graphics commands a` la prewindows DOS and
gwbasic (hideous, perhaps, but better than nothing).  Or what about
the possibility of a DOS emulator that will allow us to run programs
from the DOS partition as normal jobs during our Linux session?  Then
if I found a DOS screensaver program I liked, I could use it even
though I would be spending most of my time with my nongraphical Linux.

Right now I have three computing options: the xterminals at school
connected to a Sequent/Dynix, an XT my father owns, and my own
MacClassic that I got a year ago.  However, I miss the shells, pipes,
and *normal* text files and generic text editors that Apple decided we
would never miss when they designed the Finder.  And I have not heard
of anyone even starting to write a free un*x for the Mac.  Is there
anyone?  But even if someone started now, it would be a year or two
away, at least.  Plus the FSF boycott means that those folks won't be
interested in doing it.  So it looks like I'll have to jump ship if I
want to program in a un*x environment.  (But I'll still keep it
around, just in case I need to run something only it can run.)

Please email me responses and I will summarize for the net.

                -Mike Orr = orrman@u.washington.edu


------------------------------

Crossposted-To: comp.lang.prolog,comp.sys.ibm.pc.misc
From: kym@bingvaxu.cc.binghamton.edu (R. Kym Horsell)
Subject: Re: WANTED: exe of SWI-Prolog for IBM-PC
Date: Mon, 30 Mar 1992 12:00:43 GMT

In article <4498@laura.UUCP> kulas@jupiter.informatik.uni-dortmund.de (Marija Kulas) writes:
>Does anybody know of a MS-DOS port of the SWI-Prolog? Is it possible at all?
>(no turing machine pliz) If impossible, does... of a LINUX-port... ?

There have been a few requests for the hack that I made to get SWIPL
going under MS-DOS so I've arranged to leave it at NMSU.EDU and
BINGHAMTON.EDU. 

The stuff to NM is still in the works -- I do hope
they'll neaten it up a bit -- but if you want it _immediately_
then try anonymous ftp to cs.binghamton.edu under directory
/pub/swipl.

Be warned -- it isn't neat; the fasted way to get it going under
the MSDOS gcc on my 386 was to combine the default makefile for
Linux with stuff for compiling under Ultrix! :-( 

I also had to make a couple of small patches to the gcc ``extension'' 
programs -- you'll find new executables for these, plus an example 
from the SWIPL documents regarding separate compilation of C routines, 
under the same directory.

As an added caution -- I use a csh-like shell that parts of my
building procedure rely on. I _have_ supplied a ready-to-go
a.out-format file ``swipl'' under there somewhere too, in case
you don't have the wherewithall to rebuild it.

I have prepared no documentation for this port -- other than the 
makefile and this message.  :-) 

BTW, my ZIP and other files do not include the original PS nor DVI
files of the SWIPL documentation. You'll have to get these elsewhere.

-kym

------------------------------

From: tree@midget.towson.edu (Denise Tree)
Subject: help for lp (also)
Reply-To: tree@midget.towson.edu (Denise Tree)
Date: Mon, 30 Mar 1992 12:35:53 GMT

Jiansheng Zhao writes:
|Thanks to Iain Reid's detailed instructions I was able to patch and create
  the kernel...
| Is there someone who has lp working with 0.95a?

I too was able  to compile .95a to eliminate HD interrupt errors at boot, but
I do not know how to utilize the diff files in lp.tar to compile for printer
support. Could someone who's done this post some instructions that a beginner
could use? I would be GREATLY appreciated.

Also: I am trying to learn more about shell programming. Is bash closer to
  the Korn Shell, Bourne shell or a hodgepodge? There are some book-
  stores here in mob-town that have one or two Unix books (NOT in my schools
library however!) but I'm not sure which would be most applicable.
Thanks all.
=====================
Denise Tree
Toson state univ.

------------------------------

Crossposted-To: comp.lang.prolog,comp.sys.ibm.pc.misc
From: kym@bingvaxu.cc.binghamton.edu (R. Kym Horsell)
Subject: Re: WANTED: exe of SWI-Prolog for IBM-PC
Date: Mon, 30 Mar 1992 12:20:45 GMT

In article <1992Mar30.120043.13306@newserve.cc.binghamton.edu> kym@bingvaxu.cc.binghamton.edu (R. Kym Horsell) writes:
>then try anonymous ftp to cs.binghamton.edu under directory
>/pub/swipl.

That's 128.226.1.72 for deficit nameserveers.

-kym

------------------------------

From: mark@loki.une.edu.au (Mark Garrett)
Subject: Re: VAX cross-compiler for Linux
Date: 30 Mar 92 12:27:00 GMT

From article <1992Mar17.155651.21411@cci632.cci.com>, by feb@cci632.cci.com (Frank E. Barrus (co-op)):
> a VAX cross compiler (for a MicroVAX) that will run under Linux?
> I both some variant of CC as well as an assembler-- (gcc and gas
> would be great, but can they be built under Linux to compile for
> a VAX?)  As far as libraries go, I can probably just build most
> of them from the Linux sources, once I have the compiler/assembler,
> or I can get them from a local site here, if the a.out format
> is compatable with the BSD format.

Sounds simple enough you need gcc2.1 gas and binutils. This is enought to build
gcc as and ld in cross compile mode. You biggest problem I would see
is getting all of the gcc & utils to compile under linux.

        I have a cross compile env set up on our vax-ultrix42 -> i386-mach
this was trouble enough even with gcc knowing about vax-ultrix and i386. 
configure linux-i386 will result in a nice message explaining
it doesn't know what linux is. Have fun.

        Cheers
                Mark :)
-- 
Mark Garrett    Internet:  mark@loki.une.edu.au Phone:  +61 66 20 3859
   University of New England, Northern Rivers, Lismore NSW Australia.

------------------------------

From: jdough@unf6.unf.edu (Joseph Dougherty)
Subject: Re: formatting + rawrite (was Re: INSTALLATION (FILETRANSFER))
Date: 30 Mar 92 05:47:12 GMT

In article <1992Mar28.084542.27523@rice.edu> adam@owlnet.rice.edu (Adam Justin Thornton) writes:
>If I've previously written a tar file to a floppy and then subsequently want
>to write a shorter one, will the EOF work, or will the poor beast get confused
>and untar the original file and then whatever is left over into gibberish?

        No, this won't happen. I've taken the same disk and written a var-
iety of different sized files to it and only had a problem one time, and
that was because of a bad sector on the disk. And I don't reformat the 
disk between writes, either, so I know this works.
y

------------------------------

From: julien@incal.inria.fr (Julien Maisonneuve)
Subject: Version numbers, gcc
Date: 30 Mar 92 11:52:01 GMT

It would probably be of some use to put version numbers on programs to know when
one is being obsolete due to new kernel or bug corrections.

My main problem comes from gcc 2.
I have fetched 2lib and 2misc before last week : works fine but I couldn't get
shared libs to show up.
After reading the group, I go and fetch 2lib and 2misc at dec1.eecs.upw.edu, same
filename but not same version at all : the shared libs are there, the gcc
version is 2.1, and it does not work...(got signal...)

Thanks to you all, anyway, most of linux works well.
-- 
  _________                    Julien.Maisonneuve@inria.fr  julien@sor.inria.fr
      /                 _ _ _       ...!uunet!{seismo,mcsun}!inria!corto!julien
     /     /)          ' ) ) )                    INRIA :  33 (1) 39 63 52 08
  __/_    // o _  __    / / / _   o _   _   __   __   _      _     _
 / / (_(_(/_(_(<_/) )  / ' (_(_(_(_/_)_(_)_/) )_/) )_(<_(_(_( \_)-(<_
(_/

------------------------------

From: almesber@nessie.cs.id.ethz.ch (Werner Almesberger)
Subject: Improved Mtools on nic.funet.fi
Date: Sun, 29 Mar 1992 14:49:50 GMT

An improved version of Mtools is on nic.funet.fi in
/pub/OS/Linux/tools/mtools.n.tar.Z

These are the new features:
  - all tools are now in a single executable, which saves hundreds of
    kilobytes of disk space.
  - device configuration is read at run-time from a file /etc/mtools.
  - Mtools tries to detect possibly incorrect FAT type settings. (*)
  - stdout is flushed before reading stdin.

(*) The replies to my question about FAT types show, that 12 bit FATs
    are not too uncommon on hard disks. Therefore, I've added a simple
    check for FAT types, which should at least catch some obviously
    incorrect settings. Thanks to everyone who has responded !

The mtools.n.tar.Z file includes a readme file, the compiled program
and the diffs to mtools-2.0.5.tar.Z. You need mtools-2.0.5.tar.Z and
mtools.n.tar.Z if you want to compile the source.

- Werner
-- 
   _________________________________________________________________________
  / Werner Almesberger, ETH Zuerich, CH      almesber@nessie.cs.id.ethz.ch /
 / IFW A44  Tel. +41 1 254 7213                 almesberger@rzvax.ethz.ch /
/_BITNET:_ALMESBER@CZHETH5A__HEPNET/CHADNET:_[20579::]57414::ALMESBERGER_/

------------------------------

Date: Mon, 30 Mar 1992 09:21:05 -0500 
From: "Brian E. Gallew" <bg11+@andrew.cmu.edu>
Subject: Re: Questions - mtools, 0.95a Alpha Patches, Extended Partitions

Excerpts from netnews.alt.os.linux: 27-Mar-92 Re: Questions - mtools,
0.9.. by Drew Eckhardt@cs.colorad 
> As far as having parallel compilations, etc you probably shouldn't do it.
> With one build, you may swap a little on a typical 4M system,
> , but mostly you'll still be in
> real memory.  With two, that won't be the case with limited 
> amounts of ram.  The rule of thumb is that disk is 1000 times slower than
> real memory.

And just to add my two cents worth:  I am trying to compile Nethack 3.0j
under DOS with djgpp.  With the latest release (equivalent to GCC2.0) my
compile is in excess of 15 hours (25MHz 386, 2MB RAM).  DON'T RUN MORE
THAN ONE COMPILE UNLESS YOU HAVE TIME TO KILL!!!!!


                                  -Brian

You drop the bomb -more-
It goes off... -more-
=========================================================================
|  My cluelessness is more real than apparent...                        |
=========================================================================
|  DEC measures their benchmarks with a calendar!!                      |
=========================================================================


------------------------------

From: Bob Doolittle <rad@Think.COM>
Subject: Re: VAX cross-compiler for Linux From: rad@merlin.think.com (Bob Doolittle) Date: 25 Mar 92 17:39:24 GMT 
Reply-To: rad@Think.COM
Date: Mon, 30 Mar 1992 15:08:22 GMT


       In article <1992Mar17.155651.21411@cci632.cci.com> feb@cci632.cci.com (Frank E. Barrus (co-op)) writes:
    
          Do I need a new version of ld, too, or is it generic enough to
          work with any system that uses the same a.out?
    
       given architecture, but it's a royal pain getting gld to do the
       right thing across architectures.  I tried doing this in the reverse
       direction - I tried to build a cross environment to build Linux
       executables from both a Sparc and a VAX.  I could do everything but
       the ld step, and I eventually gave up (for now).
    
       ....

    It is my understanding that gld doesn't work correctly accros
    opposite-endian machines -- so a VAX and a 386 should be fine, and a
    SPARC and a 68K should be fine, but if you cross endians, it'll barf.
    I think this might even be in the documentation, but I am not positive.
    
I understood that this was supposedly fixed in the most recent release, but
as I said, I tried it on a VAX, too, just to be sure.  The problem I was
running into was when I lifted gnulib from the Linux release and tried to
use it.  The VAX version of gld built for the 386 wouldn't recognise the
object types inside of gnulib, for some reason, although when I extracted
them and linked them individually all was fine.  I tried extracting them
all, building a new archive and ranlibing it, but then gld complained about
the format of the archive and __SYMDEF file.  This may be a ranlib bug
rather than a gld bug.

-Bob

------------------------------

From: a0356514@let.rug.nl (H.H. Bergman)
Subject: Re: tape drivers
Date: 30 Mar 92 14:29:31 GMT

In article <Vo3ciB2w165w@csource.cec.edu.au> david@csource.cec.edu.au writes:
>Has anyone yet done work on tape device drivers? If not, does anyone
>know of any existing sources for a tape driver written for any other
>386 based UNIX, or even DOS, that I might be able to look over and
>use to start hacking out my own?
>
>david nugent

Yes, I'm working on it. I got the 386BSD sources and it contains a driver
for QIC02/Wangtek5150 which just happens to be the combination I got :-).

So far, I've been able to make the tape wind/rewind and retension. Actual
data transfer is trickier. I still have to figure out how to access DMA
channels in the Linux kernel. Other problems include making it all 
compatible with the rest of the world because I don't know how user programs
are supposed to talk to a tape device. Tonight I'm going to look at 'cpio',
'mt' and some include files from other systems, maybe that'll help.

Quick questions for tape experts [I'm fairly new to tapes]: 

        - Are tape device supposed to be block or character devices? Why?
        - How should the tape device be named? /dev/rmt ? What if you have
          different kinds of tape drives? /dev/ct as well?
        - What density are the low/medium/high densities in bpi exactly?
        - If you have info on how to access other tape drives (like
          the Colorado's) please let me know...

I think it will take some time [maybe a month if it all goes well] 
before I have a version for beta-testing.

-Hennus Bergman
a0356514@gufalet.let.rug.nl
csg279@wing1.cs.rug.nl
ENOSIG

------------------------------

From: rad@merlin.think.com (Bob Doolittle)
Subject: Re: No more kernel messages flying off the screen - pause patches
Date: 30 Mar 92 11:59:14


In article <1992Mar27.045435.4667@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:

   When doing heavy kernel hacking and debugging, sometimes the DEBUG messages
   implemented with printk()'s would fly off the screen so fast, it would 
   make you dizzy =8^)

   I have fixed this misfeature with the pause patches.  What these 
   do is ensure that you have atleast X seconds (configurable) to read 
   each printk() message.  If the last printk is going to scroll off the 
   screen, and X seconds have not elapsed, it goes into a kernel pause,
   where interrupts are serviced but everything else is sstopped.

This is an improvement, but I think a better (perhaps complementary) way to
handle this might be with a kernel ring-buffer to hold a copy of all printk
output, and a utility to dump the contents of the buffer (ala /etc/dmesg in
SunOS).  This should be easy to implement and more generally useful than
screen pauses (because you can go back and look at stuff, or bring it into
an editor to format it, or whatever).  It is important that the ring-buffer
memory (and the current "ring-pointer") not be initialized upon reboot, so
that dmesg can show you what printed out before a panic, for instance.
SunOS also has a daemon to periodically run dmesg and put the output into
an on-line log (/var/adm/messages), which is also handy.

By default, SunOS dmesg runs are non-destructive (i.e. if you run it twice
you get all the output twice), but also takes an optional argument ("-"),
which updates a ring-pointer, so that dmesg can show only the output which
has occurred since the last time it was run with the argument.  This is
useful for isolating pertinent output which occurs during successive tests.
Without an argument the entire ring-buffer is always dumped.

I don't know how big the buffer is in SunOS, but I would think 16K would be
plenty, yet should be small enough not to offend small-kernel enthusiasts.

-Bob

======
Bob Doolittle
Thinking Machines Corporation
rad@think.com
--

================================================================================
Bob Doolittle                                      Thinking Machines Corporation
(617) 234-2734                                                  245 First Street
rad@think.com                                                Cambridge, MA 02142
================================================================================

------------------------------

From: roberts@cray.com (Mike Roberts)
Subject: Compiling Fileutils
Date: 30 Mar 92 10:02:42 CST

I'm in the process of compiling the gnu tools for my linux system.
I had no problem compiling the textutils, but in the fileutils,
I'm getting hung up in the file fileutils-3.1/lib/fileblocks.c
where NINDIR is undefined. I can't find a definition in any of
the other files or in any of standard include files.

Are there any diffs that I haven't found anyplace? Or could
someone just tell me the value of this mysterious constant?

Thanks

Mike Roberts
roberts@pepper.cray.com


------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
