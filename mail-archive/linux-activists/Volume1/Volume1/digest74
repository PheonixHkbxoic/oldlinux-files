From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Fri, 28 Feb 92 07:45:10 EST
Subject:  Linux-Activists Digest #74

Linux-Activists Digest #74, Volume #1            Fri, 28 Feb 92 07:45:10 EST

Contents:
  Re: Problem with UNCOMPRESS (Drew Eckhardt)
  uemacs kills symbolic link !! (Marc CORSINI)
  Re: Networking 2 release, BSDI, etc (Jim Lick)
  Re: Problem with UNCOMPRESS (Curtis Yarvin)
  setting video modes & emacs keys.. (Hai Pham)
  Re: Floating point performance (Charles Hedrick)
  Re: Few comments about Linux (Mark William Hopkins)
  Here's a thought... (Rick)
  Re: Problem with UNCOMPRESS (Al Clark)
  Xon / xoff bug? (Paul C. Janzen)
  Re: A question on standards (Jeffrey Comstock)
  Re: Few comments about Linux (Michael Bethune)
  thnks for kermit & com4 help (Steven Harvey)
  Re: catman (Greg Lee)

----------------------------------------------------------------------------

From: drew@cs.colorado.edu (Drew Eckhardt)
Subject: Re: Problem with UNCOMPRESS
Date: Thu, 27 Feb 1992 22:46:16 GMT

In article <1992Feb27.032547.2035@ccu.umanitoba.ca> umthom61@ccu.umanitoba.ca (Adam Thompson) writes:
>I d/l (using kermit - when will serial I/O work properly?)  all the compiler
>binaries, as86, bison, flex, gcc, and stuck them into /tmp.
>Then I try 'uncompress as86.tar.Z' ... it works for a little while, then
>hangs the machine.  I can type for about ~15-25 seconds after I execute
>(fg or bg - doesn't matter except in timing) and then the whole machine just
>sits there ... a nice-looking paperweight. 
> 

If you have corrupt .Z files, this is what happens.  Your choices are
1.  Re download.
2.  Get tars on floppy from some one else.

------------------------------

From: corsini@geocub.greco-prog.fr (Marc CORSINI)
Subject: uemacs kills symbolic link !!
Reply-To: corsini@labri.greco-prog.fr
Date: Fri, 28 Feb 1992 00:11:09 GMT


Hi,

ln does not affect the right access (lrwxr-xr-x instead of lrwxrwxrwx)
this is well-known but I don't know if it as something to do with the
links disappeared.

IDENTIFICATION

pwd : /
action: ln -s /usr/root/.profile 
verification: ok except the access
action: uemacs .profile (* slight modification *)
action: save and exit
action: ls -ail
observation: that's it, no more symbolic link

I've tried with gnu-emacs the link is kept /but/ a new file .profile~
is created. 
I've tried with elvis-1.4 the link is kept, and no new file is created

BTW: uemacs is 3.11a

Hope this helps
                Marc <corsini@labri.greco-prog.fr>

------------------------------

From: jim@ferkel.ucsb.edu (Jim Lick)
Crossposted-To: comp.unix.bsd,comp.unix.sysv386
Subject: Re: Networking 2 release, BSDI, etc
Date: 27 Feb 92 23:42:38 GMT

[crossposted reply to a question in the new comp.unix.bsd group]

Hopefully this post will clear up some confusion about all the BSD and
BSD-like systems running around out there:

BSDI is producing a product called BSD386.  It is supposed to be shipping
in beta form 'soon'.  It will contain complete source code for $995.  It
will include device support for things such as SCSI boards (Adaptek 1542B)
which are not in other BSD releases.  I think they were planning on a
production release this summer, but seeing how the beta ship date has
slipped back, it's anyone's guess.  But in any case, this is your best
bet in the near term for BSD on 386/486 machines.  It will be ready to
run, be supported, offer some basic device support, and will still have
all source code available.  (The source written by BSDI will not be
freely distributable.)

Next there is the BSD Networking Release II Tape.  This is the latest
release of the free portions of BSD 4.3.  There are still missing pieces
though, so as of right now you can't just download the things and run.
They also come only in source code form, no binaries.  However, upon
looking closer, it was discovered that there were really only a few
pieces missing.  Most of the 386 support was already there, and only
a few kernel routines were omitted because they contained AT&T code.
There is currently an effort by some netters to fill in the missing
pieces in order to complete the system.  There is a mailing list to
coordinate efforts here.  I can't remember the address offhand, but
someone just posted some info on the list here.  The bad news is that
only basic device support is included, so it may be a while before a
free (for example) SCSI driver will be available.

There is also a system called Linux.  This is a unix-like system
written from scratch by one guy over the last year or so, with help
from other netters over the last few months.  It is not a complete
system yet, but it does boot, and has a compiler (gcc) and shell
(bash) working on it, among other things.  There is a new group
for the system, alt.os.linux.  With much input from enthusiastic
netters, progress is being made at a fierce rate.

In the far future there are two developments which may help.  First,
BSD4.4 is rumored to be free of AT&T code, include many new features,
and support for many systems.  I have heard that work is in progress
or pretty much completed for 386, Sun 4, and Sun 3 systems.  However,
from what I have heard, release is still a long ways away.  I have
heard someone say that 'next fall' will be the earliest it will
come out.  And like BSD NetII it will probably include only minimal
device support for the 386.

The other future development is the Gnu OS based on their 'Hurd'
kernel.  No telling when this will be out though.

So although there are some exciting things coming in the future,
right now the options are still very limited.


                            Jim Lick                   
Work: University of California  | Play: 6657 El Colegio #24
      Santa Barbara             |       Isla Vista, CA 93117-4280
      Dept. of Mechanical Engr. |       (805) 968-0189 voice/msg
      2311 Engr II Building     | "Young enough to wonder/Old enough
      (805) 893-4113            |  to wander/Fool enough to think he
      jim@ferkel.ucsb.edu       |  knows the way" - Lilac Time

------------------------------

From: cgy@cs.brown.edu (Curtis Yarvin)
Subject: Re: Problem with UNCOMPRESS
Date: 28 Feb 92 00:30:28 GMT

In article <1992Feb27.224616.11648@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
|In article <1992Feb27.032547.2035@ccu.umanitoba.ca> umthom61@ccu.umanitoba.ca (Adam Thompson) writes:
|>I d/l (using kermit - when will serial I/O work properly?)  all the compiler
|>binaries, as86, bison, flex, gcc, and stuck them into /tmp.
|>Then I try 'uncompress as86.tar.Z' ... it works for a little while, then
|>hangs the machine.  I can type for about ~15-25 seconds after I execute
|>(fg or bg - doesn't matter except in timing) and then the whole machine just
|>sits there ... a nice-looking paperweight. 
|> 
|
|If you have corrupt .Z files, this is what happens.  Your choices are
|1.  Re download.
|2.  Get tars on floppy from some one else.

Even if you do have corrupt .Z files, this shouldn't happen.  If compress
can crash a machine this way, there is a kernel bug involved.

c

------------------------------

From: pham@px4.stfx.ca (Hai Pham)
Subject: setting video modes & emacs keys..
Reply-To: pham@px4.stfx.ca (Hai Pham)
Date: Fri, 28 Feb 1992 04:09:53 GMT

I've been going thru the FAQ list and back issues of the Linux-Activists
Digests, but I haven't been able to figure out how on earth does one
change the default VGA 80x25 text mode into something more interesting
like 80x50 or 80x60.  I've tried using setterm and TERM=con80x60
to no avail.  HELP??

I've also been trying to figure out how to make emacs use the
cursor keys and editing keys (like PGUP/PGDOWN, etc).  I know it
can be done because I've been using the cursor keys in emacs on
an Alliant fx/2800..  Anybody out there who can point me in the
right direction?  (I'm pretty new to the wonders of emacs,
and know next to nothing of lisp, so you'll have to take it
slow.. :-)

Thanks,
Hai

ps.  I think my first question really ought to be on the FAQ list..

email: pham@px1.stfx.ca

------------------------------

From: hedrick@dartagnan.rutgers.edu (Charles Hedrick)
Subject: Re: Floating point performance
Date: 28 Feb 92 03:39:40 GMT

>Interestingly, I can't tell the difference between the libsoft and libm
>linked programs on the machine with the coprocessor. They both run just
>as fast. Do libsoft linked programs use the coprocessor when present?

Maybe.  libsoft is really for things like the trig functions.  For
normal multiplication and addition you don't use libsoft at all.
Unless you tell gcc to compile for software emulation, you get 387
instructions in the code.  They are done in the hardware if you have
387, or in the kernel if you don't.

If you're doing lots of trig functions, then you'll see the
performance of libsoft.  But even then you're not necessarily going to
slow down a machine with a 387.  All libsoft does is replace the sin,
sqrt, etc.  instructions that are built into the 387 (which Linux does
not emulate) with algorithms using only basic operations like addition
and multiplication (which Linux does emulate).  If libsoft is compiled
with default gcc settings, the basic operations will still be done by
the 387 hardware if you have it.  Complex algorithms aren't
necessarily any faster when implemented in hardware than software.  In
fact sometimes software can be faster. It can normally be more
complex, so it can take test for more special cases where shortcuts
are possible.

------------------------------

From: markh@csd4.csd.uwm.edu (Mark William Hopkins)
Subject: Re: Few comments about Linux
Date: Fri, 28 Feb 1992 05:18:47 GMT

In article <1992Feb18.100319.21517@micromuse.co.uk> dj@micromuse.co.uk (D.J.Walker-Morgan) writes:
>
>|> A 486-33 outperforms a low end SPARC, and my 386-33 is easily twice 
>|> as fast as my HP Bobcats.  
>
>Unfortunately, thats only if you compare raw processor work, and then not 
>even then. "A 486-33" covers a wide variety of hardware, from screenless
>servers to workstation oriented boxes. My lowend SPARC embaresses 486-33
>users who have been trying to run an X based network workstation with a lot
>of IO and graphics work. Horses for courses.....

In computer science, you learn that if you want speed, you write better
algorithms and use parallelism instead of beating a faster processor against a
brick wall.

A neuron is only 100hz, and yet a collection of them can outperform a sparc
in image processing by a factor of, oh say, a million.  What a mockery your
brain cells makes of the boasts of the 50 MHz chip producers.

In any case, it's not speed that counts, it's functionality.  The bottom line
is: what microprocessor has the best low-level hardware support for operating
systems?

I won't answer the question, because I don't know what a SPARC supports
(semaphores, memory segments/protection, access levels, caching, or whatever).
I do know that the 386 and above have ideal OS support, though it tends to
suffer from having a long heritage dating back to the 8080 (when people were
still living in caves).

------------------------------

From: pclink@cheops.qld.tne.oz.au (Rick)
Subject: Here's a thought...
Date: 28 Feb 92 05:56:38 GMT

Multi-processing with 486s - ie 2 or more 486s on the bus running the
one OS!

Linus?

Rick.
(Add emoticons as neccessary)

------------------------------

From: aclark@netcom.com (Al Clark)
Subject: Re: Problem with UNCOMPRESS
Date: 28 Feb 92 05:53:54 GMT

In article <1992Feb28.003028.29811@cs.brown.edu> cgy@cs.brown.edu (Curtis Yarvin) writes:
>In article <1992Feb27.224616.11648@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>|In article <1992Feb27.032547.2035@ccu.umanitoba.ca> umthom61@ccu.umanitoba.ca (Adam Thompson) writes:
>|>I d/l (using kermit - when will serial I/O work properly?)  all the compiler
>|>binaries, as86, bison, flex, gcc, and stuck them into /tmp.
>|>Then I try 'uncompress as86.tar.Z' ... it works for a little while, then
>|>hangs the machine.  I can type for about ~15-25 seconds after I execute
>|>(fg or bg - doesn't matter except in timing) and then the whole machine just
>|>sits there ... a nice-looking paperweight. 
>|> 
>|
>|If you have corrupt .Z files, this is what happens.  Your choices are
>|1.  Re download.
>|2.  Get tars on floppy from some one else.
>
>Even if you do have corrupt .Z files, this shouldn't happen.  If compress
>can crash a machine this way, there is a kernel bug involved.
>

By an amazing coincidence, I did this, (kermit text mode on .Z file)
right after mailing Adam Thompson the probable cause.  I found it hung
the particular shell; the other shells available via virtual console
still worked, and when I killed the uncompress from one of them, the
original shell also worked.  So I guess just the uncompress process
hangs. (At least sometimes)

-- 
Al - aclark@netcom.com - My opinions are my own.
      *** Practice random kindness and senseless acts of beauty! ***

------------------------------

From: ifai645@ccwf.cc.utexas.edu (Paul C. Janzen)
Subject: Xon / xoff bug?
Date: 28 Feb 92 05:37:08 GMT

I am used to using ^S / ^Q for "flow control" on a terminal; that is, 
if something is scrolling by, and I want to see it, my fingers hit 
the ^S key to stop it. Well, this didn't work at first in Linux, so 
I got stty and did a 
        stty ixon
which should have done the trick, I thought.

So I typed 
        cat huge_file
and about two pages into it I hit ^S. Great! It stopped! ^Q -restarted
it. Ohmighod, I thought I had it made.

BZZZZT. Thank you for playing.

Yes, cat restarted the file after I pressed ^Q. And about half a page
of huge_file scrolled up the screen. And then...NOTHING!!! Not a peep. 
I could interrupt the cat job fine (^C) and then everything was back 
to normal. 

Well, I figured, I'm a hacker, I'll dive headfirst into the kernel
and see what's happening. (BZZZT! Alright, my first choice of a place
to put a printk was poor. But now I can say that I've actually used 
a kernel that printed a "HEY!" before every single character. :-))

As far as I can tell, this is what happens when I type ^S:
        the routine in kernel/chr_drv/tty_io.c that goes:
                if (I_IXON(tty) ... /* tests for c==stop_char, etc.*/
        gets called, 

        followed by (some random number between 1 and 4) calls to 
        console.c's con_write(), where it just goes down to the 
        line:
                if (tty->stopped)
        and breaks.

        and when I press ^Q it screams through the tty_io.c line
        that goes if c==START_CHAR() and does all its tty->writes().

        Well, that all seems right to me, so I can't figure out what
        is going on.

That's about all I can tell you. Something somewhere isn't getting
reset, but I can't figure out what it is. Anyone?


========================================================================
Paul C. Janzen                Documentation is the castor oil of
ifai645@ccwf.cc.utexas.edu    programming.  Managers know it must be
                              good because the programmers hate it so
                              much.
========================================================================

------------------------------

From: jrc@brainiac.mn.org (Jeffrey Comstock)
Subject: Re: A question on standards
Date: 28 Feb 92 03:06:12 GMT

In article <1992Feb27.200938.22870@utdallas.edu> ramesh@utdallas.edu writes:
>I got hold of poeigl package a couple of days ago and installed it. I found
>that it uses inittab/securetty instead of ttytab and ttys. I do not know the
>standards. So, I ask those who know: Which is the standard in init/getty/login
>setup ttytab or inittab? If poeigl is nonstandard I am thinking of

ttytab is standard in bsd.
inittab is standard in sysv.

-- 
Jeffrey R. Comstock 
INET  jrc@brainiac.mn.org
CW    -. .-. ----- -..

------------------------------

From: mikeb@yarra.pyramid.com.au (Michael Bethune)
Subject: Re: Few comments about Linux
Date: 28 Feb 92 12:17:26 GMT

In article <1992Feb28.051847.19790@uwm.edu> markh@csd4.csd.uwm.edu (Mark William Hopkins) writes:
>In article <1992Feb18.100319.21517@micromuse.co.uk> dj@micromuse.co.uk (D.J.Walker-Morgan) writes:
>>
>>|> A 486-33 outperforms a low end SPARC, and my 386-33 is easily twice 
>>|> as fast as my HP Bobcats.  
>>
>In computer science, you learn that if you want speed, you write better
>algorithms and use parallelism instead of beating a faster processor against a
>brick wall.

Thank you for reminding me about what my degree taught me. 8-)

[nonsense deleted]

>In any case, it's not speed that counts, it's functionality.  The bottom line
>is: what microprocessor has the best low-level hardware support for operating
>systems?
>
>I won't answer the question, because I don't know what a SPARC supports
>(semaphores, memory segments/protection, access levels, caching, or whatever).
>I do know that the 386 and above have ideal OS support, though it tends to
>suffer from having a long heritage dating back to the 8080 (when people were
>still living in caves).

Just what do mean by 'the bottom line is: what micoprocessor has the best
low-level hardware support for operating systems'?

This 'bottom line' makes no sense. What operating systems? This is crucial
to understanding what kind of support is useful. There is a whole lot of 
difference between what good in supporting  a small address space operating
system like MS-DOS without virtual memory and what is useful to support
say UNIX.

Afterall an 8088 provides all the 'low-level support' MS-DOS needs.

The point being there are various operating systems that make various demands
upon a CPU. More to the point, Operating systems like any program make
demands upon a whole range of sub-systems, CPU, memory, bus traffic, I/O
sub-systems etc etc. Looking at CPU speed/capabilities in isolation is
a favourite past time of the MIP merchants and marketoids, it says very
little about ultimate machine performance for a given application.

This is very relevant to 486s versus Sparc.

To make the point more strongly, what is useful about a 
12 SPEC mark CPU, if its sitting idle in wait states waiting for
slow memory sub-systems, or slow I/O sub-systems.

A high performance desktop machine requires balance between its different
components.

In general Intel based PCs tend to be built for a low price point where
performance versus price trade offs are inevitably made.

Consider the ISA bus, it has a through put of not much more than 5 Megabytes
per second. Even the EISA bus is crippled by poor bandwidth to retain
compatability with the ISA bus.

Sun Sparc workstations in contrast tend to balance a capable processor
with good bus performance, good memory sub-systems, mass-storage 
peripherals and some of the best ethernet performance in the business.

On the other hand Intel based PC's provide peerless single user performance,
with non-virtual memory operating systems like MS-DOS.

-- 
Michael Bethune                         Disclaimer: I have no commercial
Independent Unix Consultant.            relationship with Pyramid and
Phone: +61 3 018 538103                 do not represent them in any way. 
Melbourne, Australia.

------------------------------

From: slh@naucse.cse.nau.edu (Steven Harvey)
Subject: thnks for kermit & com4 help
Date: 27 Feb 92 16:16:48 GMT

Thanks everyone for the kermit & com4 advice.  It all works fine now.

------------------------------

From: lee@uhunix.uhcc.Hawaii.Edu (Greg Lee)
Subject: Re: catman
Date: Thu, 27 Feb 1992 22:58:03 GMT

I have a program "fmt" that interprets many MAN commands
directly, and a very few nroff commands, so it is fast.
You can link it to the name "nroff" and "nroff -man" gives
a rough approximation of the real thing.  (You can also
link it to the name "tex" and get an even smaller subset
of real TeX.)

It's available by ftp from ftp.Hawaii.edu
(= uhunix2.uhcc.Hawaii.edu) as /pub/linguist/fmt.tar.Z.

--
Greg Lee <lee@uhunix.uhcc.hawaii.edu>

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
