From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Sun, 8 Mar 92 22:30:09 EST
Subject:  Linux-Activists Digest #89

Linux-Activists Digest #89, Volume #1             Sun, 8 Mar 92 22:30:09 EST

Contents:
  Undefined symbol _mmap referenced from text segment ?!?! (Ben Lippolt)
  linux 0.95 is available! (Jiansheng Zhao)
  Re: Running linux in < 500kB (Adam Thompson)
  Linux-0.95 (Linus Benedict Torvalds)
  Re: Rebooting - an observation (KiYun Roe)
  warning for Minix users going to Linux(was Re: Linux-0.95) (Wayne Hayes)

----------------------------------------------------------------------------

From: bjl@pttrnl.nl (Ben Lippolt)
Subject: Undefined symbol _mmap referenced from text segment ?!?!
Date: 8 Mar 92 23:17:17 GMT
Reply-To: B.J.Lippolt@research.ptt.nl

I installed the mmap patch (from zorst, obz@sisd.kodak.com). Compiling and
running the kernel goes smoothly, but as soon as I try to compile a program
which uses the mmap system call I get the following error message (I use
gcc-1.40):

ega_init.o: Undefined symbol _mmap referenced from text segment
ega_init.o: Undefined symbol _munmap referenced from text segment

I'm pretty sure I'm overlooking something obvious here. I checked my
include files (in /usr/include and in /usr/src/linux/include). I *have*
the declarations for mmap and munmap in <sys/mman.h> and have the #include
in the c-file. So, what does this mean?

BTW. I added a "#define MAP_FIXED 3" to mman.h because I couldn't find
     a define for it.


Ben Lippolt

------------------------------

From: Jiansheng Zhao <zhao@unixg.ubc.ca>
Subject: linux 0.95 is available!
Reply-To: zhao@unixg.ubc.ca
Date: Mon, 9 Mar 1992 00:54:44 GMT

Thanks to Linus and all who worked hard on improving linux, linux 0.95
is available from nic.funet.fi, under /pub/OS/Linux/images. First
impression is very good, with login and VC (I have a Hercules mono card)
working. I have not been able to mount it on hard drive (mount error 2),
only played on floppy drive.

------------------------------

From: umthom61@ccu.umanitoba.ca (Adam Thompson)
Subject: Re: Running linux in < 500kB
Date: Mon, 9 Mar 1992 00:01:27 GMT

In <1992Mar8.182352.14845@morrow.stanford.edu> bir7@leland.Stanford.EDU (Ross Biro) writes:

>       On a related note, after we get to version 1.0 and everything
>seems ok, has anyone considered distributing linux through some of the
>share ware places.  Imagine the adds they could run: Why pay $1200
>for Unix when you can get it for $20 and give it to all of your friends.

>       Ross Biro bir7@leland.stanford.edu

I have to disagree... I feel very strongly that placing Linux in the hands
of shareware distribution houses would cheapen it.  Have you actually ever
bought software from one of these places?  I've _never_ gotten 'decent'
quality software.  I don't, however, feel that this is the place to discuss
it.  Email me for followups.

-Adam Thompson
 <umthom61@ccu.umanitoba.ca>
 ...!uunet!decrwl!alberta!ccu.UManitoba.CA!umthom61
-- 
= Adam Thompson   ----   Computer Engineering  ----  University of Manitoba =
= umthom61@ccu.umanitoba.ca    =  "When you have eliminated the improbable, =
= ...!uunet!decwrl!alberta!\   =    whatever is left, however impossible,   =
=    ccu.UManitoba.CA!umthom61 =    must be the answer."                    =
-- 
= Adam Thompson   ----   Computer Engineering  ----  University of Manitoba =
= umthom61@ccu.umanitoba.ca    =  "When you have eliminated the improbable, =
= ...!uunet!decwrl!alberta!\   =    whatever is left, however impossible,   =
=    ccu.UManitoba.CA!umthom61 =    must be the answer."                    =

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Linux-0.95
Date: 8 Mar 92 14:43:12 GMT

All right: it's three days late, but finally 0.95 has been sent to
nic.funet.fi.  As usual, it will probably take a few days to find it's
way into a readable directory, so don't start ftp'ing right now.  I'm
sure arl will inform people when it's available. 

I'm also pretty sure there will be problems setting things up again:
some things have changed, and the docs are up to their usual wonderful
standard.  For people that have used 0.12, there shouldn't be too many
surprises, although the new harddisk names/numbers can be confusing. 
Many bugs have been corrected, but there are probably new ones that have
taken their place. 

One bad thing with the new setup (which will confuse new users) is that
the rootdisk finally got too small for everything, and compress+tar
aren't on the disk any more.  Talk about confusing, but if you have 0.12
installed on your system, everything should be mostly a case of "boot
from floppy, drop in the new things, and reboot with the harddisk". 

Re: patches.  There were 5 major patches (VC's, VFS, swapon, ptrace and
faster floppies) that were installed, and of these only ptrace and VC's
got installed without any major changes (pmacdona has had three releases
to learn my coding style, and it seems to have paid off :).  The other
patches are so heavily edited as to be totally unrecognizeable, and I
expect my changes weren't always for the better: but I'd rather be
over-conservative than use a patch even if it's great.  I expect they
will still have to be edited, and hope none of the authors mind me
changing their code heavily (sorry also to all those that have used the
VFS routines: they'll have to wait for the next release before getting
all the functionality in the alpha-VFS patches.)

Re: recompiling the kernel.  I've used most of the last week to make the
kernel compileable by gcc-2, as that is what I use now.  The bootimage
I've made available is compiled totally with 2.0, and the source-files
are set up for that compiler.  For people without gcc-2, the kernel can
still be compiled with 1.40, but you'll have to add the flag
-fcombine-regs to some makefiles (without it gcc-1.40 runs out of
registers, and aborts). 

I'm including the file RELNOTES-0.95, which is just the old 0.12
RELNOTES edited for a new release. I'm lazy.

                Linus

==============================


                RELEASE NOTES FOR LINUX v0.95
                Linus Torvalds, March 7, 1992


This is file mostly contains info on changed features of Linux, and
using old versions as a help-reference might be a good idea.


                COPYRIGHT

Linux-0.95 is NOT public domain software, but is copyrighted by me.  The
copyright conditions are the same as those imposed by the GNU copyleft:
get a copy of the GNU copyleft at any major ftp-site (if it carries
linux, it probably carries a lot of GNU software anyway, and they all
contain the copyright). 

The copyleft is pretty detailed, but it mostly just means that you may
freely copy linux for your own use, and redistribute all/parts of it, as
long as you make source available (not necessarily in the same
distribution, but you make it clear how people can get it for nothing
more than copying costs).  Any changes you make that you distribute will
also automatically fall under the GNU copyleft.

NOTE! The linux unistd library-functions (the low-level interface to
linux: system calls etc) are excempt from the copyright - you may use
them as you wish, and using those in your binary files won't mean that
your files are automatically under the GNU copyleft.  This concerns
/only/ the unistd-library and those (few) other library functions I have
written: most of the rest of the library has it's own copyrights (or is
public domain).  See the library sources for details of those. 


                INSTALLATION

This is a SHORT install-note.  The installation is very similar to 0.11
and 0.12, so you should read INSTALL-0.11 too.  There are a couple of
programs you will need to install linux: something that writes disk
images (rawrite.exe or NU or...) and something that can create harddisk
partitions (fdisk under xenix or older versions of dos, edpart.exe or
something like that). 

NOTE! Repartitioning your harddisk will destroy all data on it (well,
not exactly, but if you know enough to get back the data you probably
didn't need this warning).  So be careful.

READ THIS THROUGH, THEN READ INSTALL-0.11, AND IF YOU ARE SURE YOU KNOW
WHAT YOU ARE DOING, CONTINUE.  OTHERWISE, PANIC.  OR WRITE ME FOR
EXPLANATIONS.  OR DO ANYTHING BUT INSTALL LINUX - IT'S VERY SIMPLE, BUT
IF YOU DON'T KNOW WHAT YOU ARE DOING YOU'LL PROBABLY BE SORRY.  I'D
RATHER ANSWER A FEW UNNECESSARY MAILS THAN GET MAIL SAYING "YOU KILLED
MY HARDDISK, BASTARD.  I'M GOING TO FIND YOU, AND YOU'LL BE SORRY WHEN I
DO". 

Minumum files needed:

        RELNOTES-0.95 (this file)
        INSTALL-0.11 (+ any other docs you might find: the FAQ etc)
        bootimage-0.96.Z
        rootimage-0.95.Z
        rootimage-0.12.Z  (for tar+compress)
        rawrite.exe
        some disk partitioner


1) back up everything you have on your harddisk - linux-0.95 is still in
   beta and might do weird things.  The only thing I guarantee is that
   it has worked fine on /my/ machine - for all I know it might eat your
   harddisk and spit it out in small pieces on any other hardware. 

2) Test out the linux boot-disk with the root file system.  If it
   doesn't work, check the hardware requirements, and mail me if you
   still think it should work.  I might not be able to help you, but
   your bug-report would still be appreciated. 

   Linux-0.95 now has an init/login: there should be 4 logins started on
   the first 4 virtual consoles.  Log in as root (no password), and test
   it out.  Change to the other logins by pressing left-alt + FN[1-4]. 
   Note that booting up with a floppy as root is S..L..O..W..  - the
   floppy driver has been optimized for sequential access (backups etc),
   and trashes somewhat with demand-loading. 

   Test that linux can read your harddisk at least partly: run the fdisk
   program on the root-disk, and see if it barfs.  If it tells you about
   any partitions at all, linux can successfully read at least part of
   your harddisk. 

   NOTE! Harddisk device names and numbers have changed between versions
   0.12 and 0.95: the new numbering system was needed for the extended
   partitions, and a new naming scheme was in order so that people
   wouldn't cunfuse the old devices with the new ones.

   The new harddisk device names are: /dev/hd followed by an 'a' for the
   first drive, or a 'b' for the second one.  After that comes the
   partition number, 1-4 for the primary partitions, 5- for possible
   extended partitions.  No number means the complete disk. Like this:

        /dev/hda        the whole first harddisk (old: /dev/hd0)
        /dev/hdb3       partition nr 3 on the second disk (old: /dev/hd8)

3) Make sure that you have a free /primary/ partition.  There can be 4
   primary partitions per drive: newer DOS fdisks seem to be able to
   create only 2 (one primary and one extended).  In that case use some
   other partitioning software: edpart.exe etc.  Linux fdisk currently
   only tells you the partition info - it doesn't write to the disk. 

   Remember to check how big your partition was, as that can be used to
   tell which device Linux thinks it is.

   NOTE! Linux-0.95 /might/ recognize extended partitions: but the code
   for this is utterly untested, as I don't have any of those.  Do NOT
   use the extended partitions unless you can verify that they are
   indeed correctly set up - if my routines are wrong, writing to the
   extended partitions might just overwrite some other partition
   instead.  Not nice. 

4) Boot up linux again, fdisk to make sure you now have the new
   partition, and use mkfs to make a filesystem on one of the partitions
   fdisk reports.  Write "mkfs -c /dev/hdX nnn" where X is the device
   number reported by linux fdisk, and nnn is the size - also reported
   by fdisk.  nnn is the size in /blocks/, ie kilobytes.  You should be
   able to use the size info to determine which partition is represented
   by which device name. 

5) Mount the new disk partition: "mount /dev/hdX /mnt".  Copy over the
   root filesystem to the harddisk, eg like this:

        # for i in bin dev etc usr tmp
        # do
        # cp +recursive /$i /mnt
        # done

   You caanot use just "cp +recursive / /mnt", as that will result in a
   loop.

6) Sync the filesystem after you have played around enough, and reboot.

        # sync
        # lo

        (none) login: sync
        <wait for it to sync>
        ctrl-alt-del

   THIS IS IMPORTANT! NEVER EVER FORGET TO SYNC BEFORE KILLING THE MACHINE.

7) Change the bootdisk to understand which partition it should use as a
   root filesystem.  See INSTALL-0.11: it's still the word at offset
   508 into the image. You should be up and running.


8) When you've successfully started up with your harddisk as root, you
   can mount the older rootimage (rootimage-0.12) from a floppy, and
   copy over any files you find there that weren't on the newer
   root-image.

   Mounting a floppy is easy: make the directory /floppy, and write:

        # mount /dev/PS0 /floppy        (if you have a 3.5" drive)

   or

        # mount /dev/at0 /floppy        (for 5.25" floppies)

   After that the files can be copied to your harddisk, eg:

        # cp /floppy/usr/bin/compress /usr/bin
        # ln -s /usr/bin/compress /usr/bin/compress
        # cp /floppy/usr/bin/tar.Z /usr/bin
        # uncompress /usr/bin/tar.Z

That's it. Now go back and read the INSTALL-0.11, until you are sure you
know what you are doing.


                New features of 0.95, in order of appearance
                        (ie in the order you see them)

        Init/login

Yeah, thanks to poe (Peter Orbaeck (sp?)), linux now boots up like a
real unix with a login-prompt.  Login as root (no passwd), and change
your /etc/passwd to your hearts delight (and add other logins in
/etc/inittab etc).

        Bash is even bigger

It's really a bummer to boot up from floppies: bash takes a long time to
load.  Bash is also now so big that I couldn't fit compress and tar onto
the root-floppy: You'll probably want the old rootimage-0.12 just in
order to get tar+compress onto your harddisk.  If anybody has pointers
to a simple shell that is freely distributable, it might be a good idea
to use that for the root-diskette.

Especially with a small buffer-cache, things aren't fun. Don't worry:
linux runs much better on a harddisk.

        Virtual consoles on any (?) hardware.

You can select one of several consoles by pressing the left alt-key and
a function key at the same time. Linux should report the number of
virtual consoles available upon bootup. /dev/tty0 is now "the current"
screen, /dev/tty1 is the main console, and /dev/tty2-8 can exist
depending on your text-mode or card.

The virtual consoles also have some new screen-handling commands: they
confirm better to vt200 control codes.  Special graphic characters, and
the PF1-4 keys work somewhat in the application-key mode. 

        Symbolic links.

0.95 now allows symlinks to point to other symlinks etc (the maximum
depth is a rather arbitrary 5 links). 0.12 didn't like more than one
level of indirection.

        Virtual memory.

VM under 0.95 should be better than under 0.12: no more lockups (as far
as I have seen), and you can now swap to the filesystem as well as to a
special partition. There are two programs to handle this: mkswap to set
up a swap-file/partition and swapon to start up swapping.

mkswap needs either a partition or a file that already exists to make a
swap-area. To make a swap-file, do this:

        # dd bs=1024 count=NN if=/dev/hda of=swapfile
        # mkswap swapfile NN

The first command just makes a file that is NN blocks long (initializing
it from /dev/hda, but that could be anything). The second command then
writes the necessary setup-info into the file. To start swapping, write

        # swapon swapfile

NOTE! 'dd' isn't on the rootdisk: you have to install some things onto
the harddisk before you can get up and running. 

NOTE2! When linux runs totally out of virtual memory, things slow down
dramatically. It tries to keep on running as long as it can, but at
least it shouldn't lock up any more. ^C should work, although you might
have to wait a while for it..

        Faster floppies

Ok, you don't notice this much when booting up from a floppy: bash has
grown, so it takes longer to load, and the optimizations work mostly
with sequential accesses.  When you start un-taring floppies to get the
programs onto your harddisk, you'll notice that it's much faster now. 
That should be about the only use for floppies under a unix: nobody in
their right mind uses floppies as filesystems.

        Better FS-independence

Hopefully you'll never even notice this, but the filesystem has been
partly rewritten to make it less minix-fs-specific. I haven't
implemented all the VFS-patches I got, so it's still not ready, but it's
getting there, slowly.

        And that's it, I think.

Happy hacking.

                        Linus (torvalds@kruuna.helsinki.fi)

------------------------------

From: kroe@sbwarren.cs.sunysb.edu (KiYun Roe)
Subject: Re: Rebooting - an observation
Date: 9 Mar 92 02:00:31 GMT

In article <1992Mar8.233948.18770@colorado.edu> drew@cs.colorado.edu (Drew Eckhardt) writes:
>Ok, I should have qualified my statement.  On the better chipsets, 
>where shadowing is accomplished by remapping memory from the top 
>of extended RAM into the C0000 - FFFFF address range, copying 
>in the ROM, making it read only, and decreasing top of extended 
>RAM acording to CMOS, etc.  Lesser chipsets take 384K, run the 
>same address lines into it, and select either the shadow RAM or 
>real memory.

This would imply that QEMM could not get at the complete 384KB, since
some of it would conflict with ROM and video space.  However, I pulled
out Manifest, and it told me that QEMM recovered all of the 384KB
(which jived with my recollection that expanded memory increased by
384KB when I disabled shadowing).  Then I pulled out the QEMM manual,
and in one place in the whole manual it mentions that some computers
map the 384KB at the top of the memory space, right against (below) the
16MB boundary (I guess this is for ISA computers).  So, maybe there's
hope to recover it for Linux.

On the buffer space: I'd also like to see some sort of flexible
boundary between main memory and buffer memory.  Better yet, why not
abolish the boundary entirely and allocate both out of a common pool?
I/O and paging would become virtually the same thing.  I've heard of
this sort of thing being done in other operating systems, but I don't
know much about it.  I could imagine that it might even result in a
smaller kernel.
--
KiYun Roe                                       kroe@sbcs.sunysb.edu
Department of Computer Science
SUNY at Stony Brook
Stony Brook, NY  11794-4400                     (516) 632-7675

------------------------------

From: wayne@csri.toronto.edu (Wayne Hayes)
Subject: warning for Minix users going to Linux(was Re: Linux-0.95)
Date: 9 Mar 92 03:14:52 GMT

torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds) writes:
>4) Boot up linux again, fdisk to make sure you now have the new
>   partition, and use mkfs to make a filesystem on one of the partitions
>   fdisk reports.  Write "mkfs -c /dev/hdX nnn" where X is the device

Just in case you (==new Linux user) didn't know, Linux's file system is
compatible with the Minix file system, so if you're running Minix you
do NOT need to mkfs.  I have Minix and Linux co-existing on the same
partition quite nicely.  I nearly nuked my Minix partition (after
backing it up) when I was installing Linux, because I didn't know
this.

Linus: Please add this info to the next Install-notes.  Those of us
(like I was) who are really excited about Linux might not
realize that Linux uses Minix's file system.  The way it happened with
me is that I backed up and nuked my Minix-386 partition about a year
ago in favour of more space for OS/2.  Then when I heard about Linux, I
just *had* to try it.  So I re-installed my Minix partition solely for
the purpose of separating out the sources of things I might want in
Linux (zmodem, perl, etc).  Then I planned to nuke the Minix
partition and mkfs under Linux.  Of course I hadn't been reading
comp.os.minix at ALL for 12 months, and had no idea they were related.

-- 
For Canadian Beer fans: "La thesis is la good, because la typesetter is LaTeX."

Wayne Hayes     INTERNET: wayne@csri.utoronto.ca        CompuServe: 72401,3525

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
