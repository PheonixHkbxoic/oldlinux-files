From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Wed, 25 Mar 92 10:00:14 EST
Subject:  Linux-Activists Digest #151

Linux-Activists Digest #151, Volume #1           Wed, 25 Mar 92 10:00:14 EST

Contents:
  HD partitioning: Brginner's guide 2 (I Reid)

----------------------------------------------------------------------------

From: eonu24@castle.ed.ac.uk (I Reid)
Subject: HD partitioning: Brginner's guide 2
Date: 25 Mar 92 00:39:37 GMT

[ I have bad disk blocks, battles with edpart, corrupted images, even
work to do so this is out a bit later than originally planned. At the
moment it covers the creation of a new primary partition with pfdisk,
the use of fdisk, mkfs, the installation scripts and the changing of
the root device words in the boot image. It does'nt cover extended
partitions (I don't use any so can't test anything), booting entirely
from harddisk ('cos my machine is steadfastly refusing to allow my
linux partition to be bootable.... suggestions welcome please (I
suppose I could always code up something to do it but that seems a bit
excessive. I'll have another look at pfdisk and see if I can find a
good boot program to write to my boot record (maybe some of the
bootany stuff).

Any way, sorry it's late (I did try to upload it last night but my
comms link was ropey) so here it is.... comments and suggestions to
Iain_Reid@uk.ac.ed as always please.]


Section II: Installation to Hard Disk
=====================================


        You've tried the basic tests in section I; you liked what you saw
and you want to install to hard disk. Well, there are a few things you
should know before you start...


        The file system that Linux uses is not compatible with that of any
other operating system. You will, therefore, have to give it its own
area on your hard disk and keep that area separate from everything else.
This is done by creating a separate PARTITION (area of disk) for
Linux. This is quite straightforward but is a fairly major thing so
I'll start with a little theory so that you know what you're doing and
why...

... There are two types of partition that Linux can use- primary and
extended. At the moment, however, the extended partition code is still
being written and tested so, in the interests of simplicity, I will
only cover primary partitions.


Q. What is a primary partition?
A. The first sector (512 bytes) of a hard disk contains the primary
   boot record. This is a record of various pieces of information
   about the physical characteristics of the hard disk, code for use
   during bootup and information about partitions. There is a fixed
   amount of space allocated for this partition information (enough for 4
   entries) and so there is a limit to the number of divisions that a
   hard disk may have (4). A primary partition is one of these 4 major
   divisions of a hard disk.    

   This limit of 4 partitions on a disk was rather restrictive and so
   secondary or extended partitions were introduced to bypass it. As
   with most add ons, however, they are not as "clean" from a
   programming point of view and special care is needed when dealing
   with them.


Q. How do you create a primary partition?
A. Simple. You just edit the partition table in the primary boot
   record to reflect your needs. Reformat any areas of the disk
   affected by the partitioning and that's about it (in theory
   anyway!)



Armed with that extensive tour of the intricacies of hard disk
partitions you are now ready for the main event. To make things
clearer I will use the example of a machine with one hard drive, a 107
Mb IDE drive which at the start has one partition (all disks must have
at least one) but which I want to divide into a 47 Mb Linux partition and
a 60 Mb Dos partition. The actual figures involved are irrelevant and
are meant as an example, not a guide.

Q. How much disk space should I give to Linux?
A. How high is the sky? This is very much a personal decision based on
your computing interests, whether you intend to run in single or
multi-user mode, whether you are planning to have Usenet stuff on your
disk etc etc. I can't give you a figure that is guaranteed to be what
you'll need. I doubt I could even come close but, even with a couple
of versions of the kernel compiled up, lots of source sitting around,
lots of big text files (linux mail archives), lots of Usenet stuff,
lots of utilities etc etc I haven't gone beyond about 18 Mb (+ 8 Mb
for swapping). At the moment I'm using about 18 Mb and that's only
because I've just de-archived my entire Linux partition and there are
lots of duplicate files to throw out.



Structure of the rest of this section
=====================================

There are a number of topics which you may want/need to read about
before partitioning. To keep the main bit reasonably brief I have put these
at the end of the section as appendices. They are:

  Appendix A: The DOS bootable floppy

  Appendix B: Rootset.c


The rest is straightforward - Disk partitioning using pfdisk
                            - Installing Linux to hard drive
                            - Booting entirely from hard disk (not yet)
                            - Common problems and solutions (not yet)


Installing Linux to HD
======================

You will need: - the current bootimage (0.95a)
               - the current rootimage (0.95a)
               - tools to reinstall DOS, OS/2 after partitioning
               - Hard drive specifics (number of cylinders, heads and
                 sectors- look at your BIOS setup for these)


===========================================================================:
: There is a diving (sub-aqua) rule which applies to doing this kind of    :  
: thing to your setup.... make sure you have at least 2 ways out of any    :
: serious situation. What I mean by this is that you are about to kill     :
: off your HD... you will not be able to boot up into DOS (or whatever)    :
: on it so make sure that you have the tools to rebuild DOS on a write     :
: protected floppy somewhere handy. You should also have the tools to do   :
: this for Linux handy as well. What I used was                            :
:                                                                          :
: 1. a bootable DOS floppy with:                                           :
:                                                                          :
:     1.1: pkunzip.exe to restore my DOS backups                           :
:     1.2: DOS fdisk and format                                            :
:     1.3: rawrite.exe                                                     :
:     1.4: zipzap (a good binary file editor)                              :
:     1.5: Rootset.exe (see appendix C for src)                            :
:                                                                          :
:                                                                          :
: 2. Linux v0.95a rootimage rawritten to floppy (NOT WRITE-PROTECTED)      :
:                                                                          :
: 3. Linux v0.95a bootimage rawritten to a WRITE-PROTECTED floppy          :
:                                                                          :
: 4. Safe copies of the root and boot images stored as dos files (for      :
:    use with rawrite)                                                     :
:                                                                          :
:                                                                          :
: Escape plan 1: If all goes badly wrong you can use fdisk and format to   :
:                rebuild a dos disk partition.                             :
:                                                                          :
: Escape plan 2: If you can perform a floppy only boot into Linux you      :
:                can use pfdisk to try to recover your partitions.         :
:                                                                          :
: Escape plan 3: You can't salvage dos but you can install linux to HD.    :
:                Use rootset.exe to complete the Linux installation then   :
:                fix things from Linux.                                    :
:                                                                          :
============================================================================


What to do:
===========

1. Backup everything. You have no choice in this.... you either backup
   or say bye bye to DOS (or whatever else you have on your hard disk).

2. Boot up into Linux from floppy... login as root (see part 1 of this
   guide for details)

[ Remember, one HD, 107 Mb -> 47 Mb Linux + 60 Mb DOS ]

3. Once logged in run pfdisk as follows

# pfdisk /dev/hda

  This command means run pfdisk (a disk partitioner that comes on the
  0.95a root disk) on /dev/hda (my entire primary hard disk). Some text
  like this

============================================================================== 
# pfdisk version 1.2.1 by Gordon W. Ross  Aug. 1990
Modified by S. Lubkin  Oct. 1991
 
        Warning:  The device "/dev/hda" is assumed to have:
        cyls=306, heads=4, sectors=17 (an arbitrary guess).
 
        This program was compiled for generic UNIX and therefore
        does not know how to determine the disk parameters.  You must
        describe the disk geometry manually, using the 'G' command.
For help, enter: '?'
pfdisk>
============================================================================== 

  will appear if all goes well. The first thing to do is to tell pfdisk some
  things about your hard disk using the 'g' command ('g' for geometry).
  The format for this is g <cylinders> <heads> <sectors> so for a disk
  with 523 cylinders, 15 heads and 28 sectors (such as mine), the
  command would be 

pfdisk> g 523 15 28

  Next you use the 'l' command ('l' for list) to see what is currently
  set. You should see 4 entries (remember 4 primary partitions per hard
  disk) but only one of them should have any numbers in it (one 107 Mb
  partition) . For a partitioned disk this looks something like this

============================================================================== 
pfdisk> l
# Partition table on device: /dev/hda
geometry 523 15 28 (cyls heads sectors)
#  ID  First(cyl)  Last(cyl)  Name  # start, length (sectors)
1 128    512        228       Minix # 28, 96152
# note: first(1): phys=(512,1,0) logical=(0,1,1)
# note: first(1): phys=(512,1,0) should be (512,0,1)
2   6    229        521       DOSbi # 96180, 123060
3   0      0          0       empty # 0, 0
4   0      0          0       empty # 0, 0
active: 2
pfdisk> 
============================================================================== 

  You may have noticed that my first partition runs from cylinder 512
  to cylinder 228....a feat that is physically impossible as far as I
  know. This is an artifact from a battle with edpart (a DOS disk
  partitioner) which I would strongly advise you to avoid. The first
  cylinder should be 0 but the disk seems stable enough so I'm going
  to leave it until i have problems.

  Make a note of the number in the ID field (labelled) for the single
  partition. If you are partitioning a dos disk (as in the example
  then this value will probably be 6. For other systems other values
  apply.

  Make a note of the maximum cylinder (521 on mine despite the fact
  that the tech support people reckon 523 and the bios is set to 523)

  Now for the clever bit..... I decided I wanted 2 partitions (47Mb
  and 60 Mb) so I divide up my 523 cylinders in that ratio i.e.

  (47/107) x 523 = 229 clusters for Linux (near enough)
  (60/107) x 523 = 294 clusters for DOS (what a waste)
                   ---
                   523 <-- make sure everything adds up!
                   ---

  then you use the "unnameable" command to partition your hard disk.
  The format of this command is

  n sys_id first_cluster last_cluster sys_name

  where n ............ is the partition number
        sys_id ....... is a magic number (ID in example above)
    and sys_name ..... is optional and should not be used ('cos it
                       makes things fail (strange but true)


  For DOS sys_id is 6 (and you should have seen that in the ID field
  above), some other systems have their own code. Linux doesn't so
  pick an arbitrary number such as 128 for the Linux sys_id and use
  whatever the original ID was for the other partition (e.g. 6 for
  DOS).

  For the example disk I would type the following

pfdisk> 1 128 0 228
pfdisk> 2 6  229 521

  Explanation time..... partition 1 is now a Linux partition with 229
  clusters (0 to 228 inclusive). Partition 2 is a Dos partition with
  294 clusters (Mmmm... my bios is set up as 523 cylinders but every
  partitioning program I have tried reckons 521 (+ this was the
  maximum in the original partition so I reckoned that 521 was the one
  for me. Seems to work ok but I'd check with someone who knows what
  they are doing if I were you :-)).

  Last bit... last but not least is the 'a' command ('a' for active)
  which marks a partition as the one to boot from. I chose partiton 2
  (DOS) 'cos Linux cannot boot entirely from hard disk without some
  assistance (more later). So ....

pfdisk> a 2

  Finally, the 'wq' command ('wq' = write partition table and quit) so...

pfdisk> wq


 4. That wasn't too bad was it? Now all you need to do is make a Linux
    filesystem, install Linux and rebuild DOS. Filesystem first I think...

    ... at the command prompt use the fdisk command and you should see
    something like this

# fdisk
Disk 0:
    /dev/hda1:  48076 blocks unknown partition type 0x80
    /dev/hda2:  61530 blocks active 16-bit DOS (>=32M)
#

        What this tells you is that you have 2 partitions which, as far as
    Linux is concerned, are known as /dev/hda1 and /dev/hda2.
    /dev/hda1 is 48076 blocks long (1 block = 1 Kbyte thus this 
    partition is 48076/1024 or 46.9 Mb) and is of type 0x80 (hex 80 =
    decimal 128 (sound familiar yet?)). The other one is a 60 Mb Dos
    partition.

        Next you use the mkfs command (make filesystem) with the following
    format
 
    mkfs -c device blocks

    the -c option specifies that it should perform some checking as it
    works and the blocks figure is the one from fdisk (above). To make
    a file system on this partition I would type

# mkfs -c /dev/hda1 48076

    Your hard disk will be busy for a few minutes and you should get
    some numbers popping up and changing on your screen. Don't worry
    about these... you don't need to know anything about them (nor
    could I tell you much about them :-))


    Ah, finally.... you are ready to install to HD! Thanks to Jim
    Winstead's excellent installation scripts this is easy as pie so
    without further ado type the following

# mount /dev/hda1 /mnt

    to "attach" your newly created/formatted partition to the file
    system (currently on the floppy) at the mnt directory in the root
    directory. Remember to use whichever device you have formatted.

    Now type

# cd /INSTALL
# ./install /mnt

    to run the installation script and install the file system bits
    and pieces in whatever is attached to the file system at /mnt.
    This is of course part of your hard disk so you are now installing
    properly to hard disk from the original file system on the floppy
    disk. Clever huh?

        When that finishes (you'll know when) you unmmount you partition
    by using the umount command (e.g. umount /dev/hda1) and you should
    sync (see part 1 of this guide) and logout (with the exit command).

WARNING: ALWAYS SYNC IF POSSIBLE AND LOG OUT PROPERLY. THIS IS UNIX
         NOT MESSY-DOS AND THE 'OLD 3 FINGER SALUTE (CTRL-ALT-DEL) WAY
         OF EXITING IS LIKELY TO LAND YOU IN TROUBLE SO DON'T DO IT!


  5. Go back to DOS and edit the bootimage to reflect the partition
     upon which you have installed Linux. How? Well, there are 2 main
     methods:

        1. Edit a fresh copy of the bootimage and rawrite it to a
           FRESH floppy (i.e. not you existing bootimage 'cos you
           never know when you might need that (pure floppy boot +
           mount /dev/hd?? is a very useful way to sort out problems)).

        2. Edit the bootimage disk (while keeping a copy- same idea as
           at 1). I haven't come across any binary editors that can read
           in rawritten disks but the Turbo C absread and abswrite
           function seem to manage it (see Appendix C) so you could
                   write a small utility to make your life easier/safer (as I did)


        The important bit, regardless of the method used, is to change the
        bytes at offset 508 and 509 in the bootimage to store the major and
        minor numbers for your new Linux partition.

        For a hard disk the major number (offset 509) is always 3, and the
    minor number is a combination of primary or secondary HD drive and
    partition details (see FAQ for details). Suffice to say


    Device      Major    Minor       Device      Major    Minor
    ------      -----    -----       ------      -----    -----
    /dev/hda1     3        1         /dev/hdb1     3        65
    /dev/hda2     3        2         /dev/hdb2     3        66
    /dev/hda3     3        3         /dev/hdb3     3        67
    /dev/hda4     3        4         /dev/hdb4     3        68
    /dev/hda5     3        5         /dev/hdb5     3        69
    /dev/hda6     3        6         /dev/hdb6     3        70
    /dev/hda7     3        7         /dev/hdb7     3        71
    /dev/hda8     3        8         /dev/hdb8     3        72


  6. Boot up linux with your new boot floppy. It should give the
     loading messages and then switch to booting and running from hard
     disk.

         Taaaaaa-Daaaaaa!


  7. When you're happy with it logout and rebuild dos. I don't intend
         to cover this in any detail 'cos most dos manuals already do
     that. What you need to is to format your new dos partition using
     format (on the dos bootable floppy you made). Something like

A:\ format /u /s /v:"Dos_5_0" c:

         should do the trick. After that finishes you should have a
     bootable Dos partition on your hard disk and you can reinstall
     from your backups.
==============================================================================


Appendix A: The DOS bootable floppy
===========

Q. What is a "DOS bootable floppy"?
A. A DOS bootable floppy is a floppy disk containing just enough of DOS to be
   able to be "boot up" and produce a command prompt. It consists of 4 things:

      1. A DOS boot sector (first 512 bytes on the disk)
      2. MSDOS.SYS (a hidden dos system file)
      3. IO.SYS (another hidden dos system file)
      4. COMMAND.COM (the DOS command interpreter)

Q. Do I need one?
A. If you run DOS at the moment and want to keep DOS somewhere on your hard
   disk then you will need to create a DOS partition. Once created you will
   need to reinstall DOS to this partition and a bootable floppy makes this
   much, much easier.

Q. How do I make one?
A. You can create one in either of two ways using DOS commands.

1. Use the SYS command with a blank, DOS formatted floppy disk e.g.

# sys a:

   will copy the "system" (the 4 things above) to a disk in drive A.

2. Use the FORMAT command with the /s and /u switches e.g.

# format /s /u /f:1.44 /v:"Dos_Boot" a:

   will perform an unconditional format (checks for bad sectors etc) on the
   1.44 Mb floppy disk in drive A, labels it Dos_Boot (11 characters maximum
   allowed length) and copies the "system" on to it.

Now test it by resetting your machine with the boot disk in the floppy drive.
Your machine should start up (floppy is much slower than hard disk though)
and you should get a command prompt. Try some simple commands like DIR to
satisfy yourself that you are running from floppy only.

[ If your machine boots from hard disk and ignores the floppy you will need
  to check your BIOS setup and enable "Floppy Seek at Boot" (AMI BIOS) or
  equivalent option and try again. ]

Next you need to copy some things to your bootable floppy. What you copy is
entirely up to you but the following is the sort of thing I have on mine

4DOS  - 4dos.com            [ an excellent command.com replacement ]
      - aliases.txt         [ my command aliases/macros for 4dos ]

DOS   - ansi.sys
      - attrib.exe
      - emm386.exe
      - fdisk.exe
      - format.com          [ Absolutely essential! Do NOT forget ]
      - himem.sys
      - keyb.com

UTILS - pkunzip.exe         [ for restoring backups ]

autoexec.bat
command.com                 [ Just in case ]
config.sys
filelist                    [ dir /skf c: > filelist before I backed up ]

Once you've got everything you think you want onto the floppy write protect
it (in case of foolishness) and THOROUGHLY TEST IT (i.e. make sure it boots,
formats, restores backups etc 'cos you're going to have to rely on it!)
=========================================================================



Appendix C
==========
/********************************************************/
/* Rootset.c - modify Linux bootdisk root device entry  */
/*           - quick Turbo C hack by Iain_Reid@ed.ac.uk */
/********************************************************/


#include <stdio.h
#include <conio.h>
#include <process.h>
#include <dos.h>

void main(int ac, char **av)
{
        char buf[512];


        if (ac != 3) {
                fprintf (stderr, "%s: update Linux bootimage root device details.\n",
                        av[0]);
                fprintf (stderr, "Usage: %s <Major> <Minor>\n", av[0]);
                exit (-1);
        }

        /**************************************************************/
        /* Don't remove this keypress bit 'cos it gives you a chance  */
        /* to run this program from your dos boot floppy, remove that */
        /* disk, put your linux boot disk into the same drive, patch  */
        /* in the new root device details and save them. No HD or     */
        /* rawrite required! (v. handy if DOS is dead)                            */
        /**************************************************************/

        printf ("Insert Linux boot disk into drive A and press any key\n");
        getch();

        if (absread (0, 1, 0, &buf) != 0) {
                 perror ("Disk reading problem");
                 exit (-1);
        }

        printf ("Current rootdevice: Major %d Minor: %d\n", buf[509], buf[508]);

        buf[508] = atoi (av[2]);
        buf[509] = atoi (av[1]);

        if (abswrite (0, 1, 0, &buf) != 0)
        {
                 perror ("Disk writing problem");
                 exit (-1);
        }
        printf ("New rootdevice: Major %d Minor: %d\n", buf[509], buf[508]);

        exit(0);
}

/-----------------------------------------------------------------------------/

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.95a released on March 17, 1992

End of Linux-Activists Digest
******************************
