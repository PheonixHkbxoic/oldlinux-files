From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Sat, 1 Feb 92 16:30:21 EST
Subject:  Linux-Activists Digest #30

Linux-Activists Digest #30, Volume #1             Sat, 1 Feb 92 16:30:21 EST

Contents:
  Re: Help!  My filesystem is *censored*, and fsck -a doesn't help! (Linus Benedict Torvalds)
  Legal status of BSD porting? (Morgan Schweers)
  bug in fread(3S) causes sort(1) to fail (Douglas E. Quale)
  command list (first cut) (Douglas E. Quale)
  simple repeated fork() crashes program (Andrew Haylett (GEC-Marconi Research Centre))
  How do I rebuild the curses library? (Teresa Selling)
  EISA (The Grand Master)
  Re: EISA (Jordan Powell Hargrave)

----------------------------------------------------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Re: Help!  My filesystem is *censored*, and fsck -a doesn't help!
Date: 1 Feb 92 16:23:40 GMT

In article <1992Feb01.102951.25667mrs@netcom.COM> mrs@netcom.COM (Morgan Schweers) writes:
>Greetings,
>    The messages coming up are: "Zone X: in use, counted=0"
>
>    And a comment about a directory which is missing both it's "." and
>its ".." directories.  (Moreover, I can't remove said directory.)

Right. fsck (and no, it's /not/ filesystem f*ck :) doesn't try to remove
directories even when they look bad - it wouldn't be too hard to do: do
people think this would be a good idea (possibly handled by a new flag)?

This is one reason why I like multiple smaller partitions: fsck isn't
that reliable a way to clean up things, so I'd rather copy all the files
that are salvageable onto another filesystem, and clean the bad one up
by way of "mkfs". fsck is better at just simple problems, and to find
out that things are wrong.

>    Worse yet, there's a constant process (init) which is writing to a
>file named 'annoy.log', as part of my debugging, and I didn't realize
>at first that this might ('might' hell, WOULD!) interfere with fsck.

Yes, /very/ bad idea. I use fsck -vs quite often to just see the general
state of the filesystem, and that is guaranteed not to worsen things: it
doesn't even try to repair things. Using 'fsck -a' is really something
that should be avoided, and it should definitely /not/ be done while
anything is writing to the disk (including piping the output from fsck
itsel to a file, as you found out).

>    fsck -a didn't do ANYTHING for the Zone messages.  I managed to
>dealwith all of the "Zone X: not in use, counted=1" errors by removing
>files that I guessed were causing problems.

Ok, this one seems like a bug in fsck when repairing: I'll take a look
at it.  Fsck repairing is somewhat untested: I never get filesystem
errors (but then I'm careful..  syncing by hand often just in case...),
unless I'm testing out new features. 

>    In general, my filesystem seems to be okay, but *SOMETHING* is
>fucked somewhere.  I can't recover the directory that has been
>trashed, and I'm not sure what files have lost sectors...

The best idea is to backup onto another partition (or using tar to
floppies) ..  then mkfs and copy back.  I'll look into fsck, but even if
I got these particular things to work all right, the back-up strategy is
still the best one - fsck will never be /that/ clever that it cannot
f*ck up sometimes.

Those of you with minix fsck could try to use that (won't work if you
use symbolic links: minix fsck doesn't understand them), as that one is
a lot more tested.  It gives you no end of "mode not cleared" messages,
but other than that it's ok.  I've used linux mkfs since I wrote it, and
it has cleared up my minor problems (when I implemented symlinks I had
some /major/ bugs the first time but fsck worked ok), but that doesn't
mean it's totally safe yet. 

                Linus

------------------------------

From: mrs@netcom.COM (Morgan Schweers)
Subject: Legal status of BSD porting?
Date: 1 Feb 92 13:46:15 GMT

Greetings,
    I've been porting a *BUNCH* of BSD stuff, so I can finally get init/login
working, and I've suddenly wondered...  Can I do that?  It *LOOKS* okay from
the headers, since I'm only making a few mods here and there, and commenting
them as my changes, it should be okay, right?

    After all, I'd hate to have a fully working system, then discover that
it's illegal!  *grin*

    Needless to say, I'm porting getpass, syslog, etc., and have been
browsing ftp.uu.net:packages/bsd-sources/* for a while now.  The brain is
slowly going into overload, and I haven't even looked at the Kernel yet!

                                                --  Morgan Schweers
-- 
Hacker, Furry, SF reader, gamer, art collector, writer.  24 hours isn't enough.
mrs@netcom.com   | I'm a practicing furry!  Some day I hope all the practice
Freela @ Furry   | will pay off, and I'll grow fur!  --  me
K_Balore @ Furry |___________________ CLEAN C:\USR\SPOOL\*.* [SigVir] /SUB
Hi! I'm a .signature virus!  Add me to your .signature and join in the fun!

------------------------------

From: quale@saavik.cs.wisc.edu (Douglas E. Quale)
Subject: bug in fread(3S) causes sort(1) to fail
Date: 1 Feb 92 14:59:54 GMT

The sort(1) distributed in the textutils-1.1 binaries on tsx-11.mit.edu
doesn't work.  You don't need any particular input file to demonstrate
this -- a bug in fread(3S) causes it to loop forever on any input.  I
think this bug may have been mentioned here before, but fread.c doesn't
set _IOEOF properly on large reads.
Patch estdio as follows:

*** fread.c     Wed Aug 21 18:19:24 1991
--- fread.c~    Sat Feb  1 03:50:39 1992
***************
*** 103,113 ****
      }
  
      for (reed = readsize;
!          reed != 0 && (red = __ioread(fileno(fp), (char *) p, reed)) != 0;
         p += red, reed -= red)
        ;
  
      if (reed != 0) {
        if ((readsize -= reed) >= leftover) {
        itemsleft -= (readsize-leftover)/size;
        if (leftover != 0)
--- 102,113 ----
      }
  
      for (reed = readsize;
!          reed != 0 && (red = __ioread(fileno(fp), (char *) p, reed)) > 0;
         p += red, reed -= red)
        ;
  
      if (reed != 0) {
+       SETFLAG(fp, red ? (_IOERR|_IOEOF) : _IOEOF);
        if ((readsize -= reed) >= leftover) {
        itemsleft -= (readsize-leftover)/size;
        if (leftover != 0)
*** _ioread.c   Wed Aug 21 18:19:18 1991
--- _ioread.c~  Sat Feb  1 03:47:08 1992
***************
*** 22,26 ****
--- 22,29 ----
      r = read(fd, p, n);
    while (r == -1 && (errno == EINTR || errno == EAGAIN));
  
+ /* We can't return an error this way!
    return r < 0 ? 0 : r;
+ */
+   return r;
  }

--
Doug Quale
quale@saavik.cs.wisc.edu

------------------------------

From: quale@saavik.cs.wisc.edu (Douglas E. Quale)
Subject: command list (first cut)
Date: 1 Feb 92 15:48:59 GMT

This is a first cut of a list of commands for Linux.  I have included
almost exclusively commands that would go in section 1 of the manual
-- no games and few administrative (1M) commands.  I included many of
the commands required by POSIX (if anyone has a complete list, I welcome
additions).  Not all of the commands have necessarily been ported yet,
but I list a source for each command that has been ported or that I guess
could easily be ported.  For example, finger doesn't have BSD listed after
it because I don't know if the port would be straightforward as I haven't
looked at the source.  Checknr does have BSD listed, because even if noone
has done it yet, it should be very easy to get it working under Linux.
I have made some editorial comments enclosed in brackets.  Also, I have
included UUCP commands and the most important networking commands.  Even
though it may be a while before Linux has sockets and TCP/IP, I thought it
would give us something to look forward to.

Additions and corrections to this list are welcomed.



Linux Commands (First Cut)
==========================

[               GNU shellutils-1.6 [need to fix bad prototypes in unistd.h]
agrep           freeware [approximate grep from cs.arizona.edu -- good stuff]
apply           [similar to shell builtin for]
apropos
ar              GNU
as              GNU gas-1.38
as86            freeware [binaries only.  Gracias to Bruce Evans.]
at
atq
atrm
awk             GNU gawk-2.11
banner          [BSDish banner in BSD.  SYSVish banners s/b freeware someplace]
basename        GNU shellutils-1.6
bash            GNU bash
batch
bc              GNU
bdiff
biff            BSD [also consider newmail from the Elm distribution]
binmail
cal             BSD
calendar        BSD
cat             GNU textutils-1.1
catman
cb
cc              GNU gcc-1.40 [soon to be 2.0, I hope!]
cdiff
cflow
checknr         BSD
chfn
chgrp           GNU fileutils-3.1
chmod           GNU fileutils-3.1
chown           GNU fileutils-3.1
chsh
ci              freeware
cksum           BSD
clear           BSD  [As easy as ``tput clear''.]
cmp             GNU textutils-1.1
co              freeware
col             BSD
colcrt          BSD
colrm           BSD
column          BSD
comm            GNU textutils-1.1
command         [POSIX invention.  What the heck is this, anyway?]
compress        BSD.  also freeware [need to fix bug in estdio/freopen.c]
cp              GNU fileutils-3.1
cpio            [GNU and BSD, but I'm not aware of a port as of yet]
crc
create          [POSIX invention]
crontab
csh             [Try the freeware tcsh, and then come back to bash.]
csplit          GNU textutils-1.1
ct
ctags
cu
cut             GNU textutils-1.1
cxref
date            GNU shellutils-1.6
dc              [Bletcherous.  Use bc instead.]
dd              GNU fileutils-3.1
df              GNU fileutils-3.1
diction
diff            GNU diff-1.15
diff3
diffmk
dir
dircmp
dirname         GNU shellutils-1.6
du              GNU fileutils-3.1
echo            BSD
ed
edit
egrep           GNU egrep-1.5
env             GNU shellutils-1.6
error           BSD
ex              GNU elvis-1.4
expand          GNU textutils-1.1
expr            GNU shellutils-1.6
false           BSD [This one is trivial, 1 line in C or sh.]
fgrep           GNU fgrep-1.1
file            freeware [excellent version by Ian Darwin]
find            GNU find-3.3
finger
fmt             BSD
fold            GNU textutils-1.1
from            BSD
fsck            Linux
ftp             [networking]
gdb             [GNU gdb awaits ptrace(2).]
getconf         [POSIX invention]
getopts         [bash builtin.  Should provide standalone for other shells.]
grep            GNU grep-1.5
groups          GNU shellutils-1.6
head            GNU textutils-1.1
hexdump         BSD od
hostid          [networking]
hostname        BSD
id              GNU shellutils-1.6
indent          BSD
install         GNU fileutils-3.1
installbsd      BSD
iostat          
ipcrm
ipcs
join            GNU textutils-1.1
kermit          freeware
kill            BSD [also a bash builtin]
ksh             GNU bash
last
ld              GNU binutils
ld86            freeware [binaries only]
leave           BSD
less            freeware less-177
lesskey         freeware less-177
lex             GNU flex-2.3
line
link            [Do we need this?]
lint            [Try ``gcc -O -ansi -pedantic -Wall'', must fix include files]
ln              GNU fileutils-3.1
locale
localedef
locate          GNU find-3.3
lock            BSD
logger          [BSD]
login           [I recommend trying the freeware shadow password suite.]
logname         GNU shellutils-1.6
look            BSD
lorder
lp
lpq
lpr
lprm
lpstat
ls              GNU fileutils-3.1
m4              GNU m4
machine         BSD
mail
mailq
mailx
make            GNU make-3.6
man
merge
mesg            BSD
mkdir           GNU fileutils-3.2
mkfifo          GNU fileutils-3.1
mkfs            Linux
mknod           GNU fileutils-3.1
mkstr           BSD
more            BSD [Not yet ported?  Use less.]
mount           Linux
mt              [No tapes for Linux, yet.]
mv              GNU fileutils-3.1
mvdir           [Linus post.  When rename is fully supported, we won't need it.]
netstat         [networking]
newaliases
news
nice            GNU shellutils-1.6
nl              [Try ``pr -nt'', after you fix GNU pr's -t option.]
nm              GNU binutils
nohup           GNU shellutils-1.6
od              BSD
pagesize
passwd
paste           GNU shellutils-1.6
patch           freeware
pathchk         GNU shellutils-1.6
pax             [POSIX invention]               
pg              [Use less.]
pmake           BSD
pr              GNU textutils-1.1 [broken -t option can be fixed w/ 2 lines]
printenv        GNU shellutils-1.6
printf          GNU shellutils-1.6
ps
ptx
pwd
quota           [Linux doesn't need this fascism.]
ranlib          GNU
rcp             [networking]
rcs             freeware
rcsdiff         freeware
rcsmerge        freeware
rdist           [networking]
renice
reset
rev
rlogin          [networking]
rm              GNU fileutils-3.1
rmdir           GNU fileutils-3.1
rsh             [networking]
ruptime         [networking]
rwho            [networking]
rz
script
sed             GNU sed-1.08
sendto          [POSIX invention]
sh              GNU bash
shar            freeware
size            GNU binutils
sleep           GNU shellutils-1.6
soelim          BSD
sort            GNU textutils-1.1 [need to fix bug in estdio/fread.c to work]
spell
spellin
spellout
split           GNU textutils-1.1
strings         BSD [I don't think I like the BSD strings.  Freeware, anyone?]
strip           GNU binutils
stty            GNU shellutils-1.6
su
sum             GNU textutils-1.1
sync            Linux
sz
tabs
tac             GNU shellutils-1.6
tail            GNU textutils-1.1
talk
tar             GNU tar-1.10
tee             GNU shellutils-1.6
telnet          [networking]
term
test            GNU shellutils-1.6 [need to fix bad prototypes in unistd.h]
tftp            [networking]
time            [GNU.  ported?]
tip
touch           GNU fileutils-3.1
tput            GNU tput-1.0
tr              BSD [take care with differing SYSIII and BSD behavior]
true            BSD  [My favorite.  The source is 1 line in C, 0 in sh.]
tset
tsort           BSD
tty             GNU shellutils-1.6
ul              BSD
umount          Linux
uname           GNU shellutils-1.6
uncompress      BSD.  also freeware [need to fix bug in estdio/freopen.c]
unexpand        GNU shellutils-1.6
unifdef         BSD
uniq            GNU textutils-1.1
unlink
unshar
unzip
update          Linux
uptime
users           BSD
uucp            [uucp]
uud             freeware
uudecode        BSD
uue             freeware
uuencode        BSD
uulog           [uucp]
uuname          [uucp]
uupick          [uucp]
uusend          [uucp]
uustat          [uucp]
uuto            [uucp]
uux             [uucp]
vacation
vi              GNU elvis-1.4
vis             BSD
vmstat
w
wall
wc              GNU textutils-1.1
what            BSD
whatis
whereis
which           freeware which6
who
whoami          GNU shellutils-1.6
window
write
xargs           GNU find-3.3
xstr            BSD
yacc            GNU bison-1.14
yes             GNU shellutils-1.6
zcat            BSD.  also freeware [need to fix bug in estdio/freopen.c]
zip
zipnote
zipsplit

--
Doug Quale
quale@saavik.cs.wisc.edu

------------------------------

From: Andrew Haylett (GEC-Marconi Research Centre) <ajh@gec-mrc.co.uk>
Subject: simple repeated fork() crashes program
Reply-To: ajh@gec-mrc.co.uk
Date: Sat, 1 Feb 1992 19:42:37 GMT

Can somebody explain why this code misbehaves?
Seems like fork() manages to corrupt the calling process code in some way.

/* This program either locks up, produces a segmentation fault from the
parent, or even an "Alarm clock" message, after a random number of forks,
when run under an unpatched 0.12 kernel on my 386SX16, 4Mb. Compile with:

        gcc -o crash crash.c

Sometimes the program code or string space is obviously corrupted before it
dies; for example, the messages can become corrupted or the reported PIDs can
be wrong. */

#include <stdio.h>

main()
{
    int pid, i;

    while (1) {
        if (pid = fork()) {     /* we are the parent */
            printf("Child %d is alive.\n", pid);        fflush(stdout);
            wait(pid);
            printf("Child %d has died.\n", pid);        fflush(stdout);
            sleep(1);
        }
        else {                  /* we are the child */
            printf("  I'm the child %d.\n", getpid());  fflush(stdout);
            for (i = 0; i < 10000; ++i);
            printf("  Goodbye, cruel world.\n");        fflush(stdout);
            exit(0);
        }
    }
}

----
Andrew Haylett       | Inet: ajh@gec-mrc.co.uk   | Fax: +44 245 75244
GEC-Marconi Research | Tel: +44 245 73331 x.3283 | Telex: 995016 GECRES G


------------------------------

From: tselling@peabody.iusb.indiana.edu (Teresa Selling)
Subject: How do I rebuild the curses library?
Date: Sat, 1 Feb 92 16:13:07 GMT

I have never rebuilt a library without a makefile and this one has a
messed up Makefile.  Can someone give me instructions who has
rebuilt this library.

Also I picked up xcomm from wuarchives and managed to compile it
on Linux with only minor little changes, it works with sz and rz
with $ rz or $ sz.  There is another package thats supposed to be
a variation of procomm, but it needs the curses library (which is
why I'd like to be able to build it.  Also what packages is anyone
else using that allow for zmodem file transfers under linux?  I
could not find any way to do this under kermit.
And xcomm is anoying in that it uses <esc> key for its own purposes
and it conflicts with vi on the remote.  I imagine that it should
not be too difficult to change this, but I haven't looked yet. 

Also I cannot get rz with recovery to work.  It will not download
if a file has the same name already in the download directory unless
you tell it to clobber it.  Then it justs starts from scratch again.
Has anyone else gotten the z-modem recovery parameter to work?
--
Teresa Selling, IUSB, Indiana.


------------------------------

From: asg@sage.cc.purdue.edu (The Grand Master)
Subject: EISA
Date: 1 Feb 92 16:28:09 GMT


    I asked once, and never got an answer on this - so I will ask in 
a different way. Since no one responded to my previous query, I will
assume that there is noone out there working on an EISA version of
linux - so here are my questions:
   1) what will have to be re-written to work with an EISA bus?
       I assume the disk driver will be different, but what else?
   2) will the ISA version still work with an EISA bus?
   3) Anyone out there with an EISA machine and a 32-bit SCSI
      controller?
 
                        Bruce
-- 
-How long must we fight? How long        Courtesy of Bruce Varney
 until we can live in peace.             asg@sage.cc.purdue.edu 
-Until the madmen are dead my son,      
 Or until they realize that they cannot count on us to do nothing

------------------------------

From: jh5y+@andrew.cmu.edu (Jordan Powell Hargrave)
Subject: Re: EISA
Date: 1 Feb 92 18:42:16 GMT


  I have a Gateway 486-33 EISA box with the Adaptec 1742 controller.
I haven't been able to get Linux working with my HD yet.. (I'm running
controller in Enhanced mode, as one of my SCSI drives doesn't work in
Standard mode, go figure. :P)
  Linux does boot up ok off floppy, though, so no changes should be needed
for EISA machines (Unless you want to overcome the 16Meg DMA limitations. :)


  Jordan Hargrave
  Carnegie Mellon University

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
