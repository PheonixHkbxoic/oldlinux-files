Subject: Linux-Development Digest #540
From: Digestifier <Linux-Development-Request@senator-bedfellow.MIT.EDU>
To: Linux-Development@senator-bedfellow.MIT.EDU
Reply-To: Linux-Development@senator-bedfellow.MIT.EDU
Date:     Fri, 11 Mar 94 22:13:10 EST

Linux-Development Digest #540, Volume #1         Fri, 11 Mar 94 22:13:10 EST

Contents:
  VGA ID function - help needed! (Andrew M Dyer)
  Re: Startup code (DOS boot program) (Nick Holloway)
  Re: Amiga File System, once again (John Edward Tillema,&91M+soAj)
  Re: [Q] What's bsd_ioctl ? (Zeyd M. Ben-Halim)
  A truely non-debugging Kernel? (Alex Ramos)
  notebook doesn't warn when batteries are empty (Pieter.Verhaeghe)
  Re: inb and inb_p??? (Greg McGary)
  Mountain Mach2 tape controller - Anyone? (Eric Kimminau)
  Re: QUERY: Assembler Code Perversion (keeper of a million bits)
  ASPI programming (P. Feddema)
  Re: Amiga FileSystem, Anyone? (Darren Reed)
  Re: Specialix driver (Brandon S. Allbery)
  kernel mmap() , MAP_SHARED/PROT_READ/PROT_WRITE (Ronnie Sahlberg)
  Re: Startup code (DOS boot program) (Romano Giannetti)
  Re: X11R6? (Christian Pablo Tagtachian)
  if I crash the kernel, should I tell anyone? (chris ulrich)

----------------------------------------------------------------------------

From: amd@chinet.chinet.com (Andrew M Dyer)
Subject: VGA ID function - help needed!
Date: Fri, 11 Mar 1994 04:08:41 GMT

HI!

I'm currently starting a project to write a XFree86 driver for the
IIT AGX-014/015 chips.  Below is a fragment of code to ID the chipset.
I only have a agx-014 card, so I would like for somebody with an agx-015
based card to try this out and let me know how it works.  This code will
compile under djgpp with libpc, and should be easy to modify for TurboC.

/*
 * testiit.c
 *
 * Dos based s/w to run a test of how iit AGX=014 registers respond
 * to various peeksies and pokesies
 * AMD 3/8/94
 */
 

#include <stdio.h>
#include <pc.h>

#define iit_idx 0x216a
#define iit_data 0x216b
#define iit_agx_mode7 0x6c

void writeidxb(addr, data)
unsigned char addr, data;
{
outportb(iit_idx, addr);
outportb(iit_data, data);
return;
}

unsigned char readidxb(addr)
unsigned char addr;
{
outportb(iit_idx, addr);
return(inportb(iit_data));
}
 
int main(argc, argv)
int argc;
char *argv[];
{
unsigned char tmp;
unsigned short addr;

ScreenClear();

/* do a read/write to agx mode register 7 to decide between */
/* agx-14 and agx-15 */

tmp = readidxb(iit_agx_mode7);          /* either agx-14 or 15 */
writeidxb(iit_agx_mode7, (!tmp && 0x3f));
if (readidxb(iit_agx_mode7) != tmp)     /* check mode register 7 */
        printf("agx 15 detected\n");
else
        printf("agx 14 detected\n");
writeidxb(iit_agx_mode7, tmp);
}

 


-- 
Andrew Dyer                        Harrisburger's Fourth Law of the Lab:
amd@chinet.chinet.com              experience is directly proportional to
                                   the amount of equipment ruined.

------------------------------

From: alfie@dcs.warwick.ac.uk (Nick Holloway)
Subject: Re: Startup code (DOS boot program)
Date: Fri, 11 Mar 1994 13:28:23 GMT

In <2lpoqd$egi@serra.unipi.it> romano@pimac2.iet.unipi.it (Romano Giannetti) writes:
> In comp.os.linux.development, Erik de Romph (erik@dutcvk5.tudelft.nl) wrote:
> > There is a program called bootlin which does what you want.
> 
> Not exactly, I think... I use bootlin and I remember it had to be
> runned from the config.sys, and not from a "Running DOS environment".
> It was explained why in the README (Thid could be an hint...). Or I am
> using a very old version?

The version I last looked at could be run from the dos command line,
but it said it couldn't deal with compressed kernels.  My brief
experimentation failed (tweak-reboot-fail-reboot-login cycles are
too long).

I don't understand why it can't deal with compressed kernels, since
I would have thought it would have performed the same task as LILO --
stuffing the kernel image into memory at the correct location, and then
running it.

I was thinking of having a floppy where the first 512K was a dos fs with
bootlin (or equivalent) and a kernel image.  The next (1440-512)K would
then be a Linux fs, which would be loaded as a ramdisk (I did think that
the ramdisk looking for a super-block at block 512 could be deprecated --
but this is a new use for it)

Alternatively, I guess the same could be done using UMSDOS, since the
512K is far too large for a minimal compressed kernel.

--
Nick Holloway |  `O O'  | alfie@dcs.warwick.ac.uk, alfie@warwick.UUCP,
[aka `Alfie'] | // ^ \\ | ..!uunet!mcsun!uknet!warwick!alfie

------------------------------

From: tillemaj@news.doit.wisc.edu.UUCP (John Edward Tillema,&91M+soAj)
Subject: Re: Amiga File System, once again
Date: 11 Mar 1994 05:10:17 GMT

From article <2lmrfu$db9@wizard.uark.edu>, by dfaulkne@comp..uark.edu (Donald Faulkner):
> I've been reading for some time the discussion about implementing an
> Amiga File System for Linux. It seems that all the discussion has 
> centered around such a file system for ix86-Linux. Other than the 
> fact that this is probably possible, I see no reason why such a 
> file system is needed. PC users don't need an Amiga file system, and 
> the rest of us who have Amigas can use CrossDos(tm) or MSH, or some
> other transfer system to create a PC-readable disk. So on the PC side,
> an Amiga file system is kindof useless.
> 
> The big question (and I think this was probably the main point of the 
> original post) is whether an Amiga file system will be written for Amiga
If I remember right, the original poster had some Amiga floppies he wanted
to read on his PC but _didn't_ have access to an Amiga, so he couldn't
use MSH: or PC0:.

I do think that being able to read Amiga floppies on a PC would be nice,
but it doesn't sound like it is possible.  Though it would probably make
more sense to allow Linux to read Amiga hard drive's which would be of
use to the Amiga Linux project and others who have Amigas HDs and 
Linux on PCs and want to transfer files.

> Linux. While it is true that we can use msdos disks, most disks that 
> are owned by Amiga owners aren't formated msdos, ext2, or even minix, but
> as amiga. It would be really nice if we could mount our amiga floppies
> and hard disk partitions in Amiga Linux. I don't really see why this would
> be very difficult (though I am not volunteering to do it :).
> 
I agree, it shouldn't be too difficult for the Amiga port though as you said
I'm not volunteering mainly since my Amiga is a 68k machine and its in Seattle
WA and I'm in Madison WI.

John
-- 
--
John Tillema                                           //
tillemaj@cae.wisc.edu                               \\// + 'nix


------------------------------

From: zmbenhal@netcom.com (Zeyd M. Ben-Halim)
Subject: Re: [Q] What's bsd_ioctl ?
Date: Wed, 9 Mar 1994 21:13:15 GMT

In article <1994Mar9.050324.5074@random.ccs.northeastern.edu>,
Steven Yampolsky <minsk@ccs.neu.edu> wrote:
>Hi!
>
>       For the past couple of days I've been trying to port SPIM MIPS
>Emulator 5.2 to Linux. Yesterday I got stuck on a linking error:
>
>     spim.o: Undefined symbol _bsd_ioctl referenced from text segment 
>
>The only reference to bsd_ioctl is in /usr/include/bsd/sgtty.h which
>goes something like this:
>       #undef ioctl
>        #define ioctl  bsd_ioctl
>
>Can somone help me here?

If you use anything in /usr/include/bsd you should use -lbsd.

Zeyd


-- 
---
Zeyd M. Ben-Halim       zmbenhal@netcom.com
10479 1/4 Santa Monica Blvd, LA, CA, 90025 (310) 470-0281

------------------------------

From: ramos@engr.latech.edu (Alex Ramos)
Subject: A truely non-debugging Kernel?
Date: 11 Mar 1994 03:24:33 GMT


Geez! The kernel has _so much_ debugging code (sanity checks, etc) that
I wonder how much smaller it could be. It seems most kernel developers
have never heard of #ifdef... Just a thought :-)

--
Alex Ramos <ramos@engr.latech.edu> * This message is copyrighted material!
Louisiana Tech University BSEE/Sr  * All rights reserved. No warranty, etc

------------------------------

From: pive@uia.ac.be (Pieter.Verhaeghe)
Subject: notebook doesn't warn when batteries are empty
Date: Thu, 10 Mar 1994 08:45:16 GMT

I have the following problem:
When the batteries are running empty, my computer should beep, this works
fine under an unmodified MS-DOS but not under Linux (when the batteries 
are empty my computer just stops working :-().
There is an option in BIOS-setup that enables (or disables) this property,
whatever I put on, my computer refuses to beep in the right time. (There 
is a MS-DOS program that enables or disables this property, but it
refuses to work under the dos emulator: is say it doesn't find the right 
hardware).
My question is: does there exists a program (or kernel patch) that
enables this property?

BIOS:
=====
VGA Bios Version 3.11
Copyright (c) Cirrus Logic Inc. 1989-1991
Copyright (c) 1984-91 Award Software Inc. 1984-1988 All Rights Reserved.

486SLC Modular BIOS GC-21 Version 3.15.1
Copyright (c) 1984-91 Award Software Inc.
486SLC BIOS Version B39V3122(R) (Mar 18,1993) Award Software Inc.

CPU
---
Cyrix 486SLC

OS
__
Linux 0.99.14 (slackware 1.1.1)

If you need more data, I'll be glad to give them
Thanks
        Pieter

 

=========================================================================
P. Verhaeghe
University of Antwerp,RUCA,Department of Mathematics and Computer Science
Groenenborgerlaan 171                                  Tel: +32 3 2180376
B-2020 Antwerpen, Belgium                              Fax: +32 3 2180217

E-mail: pive@banruc60.bitnet (or pive@wins.uia.ac.be)
=========================================================================

------------------------------

From: gkm@tmn.com (Greg McGary)
Subject: Re: inb and inb_p???
Date: 11 Mar 1994 17:30:53 -0500
Reply-To: gkm@tmn.com (Greg McGary)

|         This may be a stupid question to ask, but what is the
| difference between inb and inb_p or outb and outb_p ??

The "_p" variants pause after reading or writing to the port.  The pause
makes some devices happier.

For snappy answers to this and other kernel questions, refer to the
Linux kernel hackers guide, found on tsx-11.mit.edu in

        pub/linux/docs/linux-doc-project/khg-0.5.tar.gz

and someplace else (I don't know where, off the top of my head) on
sunsite and other places.

--
Greg McGary          (703) 729-6217          gkm@tmn.com
525K East Market Street, #110, Leesburg, Virginia, 22075

------------------------------

From: ekimmina@pms709.pms.ford.com (Eric Kimminau)
Subject: Mountain Mach2 tape controller - Anyone?
Date: 11 Mar 1994 14:11:50 GMT


Does anyone else using Linux have a Mountain Mach2 hardware
compression tape controller? Have you tried using ftape with it? Has
anyone tried contacting mountain about writing an ftape driver for
it?

Thanks!


-- 
Eric Kimminau                       Workstation Systems Department
313-322-3431                        Product & Manufacturing Systems
ekimmina@pms709.pms.ford.com        Ford Motor Co.
Planning and Implementation         "Not an official Ford Spokesperson"

------------------------------

From: cgull@wd40.ftp.com (keeper of a million bits)
Subject: Re: QUERY: Assembler Code Perversion
Date: 9 Mar 94 02:23:15 GMT
Reply-To: cgull@ftp.com

In article <1994Mar6.102501.1965@penrij.uucp>,
John R. Campbell <soup@penrij.UUCP> wrote:
>I'm willing to bet that this is NOT the right group to post this Question
>(but I will anyway).
>
>I've been handed a sh*tload of MASM source code for the 386/486 (SCO UNIX)
>and I need to convert it to a _REAL_ assembler (GAS on Linux, of course).
>
>Anybody have any dirty tricks???

Long long ago and far, far away, some early versions of SVR3 for the
386 came with a shell script to do most of the job of munging MASM
code into SVR3 'as' syntax.  My copy of Microport SYSV/386 3.0e had
this.

Now, SVR3 'as' is still a ways from 'gas', but it would be either 1) a
good first step or 2) a good base to hack a MASM->gas script from.

------------------------------

From: fed@dutiag.twi.tudelft.nl (P. Feddema)
Subject: ASPI programming
Date: Fri, 11 Mar 1994 14:18:57 GMT


Does anyone know how to program CD-ROM devices using ASPI?
Any information on the subject (books, docs on public ftp-sites,
other info) is most welcome. 

If you have any information, please let us know, preferably per
e-mail. If we are barking up the wrong tree here and there are
other newsgroups that may have more (specialized) information,
please let us know. We are getting quite desperate here.

Ir Pascal R.M. Feddema (fed@dutiag.twi.tudelft.nl)
Delft University of Technology
Depertment of Mathematics and Informatics

------------------------------

From: avalon@cairo.anu.edu.au (Darren Reed)
Subject: Re: Amiga FileSystem, Anyone?
Date: 10 Mar 94 08:58:34 GMT

rob@pe1chl.ampr.org (Rob Janssen) writes:

>In <DHOLLAND.94Mar5232531@husc7.harvard.edu> dholland@husc7.harvard.edu (David Holland) writes:

>>The strange stuff the trackdisk.device does should be possible with PC
>>hardware, unless that hardware is even less capable than I thought. If
>>the Amiga does something else, like write more tracks than the average
>>PC drive can access, I don't know about it.

>The PC has a specialized floppy disk controller that understands and
>handles the industry-standard MFM format of formatting diskettes.
>The Amiga does not use that standard format (and neither does the Mac)

I believe, having used sevral disk editors on the Amiga, that there is
an option _somewhere_ which turns MFM on/off - along with other floppy
formats.  The Amiga reads and writes entire tracks at a time, but breaks
each track up into 11 logical sectors, 512 bytes each, in s/ware, which
is why they get 880k rather than 720k on the same drive format, for
example.  I imagine if you can do `raw reads' of the disk using a PC
controller, you're on the right track to solving this problem.


------------------------------

Crossposted-To: gnu.misc.discuss
From: bsa@kf8nh.wariat.org (Brandon S. Allbery)
Subject: Re: Specialix driver
Date: Fri, 11 Mar 1994 23:38:09 GMT

In article <CMFuy2.10z@scifi.uucp>, njs@scifi.uucp (Nick Simicich) says:
+---------------
| development kits for the DSP cards and hack GCC to do code generation
| for DSP's (you can now tell that I know nothing about DSP programming)
+------------->8

Someone has already produced a gcc (1.x, I think) for the 56000 DSP.  Not
under Linux, but I dare say it can be ported.

++Brandon
-- 
Brandon S. Allbery         kf8nh@kf8nh.ampr.org          bsa@kf8nh.wariat.org
"MSDOS didn't get as bad as it is overnight -- it took over ten years
of careful development."  ---dmeggins@aix1.uottawa.ca

------------------------------

From: ronnie@lysator.liu.se (Ronnie Sahlberg)
Subject: kernel mmap() , MAP_SHARED/PROT_READ/PROT_WRITE
Date: Thu, 10 Mar 1994 09:49:06 GMT

Hi all you kernel hackers.
I run a kernel pl14something and i have some questions regarding
mmap() calls.
(if these things have changed to the latest kernel version, I appologise)

I want to use mmap() of a regular file with read/write permissions
and MAP_SHARED flag for a simple (and effective) scheme of sharing
data structures between processes.
I cannot use fork() for this since the two different programs may be
started at different times.

(I.e. imagine a server running happily for a long time, then I would
 at any given point start a PEEKing program, that mmap()s the same
 file as the server used ,also using MAP_SHARED, to read the internal
 data structures inside the server, without disturbing the server while
 its running.
 Another restriction is that the shared memory MUST reside at a given
 fixed address in the server dataspace, the client, or PEEKer, can
 have the memory mapped at whtever address. Dont matter at all.

 The easiest way to do this is by using mmap(), since it would then
 be possible to get true shared memory, and it would allow mapping of
 the file to specific addresses in memory.
)


To make it short:
I NEED a mmap() that supports read/write and MAP_SHARED.
Any possibility of getting such mmap() in any near future ?
Is there something in the linux memory system that prevents such a mmap()
functionality?
Are there other methods, this easy, to have different processes share
parts of the same memory ?


yours sincerely, and hopefullt mmap()ing soon,
  ronnie s.

------------------------------

From: romano@pimac2.iet.unipi.it (Romano Giannetti)
Subject: Re: Startup code (DOS boot program)
Date: 11 Mar 1994 15:12:26 GMT

In comp.os.linux.development, Nick Holloway (alfie@dcs.warwick.ac.uk) wrote:
[...bootlin...]
> The version I last looked at could be run from the dos command line,
> but it said it couldn't deal with compressed kernels.  My brief
> experimentation failed (tweak-reboot-fail-reboot-login cycles are
> too long).

This sounds quite new to me, I'm using it with compressed kernel... I
have a line in the config.sys like this:

[ALinux]
SHELL=c:\etc\bootlin.com c:\etc\imagep1.0

and imagep1.0 is simply copied from zImage to the dos disk. And it
work... very well.

--
*******************************************************************************
Romano Giannetti        * DII-EIT, University of Pisa(E stands for Electronics)
romano@iet.unipi.it     * Dpto Electr. y Electronica, Facultad de Fisica
                        * Universidad Complutense de Madrid
*******************************************************************************

------------------------------

From: floyd@myhost.subdomain.domain (Christian Pablo Tagtachian)
Subject: Re: X11R6?
Date: Wed, 9 Mar 1994 19:58:57 GMT

Christian Moen (christim@ifi.uio.no) wrote:
:    I have posted to comp.windows.x.whatever asking for directions to finding
:    X11R6 source code... I got 1 reply, but lost it...  

:    I will ask here.  Does anyone know where to find X11R6 source code?

: The X11R6 source-code has not been released to the public and is
: currently only available to X Consortium members. The source is
: scheduled to be released on April 15.

Does anyone know where to get information about it? New features... etc..?
Thank you very much.

<floyd@arthax.satlink.net>
Buenos Aires, Argentina.


------------------------------

From: insom@galaxy.ucr.edu (chris ulrich)
Subject: if I crash the kernel, should I tell anyone?
Date: 9 Mar 1994 14:51:52 -0800

I decided to see how much abuse I could give my system before
it died.  (quite a lot, actually)
so I did this:
dd if=/dev/hda of=/dev/null bs=512 &
cat /dev/sda > /dev/null &
cat /dev/sdb > /dev/null &
(wait 2 minutes)
dd if=/dev/hda of=/dev/null bs=512 &
cat /dev/sda > /dev/null &
cat /dev/sdb > /dev/null &

At this point, my computer sounded like a phaser on overload.
But it wasnt enough 
so I did xv on a 2 meg jpg (which uses about 15 meg of memory)
and ran ico and a couple of other programs (dhrystone, kermit)
while running rain from the school computer over a 14.4bps modem.
The load average got up to about 10.50 9.75 6.50, and I had used
up all but one meg of the swap.

My system:
486dx40 eisa with 20 meg of ram, 26 meg swap disk, 
1 esdi disk via an ultrastor 22f
2 scsi disks via an adapted 1740 (a wren III and a wren IV)
I am using 0.99.15h without clusters, with the 1740 and qic02
drivers compiled in.  Version 4.5.19 libc, and most binaries 
are from the slackware 1.1.1 distribution (X, dd, cat, etc)

When (according to top) the system had less than 1 meg of swap
left, everything stopped (crash)
according to syslog, this is what happened:

Mar  9 14:04:54 context kernel: <6>SCSI host 0 timed out - aborting command
Mar  9 14:07:07 context kernel: <6>SCSI host 0 timed out - aborting command
Mar  9 14:10:18 context kernel: <6>Unable to handle kernel NULL pointer dereference at address 000000d0
Mar  9 14:10:18 context kernel: <6>Oops: 0000
Mar  9 14:10:18 context kernel: <6>EIP:    0010:0018962a
Mar  9 14:10:18 context kernel: <6>EFLAGS: 00010202
Mar  9 14:10:18 context kernel: <6>eax: 00000020   ebx: 00000000   ecx: 000046e4   edx: 00006cd5
Mar  9 14:10:18 context kernel: <6>esi: 0017ecb8   edi: 001a474c   ebp: 001a46e4Mar  9 14:10:18 context kernel: <6>ds: 0018   es: 0018   fs: 002b   gs: 002b
Mar  9 14:10:18 context kernel: <6>Pid: 439, process nr: 39 (dd)
Mar  9 14:10:18 context kernel: <6>83 bb d0 00 00 00 00 74 14 68 00 02 00 00 8b
93 d0 00 00 00

I dont think the SCSI host 0 timed out is part of the problem.
I suspect the wren III caused the scsi timeouts, as it is a really 
old and slow drive.  The dd was on the esdi disk not the scsi disks.
This is the only time I have gotten the computer to crash since I 
turned on swapping.  Linux is amazing.
Thanks for your time,
chris 
(to the person who is going to tell me not to post this here, tell
me who to send this complaint to, as it could be the scsi drivers,
a bad interaction with the ultrastor 22f, or the kernel itself)
insom@ac.ucr.edu                                Ecstatic peace
insom@ucrvms                                    Savage conquest

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
