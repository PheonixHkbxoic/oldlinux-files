From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Tue, 4 Feb 92 00:30:13 EST
Subject:  Linux-Activists Digest #36

Linux-Activists Digest #36, Volume #1             Tue, 4 Feb 92 00:30:13 EST

Contents:
  Re: Q: What is POSIX limit on filename length? (Jim Shaw)
  Help: bug in ld(?) and where I can find its source code (hlu@eecs.wsu.edu)
  Re: Q: What is POSIX limit on filename length? (Christopher Provenzano)
  Re: perl binaries available, libc.a (Drew Eckhardt)
  RLL drives? (Adam Justin Thornton)
  Re: Linux-Activists Digest #35 ("Dave Watt")
  Linux on PS/2-80, TOO COOKED? (Sean Eckton)
  Re: RLL drives? (Pietro Caselli)
  Assembler info (satishc@microsoft.com)
  Serial support (Andrew Wheadon)
  Re: Serial support (R. Ramesh)
  X and named sockets (Lawrence C. Foard)
  Re:  Linux-Activists Digest #34 (Lawrence C. Foard)
  fs hang seems not to be (Charles Hedrick)
  Re: some patches for graphics with et4000. (Paul Allen)
  floppy virtual console conflict (Lawrence C. Foard)
  more and icon ports available (Charles Hedrick)
  Re: Q: What is POSIX limit on filename length? (Charles Hedrick)

----------------------------------------------------------------------------

Subject: Re: Q: What is POSIX limit on filename length?
From: jshaw@actrix.gen.nz (Jim Shaw)
Date: Mon, 3 Feb 1992 21:44:13 GMT

Although I am not yet using Linux I have been reading this group and thort I'd
throw in my 2 cents worth.

I have worked on SysV and on Suns as well as DOS and other OS's and I find the
14 or less character limit on file names a real annoyance. Especially if using
SCCS or similar system that tacks on a couple of extra characters to its file
names.
I don't know what the linux limit is but if it's not > 32 I think it should
be, although 32 may be a minimum limit that would server 99.9% of the time.

Jim

------------------------------

From: hlu@eecs.wsu.edu
Subject: Help: bug in ld(?) and where I can find its source code
Reply-To: hlu@eecs.wsu.edu
Date: Mon, 3 Feb 1992 22:54:24 GMT

Hi,

I am trying to compile GNU's binary utilities 1.9. Everything works
fine, except ld, which reports "virtual memory exhausted". The one I
ftped works. I was wondering if there is a bug in ld.c. Does anyone
know where I can find the source codes for the binary utilities on
those ftp sites.

I have cross-compiled gcc 1.40 with 387 support from the scratch. I
have built a full libm.a and replaced the buggy estdio with DJ's (BSD)
stdio. I have got everything run, except ld. I have to use the old one.
But I'd like to compile it with my new gcc.

I appreciate any help.

H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: Christopher Provenzano  <proven@Athena.MIT.EDU>
Subject: Re: Q: What is POSIX limit on filename length?
Reply-To: proven@Athena.MIT.EDU
Date: Mon, 3 Feb 1992 23:47:47 GMT


All filesystems have a filename length limitation. (BSD's just happens to
be 256 bytes.) POSIX just states that there has to be a filename length
limitation and that it can be determined. POSIX never states what the
limitation is (That's up to the vendor.)

CAP

POSIX is like mathematics... there exists a maximum and it can be determined ...

------------------------------

From: drew@anchor.cs.colorado.edu (Drew Eckhardt)
Subject: Re: perl binaries available, libc.a
Date: 3 Feb 92 22:45:08 GMT

In article <1992Feb3.103600.4611@athena.mit.edu> ajh@gec-mrc.co.uk writes:
>First off, apologies for my ill-advised posting in which I complained that
>wait(pid) (as opposed to wait(&status)) caused problems; that's what comes from
>storing man pages in my brain rather than on my disk.
>
>Secondly, I have finished the port to Linux of perl, and have wrapped up the
>binaries and scripts into a single tar file. I don't have anonymous FTP, so
>cannot upload it anywhere useful. If there is any interest, I can mail the
>package to somebody who is willing to upload it. The compressed tar file is
>272797 bytes and includes:

What a coincidence - I just built perl last night too   - it's a great way
to discover which of the shellutils you're missing :-) - expr, true, false, 
etc. and what library routines are missing / broken....


>README.perl a2p c2ph cppstdin find2perl h2ph perl pstruct s2p
>
>The standard 4.019 perl libraries are also needed, of course. I can bundle
>them into a separate file if necessary.
>
>Doing the port threw up a few minor problems in libc.a:
>
>    0 but some apparently random large number.
>
>(2) atof() is broken; it can't parse things like atof("1.2e34"), it just
>    discards the exponent. I used sscanf() instead, blecchh.
>
>Also note the caveats in the README file for the perl binary package, included
>below:
>
>-----------------------------------------------------------------------------
>Port of perl 4.019 to Linux 0.12 by Andrew Haylett, 3rd February 1992.
>

>       exp(), sqrt() and probably other math functions don't work (perhaps
>       due to lack of FP support in the kernel or in libc.a?)

There is no -msoft-float option in gcc, and the kernel has 387 emulation,
but is missing all of the transcendental functions, etc.


>       floating point in general is a bit erratic, hence libraries like
>       bigint.pl don't work very well (notably bmul, bdiv, bmod) due
>       to rounding errors when dividing/multiplying by 100000. Normal FP
>       operations seem all right.

Also, the _f_cvt.c file doesn't work as distributed - you get nastly little
rounding errors that are off by .00000000000000050 or less.  This is easily
rectified by changing the estdio/site.h L_DBLDIG? to 17 digits, from 15.
and making MAXFLTDIGITS in estdio/stdiolib.h to be (L_DBLDIG - 2) instead
of +2.  

If you look at the sources - this is clearly what is intended.  You want to
be printing fewer digits than you have to account for round off errors.

Finally, I was missing the dirent/seekdir and dirent/telldir functions.


I'd suggest that we want to fix the other problems - you shouldn't have to 
"port" perl to Linux - Linux should be ported to perl so more things work
right off the shelf.

------------------------------

From: adam@owlnet.rice.edu (Adam Justin Thornton)
Subject: RLL drives?
Date: 3 Feb 92 23:07:21 GMT

Will Linux work on a system with RLL drives?  Enquiring minds and all that.

Adam
-- 
Adam Thornton  |  Opinions are mine alone, though Rice is welcome to them.
"Once in a while, you can get shown the light in the strangest of places
if you look at it right." | "To all the beautiful people out there: there
are a lot more of us than there are of you."| adam@owlnet.rice.edu | 64,928

------------------------------

From: "Dave Watt" <dmwatt@smersh.cambridge.ma.us>
Subject: Re: Linux-Activists Digest #35
Reply-To: "Dave Watt" <dmwatt@smersh.cambridge.ma.us>
Date: Tue, 4 Feb 1992 00:29:27 GMT

Hello.  Sorry to eat and run like this.  Would you please delete me from
this mailing list?  (My news feed just got started today.)

Thanks,

Dave Watt
-- 
Dave Watt                                      Home: 617-666-9956
dmwatt@smersh.cambridge.ma.us                  Work: 617-868-4330 x159

.Sig wanted -- will pay top dollar

------------------------------

From: ecktons@sirius.byu.edu (Sean Eckton)
Subject: Linux on PS/2-80, TOO COOKED?
Date: 3 Feb 92 23:59:26 GMT


        Some time ago I saw someone was using linux on a PS/2 and it worked,  
but has some limitations.  Well, I have the following problem.  I was trying  
to install linux on a PS/2-80 and it wouldn't even boot.  I used rawrite and  
it seemed to install on the 1.44MB disk just fine.  I tried to use the disk  
to boot the machine and it seemed to be working just fine.  I got this:

     Loading................

Press (all the stuff about SVGA modes or press any other key to continue).

When I tried to continue, this is what I got:

     copy_to_cooked: missing queues
     8 virtual consoles
     4 ptys

In the upper left-hand corner of the screen it displayed this:  EGAc

It then hung.  Anyone have any ideas why?


--
Sean Eckton

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Internet:  ecktons@sirius.byu.edu      Brigham Young University, Provo, UT.
Packet Radio:  kd6bik @ wb7esh.#orem.ut.usa.na
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

------------------------------

From: pietro@deis35.cineca.it (Pietro Caselli)
Subject: Re: RLL drives?
Date: 4 Feb 92 00:30:23 GMT

In <1992Feb3.230721.3627@rice.edu> adam@owlnet.rice.edu (Adam Justin Thornton) writes:

>Will Linux work on a system with RLL drives?  Enquiring minds and all that.
Yes, at least on my Adaptec 2372.
-- 
Pietro Caselli                          |
Internet: pietro@deis35.cineca.it       |    IF YOU MEET THE BUDDHA
          zaphod@petruz.sublink.org     |     ON THE ROAD,KILL HIM.

------------------------------

From: satishc@microsoft.com
Subject: Assembler info
Reply-To: satishc@microsoft.com
Date: Tue, 4 Feb 1992 01:37:52 GMT

The assembler syntax used by GCC is markedly different from the Intel
assembler syntax. Where can I find a ps or nroff document that describes
the syntax used by GCC? Could someone give me a pointer?

Thanks.

-- 
Satish K. Chittamuru                            satishc@microsoft.com
Microsoft Corporation                           Redmond, WA 98052
====
Who was Curiosity? Why did he kill the cat? And whose cat was it?
                                                -- Dennis the Menace.


------------------------------

From: andrew@incom.de (Andrew Wheadon)
Subject: Serial support
Date: Sun, 02 Feb 1992 10:52:04 GMT

When I try running a kermit session, I'm losing characters to the extent
that I sometimes have trouble entering a valid password at login. Calling
up ls on the remote machine results in a distorted listing due to charac-
ter loss. I'm using a TB2500 with an NS16550AFN on my serial card running
at 19200 bps between serial card an modem.

When I try running a uucp session with or without copying a short (to make
sure I don't get to many crc-errors) file from my system to the remote
system, the session is never finished, i.e. even if uucico has sent H OK
The connection is not hung up. (The document mentions that no support
for modem-control is given.)
 
SO:
Has anyone rewritten the routines for serial-io to support higher baud-
rates (possible 38400/57600/128000 with an eye for coming high speed
links and modem-support i.e. DTR/DSR/CTS/RTS/CD, or has anyone suceeded
in porting fas2.09 (I don't think this would work, but who knows ?) ?

Seeya...
        Andrew                            andrew@rnivh.rni.sub.org 
                                          Please note the dif. add

------------------------------

From: ramesh@utdallas.edu (R. Ramesh)
Subject: Re: Serial support
Reply-To: ramesh@utdallas.edu
Date: Tue, 4 Feb 1992 02:34:17 GMT

In article <1992Feb02.105204.26410@incom.de>, andrew@incom.de (Andrew Wheadon) writes:
|> When I try running a kermit session, I'm losing characters to the extent
|> that I sometimes have trouble entering a valid password at login. Calling
|> up ls on the remote machine results in a distorted listing due to charac-
|> ter loss. I'm using a TB2500 with an NS16550AFN on my serial card running
|> at 19200 bps between serial card an modem.
|> 
|> When I try running a uucp session with or without copying a short (to make
|> sure I don't get to many crc-errors) file from my system to the remote
|> system, the session is never finished, i.e. even if uucico has sent H OK
|> The connection is not hung up. (The document mentions that no support
|> for modem-control is given.)
|>  
|> SO:
|> Has anyone rewritten the routines for serial-io to support higher baud-
|> rates (possible 38400/57600/128000 with an eye for coming high speed
|> links and modem-support i.e. DTR/DSR/CTS/RTS/CD, or has anyone suceeded
|> in porting fas2.09 (I don't think this would work, but who knows ?) ?
|> 
|> Seeya...
|>         Andrew                            andrew@rnivh.rni.sub.org 
|>                                           Please note the dif. add

This is not trying to solve your problem but... I am running kermit at 19200
and not having any problem at all. In fact at times when a file is being
transferred I loaded the system using one of the other virtual consoles. But
I am a 486/33Mhz user. So the hardware may be more capable. 

BTW, I even tried running at 38400 (by cheating kermit by doing "stty 38400
>/dev/tty65") and still it worked fine.

Ramesh


------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: X and named sockets
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Tue, 4 Feb 1992 03:20:09 GMT


If someone is planning to work on X please write to me, I should have
something functionaly equivalent to named sockets very soon although 
I've decided to do a few things differently (and make compatibility 
libraries later), I really need to talk to people who need to use these
to make sure they will do everything that is needed.
I've designed the interface to be equivalent to what TCP/IP will require
so code written and tested on these will work with only minor changes over
a network.
I started to port the BSD socket code only to find that I would have to
implement a large quantity of BSD specific kernel stuff (yuck), write
compatible kernel sockets from scratch (ick) or make a much simpler and cleaner
interface and use socket compatibility libraries. Given this choice
compatibility libraries seem to be the more logical option since free ware
ones already exist and can be adapted once the kernel stuff is there to handle
them. 
I've decided in to leave room open for "random access" sockets in the kinder
and gentler kernel code, so hopefully this will make for a less kludgy system
in the long run. This also means that something will be working in days rather
than weeks.


------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: Re:  Linux-Activists Digest #34
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Tue, 4 Feb 1992 03:20:53 GMT



------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: fs hang seems not to be
Date: 4 Feb 92 03:39:00 GMT

Yesterday I reported an apparent hang in the file system code.
Tonight I found that it was actually hanging in malloc.  As far as I
can tell, it was simply running out of memory.  (It seems too be a
known problem that the system hangs in this case.  I think even SunOS
has been known to do this.)  Apparently the Gnu alloca package, which
is called from the Gnu regex package, was not returning or reusing
memory.  I fixed it by recding regex so it didn't need alloca.  (It's
more efficient that way anyway.)

This takes care of the only hang that was reproducible.  I did think
I saw a problem or two that are not this, but they are far more rare,
so I'll have to wait and see if there really is another problem.

In the process of diagnosing this problem, I looked through the buffer
and block device code very carefully for problems.  The only thing I
found is that in ll_rw_blk.c.  In the places where it is doing
sleep_on(&wait_for_request), in theory there should probably be
cli/sti around the whole search for a free request block.  These
blocks are freed at interrupt level, so in theory there's a race
condition.  However I think it's very unlikely that the condition
would actually happen.  Here's the scenario:

 the loop looking for a free request block finds nothing.
 an interrupt freeing a request occurs after this test, but before the sleep_on
 sleep_on waits for free request blocks

The sleep_on will never be satisfied.

As a general rule, the sequence
   if (! condition)
      sleep_on(&condition);
should have cli/sti around it if the thing that establishes the
condition occurs at interrupt level.  Linux tends to use code
like

   cli();
   while (! condition)
     sleep_on(&condition);
   sti();

I trust sleep_on reestablishes the cli state when it resumes a process
after a sleep.  I don't understand the low-level process primitives
well enough to check.


        

------------------------------

From: Paul Allen <paula@atc.boeing.com>
Subject: Re: some patches for graphics with et4000.
Reply-To: paula@atc.boeing.com
Date: Tue, 4 Feb 1992 04:17:31 GMT


About his VGA graphics implementation, Gwoho Liu wrote:
|what i want to know is what the best way to make it do graphics is.
|what escape sequence would be the best for puting it in graphics mode?
|what kind of terminal would be the best to try to make it emulate?
|where could i get a description of the codes used for such a terminal?

Well, ideally one wouldn't run a terminal emulator on the bare graphics
console.  It would be much more useful to run a window system and let
it do the emulation.  This is the point where you start porting X, or
MGR, or whatever.

A second beta version of the Minix port of MGR is on bellcore.com and
on maccs.dcss.mcmaster.ca.  It's probably elsewhere by now, too.  It
contains the Minix kernel patches for pty's, nonblocking tty reads,
a Minix VGA driver, diffs for the MGR sources, and the MGR sources
themselves.  This version is said to be more stable than the one
Thomas Heller released last year.  I've been using Thomas' original 
version for months and find it sometimes surprising, but adequately 
stable for my uses.

In the Minix implementation of MGR, the screen is in text mode when
you login.  Starting up the window system puts the screen in graphics
mode and lets you use the mouse to create windows.  All MGR windows
are terminal emulators, and they all understand a standard set of
graphics escape sequences.  New commands "gmode" and "tmode" are
provided for manually forcing the screen to change modes.  (This is
handy if something "surprising" happens and you have to switch to 
another virtual console and kill MGR.)

I would expect that it would be at least an order of magnitude less
difficult to port MGR than to port X, but I'd be happy for someone
to prove me wrong!  The base MGR compressed tarfile is about 800Kb,
if that's any indication.  The MGR source tree with all of the .o's
still sitting there is less than 10Mb on my Minix machine.

It's a thought, anyway.

Paul Allen
pallen@atc.boeing.com



------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: floppy virtual console conflict
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Tue, 4 Feb 1992 04:24:13 GMT


A few people have had problems with installing both the floppy and 
virtual console patchs. I'm assuming this is a conflict of some kind
when they both try to change files. Linus is adding both patchs to
0.13 so unless there is an urgent need for both patchs to work together
it would probably be better to wait for 0.13 rather than trying to make
a non conflicting floppy patch at this time, I also assume 0.13 will work
better with multiple floppies since Linus has these available for
expermentation. 

Some more questions for people working on patchs:
Is any one working on a /proc directory or user installable file systems?
I am planning to set up 3 forms of interprocess communication:

1) bi directional named pipes for IPC that support multiple connections 
, will be used by the socket emulation library, TCP/IP will look similar
so programs that use one will be able to use the other with little fuss.
2) random access pipes that request data from the other end as though it where
a block device or file.
3) file system "pipes", the pipe will look like a subdirectory, but all
references to the files or directories it contains will be passed through to
the server at the other end. I assume this could be integrated with the file
system switch (assuming someone working on it)?

#1 should be simple since it only requires some minor file system additions
for a new inode type, and should be able to work just like a normal pipe
otherwise. Unless there is a major disaster this should work in a day or two.
#2 is also fairly simple and might take a few more days.
#3 is messier and I'm not sure whats involved at this point, but I'll probably
concentrate on TCP/IP first (and/or give #3 away to a willing victim ;).

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: more and icon ports available
Date: 4 Feb 92 04:15:24 GMT

In athos.rutgers.edu, /pub/linux, you'll find the following:

  more - Berkeley more, executable.  This may be an exercise
        in futility, since most people seem to prefer less.
        But as a matter of personal taste, I'm used to more.

  more.tar.Z - source.  The original Berkeley files are renamed
        to .ORIG.  This includes a Gnu regex, since regex 
        doesn't seem to be in libc.  I had to hack on regex
        slightly, since it uses bcmp and bzero, which also aren't
        in the library, and alloca.   I tried using alloca from
        the Gnu Emacs source, but it ran me out of memory.  It
        turns out to be easier (and I think results in better
        code) to remove the use of alloca.  Perhaps we could
        add this regex to libc, and probably also add bcmp, bzero,
        and bcopy, or the System V memxxx versions.  Don't
        take them from regex, by the way -- this version of bcmp
        probably doesn't do quite what you want the library 
        routine to do.

  icon.tar - Files to go in /usr/icon/v8/config/unix/linux.
        I assume you'll do a "make Configure name=linux" first,
        to generate a default set of files.  These files should
        then go on top of those, except that (as explained in
        the README) hack.c is a set of stubs to be used until
        libm.a exists.  Note that I didn't have to do anything
        to icon itself -- Linux is really a pretty good generic
        Posix system.  The only things I had to work around were
        the fact that ed doesn't exit (the makefile uses it --
        I use sed instead), and the fact that the libraries
        I have are missing some floating point support.  Once
        these problems are fixed, all you should need is def.h.
        Note that I haven't used the resulting icon yet.  But I did
        try the validation test using Samples, and there were
        no problems.

By the way, in the process of doing more, I figured out how to work
around the problem I had had in mg with job control.  So ^Z now works
in mg.  Since Gnu Emacs is now available, I'm not sure whether anybody
is really using mg.  If so, I'll upload the change.  (mg is probably
still useful, since Gnu Emacs is really a bit big for many PC's.)

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: Re: Q: What is POSIX limit on filename length?
Date: 4 Feb 92 04:50:46 GMT

Please be careful before changing file name limits.  The problem is
that System V software tends to read the directory directly as a file.
While newer software should use system-independent libraries to read
the directory, older software does not.  Generally such software knows
about SysV and BSD file systems, but if we implement something in
between, it will inhibit portability.  In theory they should not have
the name limits hardcoded, but you can never be sure they really read
it from the header files.

By the way, as long as the directory structure remains
SysV-compatible, it will use more disk space to increase the names.
The directories have fixed structures, with maximum size names.  BSD
uses variable structures, so their very long names don't waste space.
Doubling it to 28 is probably acceptable (actually for historical
reasons you might want to use 39), but I wouldn't go to 255 without
going to the BSD structure or something like it.  At any rate, I think
for the moment I recommend sticking with a pure SysV structure, even
though it's sort of annoying.  We've had a good deal of experience
with Unix versions that are roughly equivalent to SysV or BSD, but
have various random incompatibilities.  It makes for continuing
annoyance when bringing in software.

At the very least, it would create an enormous "flag day" problem,
since just about every piece of software currently ported would have
to be rebuilt.  This may not be a bad thing, as a lot of programs are
currently linked with old libraries.  But I think I'd put it off until
we've pretty confident we've got a good libc, and want to force
everybody to rebuild anyway.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
