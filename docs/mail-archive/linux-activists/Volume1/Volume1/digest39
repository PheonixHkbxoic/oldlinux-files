From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Wed, 5 Feb 92 23:45:11 EST
Subject:  Linux-Activists Digest #39

Linux-Activists Digest #39, Volume #1             Wed, 5 Feb 92 23:45:11 EST

Contents:
  raw devices (Douglas E. Quale)
  Undeliverable Mail
  Perl 4.019 on Linux 0.12, Linux-Activists Digest #38 (Andrew Haylett (GEC-Marconi Research Centre))
  Re: tubes (Linus Benedict Torvalds)
  sources or patches in addition to binaries (Brett McCoy)
  References for info on 386 and AT architecture. (Daniel Mark Gessel)
  tubes (Lawrence C. Foard)
  user space tcp/ip (Ron Pool)
  Re: References for info on 386 and AT architecture. (Lance Norskog)
  Re: References for info on 386 and AT architecture. (Hans B. Wiezorke)
  Re: X11R5 OS support (Stephen Hathorne)
  Re: user space tcp/ip (and Taylor UUCP) (Thomas David Rivers)
  VFS prerelease (Christopher Provenzano)

----------------------------------------------------------------------------

From: quale@saavik.cs.wisc.edu (Douglas E. Quale)
Subject: raw devices
Date: 5 Feb 92 05:47:10 GMT

There has been some discussion of making hard disk backups to floppy.
Instead of tinkering with the file system buffering, we really need
raw disk devices.  For someone who is familiar with the device drivers
this should be pretty easy.  Any takers?

--
Doug Quale
quale@saavik.cs.wisc.edu

------------------------------

From: <SMTP@mitvma.mit.edu>
Subject: Undeliverable Mail
Reply-To: SMTP@mitvma.mit.edu
Date: Wed, 5 Feb 1992 07:40:13 GMT

Date:         Wed, 05 Feb 92 02:26:07 EST
From:         jim wiegand <V5068U%TEMPLEVM.BITNET@mitvma.mit.edu>
Subject:      vixie-cron ZOMBIE BUG (AHHHHH!)
To:           linuxers <linux-activists@nes-digests.mit.edu>

hi all;
       noticed a few notes coming by about the vixie-cron crond
       filling up the process table. under ps(1) i found that a zombie is
       a process terminating (fork()) without a parent waiting.
       so in the file do_command.c look for a line like

            }
        DEBUG(... parent gets back to work );
        }

        fix it by putting in

        int dummy;
        wait( &dummy );

        outside of the if(fork == 0){......} statement. ie the parent waits.
        the spawning hopefully should take less than 60 sec.
        hope i didn't make too many mistakes... i am writing this off the top
        of my head.
                   jim the flamed :-)

------------------------------

From: Andrew Haylett (GEC-Marconi Research Centre) <ajh@gec-mrc.co.uk>
Subject: Perl 4.019 on Linux 0.12, Linux-Activists Digest #38
Reply-To: ajh@gec-mrc.co.uk
Date: Wed, 5 Feb 1992 08:58:14 GMT

[In the message entitled "Perl 4.019 on Linux 0.12, problems with $&" on Feb  5, Peter Orbaek says:]

| I'm attempting to get perl up and running on my 386/33 running linux 0.12,
| using gcc 1.40 (the compiler that comes with linux).
| 
| After getting through configure, and doing various small hacks in the
| makefile, I have got it to compile cleanly, except for minor warnings about
| return-types of getgrgid() and such.
| 
| But problems arise when I run the test-suite. First I must say that floating
| point support on linux is fairly bad, so I get several failed tests because
| sprintf prints - for instance - 12 as 11.99999999997.
|
| This can be remedied by compiling with these options, in effect making an
| "integer-perl":
| 
|         -Ddouble=int -Datof=atoi -DINT_PERL
| 
| and then doing some minor hacks in str.c and dolist.c to get proper conversions
| from ints to strings, and removing packing of floats and doubles.

A better, though imperfect, solution is to change the sprintf(..."%.20g")
statements in str.c to "%.15g"; this mitigates the effects of very small
rounding errors in the kernel's FP emulation. Drew Eckhardt posted recently on
this, suggesting a kernel fix. Anyway, with the .15g hack, you at least end up
with an FP perl rather than integer, although there are still problems with
the bigint.pl package (does anybody use this?)

| BUT , in both cases the produced perl fails on tests:  op/pat 28,29,30
| 
| I seems that $& doesn't get set correctly. Why can this happen??
| This problem also affects several other tests.
| At least in op/pat test #28 $& is set to the empty string or null...

atoi() is broken; it returns odd results when passed "&" instead of a digit.
You need to put some special case code in stab.c to cope with that. Also note
that atof() is broken, so that it can't cope with exponents; use sscanf
instead for the moment.

Perl binaries and lib have been put up on tsx-11 and nic.funet (although
there's nothing to beat the experience of compiling it yourself, especially
on a 386SX16 :-( If you'd like diffs to the released perl4.019, plus a working
config.sh, let me know; the diffs are very small, actually.

----
Andrew Haylett       | Inet: ajh@gec-mrc.co.uk   | Fax: +44 245 75244
GEC-Marconi Research | Tel: +44 245 73331 x.3283 | Telex: 995016 GECRES G


------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Re: tubes
Date: 5 Feb 92 12:44:13 GMT

In article <1992Feb4.184650.17454@nntp.uoregon.edu> haertel@euclid.uoregon.edu (Mike Haertel) writes:
>In article <1992Feb4.123601.4700@athena.mit.edu> entropy@ee.WPI.EDU (Lawrence C. Foard) writes:
>>The standard linux pipes always return with the read buffer full except
>>when the pipe has been closed on the writting end. This works well for
>
>Reads on standard Unix pipes always return right away if one or more
>characters are available, without necessarily satisfying the whole read.
>I've tried this at least on System V.2, 4.3 BSD, and research v10.
>
>If Linux pipes don't work this way, they're broken.

Yeah, they are broken in 0.12: they are fixed in my current version. It
was a very easy fix, I just didn't know the correct behaviour. 0.13 will
also have working O_NDELAY on pipes.

>I think it would be even better to try to preserve "write boundaries"
>no matter how large the writes are.  Difficult, though.

Difficult, and non-standard. Why bother? Emulating tty's with pipes is a
bad idea anyway (writing 0 bytes to get "eof") as there are pty's that
do the job better.

                Linus

------------------------------

From: brtmac@maverick.ksu.ksu.edu (Brett McCoy)
Subject: sources or patches in addition to binaries
Date: 5 Feb 92 10:01:36

I'd like to see the sources, or the patches to sources, or all of the
various binaries that have been released for linux.  One reason for
this is because it would help figure out what things need to be done
to port programs to linux and another reason is so that I can change
all of the stupid hard coded path names to match my filsystem instead
of putting symlinks in all over the place to make the filesystem match
the programs.

If there is a shortage of space available on the various ftp servers
that have the linux stuff right now I'll gladly offer the services of
the anon ftp server on matt.ksu.ksu.edu.  If anyone would like to put
their patches up for distribution please drop me a line.

--
Brett McCoy                     Computing and Network Services
brtmac@maverick.ksu.ksu.edu     Kansas State University

------------------------------

From: gessel@cs.swarthmore.edu (Daniel Mark Gessel)
Subject: References for info on 386 and AT architecture.
Date: 5 Feb 92 16:22:32 GMT

Now that we can all do some kernel hacking:

Can anybody list some good books on system level programming for the
386 and AT architecture?

Thanks,

Dan

------------------------------

From: entropy@ee.WPI.EDU (Lawrence C. Foard)
Subject: tubes
Reply-To: entropy@ee.WPI.EDU (Lawrence C. Foard)
Date: Wed, 5 Feb 1992 18:15:07 GMT


It appears from the responces I got that the ability to read the amount that
was written is important. I figured out a way of doing this fairly nicely so
you will have the following options for the "tubes":

TU_NO_BUFF the amount read on a call will always be the amount written unless 
           the buffer isn't big enough (you have the option for it to return
           an error in this case). Any suggestions for a better name, it is 
           buffered but doesn't look like it to the user :)
TU_SEMI_BUFF works like BSD pipes, reads return with what ever is in the
             buffer or block and wait if its empty.
TU_FULL_BUFF works like Linux pipes where it always returns the full amount
             requested until the other end of the pipe is closed.

modifiers:
TU_RNONBLOCK reads returns the amount in the buffer, or -1 if empty, doesn't
             wait.
TU_WNONBLOCK write writes the amount that will fit in the buffer and returns.

The default is semi buffered since it will work correctly when connecting to
text based demons, and has less overhead than "non buffered". 

s

------------------------------

From: ron_p@aruba.nysaes.cornell.edu (Ron Pool)
Subject: user space tcp/ip
Date: 5 Feb 92 16:09:06 GMT

I ran across on article on a user space tcp/ip in comp.sys.sun.  The ideas may
be useful for a tcp/ip for Linux.  I'm including the full text of the article.
I'm afraid I don't have the time or knowledge to pursue tcp/ip for Linux
myself, though I'll probably use it if someone else does the work.

-- Ron Pool, ron_p@aruba.nysaes.cornell.edu

>From: klemets@sics.se (Anders Klemets)
>Newsgroups: alt.sys.sun
>Subject: Re: PD user-space TCP/IP
>Date: 2 Feb 92 01:28:45 GMT
>Organization: Swedish Institute of Computer Science, Kista
>In-Reply-To: jfjr@mbunix.mitre.org's message of 10 Jan 92 21:13:09 GMT
>
>In article <1992Jan10.211309.21704@linus.mitre.org> jfjr@mbunix.mitre.org (Freedman) writes:
>
>     I am interested in a user-space PD TCP/IP implementation for 
>   UNIX(Sun). I would guess that such an animal is possible over 
>   the streams NIT interface. Does such a thing exist? If not than
>   are there any serious reasons why it couldn't be built?
>
>                              Jerry Freedman,Jr
>
>
>I have been running the KA9Q (TCP/IP) Internet package on a Sun since
>1989. My first versions used the NIT interface, but setting the 
>interface in promiscious mode it slowed down the machine quite a bit.
>In later versions I used a "tunnel" driver to route IP datagrams 
>between the kernel and the user space process. It works much better.
>The code is still available with anonymous ftp from sics.se.
>
>You want the file   archive/packet/ka9q/nos/nosunix-all.tar.Z
>it contains a complete copy of the system I run on a Sun-3, except for
>the tunnel driver. It is based on a version of the KA9Q program (NOS)
>that is more than one year old. If you want a more recent version you
>only need to the much smaller porting kit,
>       archive/packet/ka9q/nos/nosunix.tar.Z. 
>Then merge it with any of the newer versions of NOS for MS/DOS that
>are available with ftp from ucsd.edu. At ucsd.edu you will also be
>able to find documentation for NOS.
>
>If you are using a Sun-4 you cannot use the nosunix porting kit
>described above. Instead you should get the file
>       archive/packet/ka9q/nos/lwpnos.tar.Z
>which is a porting kit that works on a Sun-4 (and also a Sun-3.)
>
>The reason for this difference is that the MS/DOS version of NOS
>implements its own "operating system" using setjmp() and longjmp().
>I ported this in a straight forward manner to the Sun-3. The way
>functions are called on the Sun-4, however, forced me to replace the
>NOS "kernel" with the Sun LWP library.
>
>The tunnel driver is available as  archive/packet/ka9q/nos/tundrvr.tar.Z.
>
>A paper describing some of my work with user space TCP/IP is available
>as  archive/packet/ka9q/nos/netnix-paper.ps.Z
>
>Good luck,
>         Anders
>---
>klemets@sics.se

------------------------------

From: thinman@netcom.COM (Lance Norskog)
Subject: Re: References for info on 386 and AT architecture.
Date: 5 Feb 92 18:38:36 GMT

gessel@cs.swarthmore.edu (Daniel Mark Gessel) writes:

>Now that we can all do some kernel hacking:

>Can anybody list some good books on system level programming for the
>386 and AT architecture?

They're not written by Intel Corp. :-)

The Intel 386 hardware books are ridden with typos,
or so I have been informed by someone who wrote software
for an embedded 386 gizmo.  

Lance Norskog

------------------------------

From: S_WIEZORKE@iravcl.ira.uka.de (Hans B. Wiezorke)
Subject: Re: References for info on 386 and AT architecture.
Date: 5 Feb 1992 19:41:09 GMT

In <4NQDBCTX@cc.swarthmore.edu> gessel@cs.swarthmore.edu writes:
> Can anybody list some good books on system level programming for the
> 386 ...

try 

The PC Programmers Reference 
by Thom Hogan
Microsoft Press

a good compendium on pc hardware and peripherals.

hans


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
I                  __     I   Hans Bernhard Wiezorke  (at Uni. of Karlsruhe)  I
I /opus\    _____(@  \    I   E-Mail :  S_WIEZORKE@iravcl.ira.uka.de          I
I \sndo/   /.         !   I          or UK9K@DKAUNI2.bitnet (for large mails) I
I          ------)    !   I- - - - - - - - - - - - - - - - - - - - - - - - - -I
I                X~~~~!   I  Maybe it'll rub off, less rubbin' is a sin,      I
I- - - - - - - - - - - - -I  'cause if it doesn't rub off, we go'n rub it in! I
I std. disclaimers apply  I                                 (Tower of Power)  I
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

------------------------------

From: sh2v+@andrew.cmu.edu (Stephen Hathorne)
Subject: Re: X11R5 OS support
Date: 5 Feb 92 20:27:29 GMT


Is anyone working on an x11 port?


Stephen Hathorne

******************************************************
Geek-in-Training                                    
sh2v@andrew.cmu.edu                                  
                                                     
"Sir, I may disapprove of what you say, but I will   
defend to the death your right to say it."-Voltaire 
******************************************************

------------------------------

From: sastdr@torpid.unx.sas.com (Thomas David Rivers)
Subject: Re: user space tcp/ip (and Taylor UUCP)
Date: Wed, 05 Feb 92 20:09:34 GMT


 I had no problems building KA9Q on linux; I even set up a simple
 SL/IP network between Linux and my other machines.

 If anyone would like copies, sources or binaries; drop me a line
 and I'll send it to you.

 If there's enough interest, I'll ftp it to tsx-11.mit.edu.

      - Dave Rivers - 
      (rivers@ponds.uucp)
      (...!dg-rtp.dg.com!ponds!rivers)


 p.s. I was able to put together Taylor UUCP without too many problems, 
      but it really wants init/login (it calls getlogin()).

      If anyone want's the config file, or binaries again, just let
      me know.


------------------------------

From: Christopher Provenzano  <proven@Athena.MIT.EDU>
Subject: VFS prerelease
Reply-To: proven@Athena.MIT.EDU
Date: Thu, 6 Feb 1992 03:09:25 GMT

I sent a copy of the prerelease to Ted, which should show up soon on tsx-11.
One tar file contatins a snapshot of my working files the other is the cdiffs
between linux-0.12 and my working files. If you want to minimize patching
grab the snapshot. There are a lot of changes.

CAP

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
