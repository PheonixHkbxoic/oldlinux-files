From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Fri, 24 Jan 92 00:45:16 EST
Subject:  Linux-Activists Digest #11

Linux-Activists Digest #11, Volume #1            Fri, 24 Jan 92 00:45:16 EST

Contents:
  Re: Porting pax -- a replacement for tar&cpio (multivolume ect) (Paul Hetrick)
  Re: df and root fs (John Harvey)
  Re: How to boot a PC from drive B: (Ian D. Gay)
  shared libs (Linus Benedict Torvalds)
  Re: X11R5 Re: [Bob Pendelton: Re: A question]
  Re: V86, echo, *P=NULL etc updates (Michael Burg)
  Where can I get Make? (HOUGHTON ANDREW P)
  I'd like to be added on the mailing list (Shigeo Ishihara)
  Re: New floppy driver (Charles Hedrick)
  Mtools : Where can I get the binaries from? (Divya Sundaram)
  Disk buffering. (Peter Cooper)
  Re: How to boot a PC from drive B: (Teresa Selling)
  Re: How to boot a PC from drive B: (Pietro Caselli)
  Re: X11R5 OS support (Lance Norskog)
  Minor device numbers. (Brian Olsen)
  Re: How to boot a PC from drive B: (Tim Martin; FSO; Soil Sciences)
  Re: X11R5 Re: [Bob Pendelton: Re: A question] (gleason margaret)

----------------------------------------------------------------------------

From: hetrick@sparky.eeel.nist.gov (Paul Hetrick)
Subject: Re: Porting pax -- a replacement for tar&cpio (multivolume ect)
Reply-To: hetrick@sparky.eeel.nist.gov (Paul Hetrick)
Date: Thu, 23 Jan 1992 20:56:04 GMT

From: hetrick (Paul Hetrick)
To: linux-activists@news-digest.mit.edu
Subject: Porting pax -- a replacement for tar&cpio (multivolume ect)
Cc: linux-activists@joker.cs.hut.fi

Hello All,
  I started porting pax, a freely distributed replacement for tar and 
cpio that does muli-volumes and can recognize several arcive types auto-
matically when de-archiving.  I've used pax on Suns and under Coherent
with out any problems.  I have it working now--well, sort of--but it
dies if I try to make a verry large archive.  Can some one tell me
what an EINVAL error message is caused by?   
If any one else is working on pax, let me know.  

I'll post when I get the bugs squashed.

  Paul
 hetrick@eeel.nist.gov




------------------------------

From: rjohnbob@there.austin.ibm.com (John Harvey)
Subject: Re: df and root fs
Date: 22 Jan 92 18:46:28 GMT

In article <1992Jan21.214856.21734@nntp.hut.fi> r36110m@kaira.hut.fi (Mika Matti Jalava) writes:
>It's nice to have the df by P. MacDonald, but it would be even nicer
>if it would give the statistics of the root file system, too. Would it
>be difficult to do?
>
>As it is now, it gives "super block unreadable" if I try to df the
>root fs. Or is the problem only due to some problem in my own system? 
>
>       Mika

I put this into my /etc/rc

echo '/dev/hd3 /' > /etc/mtab

instead of just the 

> /etc/mtab

and df shows the root filesystem.

I think /etc/mtab is the right file name..
and replace /dev/hd3 with whatever your root filesystem is...


-- 
john harvey    JOHNBOB at AUSVMQ    I don't speak for my employer.
johnbob@innerdoor.austin.ibm.com    johnbob@there.austin.ibm.com
johnbob@129.35.81.111               johnbob@129.35.81.200
Austin, Republic of Texas        (sometimes a double .signature, sometimes not)

------------------------------

From: gay@fraser.sfu.ca (Ian D. Gay)
Subject: Re: How to boot a PC from drive B:
Date: 23 Jan 92 20:18:16 GMT

glover@skorpio.Usask.CA (Ken Glover) writes:

>In article <zhao.696157440@chilko.ucs.ubc.ca>, zhao@unixg.ubc.ca (Jiansheng Zhao) writes:
>|> A linux related question: PC is booted from drive A:. can it be done
>|> from drive B:, 1.44 MB, which will give me more space on system disk
>|> to play with.
>|> 
>|> zhao@unixg.ubc.ca
>|>  
>|> PS Thanks to those who sent me advice, I now have vi (elvis) installed
>|> on root drive and works well.

>The BIOS in the PC will only boot from drive A.  The quickest (only?) way to boot from the other drive is to swap your drives so the 1.44 is drive A instead.

Couldn't one just write a simple program to read the first track of 
drive B, and jump to it?

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: shared libs
Date: 23 Jan 92 19:59:46 GMT

In article <FISCHER.92Jan23191836@solsort.iesd.auc.dk> fischer@iesd.auc.dk (Lars P. Fischer) writes:
> Yeah, debugging with shared libs can be a pain. I believe it's
> important to have the option of doing a static link, just as you can
> compile without optimization if need be.

Yes, the shared libs are optional: change the libc.a and crt0.o files
and you can choose between shared/unshared libs. There weren't even any
changes to the compiler/linker: the shared libs are misusing the linker
a bit, but it works.

>                       The SunOS system of having shared libs with
>version numbers is also a good idea -- makes it possible to update a
>library withput messing up programs using the old version.

Right.  Even this is handled "correctly" in linux: it would be even
better with hardcoded addresses in the shared lib, but that was too much
work, so we settled for version numbers.  It's going to be interesting
to see if the linux approach to shared libs even closely resembles
anything else: neither I nor pmacdona had any actual references to how
they "should" be implemented. 

                Linus

------------------------------

From: hunt@hal.gnu.ai.mit.edu ()
Subject: Re: X11R5 Re: [Bob Pendelton: Re: A question]
Date: Thu, 23 Jan 1992 21:10:39 GMT

In article <1992Jan23.031330.2419@henson.cc.wwu.edu> n8141165@henson.cc.wwu.edu (gleason margaret) writes:
>keener@upenn5.hep.upenn.edu (Paul T. Keener) writes:
>
>>In article <32302@mentor.cc.purdue.edu>, chapinsj@mentor.cc.purdue.edu (Steve Chapin) writes:
>>> In article <1992Jan22.231937.3564@ctr.columbia.edu>, ejvette@pace3.cts.mtu.edu (Calvin) writes:
>>> >
>>> > I was led to believe that Linux was still socketless, and that X11 required
>>> > sockets to function at all. This was a good enough reason for the Minix
>>> > people to say that X could not be compiled on that OS. Am I wrong in either
>>> > of these statements?
>>> 
>>> Yes and No.  X requires a reliable byte stream.  How you implement that is up
>>> to you.  Of course, to run it "out of the box," it will want either TCP
>>> connections, unix domain sockets, or decnet connections.
>>> 
>
>>Before this gets too far, there is a port of the mit X11R4 core to various PC unix
>>platforms and several VGA cards.  The one main requirement that the README
>>specifies is that STREAMS must exist.  I have included the README below.
>
>>
>> stuff deleted ...
>>
>
>No No No. 
>Do not believe anything anyone will tell out about X running without TCP
>It will not. If they say so make them prove it.
>
>Frank Gleason

You obviously don't know what you're talking about.  A couple months ago
I ran X11R4 with STREAMS (local) connections only without the use of TCP
on a machine with Interactive Unix.



------------------------------

From: mb@smsc.sony.com (Michael Burg)
Subject: Re: V86, echo, *P=NULL etc updates
Date: 23 Jan 92 21:00:23 GMT

In article <1992Jan23.112540.5889@klaava.Helsinki.FI> torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds) writes:
>Replying to questions (mostly from the mailing-list - I'm trying to move
>over to alt.os.linux):
>
>> V86-mode and DOS sessions under Linux?
>
>Right. Seems everybody wants these, but the problem is that Linux wasn't
>designed with V86-mode in mind, and the memory management makes some
>assumptions that are simply incompatible with V86 tasks. The problem is
>that a V86-task /has to/ be at virtual address 0-1M, and doesn't care
>about the current linux protections scheme that uses segments. All right
>so far: but the current kernel also lives in that space. Ooops.
>

A V86-Task doesn't physically have to reside below the 1MB region. The V86
process running _thinks_ it's in the 1MB physical region with real-mode type
segments. From a memory management point of view a V86 task is basicly no
different from any other. The only major difference is that the task
might contains pages which are physically mapped to I/O devices (i.e.
video cards).  The pages within a V86 task can be swapped, relocated or
even shared.

In  commerical versions of Unix for the PC, the kernel support for V86 is
small compared to the entire package. Selected device drivers provide
additional support so devices can be shared between a V86 task and the
entire system.  The major of coding lies with the user process attempting
to simulate the BIOS, selected MS-DOS functions & various I/O ports and memory
locations. (timers, CMOS, interrupt controllers) The kernel provides support
for selected "privilage" instructions such as cli, sti, and the "duality" of
process that is containing a V86 task.  The kernel also provides a bigger time
slice for those processes which are V86 ones.

In the case of VPIX, the vpix process has a "duality" to it. Part of the
program is a normal "native" 32-bit task, the other half is a V86 task.
Switching from the native task to  the V86 task can be done with a IRET
instruction - (and with a little help from the kernel setting up the TSS
correctly). The V86 task traps back into the kernel or back to
the "native" user process depending on the instructions attempted inside
the V86 task. 

Intel has a system writer's book which contains a chapter on V86 support.


Michael Burg @ Sony Microsystems, San Jose CA      Phone: (408) 944-4032
E-Mail: mb@smsc.sony.com or ..!{uunet,mips}!sonyusa!mb

------------------------------

From: aph@sppy00.UUCP (HOUGHTON ANDREW P)
Subject: Where can I get Make?
Date: 23 Jan 92 14:26:56 GMT
Reply-To: aph@sppy00.UUCP (HOUGHTON ANDREW P)


Where can I get make for Linux?  I have pulled all the binaries and sources
and gone thru them but I cannot find make.  I have see others talk about
porting software and they say "easy as typing make".  Any help would be
appreciated.  Thanks, Andy.
-- 
Andrew P. Houghton
OCLC Online Computer Library Center, Inc.             Voice:  (614) 764-6003
6565 Franz Road                                       Fax:    (614) 764-6096
Dublin, Ohio  43017-0702                              Services for Libraries

------------------------------

From: shigeo@genesis.Berkeley.EDU (Shigeo Ishihara)
Subject: I'd like to be added on the mailing list
Reply-To: shigeo@genesis.Berkeley.EDU (Shigeo Ishihara)
Date: Thu, 23 Jan 1992 21:49:42 GMT



------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: Re: New floppy driver
Date: 23 Jan 92 23:51:40 GMT

>I uploaded the improved floppy driver to tsx-11.mit.edu, this allows you to
>format floppies as well as greatly speeding up reads.

As I've reported privately to him, I'm still having the system hang
whenever I try to do backups to a floppy.  It hangs somewhere in the
first 3 disks, at various places.  This is becoming critical, since
I'm about to move to a larger disk drive, but have no way (short of
kermitting them to a Sun over a modem) to back up the old disk before
removing it.  I've been looking into the problem myself, but I don't
know enough about the PC hardware to have much chance of fixing it.

------------------------------

From: sundaram@cps3xx.cps.msu.edu (Divya Sundaram)
Subject: Mtools : Where can I get the binaries from?
Date: 23 Jan 92 22:27:12 GMT


Is there any place where I can get the binaries for Mtools?
I have already looked in the tsx-11.mit.edu and was unable to locate them.
I have tried to compile them and had no success:

        undefined symbol _index referenced ..
                  symbol _rindex referenced ...
                         
        multiply defined symbol _memset ..
                                _memcpy ..
                                _strpbrk ...
                                _devices ...

The above were some of the error messages I got when I tried to compile the 
Mtools using "make"

------------------------------

From: comrade@uniwa.uwa.oz.au (Peter Cooper)
Subject: Disk buffering.
Date: 24 Jan 92 01:27:51 GMT

A fairly simple idea for implimentation if someone wants to do it..
(I don't have consistent access to a linux machine, so I can't do it
myself. :(  )

Why not make the disk buffer dynamicly resizeable? I.e. the disk buffer
uses all the free memory pages in the system. When brk() or anything
else asks for memory it goes thru the get_free_page() routine (it is
named something like that. the exact name slips my mind).
get_free_page() currently searches the page list, and if it can't find
anything, tries to swap a page and starts again.
        This would just need to be modified to search the list, shrink
the buffer if no page found, and THEN swap if the buffer is already at a
minimum. Sounds nice and simple to me and should result in a nice
improvement in speed , compiling in particular..

        The only complication I could see is that disk blocks are 1K is
size, and pages are 4K. A simple (kludgy) way out of this is to always
read 4 disk block at a time, and treat them as a unit.

        Comments? implementations??? ;)

------------------------------

From: tselling@peabody.iusb.indiana.edu (Teresa Selling)
Subject: Re: How to boot a PC from drive B:
Date: 24 Jan 92 02:44:09 GMT

In article <1992Jan23.171839.21368@access.usask.ca> glover@skorpio.Usask.CA (Ken Glover) writes:
>In article <zhao.696157440@chilko.ucs.ubc.ca>, zhao@unixg.ubc.ca (Jiansheng Zhao) writes:
>|> A linux related question: PC is booted from drive A:. can it be done
>|> from drive B:, 1.44 MB, which will give me more space on system disk
>|> to play with.
>|> 
>|> zhao@unixg.ubc.ca
>|>  
>
>The BIOS in the PC will only boot from drive A.  The quickest (only?) way to boot from the other drive is to swap your drives so the 1.44 is drive A instead.
>Ken Glover
>University of Saskatchewan, Saskatoon Saskatchewan, Canada

What about the Dos utility program boot_b.exe ( or something similar ).  I
have used it several times and it works fine.  It places something in the
boot sector of a floppy in a:.  Whenever you want to boot from b: you just
put that disk in and it slingshots the boot to b:  Works for me :)


--
Teresa Selling, IUSB, Indiana.

------------------------------

From: pietro@deis35.cineca.it (Pietro Caselli)
Subject: Re: How to boot a PC from drive B:
Date: 24 Jan 92 03:03:28 GMT

In <gay.696197896@fraser.sfu.ca> gay@fraser.sfu.ca (Ian D. Gay) writes:

>Couldn't one just write a simple program to read the first track of 
>drive B, and jump to it?

Yea, its simple ... but just in mind! Unless you`ll write a new BIOS, at 
the startup your PC will look first for a startup code on you HD, Then on 
you floppy ( BUT ONLY ON DRIVE A ) and if everithing fails it will start 
with basic on rom. NIce ...

Why not write a new BIOS for Linux :-)

-- 
Pietro Caselli                          |
Internet: pietro@deis35.cineca.it       |    IF YOU MEET THE BUDDHA
          zaphod@petruz.sublink.org     |     ON THE ROAD,KILL HIM.

------------------------------

From: thinman@netcom.COM (Lance Norskog)
Subject: Re: X11R5 OS support
Date: 24 Jan 92 03:50:36 GMT

You need three things from the OS to run X:

        1) a reliable data pipe.  Nobody uses it, but I would favor
           shared memory and a semaphore system.  This avoids
           copying data around over&over again.

        2) control over video registers, and preferably a
           "video card server" that mediates control between
           different contenders.

        3) a serial port for the mouse.

Optional:
        
        4) nobody does this either, but you can (mis-)use shared 
           libraries and turn the X server into a direct graphics
           library.

        5) a Power Glove port :-)/2, I've got it running but not
           under X

More on #4: you have two semaphores, "I'm the server" and "I'm
queueing commands for the server".  If you get "I'm the server",
do all the existing queued commands, then do what you wanted to do.
If you are denied it, but request "I'm queueing commands" and block
until you get it.  This is a Unix solution which allows programs
to be scheduled randomly and still maintain consistent access.
If you grab the first baton at higher levels, say inside widgets,
you can get a lot done in one shot without doing any context
switches to let the server run.

You still need a server process to accept TCP connections from
other machines; and if it dies, X dies.

Have fun,

Lance Norskog

If Unix drivers work on LINUX, we've got the Sound Blaster running...

------------------------------

From: bolsen@mcs213h.cs.umr.edu (Brian Olsen)
Subject: Minor device numbers.
Date: 24 Jan 92 04:03:38 GMT


I've just installed mtools, but unfortunately at the moment I can only
read high density floppies.  From what I read in the 0.12 install
documents, I believe I need to mknod my floppy devices differently.
What are the minor device numbers for a 360k and a 720k drive?

Any other advice would be appreciated.

Thanks,
Brian Olsen

------------------------------

From: martin@cs.UAlberta.CA (Tim Martin; FSO; Soil Sciences)
Subject: Re: How to boot a PC from drive B:
Date: 24 Jan 92 04:23:31 GMT

gay@fraser.sfu.ca (Ian D. Gay) writes:
>glover@skorpio.Usask.CA (Ken Glover) writes:
>>In article <..>.>, zhao@unixg.ubc.ca (Jiansheng Zhao) writes:
>>|> A linux related question: PC is booted from drive A:. can it be done
>>|> from drive B:, 1.44 MB, which will give me more space on system disk
>>|> to play with.

>>The BIOS in the PC will only boot from drive A.  The quickest (only?) way to boot from the other drive is to swap your drives so the 1.44 is drive A instead.

>Couldn't one just write a simple program to read the first track of 
>drive B, and jump to it?

Such a utility can be found in DOS ftp sites; eg: oak.oakland.edu.
I forget what it is called.  Basically you make a boot disk for A:
that simply loads and boots B:.  (Pretty much what the Stoned virus
does, though the virus loads and boots side 1 sector 3 of A: whereas
this loads and boots side 0 sector 1 of B:, and doesn't install a
virus into memory!)

Tim.

 -------------------------------------------------------------
  Tim Martin                 *
  Soil Science               *     These opinions are my own:
  University of Alberta      *        My employer has none!
  martin@cs.ualberta.ca      *
 -------------------------------------------------------------

------------------------------

From: n8141165@henson.cc.wwu.edu (gleason margaret)
Subject: Re: X11R5 Re: [Bob Pendelton: Re: A question]
Date: 24 Jan 92 04:10:13 GMT

hunt@hal.gnu.ai.mit.edu writes:

>>
>>No No No. 
>>Do not believe anything anyone will tell out about X running without TCP
>>It will not. If they say so make them prove it.
>>
>>Frank Gleason

>You obviously don't know what you're talking about.  A couple months ago

Could be. Finding the correct info on this point has been a pain in the
ass.

>I ran X11R4 with STREAMS (local) connections only without the use of TCP
>on a machine with Interactive Unix.

First I have SCO 5.3.2 and the XllR4 from MIT.

I will agree that that libX.a contains code for clients to connect
to a server over STREAMS, however my experiance is that the server contains
no code for STREAMS support.

setting -DTCPCONN or -DLOCALCON or -DSTREAMSCONN or anything else or any
combination will not create a executable server since the code in server/os
(access.c and connection.c I think) requires TCP. It says so in the code. The
makefile for the os directory forces -DTCPCONN. 

Simply put if you do not have include files and probably libraries that will
handle TCP calls (sockets, gethostname, etc) you cannot compile the server.
SCO out of the box does not contain this. 

This is my experiance so far. If I am wrong feel free to flame but please
point out my mistake. 

Frank Gleason
n8141165@henson.cc.wwu.edu

------------------------------


** FOR YOUR REFERENCE **

The service addresse, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
