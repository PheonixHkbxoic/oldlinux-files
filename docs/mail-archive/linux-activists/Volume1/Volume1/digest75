From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Fri, 28 Feb 92 18:00:13 EST
Subject:  Linux-Activists Digest #75

Linux-Activists Digest #75, Volume #1            Fri, 28 Feb 92 18:00:13 EST

Contents:
  gcc 2.0 (Jiansheng Zhao)
  Re: v86 mode is [not] useless (D.Bolla)
  FAQ: the new gcc 1.40 (hlu%decserv2@dns1.eecs.wsu.edu)
  Re: newgcc installation error (fwd) (hlu%decserv2@dns1.eecs.wsu.edu)
  Re: Few comments about Linux (cm445a17)
  Re: v86 mode is [not] useless (Wayne Davison)
  Re: Easy video mode changes, nonstandard disk support, and v86 mode (Ian Wells)

----------------------------------------------------------------------------

From: Jiansheng Zhao <zhao@unixg.ubc.ca>
Subject: gcc 2.0
Reply-To: zhao@unixg.ubc.ca
Date: Fri, 28 Feb 1992 17:14:33 GMT


Xref: unixg.ubc.ca ubc.unix:68 bc.unix:23 bc.general:292 ubc.general:198
Newsgroups: ubc.unix,bc.unix,bc.general,ubc.general
Path: unixg.ubc.ca!ubc-cs!acton
From: acton@cs.ubc.ca (Donald Acton)
Subject: gcc-2.0 available for anonymous ftp from cs.ubc.ca
Message-ID: <1992Feb23.211128.2847@cs.ubc.ca>
Sender: usenet@cs.ubc.ca (Usenet News)
Organization: Computer Science, University of B.C., Vancouver, B.C., Canada
Distribution: na
Date: Sun, 23 Feb 92 21:11:28 GMT

gcc-2.0 is available for anonymous ftp from cs.ubc.ca and can be found
in /pub/archive/gnu/gcc-2.0.tar.Z. Postscript versions of the gcc and
cpp manuals built from the texinfo files shipped with this release are 
available as /pub/archive/gnu/manuals_ps/{gcc,cpp}-2.0.Z

Note that gcc seems to be the do everything C compiler as it supports
ANSI C, Objective C and C++ although it sounds like the Objective C
support might be incomplete. Poking around in the distribution I
noticed a makefile for MS-DOS. 

Donald Acton


======The release announcement follows===============================
~From: rms@gnu.ai.mit.edu (Richard Stallman)
~Newsgroups: gnu.gcc.help,gnu.gcc.announce,gnu.g++.announce
~Subject: GCC 2.0 released
~Date: 22 Feb 92 08:54:57 GMT

People have been waiting for GCC 2.0 for a year.  Now it's
available for anonymous ftp from /pub/gnu/gcc-2.0.tar.Z
on prep.ai.mit.edu.  There are no diffs from version 1--such
diffs would be too large to be useful.


Version 2 of GCC can generate code for the IBM PC/RT, the IBM RS/6000,
the Motorola 88000, the Acorn RISC machine (not fully tested), the AMD
29000 and the HP-PA (700 or 800), in addition to several machines
supported by version 1 (Motorola 68000, Vax, Sparc, National
Semiconductor 32000, Intel 386 and 860, and Mips).  Ports for the IBM
370, the Intel 960, the Clipper, the Tron (a Japanese standard
computer architecture) and the NCUBE are on their way, but there is no
estimate of when they will be available.  Note that using GCC to
compile for the HP-PA requires as yet unreleased versions of other GNU
software such as the assembler and linker.

Version 2 can generate output files in a.out, COFF, ECOFF, ELF, XCOFF,
VAX-VMS and OSF-Rose formats when used with a suitable assembler.  It
can produce debugging information in several formats: BSD stabs, COFF,
ECOFF, ECOFF with stabs symbols, VAX-VMS and DWARF.  (We may support
XCOFF for the RS/6000 in the future.)

Version 2 can be easily configured as a cross-compiler, running on one
platform while generating code for another.

Version 2 supports compatible calling conventions for function calling
and return values on the Sparc (unlike version 1) as well as the other
machine types.

Early testing of GCC Version 2.0 indicates that it produces faster
code for SPARC computers than Sun's latest released compilers (both
bundled and unbundled).  It is also the fastest known compiler for
the Motorola 88k.


In addition to ANSI C, GCC Version 2.0 includes support for the C++
and Objective C languages.  Objective C is an object-oriented language
which adds to C features similar to Smalltalk.  The front end for the
Objective C language was donated by NeXT Computers, Inc., which uses
GCC as the basis for their NeXTstep operating system.  (Run-time
support for the Objective C language is still under development.)

GCC extends the C language to support nested functions, non-local
gotos, taking the address of program labels, and unnamed structures as
function arguments (among other things).  There are also many new
warnings for frequent programming mistakes.

GCC Version 2 can produce position-independent code for several types
of CPU: 68000, 88000, 80386, Sparc, and RS/6000.  Supporting PIC on
additional suitable CPU types is not too difficult a task.




------------------------------

From: db1@ukc.ac.uk (D.Bolla)
Subject: Re: v86 mode is [not] useless
Date: 28 Feb 92 13:51:14 GMT
Reply-To: db1@ukc.ac.uk (D.Bolla)

In article <1992Feb27.165955.5796@borland.com> davison@borland.com (Wayne Davison) writes:
>D.Bolla (db1@ukc.ac.uk) wrote:
>> Let's face it. A V86 mode is almost useless.
>> What kind of programs (decent programs) do you see that use an 8086 ?

>You are seriously underestimating the useability of V86 mode.  The DOS
>memory manager QEMM uses V86 mode to provide all sorts of loadhigh features
>and memory management services.  This broke programs that tried to switch
>into protected mode and do their own memory management, but it was so

Yes the point is that linux is not stable as it is now ( and it is simple
now ). Loading a lot of stuff will make it so unstable to be useless.

Can I remind to you that:
A program that produce the WRONG result fast is useless...

For an OS there is no clear line between a good and bad result but the
same principle apply. If I use linux in a serious way I want it to be
stable !!!!
No point to have a lot of features that panic !

>popular that most programs were re-written to include VCPI support (which
>allows them to work with or without QEMM being present).  These days you
>also have to support DPMI so you can run Windows 3.0 without resorting to
>real mode.  Look at OS/2 2.0 -- they are providing an OS that uses V86
>dos boxes complete with DPMI (and I believe VCPI) support, so it CAN be
>done.  Don't think that it's going to be easy, though.

Is it worth it ? Is it worth it to argue that it can be done ?
Of course it can be done !

BUT

The list of priorities has MANY more things in front of it.
Let's have first:

A STABLE KERNEL (The actual version still hang too often)
A FAST   math emulation in the kernel.
A STABLE IPC
A STABLE TCP-IP
A STABLE X11

And then we may think about DOS and other things....

Damiano

------------------------------

From: hlu%decserv2@dns1.eecs.wsu.edu
Subject: FAQ: the new gcc 1.40
Reply-To: hlu%decserv2@dns1.eecs.wsu.edu
Date: Fri, 28 Feb 1992 17:25:33 GMT

=============================================================
QUESTION: Where is the new gcc 1.40?

ANSWER: It's on tsx-1.mit.edu under /pub/linux/binaries/compilers. It's
called newgcc.tar.Z

QUESTION: What is the content of newgcc.tar.Z?

ANSWER: newgcc.tar.Z contains all the binaries, header files and
libraries needed to use gcc-1.40.

QUESTION: How do I install it?

ANSWER: Just do

        cd /usr
        tar xvofvz xxxx/newgcc.tar.Z

Note: Some header files will be overwritten by the ones in
newgcc.tar.Z. If you rely on some changed header files. Then do

        cd /usr/local
        tar xvofvz xxxx/newgcc.tar.Z

I believe gcc will look for /usr/local first for anything. You may want
to either change your Makefiles or link gar/ar gas/as gld/ld to prevent
a lot off /stupid/ problems. But since gcc is the default compiler for
Linux, the prefix 'g' should be dropped.

QUESTION: What are the main differences with the old release?

ANSWER: Those bugs related to estdio in the old port have been
corrected, like FP output and "compress *." And this package contains
387 support. There are
        libm.a (for those with 387)
        libsoft.a (for those without)

libtermcap.a (from tput 1.10) is separated from libc.a. The
-mstring-insns option is no longer needed nor supported.

QUESTION: I find FP to integer is not right. What is wrong?

ANSWER: There is a bug in gnulib. That should have been fixed. Get a
new one from tsx-11.mit.edu. If it still doesn't work right, drop me a
note.

QUESTION: Is stdio ANSI compatible?

ANSWER: No. Read the stdio.h in newgcc.tar.Z. It will be fixed in gcc
2.0. The stdio will be replaced by an ANSI compatible one based on BSD
4.4. You should read the stdio.h in newgcc.tar.Z to avoid the trouble
for now.

QUESTION: When will gcc 2.0 be released?

ANSWER: Very soon.

QUESTION: Why does -O fail on some files?

ANSWER: The -O option may fail when the INLINE functions (string.h) are
passed as parameters. There is nothing wrong with compiler(?). They
will be fixed in gcc 2.0. You can change the source to avoid that.

QUESTION: Where is the source code of the new libc.a?

ANSWER: Drop me a note. The only difference is stdio. Since it will be
replaced in gcc 2.0, I suggest you wait for 2.0.

QUESTION: Why cannot gcc exec cpp and cc1?

ANSWER: Someone suggests me to put cc1 and cpp in /usr/local/lib. I
changed the driver. But I forgot to move cc1 and cpp. It will be solved
in gcc 2.0. For now, just do
        ln -s /usr/lib/cpp /usr/local/lib
        ln -s /usr/lib/cc1 /usr/local/lib

QUESTION: Where is limits.h?

ANSWER: You may need to get the lastest header files, aka the ones from
the kernel sources.
=============================================================

H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: hlu%decserv2@dns1.eecs.wsu.edu
Subject: Re: newgcc installation error (fwd)
Reply-To: hlu%decserv2@dns1.eecs.wsu.edu
Date: Fri, 28 Feb 1992 17:25:33 GMT

Forwarded message:
| From @nic.funet.fi:daemon@joker.cs.hut.fi Fri Feb 28 09:12 PST 1992
| X-Delivery-Notice:  SMTP MAIL FROM does not correspond to sender.
| Date:         Fri, 28 Feb 1992 19:02:09 +0200
| From: tim <csn0140%ux.acs.umn.edu@FINHUTC.hut.fi>
| Subject: Re: newgcc installation error
| Sender: linux-activists-request@niksula.cs.hut.fi
| To: linux-activists@niksula.cs.hut.fi
| Cc: linux-activists@joker.cs.hut.fi
| Message-Id: <199202281702.AA01321@ux.acs.umn.edu>
| In-Reply-To: <9202281601.AA09613@numero6.greco-prog.fr>; from "Marc CORSINI" at
|  Feb 28, 92 5:01 pm
| X-Mailer: ELM [version 2.3 PL11]
| X-Envelope-To: linux-activists@niksula.hut.fi
| 
| >
| >
| >
| > May be the cc1 and cpp could be link in /usr/bin (I think this is the
| > only thing I've done which was not in the readme)

NO. NO. Someone suggests me to put cc1 and cpp in /usr/local/lib. I
changed the driver. But I forgot to move cc1 and cpp. It will be solved
in gcc 2.0.

| >
| yes! I made sym-links from /usr/lib/cc1 and /usr/lib/cpp to
| /usr/bin/cc1 and /usr/bin/cpp and the problem was solved.
| 


| there doesn't seem to be an limits.h in /usr/include...i commented the
| line #include <limits.h> out of stdio.h and was able to compile some
| stuff successfully. i'll worry about getting a limits.h later.
| 
| 

You may need to get the lastest header files, aka the ones from the
kernel sources.

H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: cm445a17@socrates.umd.edu (cm445a17)
Subject: Re: Few comments about Linux
Date: 28 Feb 92 21:11:09 GMT

mikeb@yarra.pyramid.com.au (Michael Bethune) writes:

>In article <1992Feb28.051847.19790@uwm.edu> markh@csd4.csd.uwm.edu (Mark William Hopkins) writes:
>>In article <1992Feb18.100319.21517@micromuse.co.uk> dj@micromuse.co.uk (D.J.Walker-Morgan) writes:
>>>
>>>|> A 486-33 outperforms a low end SPARC, and my 386-33 is easily twice 
>>>|> as fast as my HP Bobcats.  
>>>
>>In computer science, you learn that if you want speed, you write better
>>algorithms and use parallelism instead of beating a faster processor against a
>>brick wall.

>Thank you for reminding me about what my degree taught me. 8-)

>[nonsense deleted]

>>In any case, it's not speed that counts, it's functionality.  The bottom line
>>is: what microprocessor has the best low-level hardware support for operating
>>systems?
>>
>>I won't answer the question, because I don't know what a SPARC supports
>>(semaphores, memory segments/protection, access levels, caching, or whatever).
>>I do know that the 386 and above have ideal OS support, though it tends to
>>suffer from having a long heritage dating back to the 8080 (when people were
>>still living in caves).

>Just what do mean by 'the bottom line is: what micoprocessor has the best
>low-level hardware support for operating systems'?

>This 'bottom line' makes no sense. What operating systems? This is crucial
>to understanding what kind of support is useful. There is a whole lot of 
>difference between what good in supporting  a small address space operating
>system like MS-DOS without virtual memory and what is useful to support
>say UNIX.

>Afterall an 8088 provides all the 'low-level support' MS-DOS needs.

>The point being there are various operating systems that make various demands
>upon a CPU. More to the point, Operating systems like any program make
>demands upon a whole range of sub-systems, CPU, memory, bus traffic, I/O
>sub-systems etc etc. Looking at CPU speed/capabilities in isolation is
>a favourite past time of the MIP merchants and marketoids, it says very
>little about ultimate machine performance for a given application.

>This is very relevant to 486s versus Sparc.

>To make the point more strongly, what is useful about a 
>12 SPEC mark CPU, if its sitting idle in wait states waiting for
>slow memory sub-systems, or slow I/O sub-systems.

>A high performance desktop machine requires balance between its different
>components.

>In general Intel based PCs tend to be built for a low price point where
>performance versus price trade offs are inevitably made.

>Consider the ISA bus, it has a through put of not much more than 5 Megabytes
>per second. Even the EISA bus is crippled by poor bandwidth to retain
>compatability with the ISA bus.

>Sun Sparc workstations in contrast tend to balance a capable processor
>with good bus performance, good memory sub-systems, mass-storage 
>peripherals and some of the best ethernet performance in the business.

>On the other hand Intel based PC's provide peerless single user performance,
>with non-virtual memory operating systems like MS-DOS.

>-- 
>Michael Bethune                        Disclaimer: I have no commercial
>Independent Unix Consultant.            relationship with Pyramid and
>Phone: +61 3 018 538103                 do not represent them in any way. 
>Melbourne, Australia.

Please, this is a news group about Linux.  It is NOT a platforms nor
an operating systems discussion group.  Take your topics to were they
belong (i.e. another newsgroup).  Thank you!

------------------------------

From: davison@borland.com (Wayne Davison)
Subject: Re: v86 mode is [not] useless
Date: Fri, 28 Feb 1992 21:51:44 GMT

D.Bolla (db1@ukc.ac.uk) wrote:
> Let's face it. A V86 mode is almost useless.

I said:
> You are seriously underestimating the useability of V86 mode.

D.Bolla responds:
> Yes the point is that linux is not stable as it is now ( and it is simple
> now ). Loading a lot of stuff will make it so unstable to be useless.

If you notice I said nothing about when or if a V86 mode should be done.  Only
that an 8086 mode running under a [34]86 OS is much more powerful than simply
an 8086 chip.  _My_ point was to correct an inaccuracy, and I left the other
points of your article untouched.  But as long as I'm here, let me address
_your_ point.

I agree that the stability of Linux should be the highest goal, along with
providing a large enough set of the basic kernel services to make it useful
(things like the IPC and VFS efforts).  However, I disagree that people
talking about and maybe even beginning to develop other new-fangled features
is detrimental to the product.  Keep in mind that the public community of
Linux hackers is quite large and diverse.  There are already people focusing
on riding the kernel of bugs and providing the enhancements necessary to
run things like X windows.  If this effort is under-staffed, then by all
means let this be known so that someone else can help out.

Just don't think that throwing more people at a task will necessarily speed
it up.  The rule is to choose a few good people (or just one) to target a
specific area that needs improvement and allow that group (person) to focus
on it.  Having someone working on an improved memory manager that would
support a V86 mode is a great idea.  When and if it gets included into the
mainstream distribution is then an integration decision that can happen after
it's done.  I argue that having these side-line development efforts is not
detracting from the central goal of a version 1.0 Linux in any way as long
as we have a core group of people who are already working on the basics.

Remember that Linus has a very good track record of not throwing in just any
new feature that comes along.  And if Linus passes the baton on to another
to succeed him in this job, he or she will have to be equally conservative
in only adding the things to the mainstream distribution that are well thought
out and well implemented.
-- 
 \  /| / /|\/ /| /(_)    Wayne Davison
(_)/ |/ /\|/ / |/  \     davison@borland.com
   (W   A  Y   N   e)

------------------------------

From: ijw11@phx.cam.ac.uk (Ian Wells)
Subject: Re: Easy video mode changes, nonstandard disk support, and v86 mode
Date: 28 Feb 92 15:59:01 GMT

In article <1992Feb27.114932.15983@wam.umd.edu> joel@wam.umd.edu (Joel M. Hoffman) writes:

   [ ... comments about nice DOS programs ... ]

   WordPerfect and Quicken come immediately to mind.  While I don't
   actually use WP and more, I know many people that do, and I'd like to be
   able to use Linux without giving up such nice DOS programs.  Most
   programs still run under a simple 8086.  I also have several games for
   DOS that I simply cannot port to Linux.  (Scrabble, Chess, etc.)

Yes, so use DOS for them.  It would make Linux unnecessariy complicated to
add DOS.  It's developing as a nice operating system in its own right, forcing
support for another OS onto it is taking a step backward.  If you want a good
WP, game, etc.  write your own for Linux or keep DOS on your disk.

   >
   >Do you want DOS to hang in the middle of you wordprocessor ?
   >I don't
   >

   If the DOS emulator dies it's not nearly to critical as if the OS
   dies.  Under Linux, everything else will keep running.  Not SO bad....

   -Joel

One point about this is that if DOS trickery has to be coded into the MM then
it's a lot more likely to hang Linux at the same time.  It's also a lot more
likely that Linux will hang given the amount of bugs adding such code would
produce.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activists@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activists Digest
******************************
