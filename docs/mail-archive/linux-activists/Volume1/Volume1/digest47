From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Tue, 11 Feb 92 22:30:15 EST
Subject:  Linux-Activists Digest #47

Linux-Activists Digest #47, Volume #1            Tue, 11 Feb 92 22:30:15 EST

Contents:
  mkswap crashes (Joel M. Hoffman)
  Re: OK, OK, I get the message! (Lars Wirzenius)
  what happens every 30 seconds? ("Mark W. Eichin")
  Re: Lock-ups, init/login (Kari E. Hurtta)
  Re: Aww, do I hafta? (Dylan Smith...alias Winston)
  Re: [t]csh (Dylan Smith...alias Winston)
  od(1) in Perl (Peter Orbaek)
  Re: CTRL-ALT-DEL + Make question (Dylan Smith...alias Winston)
  CTRL-ALT-DEL + Make question (D.Bolla)
  Re: what happens every 30 seconds? (Joel M. Hoffman)
  Re: what happens every 30 seconds? (Charles Hedrick)
  Re: CTRL-ALT-DEL + Make question (Charles Hedrick)
  floppy patches (Epstein@DOCKMASTER.NCSC.MIL)
  problem with keyboard. (Henk M. Lippes)
  RLL and IDE controllers (Epstein@DOCKMASTER.NCSC.MIL)

----------------------------------------------------------------------------

From: joel@wam.umd.edu (Joel M. Hoffman)
Subject: mkswap crashes
Date: Tue, 11 Feb 1992 04:46:36 GMT

I just got Linux installed on my HD, and tried mkswap.  But all it
does is crash with:

        general protection: 0000
                .
                .
                .
        segmentation fault

It does this no matter what arguments I use it with, or even with none.

I got both the kernel and mkswap from tsx-11 a few days ago.  Is there
a patch I have to apply?  Where might I find it?

I have a Dell 325D (386 at 25MHz) with 2M and a 125 HD, partitioned
into 80M for DOS, 20 for Linux, and 5 for swap (I hope).

I'd try to recompile mkswap, but without the extra swap space for
GCC.... :-)

Thanks in advance for any help.

-Joel

------------------------------

From: wirzeniu@klaava.Helsinki.FI (Lars Wirzenius)
Subject: Re: OK, OK, I get the message!
Date: 10 Feb 92 23:23:47 GMT

In article <1992Feb10.155653.1@cc.curtin.edu.au>
nmurrayr@cc.curtin.edu.au writes:
>using Linux v0.12 (BTW, is it pronounced line'-ux or linn'-ux?). 

I'm not an expert on the subject, but I think the pronounciation depends
on whether you speak Swedish or not :-)

The way Linus pronounces it (as far as I can remember at this moment,
he'll flame me if I get it wrong, I'm sure), is that the 'lin' part is
pronounced like the 'lin' of linen.  The 'ux' part is more difficult, it
probably is the same sound as you would use if the first part would be
pronounced 'line'.

Perhaps we should get Linus record it on audio tape, and sell those
tapes :-)

--
Lars Wirzenius          wirzeniu@cs.helsinki.fi

------------------------------

From: eichin@ATHENA.MIT.EDU ("Mark W. Eichin")
Subject: what happens every 30 seconds?
Reply-To: eichin@ATHENA.MIT.EDU ("Mark W. Eichin")
Date: Tue, 11 Feb 1992 18:02:52 GMT

I've been using kermit at 38400 baud to download files from a sun
(direct serial connection, /dev/tty65...) and I've noticed that
every 30 seconds (hand timed, but it seems fairly precise.) It isn't
emacs display-time waking up (that's every 60 seconds, and I exit'ed
emacs anyway.) This doesn't show up at 19200...
        Note that I'm running a 486 at 40Mhz, so I'd expect that
something would have to be keeping the processor very busy for it to
actually miss data... has anyone else seen anything like this?
                                _Mark_ <eichin@athena.mit.edu>
                                MIT Student Information Processing Board

------------------------------

From: hurtta@cs.Helsinki.FI (Kari E. Hurtta)
Subject: Re: Lock-ups, init/login
Date: 11 Feb 92 07:44:29 GMT

In article <1992Feb9.191222.17780@klaava.Helsinki.FI> torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds) wrote:
> Ok, there has been some talk about lock-ups with linux: notably when
> doing big compiles (linking gnu-emacs etc) or when having several
> programs running under the VC's.  The only solution has been to reboot
> with ctrl-alt-del, and this has mostly resulted in a more-or-less
> destroyed filesystem (the problem is compounded by the fact that these
> lock-ups happen just when you are running the most memory-intensive
> programs, which often write to the disk as well). Happily this doesn't
> happen very often (I haven't got many reports about this).
> 
> As far as I've been able to find out, the problem isn't a filesystem
> problem (directly that is: the filesystem is just the first casualty
> after a reboot) - it seems to be directly linked with memory usage. 
> When linux gets low in memory, it doesn't just give up and terminate the
> process: it tries to swap things out (even on a nonswapping system it
> can swap executable pages out - they can be demand-loaded back when
> necessary).
> 
> This is mostly good: it allows programs to run to completion even after
> the memory really got totally used up, but it doesn't cope too well with
> programs that don't want "just a couple more pages", but a /lot/ of
> them: it might eventually give up with a "out of memory" error and
> terminate one of the processes, but it seems linux stubbornly tries to
> run some programs when it thinks it can juggle the pages, but in reality
> the program is just totally trashing between 2 or more pages (one single
> machine-insns can result in several page exceptions). 
> 
> Even update doesn't get the time to run, and the result is a machine
> that seems totally dead, and won't sync.  Not good (understatement of
> the year).  If somebody (who knows about swapping etc) has some
> constructive ideas of how to solve the problem, I'd be interested: right
> now I don't want to release 0.13 before this is solved.  My current idea
> is to look at which pages have recently been swapped out, and if linux
> notices that one page gets swapped out/in all the time, it just kills
> the process.  I'll get it solved: I just wanted to warn people that this
> problem does exist. 

Perhaps is good idea put limit to mininum size of process' working set.
Two rules:

1) If (process' number of pages in working set) <= 
        (mininum size of process' working set)
   then don't outpage process page ie. don't decrease process working set
        size

2) if (total number of pageable _memory_ pages) -
        (number of process) * (mininum size of process' working set)
        < (mininum size of process' working set)
   then fork will failed

Rule 2 should guaranteen that there isn't deadlock and
rule 1 should guaranteen that process newer trashing between
two or more pages.

I suggested that mininum size of process' working set is ten pages.
This should be sufficient.

- K E H "Just one idea"
        

------------------------------

From: d_smith@csd.brispoly.ac.uk (Dylan Smith...alias Winston)
Subject: Re: Aww, do I hafta?
Date: 11 Feb 92 11:06:35 GMT

In article <aldavi01.697510350@starbase.spd.louisville.edu> aldavi01@starbase.spd.louisville.edu (Arlie Davis) writes:
>
>Ah, you have not met the joys of filename completion, a` la /bin/csh.  Next
>time you are on a UNIX box (not a Linux box, as I don't think we have a 

You heathen ;-) Try using the tab key under Linux - that's the filename
completion under Bash.
-- 
Email : JANET d_smith@brispoly.csd | Everywhere else d_smith@csd.brispoly.ac.uk
        FidoNet Address 2:252/204  | Data (v22/v22bis) phone 0491 875104

------------------------------

From: d_smith@csd.brispoly.ac.uk (Dylan Smith...alias Winston)
Subject: Re: [t]csh
Date: 11 Feb 92 11:11:33 GMT

In article <1992Feb8.171608.1964@wam.umd.edu> joel@wam.umd.edu (Joel M. Hoffman) writes:
>
>Is TCSH available for use with Linux?  Is the source even available?
>If not, what is the status of CSH?

The source is on quite a few FTP sites. I've got a copy down, and when I
have some time I'll have a bash at getting tcsh to work.


-- 
Email : JANET d_smith@brispoly.csd | Everywhere else d_smith@csd.brispoly.ac.uk
        FidoNet Address 2:252/204  | Data (v22/v22bis) phone 0491 875104

------------------------------

From: poe@daimi.aau.dk (Peter Orbaek)
Subject: od(1) in Perl
Date: 11 Feb 92 12:28:49 GMT

Here is a small Perl script that implements the od(1) command. I admit that
it suffers a bit from featuritis :-)


   - Peter (poe@daimi.aau.dk)

--- snip snip ---
#!/usr/local/bin/perl

# od.pl - poe@daimi.aau.dk, do not copyright

require 'getopt.pl';

&Getopt('w');

sub usage {
        print STDERR "Usage: $0 [-acdghox] [-w width] [file...]\n";
        exit(1);
}

&usage if $opt_h;

$w = $opt_w ? $opt_w : 16;

if($opt_g) {
        $w = $w > 14 ? 14 : $w;
        $fmt = "%4x: " . ("%02x  " x $w);
        $fmt2 = ("%1s" x $w) . "\n";
} elsif($opt_x) {
        $fmt = "%4x: " . ("%02x  " x $w) . "\n";
} elsif($opt_d) {
        $fmt = "%4d: " . ("%3d " x $w) . "\n";
} else {
        $fmt = "%4x: " . ("%03o " x $w) . "\n";
}

if($opt_a || $opt_c) {
        $fmt2 = "      " . ("%1s   " x $w) . "\n";
}

if($#ARGV < 0) {
        $ARGV[0] = "<&STDIN";
}

while($file = shift @ARGV) {
        open(FILE, $file) || next;
        print $file, ":\n";
        $pos = 0;

        while(read(FILE, $buf, $w) > 0) {
                @bytes = unpack("C$w", $buf);
                @chars = ();
                for (@bytes) {
                        if($_ < 32 || $_ > 126) {
                                push(@chars, '.');
                        } else {
                                push(@chars, pack("C", $_));
                        }
                }
                if($opt_a || $opt_c || $opt_g) {
                        printf($fmt, $pos, @bytes);
                        printf($fmt2, @chars);
                } else {
                        printf($fmt, $pos, @bytes);
                }
                $pos += $w;
        }
        $| = 1; print ""; $| = 0;
        close FILE;
}


--
Peter Orbaek ----------------- poe@daimi.aau.dk  |      ///
Hasle Ringvej 122, DK-8200 Aarhus N, DENMARK     |     ///
                                                 | \\\///
"Strong typing is for people with weak memories" |  \XX/

------------------------------

From: d_smith@csd.brispoly.ac.uk (Dylan Smith...alias Winston)
Subject: Re: CTRL-ALT-DEL + Make question
Date: 11 Feb 92 11:55:37 GMT

In article <5241@falcon.ukc.ac.uk> db1@ukc.ac.uk (D.Bolla) writes:

>1) As I see it now a "non root user" cannot use chown to change owner of 
>   a file. I understand that it is posix.... but I would like to  point out
>   that:
>   I see linux as a "friendly" operating system that allows you to do as
>   much as possible without many restrictions.
>   I would like linux to be as fast as possible. And I am thinking about
>   NOT putting into the kernel stuff like :
>   Check for user disk quota
>   Check for user cpu, system, time exceeded and so on.
>   Trace of any user syscall or stuff like that.

Well don't inflict it on all of us! Perhaps have a "friendly" Linux and a
POSIX one. I'm intending to set up a BBS running Linux once we have enough
of Linux to do it. In fact I have got rid of my DOS bbs to do so! The whole
point is Linux *needs* these if it's to be of any use at all to me, I
would like my users to get access to the shell (some people may find navig-
ation quicker) and if Linux is missing disk quota, chown can be used by
all etc. I will have to go back to DOS, which is what I definitely don't want
to do. I don't want to have BBS software on top of Linux either, it uses
up lots of room and overly restricts access. Also time exceed is very 
neccisary on a BBS - it's unlikely I could detect a dropped carrier from
a UNIX shell.
-- 
Email : JANET d_smith@brispoly.csd | Everywhere else d_smith@csd.brispoly.ac.uk
        FidoNet Address 2:252/204  | Data (v22/v22bis) phone 0491 875104

------------------------------

From: db1@ukc.ac.uk (D.Bolla)
Subject: CTRL-ALT-DEL + Make question
Date: 11 Feb 92 09:23:49 GMT


Hello.

Few more questions about Linux :-)

1) As I see it now a "non root user" cannot use chown to change owner of 
   a file. I understand that it is posix.... but I would like to  point out
   that:
   I see linux as a "friendly" operating system that allows you to do as
   much as possible without many restrictions.
   I would like linux to be as fast as possible. And I am thinking about
   NOT putting into the kernel stuff like :
   Check for user disk quota
   Check for user cpu, system, time exceeded and so on.
   Trace of any user syscall or stuff like that.

2) Looking around in the kernel I see that there is a "function" reboot in
   keyboard.S that is used to reboot the machine.
   This is called directly from inside keyboard.S and has no check for
   processes active or anything.
   I was thinking:
   Will it be possible to make the reboot "function" to call a special
   version of kill Eg. killall that try to kill all processes of the system
   APART init and if the user press CTRl-ALT-DEL three times it finally
   does the reboot of the machine.
   something like:

   static int attempt=0;
   safe_reboot
      {
      switch ( attempt )
         {
         case 0:
            killall (SIGTERM);          /* Try to kill in a nice way    */
            attempt++;
            break;
         case 1:
            killall (SIGKILL);          /* Use brute force now          */
            attempt++;
            break;
         default:
            reboot();                   /* Just reset the machine       */
            break;
         }
      }

    Is this possible ?

3) I tryed to use make as a "non root" user and make complains about the
   fact that it can't do setuid().... I am posting this by memory now so I
   can't remembar the exact version of make ( if there is any ).
   I just would like to know if any other user has experienced problems in
   running make as non root and where I can find a public domain version of
   make  ( Source code ).

Damiano

------------------------------

From: joel@wam.umd.edu (Joel M. Hoffman)
Subject: Re: what happens every 30 seconds?
Date: 11 Feb 92 22:03:23 GMT

In article <1992Feb11.180252.10743@athena.mit.edu> eichin@ATHENA.MIT.EDU ("Mark W. Eichin") writes:
>I've been using kermit at 38400 baud to download files from a sun
>(direct serial connection, /dev/tty65...) and I've noticed that
>every 30 seconds (hand timed, but it seems fairly precise.) It isn't

I suspect it's a ``sync'' you're seeing.  It's common in Unix
to syncronize the physical disk with the buffer cache every thirty seconds.

-Joel

------------------------------

From: hedrick@athos.rutgers.edu (Charles Hedrick)
Subject: Re: what happens every 30 seconds?
Date: 11 Feb 92 22:06:06 GMT

>Subject: what happens every 30 seconds?

sync?

------------------------------

From: hedrick@athos.rutgers.edu (Charles Hedrick)
Subject: Re: CTRL-ALT-DEL + Make question
Date: 11 Feb 92 22:21:36 GMT

>1) As I see it now a "non root user" cannot use chown to change owner of 
>   a file. I understand that it is posix....

This is a security issue.  I assume you're not asking for chown to be
completely free of checks, but only for the ability to "give away"
files, i.e. change files you own to someone else.  (It's obvious what
the hole would be if you could change someone else's files so you own
them.)  There are two sets of assumptions about who can do what.
Berkeley did it one way and System V the other.  Either will work, but
it affects the design of various software, such as spoolers.  If POSIX
says you can't give away files, it would be a mistake to relax it,
since POSIX-based software is going to base security on the assumption
that this is the way the kernel works.

If you're running a single user machine, and really want any user to
be able to do chown from anything to anything, there are a couple of
reasonable things you can do:

(1) write your own chown program, which will run setuid.  In fact it
may be enough just to turn on the setuid bit for the existing chown.

(2) what I do, which is to have a program that takes another command
as an argument and executes that command as root.  So you do 

   do-as-root chown root myfile

I would suggest that even on a single user machine, it makes sense to
require you to do something specific in order to violate security. It
prevents accidents.  If you really don't want that, you might as well
just run as root all the time.

There are certainly people who plan to run Linux as a multiuser
system.

>2) Looking around in the kernel I see that there is a "function" reboot in
>   keyboard.S that is used to reboot the machine.

Yes, I was just looking at this.  Aside from killing processes, I'd
like to sync the disks automatically and do a few other things (like
create /fastboot, so that the next reboot skips fsck).  This could all
go in the kernel.  But a better approach is probably to provide the
reboot function as a system call, so you can write a program or script
that does whatever shutdown stuff you want and then invokes reboot.

>3) I tryed to use make as a "non root" user and make complains about the
>   fact that it can't do setuid().... I am posting this by memory now

I have the same thing.  Presumably it was built with out of date
libraries.  For the moment I'm using pmake, for which sources appear
on tsx-11.  I have no idea why make would want to do setuid.  Would
somebody be willing to upload a version of the make binary that works?

------------------------------

From: Epstein@DOCKMASTER.NCSC.MIL
Subject: floppy patches
Reply-To: Epstein@DOCKMASTER.NCSC.MIL
Date: Wed, 12 Feb 1992 01:39:20 GMT

the second fpatch includes hedrick's one liner of 26 Jan 92 23:51:27 but
not the earlier 26 Jan 92 18:16:45 one liner.  QUES:  is earlier one
liner still to be included in fs/block_dev.c John Epstein TMRC TX0 2-3am
(Stephen Levy p.  23)

------------------------------

From: lippes@duteca4.et.tudelft.nl (Henk M. Lippes)
Subject: problem with keyboard.
Date: 11 Feb 92 19:24:17 GMT

I finally got linux operating on my computer and wanted something
news. So i compiled the kernel sources (with a very simple modification)
and put the Image file on a floppy. It all worked, something that i am
not used to!!

But, after rebooting the system i had problems with my (US) keyboard, the
keys seemed to be on the wrong places.

Q. Does anyone outthere know why i didn't had this problem with the 
   downloaded version of the image file. What can i do to solve the
   problem, do i need an other version of the keyboard.s file and if
   so, where can i get that version.

I hope that somebody will respond,


Greatings 


Henk Lippes

      __   __  ________    __     __ _____ _____ _____ _____
     / /__/ / / _  _  /   / /    / // __ // __ // ___// ___/
    / ___  / / // // /   / /___ / // ___// ___// ___//__  /
   /_/  /_/o/_//_//_/o  /_____//_//_/   /_/   /____//____/
   \ Glipperweg 22 \ 2104 AK Heemstede \ the Netherlands \
    \          Email: lippes@duteca.et.tudelft.nl         \
     \           Delft University of Technology            \

------------------------------

From: Epstein@DOCKMASTER.NCSC.MIL
Subject: RLL and IDE controllers
Reply-To: Epstein@DOCKMASTER.NCSC.MIL
Date: Wed, 12 Feb 1992 00:57:07 GMT

I have a DTC 7287 RLL controller that Linux gives kernel panic HD
controller not ready.  This controller works for MINIX 1.3 and 1.5

I tried using DTC 7287 RLL as primary HD C:  and IDE with
reinitialization BIOS CAPD60 for secondary controller with an IDE D:
--- yes MS-DOS will support a RLL and a IDE!!!  I made a simple hack of
hdreg_sec.h with 01f[0-7] to 0x17[0-7] and #ifdef out the CMOS check as
really two HD (one per dirve) I also made quick change for last two for
loops start at drive 1 (IDE) vice 0 so that only try to run from IDE.  I
still get HD controller not ready, then other errors down to swap (which
was on non-real RLL).  Yes, IDE by itself works fine but wanted 8 not 4
partitions.  Still working on hd.c revision QUES:  can I set swap device
to nul --- don't want it to point to real data on IDE.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
