From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Sat, 8 Feb 92 03:45:10 EST
Subject:  Linux-Activists Digest #42

Linux-Activists Digest #42, Volume #1             Sat, 8 Feb 92 03:45:10 EST

Contents:
  Re: Miscellaneous new user questions (Linus Benedict Torvalds)
  Miscellaneous new user questions (Harry G. Varnis)
  Re: Kludge-Omatic-Timers in kernel (Linus Benedict Torvalds)
  Aww, do I hafta? (nmurrayr@cc.curtin.edu.au)
  Re: Perl 4.019 on Linux 0.12, problems with $&... (Root Boy Jim)
  Re: Aww, do I hafta? (Dave Mason)
  Re: Aww, do I hafta? (Lars Wirzenius)
  Re: uemacs documentation? (Humberto Ortiz-Zuazaga)
  Linux and the Pause key...What is happening here? (cm445a17)
  Re: Aww, do I hafta? (Grant Edwards)
  Re: Aww, do I hafta? (Arlie Davis)

----------------------------------------------------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Re: Miscellaneous new user questions
Date: 7 Feb 92 10:35:53 GMT

In article <1992Feb5.180532.19414@ns.network.com> hgv@herring.network.com (Harry G. Varnis) writes:
>
>Hello folks.  I'm in the process of switching from MINIX to Linux and
>have a few questions:
>
>I've looked to no avail for sources to doshell.  Any pointers to this or
>information about startcons?

All the doshell command does is to close all files, setsid(), and open
the necessary tty-device, and execute the requested binary. The sources
were posted on the mailing-list, I think.

>How modified is the sh in the root image with respect to straight bash?
>Special hacks?  Diffs anyone?

The bash-1.11 available for linux has virtually no patches at all. I
just wrote "make" and it worked (well, there are some redeclarations in
the bash source for library files - you'll have to ifdef them). bash can
configure itself from things like unistd.h: it finds _POSIX_JOB_CONROL
defined in there, and uses it etc.

No diffs: if you have any problems at all in recompiling bash, check out
that you have the newest library and include-files - after that it's a
piece of cake.

>I seen references to an implementation of rename().  I can't seem to
>find it anywhere though.  Is this all that is required for mvdir?

Again, this was posted to the list/newsgroup. It had a few problems (it
seems posix wants rename to remove the to-file if it exists) which I
have corrected, but yes, it's all that is required for mvdir.

                Linus

------------------------------

From: hgv@herring.network.com (Harry G. Varnis)
Subject: Miscellaneous new user questions
Date: 5 Feb 92 18:05:32 GMT


Hello folks.  I'm in the process of switching from MINIX to Linux and
have a few questions:

I've looked to no avail for sources to doshell.  Any pointers to this or
information about startcons?

How modified is the sh in the root image with respect to straight bash?
Special hacks?  Diffs anyone?

I must have arrived to late to see postings/mailings of unistd.h changes
purported to be required for some of the shellutils.  Mail/point?

I seen references to an implementation of rename().  I can't seem to
find it anywhere though.  Is this all that is required for mvdir?

BTW, accolades to all involved in the creation of Linux - finally a
system I both feel comfortable with and can afford.  Great stuff.
Thanks in advance for any help!
-- 
Harry Varnis         <hgv@anubis.network.com>          (612) 493-1042

------------------------------

From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Subject: Re: Kludge-Omatic-Timers in kernel
Date: 6 Feb 92 17:57:39 GMT

In article <1992Feb6.003838.3194@colorado.edu> drew@hazelrah.Colorado.EDU (Drew Eckhardt) writes:
>There is an add_timer routine in the scheduler sched.c.  Unfortunately,
>in the real world this is no good, as you can only get your function called
>when the timer EXPIRES.  In reality, you want to be able to abort it 
>at any time, or even adjust it.  

Yeah, it was a bad idea, and it wasn't really useful for anything. 0.13
has a newer timer-type, but use the old cludgy way (adding a timer into
do_timer()) for now. The timer in 0.13 isn't that general: it just has
32 hardcoded timers and a mask-bit for them all, but it's useful for
everything from the beeping, screen blanking, harddisk timeout to serial
lines, so it should be ok for most things.


>So, to work around this, floppy disk, hard disk, console code are alll 
>in sched.c.  And now I've got scsi code in there too :-(

The floppy is still there: I'll move that over to the timers too, but I
haven't yet.  Should be ready for 0.13 - and if you make the scsi-timer
look somewhat like the harddisk timer (no weird frills?), I'll have no
problem adding the code. 

>I propose a slight change in the interface : [add-timer change]

I made this simpler (but not quite general) interface, you'll probably
find it adequate for almost all needs. It has the advantage that setting
timers is very easy from machine code: to start up a timer (like the
serial timer) just means setting one bit after you have set up the
addresses etc.

All the complaints were very valid: the add_timer() code stinks. It
wasn't really good even just for the floppy drive, and didn't work for
much else: I make mistakes too :).

The new timer routines (no, I won't post them here: but it's mainly just
an array: timer_table[32] of a function address to be called and the
timeout, with the addition of the bit which controls if the timer is
active) have a clean interface, and are very easy to make atomic (you
don't even need cli-sti, the enable-bit can work as well, but there are
other ways too).

                Linus

------------------------------

From: nmurrayr@cc.curtin.edu.au
Subject: Aww, do I hafta?
Date: 7 Feb 92 02:35:03 GMT

In article <1992Feb1.031232.25299@athena.mit.edu>, satishc@microsoft.com writes:

> Does POSIX specify that a filename has to 14 chars long to be portable?
> I dislike a the filename length limitation (having been used to Ultrix).
> I agree it is better than DOS but couldn't it be increased to say 31
> atleast? Am I in the minority on this or do most others feel this way too.
> Or is this restriction going to be lifted once we get a VFS and linux
> has it own "native" file system?

   Now I'll state at the outset that I have VERY little experience with Unix
or any of its derivatives. I wonder, however, just how useful very long
filenames actually are: one thing that does annoy me when I do encounter
a Unix system is having to type in 20 or 30 characters when I need to access
a file. When these filenames are in mixed upper or lower case, it just makes
it worse, and after several attempts at typing in one of these abominations,
I'm afraid I'm prone to raining some rather violent curses down upon the
heads of the perpetrators.

   I'm willing to believe that I've missed something somewhere along the line.
If I have, could someone please explain it to me? I am aware, for example,
that Unix's wildcard handling (and filename restrictions) is far, far better
than that of MS-DOS (not hard), and that judicious use of wildcards can save
a lot of typing. Aside from that, is there any reason (apart from pure
cussedness) why we need such long filenames?

> Some incorrigble minds want to know...

   ... and some incorrigible minds want to get on with the real stuff, rather
than spending their days typing filenames.

 .....Ron

-- 
                                 ***
 Ron Murray
 Internet: Murray_RJ@cc.curtin.edu.au
     Are we having fun yet?    -- Garfield

------------------------------

From: rbj@uunet.uu.net (Root Boy Jim)
Crossposted-To: comp.lang.perl
Subject: Re: Perl 4.019 on Linux 0.12, problems with $&...
Date: 8 Feb 92 04:19:11 GMT

drew@anchor.cs.colorado.edu (Drew Eckhardt) writes:

>You don't want integer perl.  Yucky.

I disagree. I wish perl did integer by default, using
floating only where necessary.

I haven't used floating point in years.
-- 
                Desolation Row Jimmy <rbj@uunet.uu.net>
                Drawing Crazy Patterns on Your Screen

------------------------------

From: dmason@waterloo.edu (Dave Mason)
Subject: Re: Aww, do I hafta?
Date: 7 Feb 92 20:22:18 GMT

In article <48432@mimsy.umd.edu> jds@cs.umd.edu (James da Silva) writes:
> So, the question is, how long is enough.  Should we just bump the dir size
> from 16 bytes to 32?  Well, that's _probably_ fine in _many_ cases.  How
> about 64 bytes? Yeah, surely that's enough.  Certainly the 255 char
> filename limit of the BSD filesystem is as good as infinity for
> _human-generated_ filenames.
> 
> Well, as it turns out, a variable-length directory is usually more space
> efficient than even the 16 byte entry, and is much better than 32 or 64
> byte entries.
> 
> Of course, it's possible to argue that variable-length dirents are not
> worth the added complexity in the filesystem, but for most people the
> lifting of such an arbitrary limit as 14 is nothing but good news.

An interesting suggestion by Henry Spencer is to allow up to 27
character names (although, in principle it could be much longer (40,
53, etc.)) by using adjacent directory entries.  The implementation is
as follows (here `I' stands for a byte containing part of the inode, and
`@' stands for a null byte).

In all of the following discussion, assume a directory that has
undergone the sequence:
        mkdir foo
        cd foo
        >abcdef.c
        >abcdefg.o
        >abcdefghijklmnopqr.c
        >abcdefghijklmnother.c
        >areallylongname.c
        >bcdefg.c
        rm abcdefg.o
will look like (ignoring possible directory compression):
        II.@@@@@@@@@@@@@
        II..@@@@@@@@@@@@
        IIabcdef.c@@@@@@
        @@abcdefg.o@@@@@
        IIabcdefghijklmn
        IIareallylongnam
        IIbcdefg.c@@@@@@
        @@@@@@@@@@@@@@@@

The idea is to represent >14 character names by a deleted entry that
has a null byte followed by a non-null.  This allows all existing
tools to work with directories containing only short names.  Open
could even be made to succeed as long as there was no *conflicting*
name.  Hence an open of ``areallylongnam'' would open
``areallylongname.c'' while ``abcdefghijklmn'' would fail because it
is ambiguous.
        II.@@@@@@@@@@@@@
        II..@@@@@@@@@@@@
        IIabcdef.c@@@@@@
        @@abcdefg.o@@@@@
        IIabcdefghijklmn
        @@@opqr.c@@@@@@@
        IIabcdefghijklmn
        @@@other.c@@@@@@
        IIareallylongnam
        @@@e.c@@@@@@@@@@
        IIbcdefg.c@@@@@@
        @@@@@@@@@@@@@@@@

        ../Dave
--


        ../Dave

------------------------------

From: wirzeniu@klaava.Helsinki.FI (Lars Wirzenius)
Subject: Re: Aww, do I hafta?
Date: 7 Feb 92 20:02:03 GMT

In article <1992Feb7.113503.1@cc.curtin.edu.au>
nmurrayr@cc.curtin.edu.au is having problems with long filenames, mostly
because they are tedious to type, but notes that wildcards might help. 

I think they are very important (not that I use Linux, much too envious
of Linus for that :-).  The typing problem doesn't hold, partly because
of the wildcards, but mostly because all modern shells, including bash,
the 'standard shell' of Linux, have a filename completition feature: you
type a couple of characters, then press TAB (this is configurable), and
the shell inserts all the characters that can be deduced by the
beginning of the filename.  

One reason for having longer filenames is that 14 characters just isn't
enough to cram a descriptive name without using some heavy acronyms.  My
main problem with the 14 character limit is when I store text files,
e.g.  saved postings from netnews, and want the filename to give some
indication what it contains.  Another problem rises when using programs
for makin archives, e.g.  Zoo, tar, Zip, etc.  The usual extensions are
four characters long (.zoo, .tar and .zip).  It is often also useful to
include a version number, e.g. -1.1, -0.13, which takes up at least a
couple of characters (if crammed), or 4 characters (if legible), and can
take more if the version number includes a patch level, or a subversion.
If compress is used, that adds two characters.  We may now have 10
characters already (-2.0, for version, .tar, and .Z), without even
giving a hint about the purpose of the file.  This leaves us with a
generous 4 characters.  An example of real-life file names longer than
14 characters: `patch-2.0.12u5.tar.Z'.

It is indeed possible to compress this, but the above uses conventions
that are common, and in this case it probably isn't a very good idea to
invent new conventions just to keep filenames short.

Of course, just because it is possible to use long filenames doesn't
mean one should go overboard and write a short story for each filename.

--
Lars Wirzenius          wirzeniu@cs.helsinki.fi

------------------------------

From: zuazaga@ucunix.san.uc.edu (Humberto Ortiz-Zuazaga)
Subject: Re: uemacs documentation?
Date: 7 Feb 92 22:00:06 GMT

In article <kp54i7INN3b9@iraul1.ira.uka.de> S_WIEZORKE@iravcl.ira.uka.de (Hans B. Wiezorke) writes:
>i ftp'd uemacs.z from aachen and wonder if there is any documentation about
>it. i searched banjo, nic, tsx-11 for a help file but found nothing.

The source for uemacs is midas.mgmt.purdue.edu dist/uemacs311. This site is open
only after 6:00 pm EST.  Simtel20 and mirrors also have it in msdos.uemacs.

>the editor itself works fine. it's just that i haven't got the faintest
>idea how to SAVE a file and/or EXIT. i then KILLed the process from another
>tty but in the long run this won't be an aceptable solution ;-)

^X^S for save, ^X^C for exit, except they're not bound in the version I
got from tsx-11, and ^C kills MicroEMACS.  I've actually got 3.11a
working under Linux, and have been waiting for a chance to send it up to
tsx-11, flame me if I don't get it done this weekend. :-) (The patches
were trivial.)
-- 
Humberto Ortiz-Zuazaga                  INTERNET: zuazaga@ucunix.san.uc.edu
Dept. of Physiology & Biophysics          BITNET:              picone@ucbeh
University of Cincinnati                     CIS:                72301,2303

------------------------------

From: cm445a17@socrates.umd.edu (cm445a17)
Subject: Linux and the Pause key...What is happening here?
Date: 7 Feb 92 02:17:34 GMT

What happens to Linux when I press 'pause' key?  Or for that matter
the Ctrl-Pause combination (Break)?  It seems to put the shell into
a search mode and the keyboard does not recover from this?  Any ideas?

Jaime
cm445a17@socrates.umd.edu

------------------------------

From: grante@aquarius.rosemount.com (Grant Edwards)
Subject: Re: Aww, do I hafta?
Date: 7 Feb 92 23:03:03 GMT

nmurrayr@cc.curtin.edu.au (nmurrayr@cc.curtin.edu.au) writes:
: 
:    Now I'll state at the outset that I have VERY little experience with Unix
: or any of its derivatives. I wonder, however, just how useful very long
: filenames actually are: one thing that does annoy me when I do encounter
: a Unix system is having to type in 20 or 30 characters when I need to access
: a file. When these filenames are in mixed upper or lower case, it just makes
: it worse, and after several attempts at typing in one of these abominations,
: I'm afraid I'm prone to raining some rather violent curses down upon the
: heads of the perpetrators.
: 
:    I'm willing to believe that I've missed something somewhere along the line.
: If I have, could someone please explain it to me? I am aware, for example,
: that Unix's wildcard handling (and filename restrictions) is far, far better
: than that of MS-DOS (not hard), and that judicious use of wildcards can save
: a lot of typing. Aside from that, is there any reason (apart from pure
: cussedness) why we need such long filenames?
: 
: > Some incorrigble minds want to know...
: 
:    ... and some incorrigible minds want to get on with the real stuff, rather
: than spending their days typing filenames.
: 

The main advantage is so that you can tell what the file is by looking at
it's name.  With a file named:

 DensityVsTemperatureData

there isn't much question about what's in the file.  If you don't have
decent wild card handling, command line recall and editting, or cut
and paste between windows, I can see how typeing the long names can be
a bit of a pain.  But then again, I touch type 30 wpm or so, so it doesn't
bother me much when I do have to type in a long name once in a while.

You can always type D*V*TData (assuming it's unique).



-- 
Grant Edwards                                 |Yow!  All I can think of is a
Rosemount Inc.                                |platter of organic PRUNE
                                              |CRISPS being trampled by an
grante@aquarius.rosemount.com                 |army of swarthy, Italian
                                              |LOUNGE SINGERS...

------------------------------

From: aldavi01@starbase.spd.louisville.edu (Arlie Davis)
Subject: Re: Aww, do I hafta?
Date: 8 Feb 92 00:52:30 GMT

In <1992Feb7.113503.1@cc.curtin.edu.au> nmurrayr@cc.curtin.edu.au writes:
>   Now I'll state at the outset that I have VERY little experience with Unix
>or any of its derivatives.  I wonder, however, just how useful very long
>filenames actually are: one thing that does annoy me when I do encounter
>a Unix system is having to type in 20 or 30 characters when I need to access
>a file. When these filenames are in mixed upper or lower case, it just makes
>it worse, and after several attempts at typing in one of these abominations,
>I'm afraid I'm prone to raining some rather violent curses down upon the
>heads of the perpetrators.

Ah, you have not met the joys of filename completion, a` la /bin/csh.  Next
time you are on a UNIX box (not a Linux box, as I don't think we have a 
csh up yet -- though I'd be elated if I were wrong), run csh.  Find some 
monstrously long filename.  Type enough characters to uniquely identify the
filename, and press the Escape key.  csh "completes" the filename, appending
the rest of the file.

Another reason for long file names: Shell scripts that do wizardly things with
large numbers of files (read: whole file systems, etc.) sometimes like to
slap on an extension or two (thousand), and would *you* like your file system
to suddenly, silently start clipping things, possibly dropping files on the
floor?

USENET extractions, site names, etc. lend themselves well to long filenames.
For example, file cthulhu.cluster.louisville.edu-lslR.Z is not unreasonable,
being perhaps the output of ls -lR run on the (purely hypothetical) machine
cthulhu.cluster.louisville.edu, then compressed.  And, with filename
completion, type "cthu" and pressing Esc is usually enough to name the file.

>   I'm willing to believe that I've missed something somewhere along the line.
>If I have, could someone please explain it to me? I am aware, for example,
>that Unix's wildcard handling (and filename restrictions) is far, far better
>than that of MS-DOS (not hard), and that judicious use of wildcards can save
>a lot of typing. Aside from that, is there any reason (apart from pure
>cussedness) why we need such long filenames?

There is an unspoken reliance on filenames not being mangled when something
is tacked on, like ".uu" (uuencoded), ".gif", ".tar", ".Z", ".v1.09A-Dec-1991"
and so on...  I consider it one of the strengths of some of the bigger UNIX
boxen.

>   ... and some incorrigible minds want to get on with the real stuff, rather
>than spending their days typing filenames.

Amen, amen, amen...  Esc.

> .....Ron

>-- 
>                                 ***
> Ron Murray
> Internet: Murray_RJ@cc.curtin.edu.au
>     Are we having fun yet?    -- Garfield
-- 
Arlie Davis
aldavi01@{starbase,vulcan,romulus,draconis,sirius,rigel}.spd.louisvile.edu
"Hal, do you read me, Hal?  Open the pod bay doors, Hal."

No, really, I'm not a .sig virus.  Believe me, I'm not -- no seriously!

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
