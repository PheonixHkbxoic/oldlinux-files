From:     Digestifier <Linux-Activists-Request@news-digests.mit.edu>
To:       Linux-Activists@news-digests.mit.edu
Reply-To: Linux-Activists@news-digests.mit.edu
Date:     Sat, 25 Jan 92 23:00:21 EST
Subject:  Linux-Activists Digest #16

Linux-Activists Digest #16, Volume #1            Sat, 25 Jan 92 23:00:21 EST

Contents:
  Re: Problem with Kermit (Humberto Ortiz-Zuazaga)
  linux on floppy drive. (Jiansheng Zhao)
  How virtual console works (Jiansheng Zhao)
  is SL/IP available? (Mark Solsman)
  Re: is SL/IP available? (Steven L. Johnson)
  Bug in 387 support and libm.a (hlu%decserv1@dns1.eecs.wsu.edu)
  Re: UK keyboard for Linux (Theodore Ts'o)
  ps? (Ken Hughes)
  Re: Emacs 18.57 for Linux 0.12 (John T Kohl)
  Re: ps? (Peter Cooper)
  Re: is SL/IP available? (Charles Hedrick)
  bug in job control? (Charles Hedrick)
  more info on floppy problems (Charles Hedrick)
  Re: keys [and other gas->C efforts?]  (drew@kinglear.cs.colorado.edu)
  Weirdness in /dev (John R. Schutz)
  Re: Found problem with executable shell scripts. (David W. Summers)
  Re: Weirdness in /dev (Brett McCoy)

----------------------------------------------------------------------------

From: zuazaga@ucunix.san.uc.edu (Humberto Ortiz-Zuazaga)
Subject: Re: Problem with Kermit
Date: 25 Jan 92 18:20:30 GMT

In article <9201251735.AA15411@uranus.cis.ohio-state.edu> dahlhaus@news.cis.ohio-state.edu (kevin dahlhaus) writes:
>Linux returns the error: "Warning, Read access to lock directory denied."
>When I try "set line /dev/tty65" to set the serial port.  Any ideas
>as to what I am doing wrong?

No, you're not doing anything wrong, you just need to make the directory
/usr/spool/uucp, which is where kermit like to make it's lock files.
After that it's hunky dory.
-- 
Humberto Ortiz-Zuazaga                  INTERNET: zuazaga@ucunix.san.uc.edu
Dept. of Physiology & Biophysics          BITNET:              picone@ucbeh
University of Cincinnati                     CIS:                72301,2303

------------------------------

From: zhao@unixg.ubc.ca (Jiansheng Zhao)
Subject: linux on floppy drive.
Date: 25 Jan 92 20:07:21 GMT


Thanks to those who helped me to start linux on my two floppy drives.
Now I have most system files on drive B (1.44 MB), and still have 
room to move around and extract tar.file using both A and B drive. As
one who first time running a PC without DOS, it's a thrill.
Thanks again.

------------------------------

From: zhao@unixg.ubc.ca (Jiansheng Zhao)
Subject: How virtual console works
Date: 25 Jan 92 20:19:19 GMT

What's the function of this virtual console and how  does it work?
I thought it might be something similar to switching windows for
fg and bg jobs. Could some one enlighten me on this?

------------------------------

From: MHS108@psuvm.psu.edu (Mark Solsman)
Subject: is SL/IP available?
Date: 25 Jan 92 21:19:17 GMT

Hi there!


I was wondering iof SL/IP was available either from Linux or from GNU?

Any ideas where I can find a SLIP site, if one exists?


Thanks in advance!


=====
Mark Solsman

The Pennsylvania State University  -  University Park, Pennsylvania
                "My opinions are not that of my own"

------------------------------

From: johnson@jvnc.net (Steven L. Johnson)
Subject: Re: is SL/IP available?
Date: 25 Jan 92 22:42:05 GMT

Mark Solsman <MHS108@psuvm.psu.edu> writes:

>I was wondering iof SL/IP was available either from Linux or from GNU?

I don't think it has been ported.  It's not of much use until the
network code (TCP/IP and sockets or streams) is in place.

>Any ideas where I can find a SLIP site, if one exists?

I seem to remember slip.tar.* and/or cslip.tar.* on quite a few
sites, and specifically ftp.uu.net.  I don't know but suspect
that it might expect a BSD 4.x kernel, which Linux definately
isn't.

-Steve

------------------------------

From: hlu%decserv1@dns1.eecs.wsu.edu
Subject: Bug in 387 support and libm.a
Reply-To: hlu%decserv1@dns1.eecs.wsu.edu
Date: Sat, 25 Jan 1992 23:13:37 GMT

Hi,

I just ported dj's libm.a to Linux with a co-processor. I think I
fixed a bug with the co-processor support. But I am not very sure what I
am doing. Is anyone running Linux with a co-processor? i.e., 387 or
486DX. I can post the patches and the sources code for the library, or
put them on nic and tsx-11, if necessary. I also added the detection
for 486. But I was not able to test it (My PC is 386sx/387sx.).

I have a suggestion. I think it would be nice to be able to load the
387 emulation stuffs during the booting time after the kernel finds out
there is no 387. Or at least, the kernel can be made without it by just
changing something in Makefile. I think I may want to do it if I have
the time.

I believe some 387 emulation code can be borrowed from dj's gcc/g++
for MS-DOS.

BTW, could someone please tell me where I can find config files for
compiling gcc. I need to compile gcc (gcc only, no cc1 and cpp) since
the default of gcc I got is no 387. I keep forgetting to add -m80387.


Thanks.


H.J.
-- 
School of EECS                          Internet: hlu@eecs.wsu.edu
Washington State University             BITNET:   60935893@WSUVM1.BITNET
Pullman, WA 99164                       Phone:    (509) 335-6470 (O)
USA                                               (509) 334-6315 (H)

------------------------------

From: tytso@ATHENA.MIT.EDU (Theodore Ts'o)
Subject: Re: UK keyboard for Linux
Reply-To: tytso@athena.mit.edu
Date: Sun, 26 Jan 1992 00:40:32 GMT

   Date:        Sat, 25 Jan 1992 22:31:00 +0200
   From: LeBlanc@manchester-computing-centre.ac.uk

   I apologise for sending this to the list, but I cannot send to
   alt.os.linux, though I can now read it.

For everybody's information:  If you send mail to
"Linux-Activists@news-digest.mit.edu", your mail message will be posted
to alt.os.linux.  If you receive the mailed digests of alt.os.linux, the
mail headers of the digest have been so that if you reply to one of the
messages, most mail programs *should* be able to automatically figure
out that the reply should be sent to "Linux-Activists@news-digests.mit.edu".
The idea was to make the gateway be as seemless as possible.

                                                - Ted

------------------------------

From: hughes@zeus.csee.usf.edu (Ken Hughes)
Subject: ps?
Date: 25 Jan 92 21:57:35 GMT
Reply-To: hughes@zeus.csee.usf.edu (Ken Hughes)

Just curious; is anyone working on a version of ps for linux, or does
such a thing exist, or is there a PD one that could be used as a basis
for it?  If not, I'd like to give it a whirl (hell, I can't do X11
right now so why not?)

-- 
=======================================================================
        Ken Hughes              |   "Which button do I press to turn
   (hughes@sol.csee.usf.edu)    |     it off?"  "Try the red one,  
FT-Ph D candidate, PT-ex-sysadm |     allright?"  "Which red button?"
Dept of Comp Sci and Eng        |
University of South Florida     |          ....  _Heathers_ 
=======================================================================

------------------------------

From: John T Kohl <jtkohl@cs.Berkeley.EDU>
Subject: Re: Emacs 18.57 for Linux 0.12
Reply-To: jtkohl@cs.Berkeley.EDU
Date: Sun, 26 Jan 1992 01:55:46 GMT

I finished my hacks on Emacs 18.57 for Linux 0.12.

Patches are in tsx-11.mit.edu:/pub/linux/ports/emacs-18.57/.  The README
that you find there is appended below.

As noted by Simon Marlow, emacs trusts the tty driver to set the
input/output speed properly;  by default, the speeds are set to zero by
the kernel.  This affects incremental search (makes it go into
"slow-display optimized" mode); to fix it, set your terminal speed with
stty to something appropriate like 9600.

README:

EMACS 18.57 patches for Linux 0.12:

These patches are in two parts:

1) two small kernel patches to fix some minor problems (fs-diff):
        select.c: a pipe with no writer should select as readable to
                  allow detection of EOF
                  also, the kernel now silently corrects any attempts to
                  select more file descriptors than are supported (this
                  avoids the bit loss on left shift problem reported on
                  the activists list)

        pipe.c: (I sent this to Linus for 0.12, but it didn't make it):
                reads on a pipe should return partial results.
                Otherwise, programs expecting to get such reads will
                work weirdly.

2) patches to the EMACS 18.57 distribution to build it for Linux-0.12.

Shar & enjoy,


John Kohl
jtkohl@cs.berkeley.edu

------------------------------

From: comrade@uniwa.uwa.oz.au (Peter Cooper)
Subject: Re: ps?
Date: 26 Jan 92 01:25:12 GMT

hughes@zeus.csee.usf.edu (Ken Hughes) writes:
> Just curious; is anyone working on a version of ps for linux, or does
> such a thing exist, or is there a PD one that could be used as a basis
> for it?  If not, I'd like to give it a whirl (hell, I can't do X11
> right now so why not?)
> 

There is a ps command included in the vc2 patches
(nic.funet.fi::pub/OS/Linux/somthing/vc2.tar.Z) (I forgot just what dir
it is in. )

However this ps command is very kludgy. In particular it adds a 20 bytes
field into the task structure to store the executable name. A MUCH
better way of doing things would be a to store a pointer to the *argv[]
structure, and read that for ps. (And maybe implement kmem along the
way. ;). 

        As an aside, is the argv[] structure supposed to be write
protected ? On the UNIX box I am on (not linux) writing to argv[1][0]
produced a SEGV. Does POSIX say anything about this ? (YES, argv[1] is
NOT a null pointer. ;)

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: Re: is SL/IP available?
Date: 26 Jan 92 02:22:00 GMT

Mark Solsman:
>I was wondering iof SL/IP was available either from Linux or from GNU?

Steven Johnson:
>I don't think it has been ported.  It's not of much use until the
>network code (TCP/IP and sockets or streams) is in place.

Actually, for use at home kernel TCP/IP isn't all that necessary.  I
ported KA9Q to SV/AT (a System V release 2 port to the AT) a few years
ago.  It simply uses a serial line.  It shouldn't be hard to port a
more recent version of Linux.  KA9Q in this mode uses roughly the same
kernel facilities as kermit.  Linux would be a much better host than
SV/AT, because it has select.  I faked select on SV/AT, but in order
to get reasonable performance, I had to have a fork in busy wait, i.e.
constantly running.  With select that wouldn't be necessary.

Similarly with X11.  I understand NCD has given Xremote to the X
Consortium.  Xremote would be perfect for use at home over a dialup.
There's no reason it would need any kernel facilities for TCP/IP -- it
is a special encapsulation of IP designed for serial lines.  Like
KA9Q's SLIP code, it should talk directly to a serial port.

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: bug in job control?
Date: 26 Jan 92 02:23:42 GMT

I tried to background a make, and failed.  That is
  make 
  ^Z
  bg
The result was an IOT interrupt, which killed the make.

------------------------------

From: hedrick@dumas.rutgers.edu (Charles Hedrick)
Subject: more info on floppy problems
Date: 26 Jan 92 02:29:47 GMT

It now appears that the floppy hanging I've reported is
timing-related.  I've managed to back up my system, though the
procedure isn't one I'm enthusiastic about.  I used tar -ML 1100 to
create a number of disk files.  I dump to /DUMP, and whenever it asks
for a new tape, in another window I remove /DUMP to /DUMP.nn.  Then I
copied the /DUMP.nn files to floppy using cp /DUMP.nn /dev/at0.  This
worked just fine.  I ended up with 7 floppies with no errors.  I then
tried redoing the tar directly to /dev/at0, and it hung almost
immediately.  For the moment I'm going to solve the problem by brute
force.  I'm upgrading my system (something I had intended to do
anyway), and will have lots of disk space and a cartridge tape drive.
I plan to reserve a partition for a backup.  I'll dump to the
partition, and then dump that partition to tape under DOS (until
there's support for the tape drive under Linux).

------------------------------

From: drew@kinglear.cs.colorado.edu
Subject: Re: keys [and other gas->C efforts?] 
Reply-To: drew@kinglear.cs.colorado.edu
Date: Sun, 26 Jan 1992 02:51:11 GMT


       Date:    Fri, 24 Jan 1992 08:37:42 +0200
       From: drew@kinglear.cs.colorado.edu


          The only portion I ever complained about was keyboard.S.  I feel tha t
          module could benefit us I it were C.  I did not, and do not advocate
          converting other assembler to C.  If it ain,t broke (and you don't h
   ave
           to modify it) don't fix it.

       However, this is an interrupt service routine.  Changing this to less
       efficient 'C' code will slow it down slightly.....  

    There is this common misconception that 'C' code is less efficient.
    This does not have to be the case!  There are many people who have the
    philosophy that whenever possible you should code stuff in C, and if the
    C compiler generates non-optimal code, you should fix the C compiler.

    Fortunately, source to GCC is freely available, and enough people have
    had this philosophy that GCC generates more efficient code than many
    commerical compilers.  In fact, in some cases, an optimizing compiler
    can generate more efficient code than what an average human being would
    write in assembler.

    Other good reasons to use C code whenever possible:

        * It's easy to maintain the code, and the code is more readable.
                Most people can understand what's going on in C better
                than they can assembler.  Among other things, this means
                the code can be more easily debugged.

Agreed.

        * It's more portable, and increases the chance that Linux can be
                ported to another architecture.  It's true that the
                device drivers will probably not be portable ---- but
                that's always the case.  You still want to code as
                much of it in C as possible, to make it easier to do
                the port, not harder.

"As much as possible without degrading performance." - 

                Unix was written mostly in C, and thus became widely
                ported to many architectures (even in spite of the AT&T
                license  :-).  VMS was written almost entirely in Vax
                assembler, and see where what happened to it.

    The only good reason to use assembler is in a few cases where you are
    consistently using I/O instructions, or other specialized
    paging/segemntation setup instructures, or if you need to play special
    games with the stack (Example: saving the registers for a interrupt
    handler or a system call).  Otherwise, in general it is better to do it
    in C.

    The "if it's not broke", don't muck with it attitude is fine, but if you
    need to add extra functionality, it will probably much easier and result
    in much more robust code if you replace the assembler code with C code.

                                                        - Ted

Point taken - a week of Usenix and four hours of sleep each night 
has gotten me kind of stubborn :^)  


I agree that some of the keyboard.S file is best rewritten in 'C' - 
the question is how much.  I'd definately not mind seing the data 
in 'C' - the tables would look so much better if they were missing 
the .ascii directives, etc.  

The interrupt routine itself is probably best left in assembler - you want
to be sure the registers are all pushed to the stack, and the iret as
opposed to ret needs to stay.

        
        
Beyond that, a lot of the rest could be simplified if changed to 'C'.
How much of it are you doing?  
        
        
        
stack frame for an interrupt handler, is not overly obtuse) and move some 
========


------------------------------

From: john@csrnxt1.ae.utexas.edu (John R. Schutz)
Subject: Weirdness in /dev
Date: 26 Jan 92 02:27:19 GMT

I've just noticed a strange occurence in my /dev directory...in a 
ls -l, I get a 

total 4291216119

and then the list of files...this number just seems way too large to
me for some reason <grin>...any ideas?  Did I at some point not sync
my HD (I can't remember a time I might have though...<sigh>), or am I
missing something obvious?

                                                                john

--
| John R. Schutz                     | Email&NeXTmail:                       |
| A learning NeXTie                  |          john@csrnxt1.ae.utexas.edu   |
| (512)328-0587                      | "We are all victims of dead men."     |
| 3009 Hatley Dr., Austin, TX  78746 |          -Charles Fuller              |

------------------------------

From: dws@cseg03.uark.edu (David W. Summers)
Subject: Re: Found problem with executable shell scripts.
Date: 26 Jan 92 02:28:54 GMT

bob@snuffy.dracut.ma.us (Bob Smith) writes:

>In article <1992Jan25.050248.16436@cseg03.uark.edu> dws@cseg03.uark.edu (David W. Summers) writes:
>> 
>> I found the work-around for problem that I was having.  As you might recall,
>> I tried to execute a shell script 'configure' and it had execute permissions
>> and had:
>> 
>> #!/bin/sh
>> 
>> as the first line (a lot of you asked me to make sure about this).
>> 
>> Well, BASH said 'file or directory not found' or something like that.
>> 
>> Well, I found out that if I changed it to:
>> 
>> #!/usr/bin/sh
>> 
>> then it works fine!  What seems to be happening is that BASH is NOT following
>> symbolic links!  I have /bin -> /usr/bin, with 'sh' in /usr/bin.  With
>> everything else I've tested, it follows the symbolic links, but apparently not
>> on the above.  Any ideas?  Should I just grab the current version of BASH
>> and re-compile?  Is this a "feature" or a "bug"?
>> 
>
>Bug or feature?  I'm not sure, but the kind of behavior you're refering
>to I can emulate with the Bourne shell in SunOS 3.5 ...  So it must be
>kinda normal ??!!??  :-)
>

I hope it is not a "feature"!  I have never seen this happen before on
any other type of Unix system.  I am currently investigating and I
plan on downloading the BASH stuff and re-compiling to see if that
takes care of it.  If this "problem" is really "normal" or a "feature",
then it is incompatible with other Unix's and doesn't make sense to me.
If it is a "feature", could someone explain what it is good for?
Actually, *I* think it has something to do with the symbolic link that
it is trying to reference 'sh' through.  More later on this channel....

   - David Summers

-- 
                         "Never under-estimate the bandwidth of a station-wagon
David Summers             full of tapes, hurtling down the highway."
dws@engr.uark.edu         - Tanenbaum, "Computer Networks"

------------------------------

From: brtmac@maverick.ksu.ksu.edu (Brett McCoy)
Subject: Re: Weirdness in /dev
Date: 25 Jan 92 21:33:19

In article <john.696392839@csrnxt1.ae.utexas.edu> john@csrnxt1.ae.utexas.edu (John R. Schutz) writes:

   I've just noticed a strange occurence in my /dev directory...in a 
   ls -l, I get a 

   total 4291216119

   and then the list of files...this number just seems way too large to
   me for some reason <grin>...any ideas?  Did I at some point not sync
   my HD (I can't remember a time I might have though...<sigh>), or am I
   missing something obvious?

Do an 'ls -ls' in the /dev directory and I think you'll see why du and ls
report such a high number.

--
Brett McCoy                     Computing and Network Services
brtmac@maverick.ksu.ksu.edu     Kansas State University
If the minimum wasn't good enough it would't be the minimum.

------------------------------


** FOR YOUR REFERENCE **

The service addresse, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Activists-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and alt.os.linux) via:

    Internet: Linux-Activsts@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    tupac-amaru.informatik.rwth-aachen.de	pub/msdos/replace

The current version of Linux is 0.12, released on Jan 14, 1992

End of Linux-Activsts Digest
******************************
