Subject: Linux-Development Digest #521
From: Digestifier <Linux-Development-Request@senator-bedfellow.MIT.EDU>
To: Linux-Development@senator-bedfellow.MIT.EDU
Reply-To: Linux-Development@senator-bedfellow.MIT.EDU
Date:     Sat, 5 Mar 94 16:13:07 EST

Linux-Development Digest #521, Volume #1          Sat, 5 Mar 94 16:13:07 EST

Contents:
  Help: BASM to GAS, Syntax, Opcode? (Manish Gupta)
  Question... Assembler. (Manish Gupta)
  Re: 0.99p15j: Caps-lock does no capital-letters (Kjetil Torgrim Homme)
  Re: eth0: transmit timed out in PL15h (Yasu-Hiro  YAMAZAKI)
  Re: Keyboard bug (Julian Cowley)
  Re: 0.99p15j: Caps-lock does no capital-letters (Rene COUGNENC)
  Re: Specialix driver (John Paul Morrison)
  X & Viper (Laurent FRIGAULT)
  Re: Multi-Serial Cards? (Michael Horwath)
  Re: YP or NIS for linux? (John F. Haugh II)
  Re: YP or NIS for linux? (John F. Haugh II)

----------------------------------------------------------------------------

From: manish@ms.uky.edu (Manish Gupta)
Subject: Help: BASM to GAS, Syntax, Opcode?
Date: 3 Mar 1994 23:32:43 -0500


 Could somebody help me with the following.

 1) BASM (Borland Assembler) instruction set include a 'push' instruction
    in which an 'Offset' in the text segment can be pushed onto the stack.

    syntax is:
   
           PUSH  Offset AC_START

           where, AC_START is a label in the code itself. All I am want to
       know is syntax for the corresponding statement in GNU Assembly?


  Thank you all for your time.

  - manish
-- 

  I call them as I see them.  If I can't see them, I make them up.
                                                      -- Biff Barf

------------------------------

From: manish@ms.uky.edu (Manish Gupta)
Subject: Question... Assembler.
Date: 3 Mar 1994 23:41:34 -0500

  When I generate assembly code for C programs, I see compiler (gcc)
  generating a code in which many variables, function names are referred
  through different notations. Sometime reference is made by prefixing
  the actual name with single underscore and sometimes by even
  three underscores '_'.

  e.g.
         call ___main
         call _printf



  I wish to know what does the number of '_' signify?  What is the maximum
  number of '_' we could put in front of a variable, and why do we
  need to do that?

  - manish
-- 

  I call them as I see them.  If I can't see them, I make them up.
                                                      -- Biff Barf

------------------------------

From: kjetilho@ifi.uio.no (Kjetil Torgrim Homme)
Subject: Re: 0.99p15j: Caps-lock does no capital-letters
Date: 5 Mar 1994 14:57:09 GMT

+--- Michael Will:
| I do not know about the other older versions, but with 0.99pj I 
| can switch on and off the caps-lock-LED on my keyboard only...
| 
| ...it has no influence on the letters, they are always lowercase...
+-------

I didn't notice until now, either!  However, I know the solution: You
must edit your keyboard-map file so that there is a "+" in front of
the characters which should be affected by CapsLock.  Look at the
difference between no-latin1.map and no-latin1+.map in the dir
/usr/lib/kbd/keytables if you have kbd-0.84 or above.

Andries - shouldn't all non-trivial map files be converted? No need to
keep separate files, I think.


Kjetil T.

------------------------------

From: hiro@ray3.ori.u-tokyo.ac.jp (Yasu-Hiro  YAMAZAKI)
Subject: Re: eth0: transmit timed out in PL15h
Date: 4 Mar 1994 01:41:22 GMT

Hi there,

>   Mar  3 11:16:50 foundation kernel: eth0: transmit timed out, tx_status 00 status
    2000.

I got the same problem a couple of days ago with my SMC Elite 16 
Plus Combo, under pl15f. My net admin said there was no change in 
our net, though my PC reported it might be a cable problem.Actually, 
all other WSs arround here were working fine. I rebooted my system
to talk to the world, and everything has been working OK since then.

>   ever since pl14 when I first installed my 3Com 3c509.  The problem still
>   exists in pl15h and in pl15i with the 3c509 patch.  I did a survey
>   of other people on campus and determined that 5 out of 6 people
>   with 3c509's running Linux encountered this problem.  Generally, it
>   only appears while transmitting large amounts of data (ie serving ftp).

I had never experienced such a problem before, and it started when 
there was no major job running on my machine.

Hope this helps,
--
================================== Yasu Hiro Yamazaki   _______      _/\_
   /  /                   hiro@ice3.ori.u-tokyo.ac.jp  |   _   | _/\_>  <_/\_
  __ /  /  , \ , \   hiro@rainbow.physics.utoronto.ca  |  (_)  | >          <
_/ _/ _/ _/_<  __/ Dept. of Physics, Univ. of Toronto  |_______| `----||----'

------------------------------

From: julian@uhunix3.uhcc.Hawaii.Edu (Julian Cowley)
Subject: Re: Keyboard bug
Date: Sat, 5 Mar 1994 08:55:13 GMT

In article <zmbenhalCLyC4E.7L0@netcom.com> zmbenhal@netcom.com (Zeyd M. Ben-Halim) writes:
>In article <zmbenhalCLwtwH.8D@netcom.com> zmbenhal@netcom.com (Zeyd M. Ben-Halim) writes:
>>In article <1994Feb24.091143.8381@unlv.edu> ftlofaro@unlv.edu (Frank Lofaro) writes:
>>>Put the tty into RAW mode too. (the same ioctls stty raw would use). The 
>>>scan code for r is translating into the ascii code for a flow control character.
>>>(I think ctrl-s)
>>
>>What is your definition of RAW mode? 
>>You need to turn off IXON and IXOFF in addition to ICANON, ECHO, and ISIG.
>
>You also need to switch cr<->nl mapping otherwise '=' and '9' will give
>the same scan code.

There are more things that need to be done than what you've
mentioned.  Fortunately, there's a libc function that does it
for you:  cfmakeraw().  I discovered this recently when I found
that one of my programs wasn't putting the tty into raw mode
correctly.

Here's an example of how it's used:

#include <termios.h>

void rawmode(int fd)
{
        struct termios tios;

        tcgetattr(fd, &tios);
        cfmakeraw(&tios);
        tcsetattr(fd, TCSANOW, &tios);
}

Of course, you might want to add error checking....

-=- julian

------------------------------

From: rene@renux.frmug.fr.net (Rene COUGNENC)
Subject: Re: 0.99p15j: Caps-lock does no capital-letters
Date: 5 Mar 1994 10:22:33 GMT
Reply-To: cougnenc@itesec.ensta.fr (Rene COUGNENC)

Ce brave System Administrator ecrit:

> I do not know about the other older versions, but with 0.99pj I 
> can switch on and off the caps-lock-LED on my keyboard only...
> ....it has no influence on the letters, they are always lowercase...

> Is this a common problem with 0.99p15j?


No problem for me, capslock works fine whith pl15j.

( Just after installing pl15j, I installed the new kbd-085 stuff; may be
there is a problem whith previous 'loadkeys' and this kernel ?  )
--
 linux linux linux linux -[ cougnenc@renux.frmug.fr.net ]- linux linux linux 

------------------------------

Crossposted-To: gnu.misc.discuss
From: jmorriso@bogomips.ee.ubc.ca (John Paul Morrison)
Subject: Re: Specialix driver
Date: Sat, 5 Mar 1994 08:11:51 GMT

In article <robertl.762402975@amsg>, Robert Lipe <robertl@arnet.com> wrote:
>Re: Specialix drivers.
>
>IMHO: The reason none of us supports LINUX, BSD-386, 386-BSD, NET/2,  is
>summarized by the preceding 100 messages.   We have proprietary card
>executables that have taken mongo R&D $$$ to develop.  As proprietary as
>these executables is the interface as to how a programmer talks to them.
>Given the potential legal problems outlined above (I think there were 75
>different interpretations in those 100 messages), most of us are willing
>to "just say no" and focus in a market w/o these hassles.

If this is about downloading code to the board, I wonder why noone complained
about the Digicom/Cardinal softmodem firmware downloader.

>
>The realities of object-only driver support make it pretty grim when
>the user has source.   "I just changed struct tty, revalued the ioctls
>in <sys/termio.h>, etc.  Your driver stopped working."  So that's not
>a great solution either.
>
>Please don't take this as soapbox ranting, I'm just quietly pointing
>out a few reasons at least some of the ports board companies have 
>chosen to remain silent on the freeware UNIXes.  On those products 
>where there _is_ a publicly available interface definition, we have 
>been known to provide manuals and even assistance to those people 
>doing driver development.
>
>Help me out - I'm a believer in FSF and similar efforts, I just don't
>see how it works for us.   If we could get a clear, official legal 
>position on this, I think it would only help users of free software.

I would have thought companies would ask their own lawyers, not be swayed
by the rabid Gnu GPL types, each with their own opinion. But then Linux is
a small market and lawyers aren't cheap. Since everyone else feels free to
add their interpretation, I'll add mine:

        Linux in its entirety is a "publicly available interface definition"

In other words, every function declaration in the source or prototype
in the header files defines a public interface. I mean it's obvious to
anyone that Linux isn't relying on 'trade secrets' to protect its
code. The code is public for all to see; while it's not public domain
to copy it, you have to follow the GPL (or Linus's copyright if he
changes it) to copy and distribute the *Linux* code. But what you do
with *your* code is a different matter; it's up to you, after all you
wrote it. 

What defines the 'publicly available interface definition'?  Not Linus
Torvalds, or Richard Stallman and the Free Software Foundation; the
Linux source *is* the public definition of an API whether anyone at
FSF want it that way or not. So while you can't COPY the code itself
without following GPL, you can make any calls to those functions you
want to. There's just no way anyone can say that function X() is a
publicly defined interface that people can call in a binary (say
printf()) and say that another function Y() is NOT a publicly defined
interface (say printk() or schedule() or register_chrdev()) because
the interface definition IS the source, and the (Linux) source is
public! Seems like the FSF wants to have its cake and eat it too.
They've made their code public for anyone to look at, so people can
write programs which call gnu_foobar(), and they can't stop you and they
can't claim that it's not a publicly defined interface.


other things:

The NeXT compiler someone brought up: irellevant, it didn't go to court did it?
NeXT changed their minds and relented. Maybe it was a derivative work of GCC
or maybe it wasnt. Releasing it wasn't a 'guilty' plea or mean they agreed
with the FSF's assertion that it was a derivative work.


Another argument is the one that: since Linux is the *only*
implementation of the kernel, any linux device driver must also be a
derivative work of the kernel. This is just silly. As Tim Smith
<tzs@u.washington.edu> wrote:

>
>This could depend on what country you are in.  In the United States, you
>can use the ideas and principles of another work.  Section 102(b) of our
>copyright law says:
>
>         (b) In no case does copyright protection for an original work of
>       authorship extend to any idea, procedure, process, system, method
>       of operation, concept, principle, or discovery, regardless of the
>       form in which it is described, explained, illustrated, or embodied
>       in such work.
[ OK, US law only ]

Basically, so what if Linux is the only implementation right now.
Linux has no copyright protection (or patent, look&feel) on the IDEA
or concept of 'being a Linux kernel'. I thought the FSF was fighting
AGAINST that kind of thing. It's like someone else's analogy: a
Windoze program isn't a derivative of Windoze just because it makes
calls to the windows API, and windows is the only implementation of
windows.

>
>How about it - any other ports-board people have comments?

just ignore the others. go ahead and write, compile and distribute a
linux module for your board, (just don't lift the _Code_ from Linux,
write your own).

It would be nice if you made most of the code available, while concentrating
proprietary stuff in one file which wouldn't need to call Linux functions,
just your own code.

>
>----
>Robert Lipe, Sr. Software Engr, Arnet Corp.   robertl@arnet.com


-- 
==========================================================================
BogoMIPS Research Labs -- bogosity research & simulation -- VE7JPM -- 
jmorriso@bogomips.ee.ubc.ca                       jmorriso@rflab.ee.ubc.ca 
==========================================================================

------------------------------

From: frigault@gla.ecoledoc.ibp.fr (Laurent FRIGAULT)
Subject: X & Viper
Date: 5 Mar 1994 18:17:46 GMT
Reply-To: frigault@gla.ecoledoc.ibp.fr

In article lsa@netline-fddi.jpl.nasa.gov, harry@brain.jpl.nasa.gov (Harry Langenbacher) writes:
> In article <2kt3kl$81h@news.panix.com> brianc@myhost.subdomain.domain (Brian Cummings) writes:
> > Does anyone know if the XFree Viper project has reached color yet? :) I'm
> >anxious to see my victims in Netrek in their full-color :)

> You can run 800x600 in 16 colors with an OAK vga-chip equipped viper using
> a slightly hacked freq program, and ChipSet       "generic" and vga16 .
> I'll post some notes on how to do it if anyone's interested.
> 
>       Harry

 I'm interested too. It's better than nothing. But I read a few moth ago taht you where working on an X Server for the viper. Is the project still alive or not ??

--
  Laurent Frigault
  frigault@gla.ecoledoc.ibp.fr

  ... 59K, 60K, 61K, 62K, 63K, 64K, arrrrgggghhhhhh  :-----(((((


------------------------------

From: drechsau@winternet.mpls.mn.us (Michael Horwath)
Subject: Re: Multi-Serial Cards?
Date: 4 Mar 1994 06:26:43 GMT

Different kind of plug here.

STB 4COM:
        4 16550 ports
        Sharable interrupts and can use high interrupts
        Each port settable to 1 of 8 I/O addresses
        Each port can have 1 of 8 IRQs or you can share them on this card

Price is about $109 or so, but you will have to look around for them.

has full modem control (unlike the BOCA multiport cheapies).

--
Mike Horwath   IRC: Drechsau  LIFE: Lover   drechsau@winternet.mpls.mn.us
Winternet:  info@winternet.mpls.mn.us       root@jacobs.mn.org <- Linux!
Twin Cities area Internet Access:  612-941-9177 for more info

------------------------------

From: jfh@rpp386 (John F. Haugh II)
Subject: Re: YP or NIS for linux?
Reply-To: jfh@rpp386.cactus.org (John F. Haugh II)
Date: Sat, 5 Mar 1994 14:41:44 GMT

In article <2l2qi7$o5f@celsius.ifm.liu.se> peter@ifm.liu.se (Peter Eriksson) writes:
>It's not a bug. It was designed that way. Oh, and it can't even
>determine if the entry exists in the local /etc/shadow or /etc/passwd
>or if it comes over the network from a remote YP servers 'passwd' map
>or if it comes from a NIS+ servers passwd database or ...

Then it is a bug.

The SVR4 (the real ones, not the ones I ship with Shadow) say

        "The getspnam routine searches from the beginning of the file
         until a login name matching name is found, and returns a pointer
         to the particular structure in which it was found. ...  If an
         end-of-file or an error is encountered on reading, or there is
         a format error in the file, these functions return a null
         pointer and set errno to EINVAL."

You aren't returning the proper result, therefore your design is busted.
SVR4 is the base for the /etc/shadow file functions in both my implemenation
and the Solaris 2.0 versions.  You are incompatible.

>The one major reason for doing it like this is that it should be transparent
>to the application if the password information for a user comes from
>/etc/shadow or /etc/passwd or from YP or NIS+ or something else.

WRONG!  If you do this for /etc/shadow information the application (which
might be one that updates /etc/passwd, say chfn for example) doesn't know
where to put the information BACK to.

Automatically giving the encrypted password when you call getpw*() is a
huge security hole waiting to happen.  The way I found it was a security
hole was to run Shadow with AUTOSHADOW turned on in an earlier version
of some of the commands and watch as my encrypted passwords all started
to turn up.  By separating "shadow" information (which is sensitive)
from "normal" information (which anyone can get) you insure that there
is no unintentional exportation of privileged information.  This is
Information Security 101.

>Btw, what's wrong with the following code if you desperately wants
>to read the _file_ /etc/shadow to see what's in it.

There is no "fgetspnam()"?

>>The second isn't really a bug and the regular C library has this same
>>shortfall.  The result of this is that if you have a large /etc/passwd
>>file it takes longer for the last user in the file to login than the
>>first.
>
>One easy way to "fix" that problem is to simply start a local YP server.
>And if you have that much users that it takes a long time to read
>/etc/passwd then you probably have multiple machines also and would
>like to use some kind of Network Information Service like YP, NIS+ or
>Hesiod.

There are quite a few assumptions in there which aren't suppored by
any facts.  I can imagine quite a few situations where there are enough
users in /etc/passwd that user lookups become problematic.  And forcing
the users to setup YP servers doesn't seem like a nice way to prevent
the system from being complex, or reliable.  What are you going to
propose when ypserv doesn't and ypbind gets hung as a result?

>But I'll probably add some kind of DBM support to NYS as soon as I
>have some spare time. It will not be using DBM/NDBM but probably
>either GDBM or the new Berkeley DB database engine.

Why not use NDBM's interface?  GDBM has an NDBM emulation mode (that
what I use for Shadow on this system ...) and every BSD system on the
planet has NDBM already.  Sounds like you're trying to be INcompatible
on purpose.
-- 
John F. Haugh II  [ NRA-ILA ] [ Kill Barney ] !'s: ...!cs.utexas.edu!rpp386!jfh
Ma Bell: (512) 251-2151 [GOP][DoF #17][PADI][ENTJ]   @'s: jfh@rpp386.cactus.org
 There are three documents that run my life: The King James Bible, the United
 States Constitution, and the UNIX System V Release 4 Programmer's Reference.

------------------------------

From: jfh@rpp386 (John F. Haugh II)
Subject: Re: YP or NIS for linux?
Reply-To: jfh@rpp386.cactus.org (John F. Haugh II)
Date: Sat, 5 Mar 1994 14:50:37 GMT

In article <2l2qi7$o5f@celsius.ifm.liu.se> peter@ifm.liu.se (Peter Eriksson) writes:
>Ah and before someone says that SunOS 5 isn't the definite answer, then
>I'd like to point out that I've been modelling NYS after the SunOS 5
>model from the beginning?

[ ... ]

>(One can use "fputspent()" to write to a shadow file).

Uh, there is no fputspent() in SunOS 5.  And the only reason you have
it in your code is to remain "compatible" with my code.  Furthermore,
there is no "fputspnam()" or any other random update code in SunOS 5.
The reasons this is a bogus answer are legion, and I will gladly post
a list if you insist.

What you are doing is making it up as you go.  Go read Brooke's
"Mythical Man Month" for a description of the ultimate results.
-- 
John F. Haugh II  [ NRA-ILA ] [ Kill Barney ] !'s: ...!cs.utexas.edu!rpp386!jfh
Ma Bell: (512) 251-2151 [GOP][DoF #17][PADI][ENTJ]   @'s: jfh@rpp386.cactus.org
 There are three documents that run my life: The King James Bible, the United
 States Constitution, and the UNIX System V Release 4 Programmer's Reference.

------------------------------


** FOR YOUR REFERENCE **

The service address, to which questions about the list itself and requests
to be added to or deleted from it should be directed, is:

    Internet: Linux-Development-Request@NEWS-DIGESTS.MIT.EDU

You can send mail to the entire list (and comp.os.linux.development) via:

    Internet: Linux-Development@NEWS-DIGESTS.MIT.EDU

Linux may be obtained via one of these FTP sites:
    nic.funet.fi				pub/OS/Linux
    tsx-11.mit.edu				pub/linux
    sunsite.unc.edu				pub/Linux

End of Linux-Development Digest
******************************
